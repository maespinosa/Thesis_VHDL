// Copyright 1986-2016 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2016.4 (win64) Build 1756540 Mon Jan 23 19:11:23 MST 2017
// Date        : Thu Apr 18 17:20:56 2019
// Host        : Marks-M3800 running 64-bit Service Pack 1  (build 7601)
// Command     : write_verilog -force -mode funcsim
//               C:/Thesis_Nexys_Video_2016_4/Thesis_Nexys_Video_2016_4.srcs/sources_1/bd/final_accelerator/ip/final_accelerator_Softmax_Layer_32bit_0_0/final_accelerator_Softmax_Layer_32bit_0_0_sim_netlist.v
// Design      : final_accelerator_Softmax_Layer_32bit_0_0
// Purpose     : This verilog netlist is a functional simulation representation of the design and should not be modified
//               or synthesized. This netlist cannot be used for SDF annotated simulation.
// Device      : xc7a200tsbg484-1
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

(* CHECK_LICENSE_TYPE = "final_accelerator_Softmax_Layer_32bit_0_0,Softmax_Layer_32bit_v1_0,{}" *) (* downgradeipidentifiedwarnings = "yes" *) (* x_core_info = "Softmax_Layer_32bit_v1_0,Vivado 2016.4" *) 
(* NotValidForBitStream *)
module final_accelerator_Softmax_Layer_32bit_0_0
   (o_softmax_complete,
    o_cycle,
    o_epoch,
    ila_smax_exp_fsm_state,
    ila_smax_exp_valid_result,
    ila_smax_exp_function_ready,
    ila_smax_exp_step_counter,
    ila_smax_exp_multiplication_counter,
    ila_smax_exp_hold_counter,
    ila_smax_exp_sum_counter,
    ila_smax_exp_multiplicand_a,
    ila_smax_exp_multiplicand_b,
    ila_smax_exp_product,
    ila_smax_exp_augend,
    ila_smax_exp_addend,
    ila_smax_exp_sum,
    ila_smax_exp_data_reg,
    ila_smax_exp_mult_reg,
    ila_smax_exp_fifo_data,
    ila_smax_exp_fifo_wr_en,
    ila_smax_exp_exp_done,
    ila_smax_aw_fsm_state,
    ila_smax_aw_addend,
    ila_smax_aw_augend,
    ila_smax_aw_sum,
    ila_smax_aw_rd_en,
    ila_smax_aw_summing_complete,
    ila_smax_aw_hold_counter,
    ila_smax_aw_sum_counter,
    ila_smax_aw_sum_reg,
    ila_smax_aw_sum_result_valid,
    ila_smax_dw_fsm_state,
    ila_smax_dw_divisor,
    ila_smax_dw_dividend,
    ila_smax_dw_quotient,
    ila_smax_dw_rd_en,
    ila_smax_dw_division_complete,
    ila_smax_dw_hold_counter,
    ila_smax_dw_quotient_counter,
    ila_smax_dw_division_reg,
    ila_smax_dw_quotient_result_valid,
    ila_smax_ctrlr_fsm_state,
    ila_smax_ctrlr_exp_input,
    ila_smax_ctrlr_exp_input_valid,
    ila_smax_ctrlr_controller_ready,
    ila_smax_ctrlr_exp_fifo_select,
    ila_smax_ctrlr_exp_complete,
    ila_smax_ctrlr_element_counter,
    ila_smax_ctrlr_softmax_complete,
    ila_smax_ctrlr_clear_all,
    ila_smax_ctrlr_busy,
    ila_smax_inbuff_din,
    ila_smax_inbuff_wr_en,
    ila_smax_inbuff_rd_en,
    ila_smax_inbuff_dout,
    ila_smax_inbuff_full,
    ila_smax_inbuff_almost_full,
    ila_smax_inbuff_empty,
    ila_smax_inbuff_almost_empty,
    ila_smax_inbuff_valid,
    ila_smax_outbuff_din,
    ila_smax_outbuff_wr_en,
    ila_smax_outbuff_rd_en,
    ila_smax_outbuff_dout,
    ila_smax_outbuff_full,
    ila_smax_outbuff_almost_full,
    ila_smax_outbuff_empty,
    ila_smax_outbuff_almost_empty,
    ila_smax_outbuff_valid,
    ila_smax_exp_mux_data,
    ila_smax_exp_mux_wr_en,
    ila_smax_exp_fifo_rd_en,
    ila_smax_exp_fifo_dout,
    ila_smax_exp_fifo_full,
    ila_smax_exp_fifo_almost_full,
    ila_smax_exp_fifo_empty,
    ila_smax_exp_fifo_almost_empty,
    ila_smax_exp_fifo_valid,
    ila_smax_axi_awaddr,
    ila_smax_axi_awready,
    ila_smax_axi_awlen,
    ila_smax_axi_awvalid,
    ila_smax_axi_wdata,
    ila_smax_axi_wready,
    ila_smax_axi_wlast,
    ila_smax_axi_wvalid,
    ila_smax_axi_wstrb,
    ila_smax_axi_bready,
    ila_smax_axi_bvalid,
    ila_smax_axi_araddr,
    ila_smax_axi_arlen,
    ila_smax_axi_arvalid,
    ila_smax_axi_rready,
    ila_smax_axi_arready,
    ila_smax_axi_rdata,
    ila_smax_axi_rlast,
    ila_smax_axi_rvalid,
    ila_smax_wbc,
    ila_smax_rbc,
    ila_smax_num_elements,
    ila_smax_input_data_addr_reg,
    ila_smax_output_data_addr_reg,
    ila_smax_row_counter,
    ila_smax_channel_counter,
    ila_smax_writes_remaining,
    ila_smax_reads_remaining,
    ila_smax_calculated,
    ila_smax_more_bursts_needed,
    ila_smax_data_loaded,
    ila_smax_class_counter,
    ila_smax_master_fsm_state,
    s00_axi_aclk,
    s00_axi_aresetn,
    s00_axi_awaddr,
    s00_axi_awprot,
    s00_axi_awvalid,
    s00_axi_awready,
    s00_axi_wdata,
    s00_axi_wstrb,
    s00_axi_wvalid,
    s00_axi_wready,
    s00_axi_bresp,
    s00_axi_bvalid,
    s00_axi_bready,
    s00_axi_araddr,
    s00_axi_arprot,
    s00_axi_arvalid,
    s00_axi_arready,
    s00_axi_rdata,
    s00_axi_rresp,
    s00_axi_rvalid,
    s00_axi_rready,
    m00_axi_txn_done,
    m00_axi_error,
    m00_axi_aclk,
    m00_axi_aresetn,
    m00_axi_awid,
    m00_axi_awaddr,
    m00_axi_awlen,
    m00_axi_awsize,
    m00_axi_awburst,
    m00_axi_awlock,
    m00_axi_awcache,
    m00_axi_awprot,
    m00_axi_awqos,
    m00_axi_awuser,
    m00_axi_awvalid,
    m00_axi_awready,
    m00_axi_wdata,
    m00_axi_wstrb,
    m00_axi_wlast,
    m00_axi_wuser,
    m00_axi_wvalid,
    m00_axi_wready,
    m00_axi_bid,
    m00_axi_bresp,
    m00_axi_buser,
    m00_axi_bvalid,
    m00_axi_bready,
    m00_axi_arid,
    m00_axi_araddr,
    m00_axi_arlen,
    m00_axi_arsize,
    m00_axi_arburst,
    m00_axi_arlock,
    m00_axi_arcache,
    m00_axi_arprot,
    m00_axi_arqos,
    m00_axi_aruser,
    m00_axi_arvalid,
    m00_axi_arready,
    m00_axi_rid,
    m00_axi_rdata,
    m00_axi_rresp,
    m00_axi_rlast,
    m00_axi_ruser,
    m00_axi_rvalid,
    m00_axi_rready);
  output o_softmax_complete;
  output [63:0]o_cycle;
  output [63:0]o_epoch;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_exp_fsm_state" *) output [3:0]ila_smax_exp_fsm_state;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_exp_valid_result" *) output ila_smax_exp_valid_result;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_exp_function_ready" *) output ila_smax_exp_function_ready;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_exp_step_counter" *) output [7:0]ila_smax_exp_step_counter;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_exp_multiplication_counter" *) output [7:0]ila_smax_exp_multiplication_counter;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_exp_hold_counter" *) output [7:0]ila_smax_exp_hold_counter;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_exp_sum_counter" *) output [7:0]ila_smax_exp_sum_counter;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_exp_multiplicand_a" *) output [31:0]ila_smax_exp_multiplicand_a;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_exp_multiplicand_b" *) output [31:0]ila_smax_exp_multiplicand_b;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_exp_product" *) output [31:0]ila_smax_exp_product;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_exp_augend" *) output [31:0]ila_smax_exp_augend;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_exp_addend" *) output [31:0]ila_smax_exp_addend;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_exp_sum" *) output [31:0]ila_smax_exp_sum;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_exp_data_reg" *) output [31:0]ila_smax_exp_data_reg;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_exp_mult_reg" *) output [31:0]ila_smax_exp_mult_reg;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_exp_fifo_data" *) output [31:0]ila_smax_exp_fifo_data;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_exp_fifo_wr_en" *) output ila_smax_exp_fifo_wr_en;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_exp_exp_done" *) output ila_smax_exp_exp_done;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_aw_fsm_state" *) output [3:0]ila_smax_aw_fsm_state;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_aw_addend" *) output [31:0]ila_smax_aw_addend;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_aw_augend" *) output [31:0]ila_smax_aw_augend;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_aw_sum" *) output [31:0]ila_smax_aw_sum;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_aw_rd_en" *) output ila_smax_aw_rd_en;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_aw_summing_complete" *) output ila_smax_aw_summing_complete;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_aw_hold_counter" *) output [7:0]ila_smax_aw_hold_counter;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_aw_sum_counter" *) output [15:0]ila_smax_aw_sum_counter;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_aw_sum_reg" *) output [31:0]ila_smax_aw_sum_reg;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_aw_sum_result_valid" *) output ila_smax_aw_sum_result_valid;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_dw_fsm_state" *) output [3:0]ila_smax_dw_fsm_state;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_dw_divisor" *) output [31:0]ila_smax_dw_divisor;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_dw_dividend" *) output [31:0]ila_smax_dw_dividend;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_dw_quotient" *) output [31:0]ila_smax_dw_quotient;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_dw_rd_en" *) output ila_smax_dw_rd_en;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_dw_division_complete" *) output ila_smax_dw_division_complete;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_dw_hold_counter" *) output [7:0]ila_smax_dw_hold_counter;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_dw_quotient_counter" *) output [15:0]ila_smax_dw_quotient_counter;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_dw_division_reg" *) output [31:0]ila_smax_dw_division_reg;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_dw_quotient_result_valid" *) output ila_smax_dw_quotient_result_valid;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_ctrlr_fsm_state" *) output [3:0]ila_smax_ctrlr_fsm_state;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_ctrlr_exp_input" *) output [31:0]ila_smax_ctrlr_exp_input;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_ctrlr_exp_input_valid" *) output ila_smax_ctrlr_exp_input_valid;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_ctrlr_controller_ready" *) output ila_smax_ctrlr_controller_ready;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_ctrlr_exp_fifo_select" *) output ila_smax_ctrlr_exp_fifo_select;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_ctrlr_exp_complete" *) output ila_smax_ctrlr_exp_complete;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_ctrlr_element_counter" *) output [15:0]ila_smax_ctrlr_element_counter;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_ctrlr_softmax_complete" *) output ila_smax_ctrlr_softmax_complete;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_ctrlr_clear_all" *) output ila_smax_ctrlr_clear_all;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_ctrlr_busy" *) output ila_smax_ctrlr_busy;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_inbuff_din" *) output [31:0]ila_smax_inbuff_din;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_inbuff_wr_en" *) output ila_smax_inbuff_wr_en;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_inbuff_rd_en" *) output ila_smax_inbuff_rd_en;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_inbuff_dout" *) output [31:0]ila_smax_inbuff_dout;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_inbuff_full" *) output ila_smax_inbuff_full;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_inbuff_almost_full" *) output ila_smax_inbuff_almost_full;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_inbuff_empty" *) output ila_smax_inbuff_empty;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_inbuff_almost_empty" *) output ila_smax_inbuff_almost_empty;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_inbuff_valid" *) output ila_smax_inbuff_valid;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_outbuff_din" *) output [31:0]ila_smax_outbuff_din;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_outbuff_wr_en" *) output ila_smax_outbuff_wr_en;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_outbuff_rd_en" *) output ila_smax_outbuff_rd_en;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_outbuff_dout" *) output [31:0]ila_smax_outbuff_dout;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_outbuff_full" *) output ila_smax_outbuff_full;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_outbuff_almost_full" *) output ila_smax_outbuff_almost_full;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_outbuff_empty" *) output ila_smax_outbuff_empty;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_outbuff_almost_empty" *) output ila_smax_outbuff_almost_empty;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_outbuff_valid" *) output ila_smax_outbuff_valid;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_exp_mux_data" *) output [31:0]ila_smax_exp_mux_data;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_exp_mux_wr_en" *) output ila_smax_exp_mux_wr_en;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_exp_fifo_rd_en" *) output ila_smax_exp_fifo_rd_en;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_exp_fifo_dout" *) output [31:0]ila_smax_exp_fifo_dout;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_exp_fifo_full" *) output ila_smax_exp_fifo_full;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_exp_fifo_almost_full" *) output ila_smax_exp_fifo_almost_full;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_exp_fifo_empty" *) output ila_smax_exp_fifo_empty;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_exp_fifo_almost_empty" *) output ila_smax_exp_fifo_almost_empty;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_exp_fifo_valid" *) output ila_smax_exp_fifo_valid;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_axi_awaddr" *) output [31:0]ila_smax_axi_awaddr;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_axi_awready" *) output ila_smax_axi_awready;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_axi_awlen" *) output [7:0]ila_smax_axi_awlen;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_axi_awvalid" *) output ila_smax_axi_awvalid;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_axi_wdata" *) output [31:0]ila_smax_axi_wdata;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_axi_wready" *) output ila_smax_axi_wready;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_axi_wlast" *) output ila_smax_axi_wlast;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_axi_wvalid" *) output ila_smax_axi_wvalid;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_axi_wstrb" *) output [3:0]ila_smax_axi_wstrb;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_axi_bready" *) output ila_smax_axi_bready;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_axi_bvalid" *) output ila_smax_axi_bvalid;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_axi_araddr" *) output [31:0]ila_smax_axi_araddr;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_axi_arlen" *) output [7:0]ila_smax_axi_arlen;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_axi_arvalid" *) output ila_smax_axi_arvalid;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_axi_rready" *) output ila_smax_axi_rready;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_axi_arready" *) output ila_smax_axi_arready;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_axi_rdata" *) output [31:0]ila_smax_axi_rdata;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_axi_rlast" *) output ila_smax_axi_rlast;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_axi_rvalid" *) output ila_smax_axi_rvalid;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_wbc" *) output [7:0]ila_smax_wbc;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_rbc" *) output [7:0]ila_smax_rbc;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_num_elements" *) output [15:0]ila_smax_num_elements;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_input_data_addr_reg" *) output [31:0]ila_smax_input_data_addr_reg;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_output_data_addr_reg" *) output [31:0]ila_smax_output_data_addr_reg;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_row_counter" *) output [7:0]ila_smax_row_counter;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_channel_counter" *) output [15:0]ila_smax_channel_counter;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_writes_remaining" *) output [15:0]ila_smax_writes_remaining;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_reads_remaining" *) output [15:0]ila_smax_reads_remaining;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_calculated" *) output ila_smax_calculated;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_more_bursts_needed" *) output ila_smax_more_bursts_needed;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_data_loaded" *) output ila_smax_data_loaded;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_class_counter" *) output [31:0]ila_smax_class_counter;
  (* x_interface_info = "xilinx.com:user:ila_smax:1.0 ila_smax_1 ila_smax_master_fsm_state" *) output [3:0]ila_smax_master_fsm_state;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 S00_AXI_CLK CLK, xilinx.com:signal:clock:1.0 s00_axi_aclk CLK" *) input s00_axi_aclk;
  (* x_interface_info = "xilinx.com:signal:reset:1.0 S00_AXI_RST RST, xilinx.com:signal:reset:1.0 s00_axi_aresetn RST" *) input s00_axi_aresetn;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI AWADDR" *) input [31:0]s00_axi_awaddr;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI AWPROT" *) input [2:0]s00_axi_awprot;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI AWVALID" *) input s00_axi_awvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI AWREADY" *) output s00_axi_awready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI WDATA" *) input [31:0]s00_axi_wdata;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI WSTRB" *) input [3:0]s00_axi_wstrb;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI WVALID" *) input s00_axi_wvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI WREADY" *) output s00_axi_wready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI BRESP" *) output [1:0]s00_axi_bresp;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI BVALID" *) output s00_axi_bvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI BREADY" *) input s00_axi_bready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI ARADDR" *) input [31:0]s00_axi_araddr;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI ARPROT" *) input [2:0]s00_axi_arprot;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI ARVALID" *) input s00_axi_arvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI ARREADY" *) output s00_axi_arready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI RDATA" *) output [31:0]s00_axi_rdata;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI RRESP" *) output [1:0]s00_axi_rresp;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI RVALID" *) output s00_axi_rvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI RREADY" *) input s00_axi_rready;
  output m00_axi_txn_done;
  output m00_axi_error;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 M00_AXI_CLK CLK, xilinx.com:signal:clock:1.0 m00_axi_aclk CLK" *) input m00_axi_aclk;
  (* x_interface_info = "xilinx.com:signal:reset:1.0 M00_AXI_RST RST, xilinx.com:signal:reset:1.0 m00_axi_aresetn RST" *) input m00_axi_aresetn;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI AWID" *) output [0:0]m00_axi_awid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI AWADDR" *) output [31:0]m00_axi_awaddr;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI AWLEN" *) output [7:0]m00_axi_awlen;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI AWSIZE" *) output [2:0]m00_axi_awsize;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI AWBURST" *) output [1:0]m00_axi_awburst;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI AWLOCK" *) output m00_axi_awlock;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI AWCACHE" *) output [3:0]m00_axi_awcache;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI AWPROT" *) output [2:0]m00_axi_awprot;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI AWQOS" *) output [3:0]m00_axi_awqos;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI AWUSER" *) output [0:0]m00_axi_awuser;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI AWVALID" *) output m00_axi_awvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI AWREADY" *) input m00_axi_awready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI WDATA" *) output [31:0]m00_axi_wdata;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI WSTRB" *) output [3:0]m00_axi_wstrb;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI WLAST" *) output m00_axi_wlast;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI WUSER" *) output [0:0]m00_axi_wuser;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI WVALID" *) output m00_axi_wvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI WREADY" *) input m00_axi_wready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI BID" *) input [0:0]m00_axi_bid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI BRESP" *) input [1:0]m00_axi_bresp;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI BUSER" *) input [0:0]m00_axi_buser;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI BVALID" *) input m00_axi_bvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI BREADY" *) output m00_axi_bready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI ARID" *) output [0:0]m00_axi_arid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI ARADDR" *) output [31:0]m00_axi_araddr;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI ARLEN" *) output [7:0]m00_axi_arlen;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI ARSIZE" *) output [2:0]m00_axi_arsize;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI ARBURST" *) output [1:0]m00_axi_arburst;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI ARLOCK" *) output m00_axi_arlock;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI ARCACHE" *) output [3:0]m00_axi_arcache;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI ARPROT" *) output [2:0]m00_axi_arprot;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI ARQOS" *) output [3:0]m00_axi_arqos;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI ARUSER" *) output [0:0]m00_axi_aruser;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI ARVALID" *) output m00_axi_arvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI ARREADY" *) input m00_axi_arready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI RID" *) input [0:0]m00_axi_rid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI RDATA" *) input [31:0]m00_axi_rdata;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI RRESP" *) input [1:0]m00_axi_rresp;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI RLAST" *) input m00_axi_rlast;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI RUSER" *) input [0:0]m00_axi_ruser;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI RVALID" *) input m00_axi_rvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI RREADY" *) output m00_axi_rready;

  wire \<const0> ;
  wire \<const1> ;
  wire [31:0]ila_smax_aw_addend;
  wire [31:0]ila_smax_aw_augend;
  wire [1:0]\^ila_smax_aw_fsm_state ;
  wire [3:0]\^ila_smax_aw_hold_counter ;
  wire ila_smax_aw_rd_en;
  wire [31:0]ila_smax_aw_sum;
  wire [15:0]ila_smax_aw_sum_counter;
  wire [31:0]ila_smax_aw_sum_reg;
  wire ila_smax_aw_summing_complete;
  wire [7:0]ila_smax_axi_awlen;
  wire ila_smax_axi_bready;
  wire [31:0]ila_smax_axi_wdata;
  wire ila_smax_axi_wlast;
  wire ila_smax_calculated;
  wire [15:0]ila_smax_channel_counter;
  wire [31:0]ila_smax_class_counter;
  wire ila_smax_ctrlr_busy;
  wire ila_smax_ctrlr_clear_all;
  wire ila_smax_ctrlr_controller_ready;
  wire [15:0]ila_smax_ctrlr_element_counter;
  wire ila_smax_ctrlr_exp_fifo_select;
  wire [31:0]ila_smax_ctrlr_exp_input;
  wire ila_smax_ctrlr_exp_input_valid;
  wire [2:0]\^ila_smax_ctrlr_fsm_state ;
  wire ila_smax_data_loaded;
  wire [31:0]ila_smax_dw_dividend;
  wire ila_smax_dw_division_complete;
  wire [31:0]ila_smax_dw_division_reg;
  wire [31:0]ila_smax_dw_divisor;
  wire [1:0]\^ila_smax_dw_fsm_state ;
  wire [4:0]\^ila_smax_dw_hold_counter ;
  wire [31:0]ila_smax_dw_quotient;
  wire [15:0]ila_smax_dw_quotient_counter;
  wire ila_smax_dw_quotient_result_valid;
  wire ila_smax_dw_rd_en;
  wire [31:0]ila_smax_exp_addend;
  wire [31:0]ila_smax_exp_augend;
  wire [31:0]ila_smax_exp_data_reg;
  wire ila_smax_exp_exp_done;
  wire ila_smax_exp_fifo_almost_empty;
  wire ila_smax_exp_fifo_almost_full;
  wire [31:0]ila_smax_exp_fifo_data;
  wire [31:0]ila_smax_exp_fifo_dout;
  wire ila_smax_exp_fifo_empty;
  wire ila_smax_exp_fifo_full;
  wire ila_smax_exp_fifo_rd_en;
  wire ila_smax_exp_fifo_valid;
  wire ila_smax_exp_fifo_wr_en;
  wire [2:0]\^ila_smax_exp_fsm_state ;
  wire ila_smax_exp_function_ready;
  wire [3:0]\^ila_smax_exp_hold_counter ;
  wire [31:0]ila_smax_exp_mult_reg;
  wire [31:0]ila_smax_exp_multiplicand_a;
  wire [31:0]ila_smax_exp_multiplicand_b;
  wire [31:0]ila_smax_exp_mux_data;
  wire ila_smax_exp_mux_wr_en;
  wire [31:0]ila_smax_exp_product;
  wire [7:0]ila_smax_exp_step_counter;
  wire [31:0]ila_smax_exp_sum;
  wire [4:0]\^ila_smax_exp_sum_counter ;
  wire ila_smax_exp_valid_result;
  wire ila_smax_inbuff_almost_empty;
  wire ila_smax_inbuff_almost_full;
  wire [31:0]ila_smax_inbuff_din;
  wire [31:0]ila_smax_inbuff_dout;
  wire ila_smax_inbuff_empty;
  wire ila_smax_inbuff_full;
  wire ila_smax_inbuff_rd_en;
  wire ila_smax_inbuff_valid;
  wire ila_smax_inbuff_wr_en;
  wire [31:0]ila_smax_input_data_addr_reg;
  wire [2:0]\^ila_smax_master_fsm_state ;
  wire ila_smax_more_bursts_needed;
  wire [15:0]ila_smax_num_elements;
  wire ila_smax_outbuff_almost_empty;
  wire ila_smax_outbuff_almost_full;
  wire [31:0]ila_smax_outbuff_din;
  wire [31:0]ila_smax_outbuff_dout;
  wire ila_smax_outbuff_empty;
  wire ila_smax_outbuff_full;
  wire ila_smax_outbuff_rd_en;
  wire ila_smax_outbuff_valid;
  wire ila_smax_outbuff_wr_en;
  wire [31:0]ila_smax_output_data_addr_reg;
  wire [7:0]ila_smax_rbc;
  wire [15:0]ila_smax_reads_remaining;
  wire [7:0]ila_smax_wbc;
  wire [15:0]ila_smax_writes_remaining;
  wire m00_axi_aclk;
  wire [31:0]m00_axi_araddr;
  wire m00_axi_aresetn;
  wire [7:0]m00_axi_arlen;
  wire m00_axi_arready;
  wire m00_axi_arvalid;
  wire [31:0]m00_axi_awaddr;
  wire m00_axi_awready;
  wire m00_axi_awvalid;
  wire m00_axi_bvalid;
  wire [31:0]m00_axi_rdata;
  wire m00_axi_rlast;
  wire m00_axi_rready;
  wire m00_axi_rvalid;
  wire m00_axi_wready;
  wire [63:0]o_cycle;
  wire [63:0]o_epoch;
  wire s00_axi_aclk;
  wire [31:0]s00_axi_araddr;
  wire s00_axi_aresetn;
  wire s00_axi_arready;
  wire s00_axi_arvalid;
  wire [31:0]s00_axi_awaddr;
  wire s00_axi_awready;
  wire s00_axi_awvalid;
  wire s00_axi_bready;
  wire s00_axi_bvalid;
  wire [31:0]s00_axi_rdata;
  wire s00_axi_rready;
  wire s00_axi_rvalid;
  wire [31:0]s00_axi_wdata;
  wire s00_axi_wready;
  wire [3:0]s00_axi_wstrb;
  wire s00_axi_wvalid;

  assign ila_smax_aw_fsm_state[3] = \<const0> ;
  assign ila_smax_aw_fsm_state[2] = \<const0> ;
  assign ila_smax_aw_fsm_state[1:0] = \^ila_smax_aw_fsm_state [1:0];
  assign ila_smax_aw_hold_counter[7] = \<const0> ;
  assign ila_smax_aw_hold_counter[6] = \<const0> ;
  assign ila_smax_aw_hold_counter[5] = \<const0> ;
  assign ila_smax_aw_hold_counter[4] = \<const0> ;
  assign ila_smax_aw_hold_counter[3:0] = \^ila_smax_aw_hold_counter [3:0];
  assign ila_smax_axi_araddr[31:0] = m00_axi_araddr;
  assign ila_smax_axi_arlen[7:0] = m00_axi_arlen;
  assign ila_smax_axi_arready = m00_axi_arready;
  assign ila_smax_axi_arvalid = m00_axi_arvalid;
  assign ila_smax_axi_awaddr[31:0] = m00_axi_awaddr;
  assign ila_smax_axi_awready = m00_axi_awready;
  assign ila_smax_axi_awvalid = m00_axi_awvalid;
  assign ila_smax_axi_bvalid = m00_axi_bvalid;
  assign ila_smax_axi_rdata[31:0] = m00_axi_rdata;
  assign ila_smax_axi_rlast = m00_axi_rlast;
  assign ila_smax_axi_rready = m00_axi_rready;
  assign ila_smax_axi_rvalid = m00_axi_rvalid;
  assign ila_smax_axi_wready = m00_axi_wready;
  assign ila_smax_axi_wstrb[3] = ila_smax_outbuff_rd_en;
  assign ila_smax_axi_wstrb[2] = ila_smax_outbuff_rd_en;
  assign ila_smax_axi_wstrb[1] = ila_smax_outbuff_rd_en;
  assign ila_smax_axi_wstrb[0] = ila_smax_outbuff_rd_en;
  assign ila_smax_axi_wvalid = ila_smax_outbuff_rd_en;
  assign ila_smax_ctrlr_exp_complete = ila_smax_ctrlr_exp_fifo_select;
  assign ila_smax_ctrlr_fsm_state[3] = \<const0> ;
  assign ila_smax_ctrlr_fsm_state[2:0] = \^ila_smax_ctrlr_fsm_state [2:0];
  assign ila_smax_ctrlr_softmax_complete = ila_smax_ctrlr_clear_all;
  assign ila_smax_dw_fsm_state[3] = \<const0> ;
  assign ila_smax_dw_fsm_state[2] = \<const0> ;
  assign ila_smax_dw_fsm_state[1:0] = \^ila_smax_dw_fsm_state [1:0];
  assign ila_smax_dw_hold_counter[7] = \<const0> ;
  assign ila_smax_dw_hold_counter[6] = \<const0> ;
  assign ila_smax_dw_hold_counter[5] = \<const0> ;
  assign ila_smax_dw_hold_counter[4:0] = \^ila_smax_dw_hold_counter [4:0];
  assign ila_smax_exp_fsm_state[3] = \<const0> ;
  assign ila_smax_exp_fsm_state[2:0] = \^ila_smax_exp_fsm_state [2:0];
  assign ila_smax_exp_hold_counter[7] = \<const0> ;
  assign ila_smax_exp_hold_counter[6] = \<const0> ;
  assign ila_smax_exp_hold_counter[5] = \<const0> ;
  assign ila_smax_exp_hold_counter[4] = \<const0> ;
  assign ila_smax_exp_hold_counter[3:0] = \^ila_smax_exp_hold_counter [3:0];
  assign ila_smax_exp_multiplication_counter[7] = \<const0> ;
  assign ila_smax_exp_multiplication_counter[6] = \<const0> ;
  assign ila_smax_exp_multiplication_counter[5] = \<const0> ;
  assign ila_smax_exp_multiplication_counter[4] = \<const0> ;
  assign ila_smax_exp_multiplication_counter[3] = \<const0> ;
  assign ila_smax_exp_multiplication_counter[2] = \<const0> ;
  assign ila_smax_exp_multiplication_counter[1] = \<const0> ;
  assign ila_smax_exp_multiplication_counter[0] = \<const0> ;
  assign ila_smax_exp_sum_counter[7] = \<const0> ;
  assign ila_smax_exp_sum_counter[6] = \<const0> ;
  assign ila_smax_exp_sum_counter[5] = \<const0> ;
  assign ila_smax_exp_sum_counter[4:0] = \^ila_smax_exp_sum_counter [4:0];
  assign ila_smax_master_fsm_state[3] = \<const0> ;
  assign ila_smax_master_fsm_state[2:0] = \^ila_smax_master_fsm_state [2:0];
  assign m00_axi_arburst[1] = \<const0> ;
  assign m00_axi_arburst[0] = \<const1> ;
  assign m00_axi_arcache[3] = \<const0> ;
  assign m00_axi_arcache[2] = \<const0> ;
  assign m00_axi_arcache[1] = \<const1> ;
  assign m00_axi_arcache[0] = \<const0> ;
  assign m00_axi_arid[0] = \<const0> ;
  assign m00_axi_arlock = \<const0> ;
  assign m00_axi_arprot[2] = \<const0> ;
  assign m00_axi_arprot[1] = \<const0> ;
  assign m00_axi_arprot[0] = \<const0> ;
  assign m00_axi_arqos[3] = \<const0> ;
  assign m00_axi_arqos[2] = \<const0> ;
  assign m00_axi_arqos[1] = \<const0> ;
  assign m00_axi_arqos[0] = \<const0> ;
  assign m00_axi_arsize[2] = \<const0> ;
  assign m00_axi_arsize[1] = \<const1> ;
  assign m00_axi_arsize[0] = \<const0> ;
  assign m00_axi_aruser[0] = \<const1> ;
  assign m00_axi_awburst[1] = \<const0> ;
  assign m00_axi_awburst[0] = \<const1> ;
  assign m00_axi_awcache[3] = \<const0> ;
  assign m00_axi_awcache[2] = \<const0> ;
  assign m00_axi_awcache[1] = \<const1> ;
  assign m00_axi_awcache[0] = \<const0> ;
  assign m00_axi_awid[0] = \<const0> ;
  assign m00_axi_awlen[7:0] = ila_smax_axi_awlen;
  assign m00_axi_awlock = \<const0> ;
  assign m00_axi_awprot[2] = \<const0> ;
  assign m00_axi_awprot[1] = \<const0> ;
  assign m00_axi_awprot[0] = \<const0> ;
  assign m00_axi_awqos[3] = \<const0> ;
  assign m00_axi_awqos[2] = \<const0> ;
  assign m00_axi_awqos[1] = \<const0> ;
  assign m00_axi_awqos[0] = \<const0> ;
  assign m00_axi_awsize[2] = \<const0> ;
  assign m00_axi_awsize[1] = \<const1> ;
  assign m00_axi_awsize[0] = \<const0> ;
  assign m00_axi_awuser[0] = \<const1> ;
  assign m00_axi_bready = ila_smax_axi_bready;
  assign m00_axi_error = \<const0> ;
  assign m00_axi_txn_done = \<const0> ;
  assign m00_axi_wdata[31:0] = ila_smax_axi_wdata;
  assign m00_axi_wlast = ila_smax_axi_wlast;
  assign m00_axi_wstrb[3] = ila_smax_outbuff_rd_en;
  assign m00_axi_wstrb[2] = ila_smax_outbuff_rd_en;
  assign m00_axi_wstrb[1] = ila_smax_outbuff_rd_en;
  assign m00_axi_wstrb[0] = ila_smax_outbuff_rd_en;
  assign m00_axi_wuser[0] = \<const0> ;
  assign m00_axi_wvalid = ila_smax_outbuff_rd_en;
  assign o_softmax_complete = ila_smax_ctrlr_clear_all;
  assign s00_axi_bresp[1] = \<const0> ;
  assign s00_axi_bresp[0] = \<const0> ;
  assign s00_axi_rresp[1] = \<const0> ;
  assign s00_axi_rresp[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  final_accelerator_Softmax_Layer_32bit_0_0_Softmax_Layer_32bit_v1_0 U0
       (.Q(\^ila_smax_dw_fsm_state ),
        .S_AXI_ARREADY(s00_axi_arready),
        .S_AXI_AWREADY(s00_axi_awready),
        .S_AXI_WREADY(s00_axi_wready),
        .ila_smax_aw_addend(ila_smax_aw_addend),
        .ila_smax_aw_augend(ila_smax_aw_augend),
        .\ila_smax_aw_fsm_state[1] (\^ila_smax_aw_fsm_state ),
        .\ila_smax_aw_hold_counter[3] (\^ila_smax_aw_hold_counter ),
        .ila_smax_aw_rd_en(ila_smax_aw_rd_en),
        .ila_smax_aw_sum(ila_smax_aw_sum),
        .\ila_smax_aw_sum_counter[15] (ila_smax_aw_sum_counter),
        .ila_smax_aw_sum_reg(ila_smax_aw_sum_reg),
        .ila_smax_aw_summing_complete(ila_smax_aw_summing_complete),
        .ila_smax_axi_awlen(ila_smax_axi_awlen),
        .ila_smax_axi_bready(ila_smax_axi_bready),
        .ila_smax_axi_wdata(ila_smax_axi_wdata),
        .ila_smax_axi_wlast(ila_smax_axi_wlast),
        .ila_smax_calculated(ila_smax_calculated),
        .ila_smax_channel_counter(ila_smax_channel_counter),
        .ila_smax_class_counter(ila_smax_class_counter),
        .ila_smax_ctrlr_busy(ila_smax_ctrlr_busy),
        .ila_smax_ctrlr_clear_all(ila_smax_ctrlr_clear_all),
        .ila_smax_ctrlr_controller_ready(ila_smax_ctrlr_controller_ready),
        .\ila_smax_ctrlr_element_counter[15] (ila_smax_ctrlr_element_counter),
        .ila_smax_ctrlr_exp_fifo_select(ila_smax_ctrlr_exp_fifo_select),
        .ila_smax_ctrlr_exp_input(ila_smax_ctrlr_exp_input),
        .ila_smax_ctrlr_exp_input_valid(ila_smax_ctrlr_exp_input_valid),
        .ila_smax_ctrlr_fsm_state(\^ila_smax_ctrlr_fsm_state ),
        .ila_smax_data_loaded(ila_smax_data_loaded),
        .ila_smax_dw_dividend(ila_smax_dw_dividend),
        .ila_smax_dw_division_complete(ila_smax_dw_division_complete),
        .ila_smax_dw_division_reg(ila_smax_dw_division_reg),
        .ila_smax_dw_divisor(ila_smax_dw_divisor),
        .\ila_smax_dw_hold_counter[4] (\^ila_smax_dw_hold_counter ),
        .ila_smax_dw_quotient(ila_smax_dw_quotient),
        .\ila_smax_dw_quotient_counter[15] (ila_smax_dw_quotient_counter),
        .ila_smax_dw_quotient_result_valid(ila_smax_dw_quotient_result_valid),
        .ila_smax_dw_rd_en(ila_smax_dw_rd_en),
        .ila_smax_exp_addend(ila_smax_exp_addend),
        .ila_smax_exp_augend(ila_smax_exp_augend),
        .ila_smax_exp_data_reg(ila_smax_exp_data_reg),
        .ila_smax_exp_exp_done(ila_smax_exp_exp_done),
        .ila_smax_exp_fifo_almost_empty(ila_smax_exp_fifo_almost_empty),
        .ila_smax_exp_fifo_almost_full(ila_smax_exp_fifo_almost_full),
        .ila_smax_exp_fifo_data(ila_smax_exp_fifo_data),
        .ila_smax_exp_fifo_dout(ila_smax_exp_fifo_dout),
        .ila_smax_exp_fifo_empty(ila_smax_exp_fifo_empty),
        .ila_smax_exp_fifo_full(ila_smax_exp_fifo_full),
        .ila_smax_exp_fifo_rd_en(ila_smax_exp_fifo_rd_en),
        .ila_smax_exp_fifo_valid(ila_smax_exp_fifo_valid),
        .ila_smax_exp_fifo_wr_en(ila_smax_exp_fifo_wr_en),
        .ila_smax_exp_fsm_state(\^ila_smax_exp_fsm_state ),
        .ila_smax_exp_function_ready(ila_smax_exp_function_ready),
        .ila_smax_exp_hold_counter(\^ila_smax_exp_hold_counter ),
        .ila_smax_exp_mult_reg(ila_smax_exp_mult_reg),
        .ila_smax_exp_multiplicand_a(ila_smax_exp_multiplicand_a),
        .ila_smax_exp_multiplicand_b(ila_smax_exp_multiplicand_b),
        .ila_smax_exp_mux_data(ila_smax_exp_mux_data),
        .ila_smax_exp_mux_wr_en(ila_smax_exp_mux_wr_en),
        .ila_smax_exp_product(ila_smax_exp_product),
        .ila_smax_exp_step_counter(ila_smax_exp_step_counter),
        .ila_smax_exp_sum(ila_smax_exp_sum),
        .ila_smax_exp_sum_counter(\^ila_smax_exp_sum_counter ),
        .ila_smax_exp_valid_result(ila_smax_exp_valid_result),
        .ila_smax_inbuff_almost_empty(ila_smax_inbuff_almost_empty),
        .ila_smax_inbuff_almost_full(ila_smax_inbuff_almost_full),
        .ila_smax_inbuff_din(ila_smax_inbuff_din),
        .ila_smax_inbuff_dout(ila_smax_inbuff_dout),
        .ila_smax_inbuff_empty(ila_smax_inbuff_empty),
        .ila_smax_inbuff_full(ila_smax_inbuff_full),
        .ila_smax_inbuff_rd_en(ila_smax_inbuff_rd_en),
        .ila_smax_inbuff_valid(ila_smax_inbuff_valid),
        .ila_smax_inbuff_wr_en(ila_smax_inbuff_wr_en),
        .\ila_smax_input_data_addr_reg[31] (ila_smax_input_data_addr_reg),
        .ila_smax_master_fsm_state(\^ila_smax_master_fsm_state ),
        .ila_smax_more_bursts_needed(ila_smax_more_bursts_needed),
        .\ila_smax_num_elements[15] (ila_smax_num_elements),
        .ila_smax_outbuff_almost_empty(ila_smax_outbuff_almost_empty),
        .ila_smax_outbuff_almost_full(ila_smax_outbuff_almost_full),
        .ila_smax_outbuff_din(ila_smax_outbuff_din),
        .ila_smax_outbuff_dout(ila_smax_outbuff_dout),
        .ila_smax_outbuff_empty(ila_smax_outbuff_empty),
        .ila_smax_outbuff_full(ila_smax_outbuff_full),
        .ila_smax_outbuff_rd_en(ila_smax_outbuff_rd_en),
        .ila_smax_outbuff_valid(ila_smax_outbuff_valid),
        .ila_smax_outbuff_wr_en(ila_smax_outbuff_wr_en),
        .\ila_smax_output_data_addr_reg[31] (ila_smax_output_data_addr_reg),
        .\ila_smax_rbc[7] (ila_smax_rbc),
        .ila_smax_reads_remaining(ila_smax_reads_remaining),
        .\ila_smax_wbc[7] (ila_smax_wbc),
        .ila_smax_writes_remaining(ila_smax_writes_remaining),
        .m00_axi_aclk(m00_axi_aclk),
        .m00_axi_araddr(m00_axi_araddr),
        .m00_axi_aresetn(m00_axi_aresetn),
        .m00_axi_arlen(m00_axi_arlen),
        .m00_axi_arready(m00_axi_arready),
        .m00_axi_arvalid(m00_axi_arvalid),
        .m00_axi_awaddr(m00_axi_awaddr),
        .m00_axi_awready(m00_axi_awready),
        .m00_axi_awvalid(m00_axi_awvalid),
        .m00_axi_bvalid(m00_axi_bvalid),
        .m00_axi_rdata(m00_axi_rdata),
        .m00_axi_rlast(m00_axi_rlast),
        .m00_axi_rready(m00_axi_rready),
        .m00_axi_rvalid(m00_axi_rvalid),
        .m00_axi_wready(m00_axi_wready),
        .o_cycle(o_cycle),
        .o_epoch(o_epoch),
        .s00_axi_aclk(s00_axi_aclk),
        .s00_axi_araddr(s00_axi_araddr[5:2]),
        .s00_axi_aresetn(s00_axi_aresetn),
        .s00_axi_arvalid(s00_axi_arvalid),
        .s00_axi_awaddr(s00_axi_awaddr[5:2]),
        .s00_axi_awvalid(s00_axi_awvalid),
        .s00_axi_bready(s00_axi_bready),
        .s00_axi_bvalid(s00_axi_bvalid),
        .s00_axi_rdata(s00_axi_rdata),
        .s00_axi_rready(s00_axi_rready),
        .s00_axi_rvalid(s00_axi_rvalid),
        .s00_axi_wdata(s00_axi_wdata),
        .s00_axi_wstrb(s00_axi_wstrb),
        .s00_axi_wvalid(s00_axi_wvalid));
  VCC VCC
       (.P(\<const1> ));
endmodule

(* ORIG_REF_NAME = "Softmax_Layer_32bit_v1_0" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_Softmax_Layer_32bit_v1_0
   (S_AXI_ARREADY,
    s00_axi_rvalid,
    ila_smax_class_counter,
    ila_smax_channel_counter,
    ila_smax_inbuff_empty,
    ila_smax_exp_function_ready,
    m00_axi_rready,
    ila_smax_exp_fifo_full,
    ila_smax_exp_fifo_almost_full,
    ila_smax_exp_step_counter,
    ila_smax_exp_data_reg,
    ila_smax_exp_mult_reg,
    ila_smax_exp_product,
    ila_smax_exp_hold_counter,
    ila_smax_exp_sum_counter,
    ila_smax_dw_rd_en,
    Q,
    ila_smax_ctrlr_fsm_state,
    ila_smax_inbuff_full,
    \ila_smax_aw_hold_counter[3] ,
    \ila_smax_aw_fsm_state[1] ,
    o_cycle,
    \ila_smax_output_data_addr_reg[31] ,
    \ila_smax_input_data_addr_reg[31] ,
    ila_smax_writes_remaining,
    ila_smax_reads_remaining,
    \ila_smax_ctrlr_element_counter[15] ,
    \ila_smax_aw_sum_counter[15] ,
    \ila_smax_dw_quotient_counter[15] ,
    o_epoch,
    S_AXI_AWREADY,
    S_AXI_WREADY,
    ila_smax_exp_fifo_almost_empty,
    ila_smax_exp_fifo_empty,
    ila_smax_inbuff_almost_full,
    ila_smax_inbuff_almost_empty,
    ila_smax_outbuff_almost_full,
    ila_smax_outbuff_full,
    ila_smax_outbuff_almost_empty,
    ila_smax_outbuff_empty,
    ila_smax_ctrlr_clear_all,
    ila_smax_ctrlr_busy,
    s00_axi_rdata,
    s00_axi_bvalid,
    ila_smax_axi_bready,
    ila_smax_more_bursts_needed,
    ila_smax_master_fsm_state,
    ila_smax_axi_wlast,
    \ila_smax_wbc[7] ,
    ila_smax_outbuff_rd_en,
    ila_smax_outbuff_valid,
    \ila_smax_num_elements[15] ,
    ila_smax_calculated,
    ila_smax_data_loaded,
    ila_smax_axi_wdata,
    ila_smax_outbuff_dout,
    \ila_smax_rbc[7] ,
    ila_smax_inbuff_dout,
    ila_smax_inbuff_valid,
    ila_smax_inbuff_din,
    ila_smax_inbuff_wr_en,
    ila_smax_inbuff_rd_en,
    ila_smax_ctrlr_controller_ready,
    ila_smax_aw_summing_complete,
    ila_smax_ctrlr_exp_fifo_select,
    ila_smax_dw_division_complete,
    ila_smax_exp_exp_done,
    ila_smax_exp_multiplicand_a,
    ila_smax_exp_multiplicand_b,
    ila_smax_exp_sum,
    ila_smax_exp_augend,
    ila_smax_exp_addend,
    ila_smax_ctrlr_exp_input,
    ila_smax_exp_fifo_data,
    ila_smax_exp_fifo_wr_en,
    ila_smax_exp_fsm_state,
    ila_smax_exp_valid_result,
    ila_smax_ctrlr_exp_input_valid,
    ila_smax_exp_fifo_dout,
    ila_smax_exp_fifo_valid,
    ila_smax_exp_mux_data,
    ila_smax_exp_mux_wr_en,
    ila_smax_exp_fifo_rd_en,
    ila_smax_aw_sum,
    ila_smax_aw_addend,
    ila_smax_aw_augend,
    ila_smax_dw_quotient,
    ila_smax_dw_dividend,
    ila_smax_dw_divisor,
    ila_smax_outbuff_din,
    ila_smax_outbuff_wr_en,
    ila_smax_axi_awlen,
    m00_axi_awaddr,
    m00_axi_araddr,
    m00_axi_arlen,
    ila_smax_dw_division_reg,
    ila_smax_aw_sum_reg,
    \ila_smax_dw_hold_counter[4] ,
    ila_smax_aw_rd_en,
    ila_smax_dw_quotient_result_valid,
    m00_axi_awvalid,
    m00_axi_arvalid,
    s00_axi_arvalid,
    m00_axi_aresetn,
    m00_axi_rvalid,
    s00_axi_aclk,
    s00_axi_awaddr,
    s00_axi_wdata,
    s00_axi_araddr,
    s00_axi_wvalid,
    s00_axi_awvalid,
    s00_axi_wstrb,
    s00_axi_aresetn,
    s00_axi_rready,
    s00_axi_bready,
    m00_axi_aclk,
    m00_axi_arready,
    m00_axi_rlast,
    m00_axi_bvalid,
    m00_axi_wready,
    m00_axi_awready,
    m00_axi_rdata);
  output S_AXI_ARREADY;
  output s00_axi_rvalid;
  output [31:0]ila_smax_class_counter;
  output [15:0]ila_smax_channel_counter;
  output ila_smax_inbuff_empty;
  output ila_smax_exp_function_ready;
  output m00_axi_rready;
  output ila_smax_exp_fifo_full;
  output ila_smax_exp_fifo_almost_full;
  output [7:0]ila_smax_exp_step_counter;
  output [31:0]ila_smax_exp_data_reg;
  output [31:0]ila_smax_exp_mult_reg;
  output [31:0]ila_smax_exp_product;
  output [3:0]ila_smax_exp_hold_counter;
  output [4:0]ila_smax_exp_sum_counter;
  output ila_smax_dw_rd_en;
  output [1:0]Q;
  output [2:0]ila_smax_ctrlr_fsm_state;
  output ila_smax_inbuff_full;
  output [3:0]\ila_smax_aw_hold_counter[3] ;
  output [1:0]\ila_smax_aw_fsm_state[1] ;
  output [63:0]o_cycle;
  output [31:0]\ila_smax_output_data_addr_reg[31] ;
  output [31:0]\ila_smax_input_data_addr_reg[31] ;
  output [15:0]ila_smax_writes_remaining;
  output [15:0]ila_smax_reads_remaining;
  output [15:0]\ila_smax_ctrlr_element_counter[15] ;
  output [15:0]\ila_smax_aw_sum_counter[15] ;
  output [15:0]\ila_smax_dw_quotient_counter[15] ;
  output [63:0]o_epoch;
  output S_AXI_AWREADY;
  output S_AXI_WREADY;
  output ila_smax_exp_fifo_almost_empty;
  output ila_smax_exp_fifo_empty;
  output ila_smax_inbuff_almost_full;
  output ila_smax_inbuff_almost_empty;
  output ila_smax_outbuff_almost_full;
  output ila_smax_outbuff_full;
  output ila_smax_outbuff_almost_empty;
  output ila_smax_outbuff_empty;
  output ila_smax_ctrlr_clear_all;
  output ila_smax_ctrlr_busy;
  output [31:0]s00_axi_rdata;
  output s00_axi_bvalid;
  output ila_smax_axi_bready;
  output ila_smax_more_bursts_needed;
  output [2:0]ila_smax_master_fsm_state;
  output ila_smax_axi_wlast;
  output [7:0]\ila_smax_wbc[7] ;
  output ila_smax_outbuff_rd_en;
  output ila_smax_outbuff_valid;
  output [15:0]\ila_smax_num_elements[15] ;
  output ila_smax_calculated;
  output ila_smax_data_loaded;
  output [31:0]ila_smax_axi_wdata;
  output [31:0]ila_smax_outbuff_dout;
  output [7:0]\ila_smax_rbc[7] ;
  output [31:0]ila_smax_inbuff_dout;
  output ila_smax_inbuff_valid;
  output [31:0]ila_smax_inbuff_din;
  output ila_smax_inbuff_wr_en;
  output ila_smax_inbuff_rd_en;
  output ila_smax_ctrlr_controller_ready;
  output ila_smax_aw_summing_complete;
  output ila_smax_ctrlr_exp_fifo_select;
  output ila_smax_dw_division_complete;
  output ila_smax_exp_exp_done;
  output [31:0]ila_smax_exp_multiplicand_a;
  output [31:0]ila_smax_exp_multiplicand_b;
  output [31:0]ila_smax_exp_sum;
  output [31:0]ila_smax_exp_augend;
  output [31:0]ila_smax_exp_addend;
  output [31:0]ila_smax_ctrlr_exp_input;
  output [31:0]ila_smax_exp_fifo_data;
  output ila_smax_exp_fifo_wr_en;
  output [2:0]ila_smax_exp_fsm_state;
  output ila_smax_exp_valid_result;
  output ila_smax_ctrlr_exp_input_valid;
  output [31:0]ila_smax_exp_fifo_dout;
  output ila_smax_exp_fifo_valid;
  output [31:0]ila_smax_exp_mux_data;
  output ila_smax_exp_mux_wr_en;
  output ila_smax_exp_fifo_rd_en;
  output [31:0]ila_smax_aw_sum;
  output [31:0]ila_smax_aw_addend;
  output [31:0]ila_smax_aw_augend;
  output [31:0]ila_smax_dw_quotient;
  output [31:0]ila_smax_dw_dividend;
  output [31:0]ila_smax_dw_divisor;
  output [31:0]ila_smax_outbuff_din;
  output ila_smax_outbuff_wr_en;
  output [7:0]ila_smax_axi_awlen;
  output [31:0]m00_axi_awaddr;
  output [31:0]m00_axi_araddr;
  output [7:0]m00_axi_arlen;
  output [31:0]ila_smax_dw_division_reg;
  output [31:0]ila_smax_aw_sum_reg;
  output [4:0]\ila_smax_dw_hold_counter[4] ;
  output ila_smax_aw_rd_en;
  output ila_smax_dw_quotient_result_valid;
  output m00_axi_awvalid;
  output m00_axi_arvalid;
  input s00_axi_arvalid;
  input m00_axi_aresetn;
  input m00_axi_rvalid;
  input s00_axi_aclk;
  input [3:0]s00_axi_awaddr;
  input [31:0]s00_axi_wdata;
  input [3:0]s00_axi_araddr;
  input s00_axi_wvalid;
  input s00_axi_awvalid;
  input [3:0]s00_axi_wstrb;
  input s00_axi_aresetn;
  input s00_axi_rready;
  input s00_axi_bready;
  input m00_axi_aclk;
  input m00_axi_arready;
  input m00_axi_rlast;
  input m00_axi_bvalid;
  input m00_axi_wready;
  input m00_axi_awready;
  input [31:0]m00_axi_rdata;

  wire [1:0]Q;
  wire S_AXI_ARREADY;
  wire S_AXI_AWREADY;
  wire S_AXI_WREADY;
  wire Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_0;
  wire Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_1;
  wire Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_170;
  wire Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_195;
  wire Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_196;
  wire Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_197;
  wire Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_198;
  wire Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_199;
  wire Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_200;
  wire Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_201;
  wire Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_202;
  wire Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_203;
  wire Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_204;
  wire Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_205;
  wire Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_206;
  wire Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_207;
  wire Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_208;
  wire Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_209;
  wire Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_210;
  wire Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_211;
  wire Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_212;
  wire Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_213;
  wire Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_214;
  wire Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_215;
  wire Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_216;
  wire Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_217;
  wire Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_218;
  wire Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_219;
  wire Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_334;
  wire Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_55;
  wire axi_bvalid_i_1_n_0;
  wire axi_rvalid_i_1_n_0;
  wire [31:0]control_reg_to_master;
  wire \controller/next_state1 ;
  wire cycle1_carry__0_i_1_n_0;
  wire cycle1_carry__0_i_2_n_0;
  wire cycle1_carry__0_i_3_n_0;
  wire cycle1_carry__0_i_4_n_0;
  wire cycle1_carry__0_n_0;
  wire cycle1_carry__0_n_1;
  wire cycle1_carry__0_n_2;
  wire cycle1_carry__0_n_3;
  wire cycle1_carry__1_i_1_n_0;
  wire cycle1_carry__1_i_2_n_0;
  wire cycle1_carry__1_i_3_n_0;
  wire cycle1_carry__1_i_4_n_0;
  wire cycle1_carry__1_n_0;
  wire cycle1_carry__1_n_1;
  wire cycle1_carry__1_n_2;
  wire cycle1_carry__1_n_3;
  wire cycle1_carry__2_i_1_n_0;
  wire cycle1_carry__2_i_2_n_0;
  wire cycle1_carry__2_i_3_n_0;
  wire cycle1_carry__2_i_4_n_0;
  wire cycle1_carry__2_n_0;
  wire cycle1_carry__2_n_1;
  wire cycle1_carry__2_n_2;
  wire cycle1_carry__2_n_3;
  wire cycle1_carry__3_i_1_n_0;
  wire cycle1_carry__3_i_2_n_0;
  wire cycle1_carry__3_i_3_n_0;
  wire cycle1_carry__3_i_4_n_0;
  wire cycle1_carry__3_n_0;
  wire cycle1_carry__3_n_1;
  wire cycle1_carry__3_n_2;
  wire cycle1_carry__3_n_3;
  wire cycle1_carry__4_i_1_n_0;
  wire cycle1_carry__4_i_2_n_0;
  wire cycle1_carry__4_i_3_n_0;
  wire cycle1_carry__4_i_4_n_0;
  wire cycle1_carry__4_n_0;
  wire cycle1_carry__4_n_1;
  wire cycle1_carry__4_n_2;
  wire cycle1_carry__4_n_3;
  wire cycle1_carry__5_i_1_n_0;
  wire cycle1_carry__5_i_2_n_0;
  wire cycle1_carry__5_i_3_n_0;
  wire cycle1_carry__5_i_4_n_0;
  wire cycle1_carry__5_n_0;
  wire cycle1_carry__5_n_1;
  wire cycle1_carry__5_n_2;
  wire cycle1_carry__5_n_3;
  wire cycle1_carry__6_i_1_n_0;
  wire cycle1_carry__6_i_2_n_0;
  wire cycle1_carry__6_i_3_n_0;
  wire cycle1_carry__6_n_1;
  wire cycle1_carry__6_n_2;
  wire cycle1_carry__6_n_3;
  wire cycle1_carry_i_1_n_0;
  wire cycle1_carry_i_2_n_0;
  wire cycle1_carry_i_3_n_0;
  wire cycle1_carry_i_4_n_0;
  wire cycle1_carry_i_5_n_0;
  wire cycle1_carry_i_6_n_0;
  wire cycle1_carry_i_7_n_0;
  wire cycle1_carry_n_0;
  wire cycle1_carry_n_1;
  wire cycle1_carry_n_2;
  wire cycle1_carry_n_3;
  wire \cycle[11]_i_2_n_0 ;
  wire \cycle[11]_i_3_n_0 ;
  wire \cycle[11]_i_4_n_0 ;
  wire \cycle[11]_i_5_n_0 ;
  wire \cycle[15]_i_2_n_0 ;
  wire \cycle[15]_i_3_n_0 ;
  wire \cycle[15]_i_4_n_0 ;
  wire \cycle[15]_i_5_n_0 ;
  wire \cycle[19]_i_2_n_0 ;
  wire \cycle[19]_i_3_n_0 ;
  wire \cycle[19]_i_4_n_0 ;
  wire \cycle[19]_i_5_n_0 ;
  wire \cycle[23]_i_2_n_0 ;
  wire \cycle[23]_i_3_n_0 ;
  wire \cycle[23]_i_4_n_0 ;
  wire \cycle[23]_i_5_n_0 ;
  wire \cycle[27]_i_2_n_0 ;
  wire \cycle[27]_i_3_n_0 ;
  wire \cycle[27]_i_4_n_0 ;
  wire \cycle[27]_i_5_n_0 ;
  wire \cycle[31]_i_2_n_0 ;
  wire \cycle[31]_i_3_n_0 ;
  wire \cycle[31]_i_4_n_0 ;
  wire \cycle[31]_i_5_n_0 ;
  wire \cycle[35]_i_2_n_0 ;
  wire \cycle[35]_i_3_n_0 ;
  wire \cycle[35]_i_4_n_0 ;
  wire \cycle[35]_i_5_n_0 ;
  wire \cycle[39]_i_2_n_0 ;
  wire \cycle[39]_i_3_n_0 ;
  wire \cycle[39]_i_4_n_0 ;
  wire \cycle[39]_i_5_n_0 ;
  wire \cycle[3]_i_2_n_0 ;
  wire \cycle[3]_i_3_n_0 ;
  wire \cycle[3]_i_4_n_0 ;
  wire \cycle[3]_i_5_n_0 ;
  wire \cycle[43]_i_2_n_0 ;
  wire \cycle[43]_i_3_n_0 ;
  wire \cycle[43]_i_4_n_0 ;
  wire \cycle[43]_i_5_n_0 ;
  wire \cycle[47]_i_2_n_0 ;
  wire \cycle[47]_i_3_n_0 ;
  wire \cycle[47]_i_4_n_0 ;
  wire \cycle[47]_i_5_n_0 ;
  wire \cycle[51]_i_2_n_0 ;
  wire \cycle[51]_i_3_n_0 ;
  wire \cycle[51]_i_4_n_0 ;
  wire \cycle[51]_i_5_n_0 ;
  wire \cycle[55]_i_2_n_0 ;
  wire \cycle[55]_i_3_n_0 ;
  wire \cycle[55]_i_4_n_0 ;
  wire \cycle[55]_i_5_n_0 ;
  wire \cycle[59]_i_2_n_0 ;
  wire \cycle[59]_i_3_n_0 ;
  wire \cycle[59]_i_4_n_0 ;
  wire \cycle[59]_i_5_n_0 ;
  wire \cycle[63]_i_2_n_0 ;
  wire \cycle[63]_i_3_n_0 ;
  wire \cycle[63]_i_4_n_0 ;
  wire \cycle[63]_i_5_n_0 ;
  wire \cycle[63]_i_6_n_0 ;
  wire \cycle[7]_i_2_n_0 ;
  wire \cycle[7]_i_3_n_0 ;
  wire \cycle[7]_i_4_n_0 ;
  wire \cycle[7]_i_5_n_0 ;
  wire \cycle_reg[11]_i_1_n_0 ;
  wire \cycle_reg[11]_i_1_n_1 ;
  wire \cycle_reg[11]_i_1_n_2 ;
  wire \cycle_reg[11]_i_1_n_3 ;
  wire \cycle_reg[11]_i_1_n_4 ;
  wire \cycle_reg[11]_i_1_n_5 ;
  wire \cycle_reg[11]_i_1_n_6 ;
  wire \cycle_reg[11]_i_1_n_7 ;
  wire \cycle_reg[15]_i_1_n_0 ;
  wire \cycle_reg[15]_i_1_n_1 ;
  wire \cycle_reg[15]_i_1_n_2 ;
  wire \cycle_reg[15]_i_1_n_3 ;
  wire \cycle_reg[15]_i_1_n_4 ;
  wire \cycle_reg[15]_i_1_n_5 ;
  wire \cycle_reg[15]_i_1_n_6 ;
  wire \cycle_reg[15]_i_1_n_7 ;
  wire \cycle_reg[19]_i_1_n_0 ;
  wire \cycle_reg[19]_i_1_n_1 ;
  wire \cycle_reg[19]_i_1_n_2 ;
  wire \cycle_reg[19]_i_1_n_3 ;
  wire \cycle_reg[19]_i_1_n_4 ;
  wire \cycle_reg[19]_i_1_n_5 ;
  wire \cycle_reg[19]_i_1_n_6 ;
  wire \cycle_reg[19]_i_1_n_7 ;
  wire \cycle_reg[23]_i_1_n_0 ;
  wire \cycle_reg[23]_i_1_n_1 ;
  wire \cycle_reg[23]_i_1_n_2 ;
  wire \cycle_reg[23]_i_1_n_3 ;
  wire \cycle_reg[23]_i_1_n_4 ;
  wire \cycle_reg[23]_i_1_n_5 ;
  wire \cycle_reg[23]_i_1_n_6 ;
  wire \cycle_reg[23]_i_1_n_7 ;
  wire \cycle_reg[27]_i_1_n_0 ;
  wire \cycle_reg[27]_i_1_n_1 ;
  wire \cycle_reg[27]_i_1_n_2 ;
  wire \cycle_reg[27]_i_1_n_3 ;
  wire \cycle_reg[27]_i_1_n_4 ;
  wire \cycle_reg[27]_i_1_n_5 ;
  wire \cycle_reg[27]_i_1_n_6 ;
  wire \cycle_reg[27]_i_1_n_7 ;
  wire \cycle_reg[31]_i_1_n_0 ;
  wire \cycle_reg[31]_i_1_n_1 ;
  wire \cycle_reg[31]_i_1_n_2 ;
  wire \cycle_reg[31]_i_1_n_3 ;
  wire \cycle_reg[31]_i_1_n_4 ;
  wire \cycle_reg[31]_i_1_n_5 ;
  wire \cycle_reg[31]_i_1_n_6 ;
  wire \cycle_reg[31]_i_1_n_7 ;
  wire \cycle_reg[35]_i_1_n_0 ;
  wire \cycle_reg[35]_i_1_n_1 ;
  wire \cycle_reg[35]_i_1_n_2 ;
  wire \cycle_reg[35]_i_1_n_3 ;
  wire \cycle_reg[35]_i_1_n_4 ;
  wire \cycle_reg[35]_i_1_n_5 ;
  wire \cycle_reg[35]_i_1_n_6 ;
  wire \cycle_reg[35]_i_1_n_7 ;
  wire \cycle_reg[39]_i_1_n_0 ;
  wire \cycle_reg[39]_i_1_n_1 ;
  wire \cycle_reg[39]_i_1_n_2 ;
  wire \cycle_reg[39]_i_1_n_3 ;
  wire \cycle_reg[39]_i_1_n_4 ;
  wire \cycle_reg[39]_i_1_n_5 ;
  wire \cycle_reg[39]_i_1_n_6 ;
  wire \cycle_reg[39]_i_1_n_7 ;
  wire \cycle_reg[3]_i_1_n_0 ;
  wire \cycle_reg[3]_i_1_n_1 ;
  wire \cycle_reg[3]_i_1_n_2 ;
  wire \cycle_reg[3]_i_1_n_3 ;
  wire \cycle_reg[3]_i_1_n_4 ;
  wire \cycle_reg[3]_i_1_n_5 ;
  wire \cycle_reg[3]_i_1_n_6 ;
  wire \cycle_reg[3]_i_1_n_7 ;
  wire \cycle_reg[43]_i_1_n_0 ;
  wire \cycle_reg[43]_i_1_n_1 ;
  wire \cycle_reg[43]_i_1_n_2 ;
  wire \cycle_reg[43]_i_1_n_3 ;
  wire \cycle_reg[43]_i_1_n_4 ;
  wire \cycle_reg[43]_i_1_n_5 ;
  wire \cycle_reg[43]_i_1_n_6 ;
  wire \cycle_reg[43]_i_1_n_7 ;
  wire \cycle_reg[47]_i_1_n_0 ;
  wire \cycle_reg[47]_i_1_n_1 ;
  wire \cycle_reg[47]_i_1_n_2 ;
  wire \cycle_reg[47]_i_1_n_3 ;
  wire \cycle_reg[47]_i_1_n_4 ;
  wire \cycle_reg[47]_i_1_n_5 ;
  wire \cycle_reg[47]_i_1_n_6 ;
  wire \cycle_reg[47]_i_1_n_7 ;
  wire \cycle_reg[51]_i_1_n_0 ;
  wire \cycle_reg[51]_i_1_n_1 ;
  wire \cycle_reg[51]_i_1_n_2 ;
  wire \cycle_reg[51]_i_1_n_3 ;
  wire \cycle_reg[51]_i_1_n_4 ;
  wire \cycle_reg[51]_i_1_n_5 ;
  wire \cycle_reg[51]_i_1_n_6 ;
  wire \cycle_reg[51]_i_1_n_7 ;
  wire \cycle_reg[55]_i_1_n_0 ;
  wire \cycle_reg[55]_i_1_n_1 ;
  wire \cycle_reg[55]_i_1_n_2 ;
  wire \cycle_reg[55]_i_1_n_3 ;
  wire \cycle_reg[55]_i_1_n_4 ;
  wire \cycle_reg[55]_i_1_n_5 ;
  wire \cycle_reg[55]_i_1_n_6 ;
  wire \cycle_reg[55]_i_1_n_7 ;
  wire \cycle_reg[59]_i_1_n_0 ;
  wire \cycle_reg[59]_i_1_n_1 ;
  wire \cycle_reg[59]_i_1_n_2 ;
  wire \cycle_reg[59]_i_1_n_3 ;
  wire \cycle_reg[59]_i_1_n_4 ;
  wire \cycle_reg[59]_i_1_n_5 ;
  wire \cycle_reg[59]_i_1_n_6 ;
  wire \cycle_reg[59]_i_1_n_7 ;
  wire \cycle_reg[63]_i_1_n_1 ;
  wire \cycle_reg[63]_i_1_n_2 ;
  wire \cycle_reg[63]_i_1_n_3 ;
  wire \cycle_reg[63]_i_1_n_4 ;
  wire \cycle_reg[63]_i_1_n_5 ;
  wire \cycle_reg[63]_i_1_n_6 ;
  wire \cycle_reg[63]_i_1_n_7 ;
  wire \cycle_reg[7]_i_1_n_0 ;
  wire \cycle_reg[7]_i_1_n_1 ;
  wire \cycle_reg[7]_i_1_n_2 ;
  wire \cycle_reg[7]_i_1_n_3 ;
  wire \cycle_reg[7]_i_1_n_4 ;
  wire \cycle_reg[7]_i_1_n_5 ;
  wire \cycle_reg[7]_i_1_n_6 ;
  wire \cycle_reg[7]_i_1_n_7 ;
  wire \epoch[11]_i_2_n_0 ;
  wire \epoch[11]_i_3_n_0 ;
  wire \epoch[11]_i_4_n_0 ;
  wire \epoch[11]_i_5_n_0 ;
  wire \epoch[15]_i_2_n_0 ;
  wire \epoch[15]_i_3_n_0 ;
  wire \epoch[15]_i_4_n_0 ;
  wire \epoch[15]_i_5_n_0 ;
  wire \epoch[19]_i_2_n_0 ;
  wire \epoch[19]_i_3_n_0 ;
  wire \epoch[19]_i_4_n_0 ;
  wire \epoch[19]_i_5_n_0 ;
  wire \epoch[23]_i_2_n_0 ;
  wire \epoch[23]_i_3_n_0 ;
  wire \epoch[23]_i_4_n_0 ;
  wire \epoch[23]_i_5_n_0 ;
  wire \epoch[27]_i_2_n_0 ;
  wire \epoch[27]_i_3_n_0 ;
  wire \epoch[27]_i_4_n_0 ;
  wire \epoch[27]_i_5_n_0 ;
  wire \epoch[31]_i_2_n_0 ;
  wire \epoch[31]_i_3_n_0 ;
  wire \epoch[31]_i_4_n_0 ;
  wire \epoch[31]_i_5_n_0 ;
  wire \epoch[35]_i_2_n_0 ;
  wire \epoch[35]_i_3_n_0 ;
  wire \epoch[35]_i_4_n_0 ;
  wire \epoch[35]_i_5_n_0 ;
  wire \epoch[39]_i_2_n_0 ;
  wire \epoch[39]_i_3_n_0 ;
  wire \epoch[39]_i_4_n_0 ;
  wire \epoch[39]_i_5_n_0 ;
  wire \epoch[3]_i_2_n_0 ;
  wire \epoch[3]_i_3_n_0 ;
  wire \epoch[3]_i_4_n_0 ;
  wire \epoch[3]_i_5_n_0 ;
  wire \epoch[43]_i_2_n_0 ;
  wire \epoch[43]_i_3_n_0 ;
  wire \epoch[43]_i_4_n_0 ;
  wire \epoch[43]_i_5_n_0 ;
  wire \epoch[47]_i_2_n_0 ;
  wire \epoch[47]_i_3_n_0 ;
  wire \epoch[47]_i_4_n_0 ;
  wire \epoch[47]_i_5_n_0 ;
  wire \epoch[51]_i_2_n_0 ;
  wire \epoch[51]_i_3_n_0 ;
  wire \epoch[51]_i_4_n_0 ;
  wire \epoch[51]_i_5_n_0 ;
  wire \epoch[55]_i_2_n_0 ;
  wire \epoch[55]_i_3_n_0 ;
  wire \epoch[55]_i_4_n_0 ;
  wire \epoch[55]_i_5_n_0 ;
  wire \epoch[59]_i_2_n_0 ;
  wire \epoch[59]_i_3_n_0 ;
  wire \epoch[59]_i_4_n_0 ;
  wire \epoch[59]_i_5_n_0 ;
  wire \epoch[63]_i_4_n_0 ;
  wire \epoch[63]_i_5_n_0 ;
  wire \epoch[63]_i_6_n_0 ;
  wire \epoch[63]_i_7_n_0 ;
  wire \epoch[7]_i_2_n_0 ;
  wire \epoch[7]_i_3_n_0 ;
  wire \epoch[7]_i_4_n_0 ;
  wire \epoch[7]_i_5_n_0 ;
  wire \epoch_reg[11]_i_1_n_0 ;
  wire \epoch_reg[11]_i_1_n_1 ;
  wire \epoch_reg[11]_i_1_n_2 ;
  wire \epoch_reg[11]_i_1_n_3 ;
  wire \epoch_reg[11]_i_1_n_4 ;
  wire \epoch_reg[11]_i_1_n_5 ;
  wire \epoch_reg[11]_i_1_n_6 ;
  wire \epoch_reg[11]_i_1_n_7 ;
  wire \epoch_reg[15]_i_1_n_0 ;
  wire \epoch_reg[15]_i_1_n_1 ;
  wire \epoch_reg[15]_i_1_n_2 ;
  wire \epoch_reg[15]_i_1_n_3 ;
  wire \epoch_reg[15]_i_1_n_4 ;
  wire \epoch_reg[15]_i_1_n_5 ;
  wire \epoch_reg[15]_i_1_n_6 ;
  wire \epoch_reg[15]_i_1_n_7 ;
  wire \epoch_reg[19]_i_1_n_0 ;
  wire \epoch_reg[19]_i_1_n_1 ;
  wire \epoch_reg[19]_i_1_n_2 ;
  wire \epoch_reg[19]_i_1_n_3 ;
  wire \epoch_reg[19]_i_1_n_4 ;
  wire \epoch_reg[19]_i_1_n_5 ;
  wire \epoch_reg[19]_i_1_n_6 ;
  wire \epoch_reg[19]_i_1_n_7 ;
  wire \epoch_reg[23]_i_1_n_0 ;
  wire \epoch_reg[23]_i_1_n_1 ;
  wire \epoch_reg[23]_i_1_n_2 ;
  wire \epoch_reg[23]_i_1_n_3 ;
  wire \epoch_reg[23]_i_1_n_4 ;
  wire \epoch_reg[23]_i_1_n_5 ;
  wire \epoch_reg[23]_i_1_n_6 ;
  wire \epoch_reg[23]_i_1_n_7 ;
  wire \epoch_reg[27]_i_1_n_0 ;
  wire \epoch_reg[27]_i_1_n_1 ;
  wire \epoch_reg[27]_i_1_n_2 ;
  wire \epoch_reg[27]_i_1_n_3 ;
  wire \epoch_reg[27]_i_1_n_4 ;
  wire \epoch_reg[27]_i_1_n_5 ;
  wire \epoch_reg[27]_i_1_n_6 ;
  wire \epoch_reg[27]_i_1_n_7 ;
  wire \epoch_reg[31]_i_1_n_0 ;
  wire \epoch_reg[31]_i_1_n_1 ;
  wire \epoch_reg[31]_i_1_n_2 ;
  wire \epoch_reg[31]_i_1_n_3 ;
  wire \epoch_reg[31]_i_1_n_4 ;
  wire \epoch_reg[31]_i_1_n_5 ;
  wire \epoch_reg[31]_i_1_n_6 ;
  wire \epoch_reg[31]_i_1_n_7 ;
  wire \epoch_reg[35]_i_1_n_0 ;
  wire \epoch_reg[35]_i_1_n_1 ;
  wire \epoch_reg[35]_i_1_n_2 ;
  wire \epoch_reg[35]_i_1_n_3 ;
  wire \epoch_reg[35]_i_1_n_4 ;
  wire \epoch_reg[35]_i_1_n_5 ;
  wire \epoch_reg[35]_i_1_n_6 ;
  wire \epoch_reg[35]_i_1_n_7 ;
  wire \epoch_reg[39]_i_1_n_0 ;
  wire \epoch_reg[39]_i_1_n_1 ;
  wire \epoch_reg[39]_i_1_n_2 ;
  wire \epoch_reg[39]_i_1_n_3 ;
  wire \epoch_reg[39]_i_1_n_4 ;
  wire \epoch_reg[39]_i_1_n_5 ;
  wire \epoch_reg[39]_i_1_n_6 ;
  wire \epoch_reg[39]_i_1_n_7 ;
  wire \epoch_reg[3]_i_1_n_0 ;
  wire \epoch_reg[3]_i_1_n_1 ;
  wire \epoch_reg[3]_i_1_n_2 ;
  wire \epoch_reg[3]_i_1_n_3 ;
  wire \epoch_reg[3]_i_1_n_4 ;
  wire \epoch_reg[3]_i_1_n_5 ;
  wire \epoch_reg[3]_i_1_n_6 ;
  wire \epoch_reg[3]_i_1_n_7 ;
  wire \epoch_reg[43]_i_1_n_0 ;
  wire \epoch_reg[43]_i_1_n_1 ;
  wire \epoch_reg[43]_i_1_n_2 ;
  wire \epoch_reg[43]_i_1_n_3 ;
  wire \epoch_reg[43]_i_1_n_4 ;
  wire \epoch_reg[43]_i_1_n_5 ;
  wire \epoch_reg[43]_i_1_n_6 ;
  wire \epoch_reg[43]_i_1_n_7 ;
  wire \epoch_reg[47]_i_1_n_0 ;
  wire \epoch_reg[47]_i_1_n_1 ;
  wire \epoch_reg[47]_i_1_n_2 ;
  wire \epoch_reg[47]_i_1_n_3 ;
  wire \epoch_reg[47]_i_1_n_4 ;
  wire \epoch_reg[47]_i_1_n_5 ;
  wire \epoch_reg[47]_i_1_n_6 ;
  wire \epoch_reg[47]_i_1_n_7 ;
  wire \epoch_reg[51]_i_1_n_0 ;
  wire \epoch_reg[51]_i_1_n_1 ;
  wire \epoch_reg[51]_i_1_n_2 ;
  wire \epoch_reg[51]_i_1_n_3 ;
  wire \epoch_reg[51]_i_1_n_4 ;
  wire \epoch_reg[51]_i_1_n_5 ;
  wire \epoch_reg[51]_i_1_n_6 ;
  wire \epoch_reg[51]_i_1_n_7 ;
  wire \epoch_reg[55]_i_1_n_0 ;
  wire \epoch_reg[55]_i_1_n_1 ;
  wire \epoch_reg[55]_i_1_n_2 ;
  wire \epoch_reg[55]_i_1_n_3 ;
  wire \epoch_reg[55]_i_1_n_4 ;
  wire \epoch_reg[55]_i_1_n_5 ;
  wire \epoch_reg[55]_i_1_n_6 ;
  wire \epoch_reg[55]_i_1_n_7 ;
  wire \epoch_reg[59]_i_1_n_0 ;
  wire \epoch_reg[59]_i_1_n_1 ;
  wire \epoch_reg[59]_i_1_n_2 ;
  wire \epoch_reg[59]_i_1_n_3 ;
  wire \epoch_reg[59]_i_1_n_4 ;
  wire \epoch_reg[59]_i_1_n_5 ;
  wire \epoch_reg[59]_i_1_n_6 ;
  wire \epoch_reg[59]_i_1_n_7 ;
  wire \epoch_reg[63]_i_2_n_1 ;
  wire \epoch_reg[63]_i_2_n_2 ;
  wire \epoch_reg[63]_i_2_n_3 ;
  wire \epoch_reg[63]_i_2_n_4 ;
  wire \epoch_reg[63]_i_2_n_5 ;
  wire \epoch_reg[63]_i_2_n_6 ;
  wire \epoch_reg[63]_i_2_n_7 ;
  wire \epoch_reg[7]_i_1_n_0 ;
  wire \epoch_reg[7]_i_1_n_1 ;
  wire \epoch_reg[7]_i_1_n_2 ;
  wire \epoch_reg[7]_i_1_n_3 ;
  wire \epoch_reg[7]_i_1_n_4 ;
  wire \epoch_reg[7]_i_1_n_5 ;
  wire \epoch_reg[7]_i_1_n_6 ;
  wire \epoch_reg[7]_i_1_n_7 ;
  wire [31:0]ila_smax_aw_addend;
  wire [31:0]ila_smax_aw_augend;
  wire [1:0]\ila_smax_aw_fsm_state[1] ;
  wire [3:0]\ila_smax_aw_hold_counter[3] ;
  wire ila_smax_aw_rd_en;
  wire [31:0]ila_smax_aw_sum;
  wire [15:0]\ila_smax_aw_sum_counter[15] ;
  wire [31:0]ila_smax_aw_sum_reg;
  wire ila_smax_aw_summing_complete;
  wire [7:0]ila_smax_axi_awlen;
  wire ila_smax_axi_bready;
  wire [31:0]ila_smax_axi_wdata;
  wire ila_smax_axi_wlast;
  wire ila_smax_calculated;
  wire [15:0]ila_smax_channel_counter;
  wire [31:0]ila_smax_class_counter;
  wire ila_smax_ctrlr_busy;
  wire ila_smax_ctrlr_clear_all;
  wire ila_smax_ctrlr_controller_ready;
  wire [15:0]\ila_smax_ctrlr_element_counter[15] ;
  wire ila_smax_ctrlr_exp_fifo_select;
  wire [31:0]ila_smax_ctrlr_exp_input;
  wire ila_smax_ctrlr_exp_input_valid;
  wire [2:0]ila_smax_ctrlr_fsm_state;
  wire ila_smax_data_loaded;
  wire [31:0]ila_smax_dw_dividend;
  wire ila_smax_dw_division_complete;
  wire [31:0]ila_smax_dw_division_reg;
  wire [31:0]ila_smax_dw_divisor;
  wire [4:0]\ila_smax_dw_hold_counter[4] ;
  wire [31:0]ila_smax_dw_quotient;
  wire [15:0]\ila_smax_dw_quotient_counter[15] ;
  wire ila_smax_dw_quotient_result_valid;
  wire ila_smax_dw_rd_en;
  wire [31:0]ila_smax_exp_addend;
  wire [31:0]ila_smax_exp_augend;
  wire [31:0]ila_smax_exp_data_reg;
  wire ila_smax_exp_exp_done;
  wire ila_smax_exp_fifo_almost_empty;
  wire ila_smax_exp_fifo_almost_full;
  wire [31:0]ila_smax_exp_fifo_data;
  wire [31:0]ila_smax_exp_fifo_dout;
  wire ila_smax_exp_fifo_empty;
  wire ila_smax_exp_fifo_full;
  wire ila_smax_exp_fifo_rd_en;
  wire ila_smax_exp_fifo_valid;
  wire ila_smax_exp_fifo_wr_en;
  wire [2:0]ila_smax_exp_fsm_state;
  wire ila_smax_exp_function_ready;
  wire [3:0]ila_smax_exp_hold_counter;
  wire [31:0]ila_smax_exp_mult_reg;
  wire [31:0]ila_smax_exp_multiplicand_a;
  wire [31:0]ila_smax_exp_multiplicand_b;
  wire [31:0]ila_smax_exp_mux_data;
  wire ila_smax_exp_mux_wr_en;
  wire [31:0]ila_smax_exp_product;
  wire [7:0]ila_smax_exp_step_counter;
  wire [31:0]ila_smax_exp_sum;
  wire [4:0]ila_smax_exp_sum_counter;
  wire ila_smax_exp_valid_result;
  wire ila_smax_inbuff_almost_empty;
  wire ila_smax_inbuff_almost_full;
  wire [31:0]ila_smax_inbuff_din;
  wire [31:0]ila_smax_inbuff_dout;
  wire ila_smax_inbuff_empty;
  wire ila_smax_inbuff_full;
  wire ila_smax_inbuff_rd_en;
  wire ila_smax_inbuff_valid;
  wire ila_smax_inbuff_wr_en;
  wire [31:0]\ila_smax_input_data_addr_reg[31] ;
  wire [2:0]ila_smax_master_fsm_state;
  wire ila_smax_more_bursts_needed;
  wire [15:0]\ila_smax_num_elements[15] ;
  wire ila_smax_outbuff_almost_empty;
  wire ila_smax_outbuff_almost_full;
  wire [31:0]ila_smax_outbuff_din;
  wire [31:0]ila_smax_outbuff_dout;
  wire ila_smax_outbuff_empty;
  wire ila_smax_outbuff_full;
  wire ila_smax_outbuff_rd_en;
  wire ila_smax_outbuff_valid;
  wire ila_smax_outbuff_wr_en;
  wire [31:0]\ila_smax_output_data_addr_reg[31] ;
  wire [7:0]\ila_smax_rbc[7] ;
  wire [15:0]ila_smax_reads_remaining;
  wire [7:0]\ila_smax_wbc[7] ;
  wire [15:0]ila_smax_writes_remaining;
  wire [31:0]input_data_addr_reg_to_master;
  wire m00_axi_aclk;
  wire [31:0]m00_axi_araddr;
  wire m00_axi_aresetn;
  wire [7:0]m00_axi_arlen;
  wire m00_axi_arready;
  wire m00_axi_arvalid;
  wire [31:0]m00_axi_awaddr;
  wire m00_axi_awready;
  wire m00_axi_awvalid;
  wire m00_axi_bvalid;
  wire [31:0]m00_axi_rdata;
  wire m00_axi_rlast;
  wire m00_axi_rready;
  wire m00_axi_rvalid;
  wire m00_axi_wready;
  wire [63:0]o_cycle;
  wire [63:0]o_epoch;
  wire outbuff_rd_en;
  wire [31:0]output_data_addr_reg_to_master;
  wire s00_axi_aclk;
  wire [3:0]s00_axi_araddr;
  wire s00_axi_aresetn;
  wire s00_axi_arvalid;
  wire [3:0]s00_axi_awaddr;
  wire s00_axi_awvalid;
  wire s00_axi_bready;
  wire s00_axi_bvalid;
  wire [31:0]s00_axi_rdata;
  wire s00_axi_rready;
  wire s00_axi_rvalid;
  wire [31:0]s00_axi_wdata;
  wire [3:0]s00_axi_wstrb;
  wire s00_axi_wvalid;
  wire [3:0]slv_reg_wren;
  wire softmax_logic_n_37;
  wire softmax_logic_n_372;
  wire softmax_logic_n_373;
  wire softmax_logic_n_379;
  wire softmax_logic_n_499;
  wire softmax_logic_n_554;
  wire softmax_logic_n_555;
  wire softmax_logic_n_556;
  wire softmax_logic_n_663;
  wire start;
  wire [1:0]start_reg;
  wire [3:0]NLW_cycle1_carry_O_UNCONNECTED;
  wire [3:0]NLW_cycle1_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_cycle1_carry__1_O_UNCONNECTED;
  wire [3:0]NLW_cycle1_carry__2_O_UNCONNECTED;
  wire [3:0]NLW_cycle1_carry__3_O_UNCONNECTED;
  wire [3:0]NLW_cycle1_carry__4_O_UNCONNECTED;
  wire [3:0]NLW_cycle1_carry__5_O_UNCONNECTED;
  wire [3:3]NLW_cycle1_carry__6_CO_UNCONNECTED;
  wire [3:0]NLW_cycle1_carry__6_O_UNCONNECTED;
  wire [3:3]\NLW_cycle_reg[63]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_epoch_reg[63]_i_2_CO_UNCONNECTED ;

  final_accelerator_Softmax_Layer_32bit_0_0_Softmax_Layer_32bit_v1_0_M00_AXI Softmax_Layer_32bit_v1_0_M00_AXI_inst
       (.CO(softmax_logic_n_373),
        .DI({Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_196,Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_197,Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_198,Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_199}),
        .\FSM_sequential_current_state_reg[1]_0 (ila_smax_ctrlr_clear_all),
        .\FSM_sequential_current_state_reg[2]_0 (softmax_logic_n_663),
        .\FSM_sequential_current_state_reg[2]_1 (ila_smax_exp_function_ready),
        .Q(\ila_smax_input_data_addr_reg[31] ),
        .\class_counter_reg[5]_0 (Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_170),
        .\current_state_reg[0] (Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_334),
        .\current_state_reg[0]_0 (Q[0]),
        .\divisor_reg[31] ({Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_212,Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_213,Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_214,Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_215}),
        .\divisor_reg[31]_0 ({Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_216,Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_217,Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_218,Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_219}),
        .\element_counter_reg[15] ({Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_200,Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_201,Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_202,Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_203}),
        .\element_counter_reg[15]_0 (\ila_smax_ctrlr_element_counter[15] ),
        .empty(ila_smax_inbuff_empty),
        .empty_fwft_i_reg(ila_smax_outbuff_empty),
        .full(ila_smax_inbuff_full),
        .\gaf.ram_almost_full_i_reg (Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_195),
        .ila_smax_axi_awlen(ila_smax_axi_awlen),
        .ila_smax_axi_bready(ila_smax_axi_bready),
        .ila_smax_axi_wdata(ila_smax_axi_wdata),
        .ila_smax_axi_wlast(ila_smax_axi_wlast),
        .ila_smax_calculated(ila_smax_calculated),
        .ila_smax_channel_counter(ila_smax_channel_counter),
        .ila_smax_class_counter(ila_smax_class_counter),
        .ila_smax_data_loaded(ila_smax_data_loaded),
        .ila_smax_inbuff_din(ila_smax_inbuff_din),
        .ila_smax_inbuff_wr_en(ila_smax_inbuff_wr_en),
        .ila_smax_master_fsm_state(ila_smax_master_fsm_state),
        .ila_smax_more_bursts_needed(ila_smax_more_bursts_needed),
        .\ila_smax_num_elements[15] (\ila_smax_num_elements[15] ),
        .ila_smax_outbuff_dout(ila_smax_outbuff_dout),
        .ila_smax_outbuff_rd_en(ila_smax_outbuff_rd_en),
        .ila_smax_outbuff_valid(ila_smax_outbuff_valid),
        .\ila_smax_output_data_addr_reg[31] (\ila_smax_output_data_addr_reg[31] ),
        .\ila_smax_rbc[7] (\ila_smax_rbc[7] ),
        .ila_smax_reads_remaining(ila_smax_reads_remaining),
        .\ila_smax_wbc[7] (\ila_smax_wbc[7] ),
        .ila_smax_writes_remaining(ila_smax_writes_remaining),
        .m00_axi_aclk(m00_axi_aclk),
        .m00_axi_araddr(m00_axi_araddr),
        .m00_axi_aresetn(m00_axi_aresetn),
        .m00_axi_aresetn_0(softmax_logic_n_556),
        .m00_axi_aresetn_1(softmax_logic_n_37),
        .m00_axi_aresetn_2(softmax_logic_n_372),
        .m00_axi_aresetn_3(softmax_logic_n_555),
        .m00_axi_arlen(m00_axi_arlen),
        .m00_axi_arready(m00_axi_arready),
        .m00_axi_arvalid(m00_axi_arvalid),
        .m00_axi_awaddr(m00_axi_awaddr),
        .m00_axi_awready(m00_axi_awready),
        .m00_axi_awvalid(m00_axi_awvalid),
        .m00_axi_bvalid(m00_axi_bvalid),
        .m00_axi_rdata(m00_axi_rdata),
        .m00_axi_rlast(m00_axi_rlast),
        .m00_axi_rready(m00_axi_rready),
        .m00_axi_rvalid(m00_axi_rvalid),
        .m00_axi_wready(m00_axi_wready),
        .next_state1(\controller/next_state1 ),
        .o_control_reg({control_reg_to_master[31:16],control_reg_to_master[0]}),
        .o_input_data_addr_reg(input_data_addr_reg_to_master),
        .o_output_data_addr_reg(output_data_addr_reg_to_master),
        .out({Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_0,Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_1}),
        .outbuff_rd_en(outbuff_rd_en),
        .\output_data_addr_reg_reg[8]_0 (Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_55),
        .\quotient_counter_reg[15] (\ila_smax_dw_quotient_counter[15] ),
        .ram_full_i_reg(softmax_logic_n_499),
        .slv_reg_wren({slv_reg_wren[3:2],slv_reg_wren[0]}),
        .start(start),
        .start_reg_0(start_reg),
        .\sum_counter_reg[15] (\ila_smax_aw_sum_counter[15] ),
        .summing_complete_reg({Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_204,Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_205,Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_206,Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_207}),
        .summing_complete_reg_0({Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_208,Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_209,Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_210,Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_211}));
  final_accelerator_Softmax_Layer_32bit_0_0_Softmax_Layer_32bit_v1_0_S00_AXI Softmax_Layer_32bit_v1_0_S00_AXI_inst
       (.\FSM_sequential_current_state_reg[1] (ila_smax_ctrlr_clear_all),
        .Q({control_reg_to_master[31:16],control_reg_to_master[0]}),
        .almost_full(ila_smax_exp_fifo_almost_full),
        .axi_arready_reg_0(axi_rvalid_i_1_n_0),
        .axi_bvalid_reg_0(axi_bvalid_i_1_n_0),
        .empty(ila_smax_exp_fifo_empty),
        .empty_fwft_i_reg(ila_smax_inbuff_empty),
        .empty_fwft_i_reg_0(ila_smax_outbuff_empty),
        .full(ila_smax_exp_fifo_full),
        .ila_smax_ctrlr_busy(ila_smax_ctrlr_busy),
        .ila_smax_exp_fifo_almost_empty(ila_smax_exp_fifo_almost_empty),
        .ila_smax_inbuff_almost_empty(ila_smax_inbuff_almost_empty),
        .ila_smax_inbuff_almost_full(ila_smax_inbuff_almost_full),
        .ila_smax_outbuff_almost_empty(ila_smax_outbuff_almost_empty),
        .ila_smax_outbuff_almost_full(ila_smax_outbuff_almost_full),
        .\input_data_addr_reg_reg[31] (input_data_addr_reg_to_master),
        .\input_data_addr_reg_reg[31]_0 (\ila_smax_input_data_addr_reg[31] ),
        .\output_data_addr_reg_reg[31] (output_data_addr_reg_to_master),
        .\output_data_addr_reg_reg[31]_0 (\ila_smax_output_data_addr_reg[31] ),
        .ram_full_i_reg(ila_smax_inbuff_full),
        .ram_full_i_reg_0(ila_smax_outbuff_full),
        .s00_axi_aclk(s00_axi_aclk),
        .s00_axi_araddr(s00_axi_araddr),
        .s00_axi_aresetn(s00_axi_aresetn),
        .s00_axi_arready(S_AXI_ARREADY),
        .s00_axi_arvalid(s00_axi_arvalid),
        .s00_axi_awaddr(s00_axi_awaddr),
        .s00_axi_awready(S_AXI_AWREADY),
        .s00_axi_awvalid(s00_axi_awvalid),
        .s00_axi_bvalid(s00_axi_bvalid),
        .s00_axi_rdata(s00_axi_rdata),
        .s00_axi_rvalid(s00_axi_rvalid),
        .s00_axi_wdata(s00_axi_wdata),
        .s00_axi_wready(S_AXI_WREADY),
        .s00_axi_wstrb(s00_axi_wstrb),
        .s00_axi_wvalid(s00_axi_wvalid),
        .slv_reg_wren({slv_reg_wren[3:2],slv_reg_wren[0]}));
  LUT6 #(
    .INIT(64'h7444444444444444)) 
    axi_bvalid_i_1
       (.I0(s00_axi_bready),
        .I1(s00_axi_bvalid),
        .I2(s00_axi_awvalid),
        .I3(s00_axi_wvalid),
        .I4(S_AXI_WREADY),
        .I5(S_AXI_AWREADY),
        .O(axi_bvalid_i_1_n_0));
  LUT4 #(
    .INIT(16'h08F8)) 
    axi_rvalid_i_1
       (.I0(S_AXI_ARREADY),
        .I1(s00_axi_arvalid),
        .I2(s00_axi_rvalid),
        .I3(s00_axi_rready),
        .O(axi_rvalid_i_1_n_0));
  CARRY4 cycle1_carry
       (.CI(1'b0),
        .CO({cycle1_carry_n_0,cycle1_carry_n_1,cycle1_carry_n_2,cycle1_carry_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,cycle1_carry_i_1_n_0,cycle1_carry_i_2_n_0,cycle1_carry_i_3_n_0}),
        .O(NLW_cycle1_carry_O_UNCONNECTED[3:0]),
        .S({cycle1_carry_i_4_n_0,cycle1_carry_i_5_n_0,cycle1_carry_i_6_n_0,cycle1_carry_i_7_n_0}));
  CARRY4 cycle1_carry__0
       (.CI(cycle1_carry_n_0),
        .CO({cycle1_carry__0_n_0,cycle1_carry__0_n_1,cycle1_carry__0_n_2,cycle1_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_cycle1_carry__0_O_UNCONNECTED[3:0]),
        .S({cycle1_carry__0_i_1_n_0,cycle1_carry__0_i_2_n_0,cycle1_carry__0_i_3_n_0,cycle1_carry__0_i_4_n_0}));
  LUT2 #(
    .INIT(4'h1)) 
    cycle1_carry__0_i_1
       (.I0(o_cycle[16]),
        .I1(o_cycle[17]),
        .O(cycle1_carry__0_i_1_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    cycle1_carry__0_i_2
       (.I0(o_cycle[14]),
        .I1(o_cycle[15]),
        .O(cycle1_carry__0_i_2_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    cycle1_carry__0_i_3
       (.I0(o_cycle[12]),
        .I1(o_cycle[13]),
        .O(cycle1_carry__0_i_3_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    cycle1_carry__0_i_4
       (.I0(o_cycle[10]),
        .I1(o_cycle[11]),
        .O(cycle1_carry__0_i_4_n_0));
  CARRY4 cycle1_carry__1
       (.CI(cycle1_carry__0_n_0),
        .CO({cycle1_carry__1_n_0,cycle1_carry__1_n_1,cycle1_carry__1_n_2,cycle1_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_cycle1_carry__1_O_UNCONNECTED[3:0]),
        .S({cycle1_carry__1_i_1_n_0,cycle1_carry__1_i_2_n_0,cycle1_carry__1_i_3_n_0,cycle1_carry__1_i_4_n_0}));
  LUT2 #(
    .INIT(4'h1)) 
    cycle1_carry__1_i_1
       (.I0(o_cycle[24]),
        .I1(o_cycle[25]),
        .O(cycle1_carry__1_i_1_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    cycle1_carry__1_i_2
       (.I0(o_cycle[22]),
        .I1(o_cycle[23]),
        .O(cycle1_carry__1_i_2_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    cycle1_carry__1_i_3
       (.I0(o_cycle[20]),
        .I1(o_cycle[21]),
        .O(cycle1_carry__1_i_3_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    cycle1_carry__1_i_4
       (.I0(o_cycle[18]),
        .I1(o_cycle[19]),
        .O(cycle1_carry__1_i_4_n_0));
  CARRY4 cycle1_carry__2
       (.CI(cycle1_carry__1_n_0),
        .CO({cycle1_carry__2_n_0,cycle1_carry__2_n_1,cycle1_carry__2_n_2,cycle1_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_cycle1_carry__2_O_UNCONNECTED[3:0]),
        .S({cycle1_carry__2_i_1_n_0,cycle1_carry__2_i_2_n_0,cycle1_carry__2_i_3_n_0,cycle1_carry__2_i_4_n_0}));
  LUT2 #(
    .INIT(4'h1)) 
    cycle1_carry__2_i_1
       (.I0(o_cycle[32]),
        .I1(o_cycle[33]),
        .O(cycle1_carry__2_i_1_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    cycle1_carry__2_i_2
       (.I0(o_cycle[30]),
        .I1(o_cycle[31]),
        .O(cycle1_carry__2_i_2_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    cycle1_carry__2_i_3
       (.I0(o_cycle[28]),
        .I1(o_cycle[29]),
        .O(cycle1_carry__2_i_3_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    cycle1_carry__2_i_4
       (.I0(o_cycle[26]),
        .I1(o_cycle[27]),
        .O(cycle1_carry__2_i_4_n_0));
  CARRY4 cycle1_carry__3
       (.CI(cycle1_carry__2_n_0),
        .CO({cycle1_carry__3_n_0,cycle1_carry__3_n_1,cycle1_carry__3_n_2,cycle1_carry__3_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_cycle1_carry__3_O_UNCONNECTED[3:0]),
        .S({cycle1_carry__3_i_1_n_0,cycle1_carry__3_i_2_n_0,cycle1_carry__3_i_3_n_0,cycle1_carry__3_i_4_n_0}));
  LUT2 #(
    .INIT(4'h1)) 
    cycle1_carry__3_i_1
       (.I0(o_cycle[40]),
        .I1(o_cycle[41]),
        .O(cycle1_carry__3_i_1_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    cycle1_carry__3_i_2
       (.I0(o_cycle[38]),
        .I1(o_cycle[39]),
        .O(cycle1_carry__3_i_2_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    cycle1_carry__3_i_3
       (.I0(o_cycle[36]),
        .I1(o_cycle[37]),
        .O(cycle1_carry__3_i_3_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    cycle1_carry__3_i_4
       (.I0(o_cycle[34]),
        .I1(o_cycle[35]),
        .O(cycle1_carry__3_i_4_n_0));
  CARRY4 cycle1_carry__4
       (.CI(cycle1_carry__3_n_0),
        .CO({cycle1_carry__4_n_0,cycle1_carry__4_n_1,cycle1_carry__4_n_2,cycle1_carry__4_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_cycle1_carry__4_O_UNCONNECTED[3:0]),
        .S({cycle1_carry__4_i_1_n_0,cycle1_carry__4_i_2_n_0,cycle1_carry__4_i_3_n_0,cycle1_carry__4_i_4_n_0}));
  LUT2 #(
    .INIT(4'h1)) 
    cycle1_carry__4_i_1
       (.I0(o_cycle[48]),
        .I1(o_cycle[49]),
        .O(cycle1_carry__4_i_1_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    cycle1_carry__4_i_2
       (.I0(o_cycle[46]),
        .I1(o_cycle[47]),
        .O(cycle1_carry__4_i_2_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    cycle1_carry__4_i_3
       (.I0(o_cycle[44]),
        .I1(o_cycle[45]),
        .O(cycle1_carry__4_i_3_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    cycle1_carry__4_i_4
       (.I0(o_cycle[42]),
        .I1(o_cycle[43]),
        .O(cycle1_carry__4_i_4_n_0));
  CARRY4 cycle1_carry__5
       (.CI(cycle1_carry__4_n_0),
        .CO({cycle1_carry__5_n_0,cycle1_carry__5_n_1,cycle1_carry__5_n_2,cycle1_carry__5_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_cycle1_carry__5_O_UNCONNECTED[3:0]),
        .S({cycle1_carry__5_i_1_n_0,cycle1_carry__5_i_2_n_0,cycle1_carry__5_i_3_n_0,cycle1_carry__5_i_4_n_0}));
  LUT2 #(
    .INIT(4'h1)) 
    cycle1_carry__5_i_1
       (.I0(o_cycle[56]),
        .I1(o_cycle[57]),
        .O(cycle1_carry__5_i_1_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    cycle1_carry__5_i_2
       (.I0(o_cycle[54]),
        .I1(o_cycle[55]),
        .O(cycle1_carry__5_i_2_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    cycle1_carry__5_i_3
       (.I0(o_cycle[52]),
        .I1(o_cycle[53]),
        .O(cycle1_carry__5_i_3_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    cycle1_carry__5_i_4
       (.I0(o_cycle[50]),
        .I1(o_cycle[51]),
        .O(cycle1_carry__5_i_4_n_0));
  CARRY4 cycle1_carry__6
       (.CI(cycle1_carry__5_n_0),
        .CO({NLW_cycle1_carry__6_CO_UNCONNECTED[3],cycle1_carry__6_n_1,cycle1_carry__6_n_2,cycle1_carry__6_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_cycle1_carry__6_O_UNCONNECTED[3:0]),
        .S({1'b0,cycle1_carry__6_i_1_n_0,cycle1_carry__6_i_2_n_0,cycle1_carry__6_i_3_n_0}));
  LUT2 #(
    .INIT(4'h1)) 
    cycle1_carry__6_i_1
       (.I0(o_cycle[62]),
        .I1(o_cycle[63]),
        .O(cycle1_carry__6_i_1_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    cycle1_carry__6_i_2
       (.I0(o_cycle[60]),
        .I1(o_cycle[61]),
        .O(cycle1_carry__6_i_2_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    cycle1_carry__6_i_3
       (.I0(o_cycle[58]),
        .I1(o_cycle[59]),
        .O(cycle1_carry__6_i_3_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    cycle1_carry_i_1
       (.I0(o_cycle[6]),
        .I1(o_cycle[7]),
        .O(cycle1_carry_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    cycle1_carry_i_2
       (.I0(o_cycle[5]),
        .O(cycle1_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    cycle1_carry_i_3
       (.I0(o_cycle[2]),
        .I1(o_cycle[3]),
        .O(cycle1_carry_i_3_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    cycle1_carry_i_4
       (.I0(o_cycle[8]),
        .I1(o_cycle[9]),
        .O(cycle1_carry_i_4_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    cycle1_carry_i_5
       (.I0(o_cycle[6]),
        .I1(o_cycle[7]),
        .O(cycle1_carry_i_5_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    cycle1_carry_i_6
       (.I0(o_cycle[5]),
        .I1(o_cycle[4]),
        .O(cycle1_carry_i_6_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    cycle1_carry_i_7
       (.I0(o_cycle[2]),
        .I1(o_cycle[3]),
        .O(cycle1_carry_i_7_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[11]_i_2 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[11]),
        .O(\cycle[11]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[11]_i_3 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[10]),
        .O(\cycle[11]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[11]_i_4 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[9]),
        .O(\cycle[11]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[11]_i_5 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[8]),
        .O(\cycle[11]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[15]_i_2 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[15]),
        .O(\cycle[15]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[15]_i_3 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[14]),
        .O(\cycle[15]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[15]_i_4 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[13]),
        .O(\cycle[15]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[15]_i_5 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[12]),
        .O(\cycle[15]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[19]_i_2 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[19]),
        .O(\cycle[19]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[19]_i_3 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[18]),
        .O(\cycle[19]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[19]_i_4 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[17]),
        .O(\cycle[19]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[19]_i_5 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[16]),
        .O(\cycle[19]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[23]_i_2 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[23]),
        .O(\cycle[23]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[23]_i_3 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[22]),
        .O(\cycle[23]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[23]_i_4 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[21]),
        .O(\cycle[23]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[23]_i_5 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[20]),
        .O(\cycle[23]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[27]_i_2 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[27]),
        .O(\cycle[27]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[27]_i_3 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[26]),
        .O(\cycle[27]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[27]_i_4 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[25]),
        .O(\cycle[27]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[27]_i_5 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[24]),
        .O(\cycle[27]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[31]_i_2 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[31]),
        .O(\cycle[31]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[31]_i_3 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[30]),
        .O(\cycle[31]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[31]_i_4 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[29]),
        .O(\cycle[31]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[31]_i_5 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[28]),
        .O(\cycle[31]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[35]_i_2 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[35]),
        .O(\cycle[35]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[35]_i_3 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[34]),
        .O(\cycle[35]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[35]_i_4 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[33]),
        .O(\cycle[35]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[35]_i_5 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[32]),
        .O(\cycle[35]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[39]_i_2 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[39]),
        .O(\cycle[39]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[39]_i_3 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[38]),
        .O(\cycle[39]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[39]_i_4 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[37]),
        .O(\cycle[39]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[39]_i_5 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[36]),
        .O(\cycle[39]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[3]_i_2 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[3]),
        .O(\cycle[3]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[3]_i_3 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[2]),
        .O(\cycle[3]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[3]_i_4 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[1]),
        .O(\cycle[3]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h4)) 
    \cycle[3]_i_5 
       (.I0(o_cycle[0]),
        .I1(cycle1_carry__6_n_1),
        .O(\cycle[3]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[43]_i_2 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[43]),
        .O(\cycle[43]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[43]_i_3 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[42]),
        .O(\cycle[43]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[43]_i_4 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[41]),
        .O(\cycle[43]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[43]_i_5 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[40]),
        .O(\cycle[43]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[47]_i_2 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[47]),
        .O(\cycle[47]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[47]_i_3 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[46]),
        .O(\cycle[47]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[47]_i_4 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[45]),
        .O(\cycle[47]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[47]_i_5 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[44]),
        .O(\cycle[47]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[51]_i_2 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[51]),
        .O(\cycle[51]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[51]_i_3 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[50]),
        .O(\cycle[51]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[51]_i_4 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[49]),
        .O(\cycle[51]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[51]_i_5 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[48]),
        .O(\cycle[51]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[55]_i_2 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[55]),
        .O(\cycle[55]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[55]_i_3 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[54]),
        .O(\cycle[55]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[55]_i_4 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[53]),
        .O(\cycle[55]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[55]_i_5 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[52]),
        .O(\cycle[55]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[59]_i_2 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[59]),
        .O(\cycle[59]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[59]_i_3 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[58]),
        .O(\cycle[59]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[59]_i_4 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[57]),
        .O(\cycle[59]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[59]_i_5 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[56]),
        .O(\cycle[59]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cycle[63]_i_2 
       (.I0(m00_axi_aresetn),
        .O(\cycle[63]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[63]_i_3 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[63]),
        .O(\cycle[63]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[63]_i_4 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[62]),
        .O(\cycle[63]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[63]_i_5 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[61]),
        .O(\cycle[63]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[63]_i_6 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[60]),
        .O(\cycle[63]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[7]_i_2 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[7]),
        .O(\cycle[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[7]_i_3 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[6]),
        .O(\cycle[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[7]_i_4 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[5]),
        .O(\cycle[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cycle[7]_i_5 
       (.I0(cycle1_carry__6_n_1),
        .I1(o_cycle[4]),
        .O(\cycle[7]_i_5_n_0 ));
  FDCE \cycle_reg[0] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[3]_i_1_n_7 ),
        .Q(o_cycle[0]));
  FDCE \cycle_reg[10] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[11]_i_1_n_5 ),
        .Q(o_cycle[10]));
  FDCE \cycle_reg[11] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[11]_i_1_n_4 ),
        .Q(o_cycle[11]));
  CARRY4 \cycle_reg[11]_i_1 
       (.CI(\cycle_reg[7]_i_1_n_0 ),
        .CO({\cycle_reg[11]_i_1_n_0 ,\cycle_reg[11]_i_1_n_1 ,\cycle_reg[11]_i_1_n_2 ,\cycle_reg[11]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\cycle_reg[11]_i_1_n_4 ,\cycle_reg[11]_i_1_n_5 ,\cycle_reg[11]_i_1_n_6 ,\cycle_reg[11]_i_1_n_7 }),
        .S({\cycle[11]_i_2_n_0 ,\cycle[11]_i_3_n_0 ,\cycle[11]_i_4_n_0 ,\cycle[11]_i_5_n_0 }));
  FDCE \cycle_reg[12] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[15]_i_1_n_7 ),
        .Q(o_cycle[12]));
  FDCE \cycle_reg[13] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[15]_i_1_n_6 ),
        .Q(o_cycle[13]));
  FDCE \cycle_reg[14] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[15]_i_1_n_5 ),
        .Q(o_cycle[14]));
  FDCE \cycle_reg[15] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[15]_i_1_n_4 ),
        .Q(o_cycle[15]));
  CARRY4 \cycle_reg[15]_i_1 
       (.CI(\cycle_reg[11]_i_1_n_0 ),
        .CO({\cycle_reg[15]_i_1_n_0 ,\cycle_reg[15]_i_1_n_1 ,\cycle_reg[15]_i_1_n_2 ,\cycle_reg[15]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\cycle_reg[15]_i_1_n_4 ,\cycle_reg[15]_i_1_n_5 ,\cycle_reg[15]_i_1_n_6 ,\cycle_reg[15]_i_1_n_7 }),
        .S({\cycle[15]_i_2_n_0 ,\cycle[15]_i_3_n_0 ,\cycle[15]_i_4_n_0 ,\cycle[15]_i_5_n_0 }));
  FDCE \cycle_reg[16] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[19]_i_1_n_7 ),
        .Q(o_cycle[16]));
  FDCE \cycle_reg[17] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[19]_i_1_n_6 ),
        .Q(o_cycle[17]));
  FDCE \cycle_reg[18] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[19]_i_1_n_5 ),
        .Q(o_cycle[18]));
  FDCE \cycle_reg[19] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[19]_i_1_n_4 ),
        .Q(o_cycle[19]));
  CARRY4 \cycle_reg[19]_i_1 
       (.CI(\cycle_reg[15]_i_1_n_0 ),
        .CO({\cycle_reg[19]_i_1_n_0 ,\cycle_reg[19]_i_1_n_1 ,\cycle_reg[19]_i_1_n_2 ,\cycle_reg[19]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\cycle_reg[19]_i_1_n_4 ,\cycle_reg[19]_i_1_n_5 ,\cycle_reg[19]_i_1_n_6 ,\cycle_reg[19]_i_1_n_7 }),
        .S({\cycle[19]_i_2_n_0 ,\cycle[19]_i_3_n_0 ,\cycle[19]_i_4_n_0 ,\cycle[19]_i_5_n_0 }));
  FDCE \cycle_reg[1] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[3]_i_1_n_6 ),
        .Q(o_cycle[1]));
  FDCE \cycle_reg[20] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[23]_i_1_n_7 ),
        .Q(o_cycle[20]));
  FDCE \cycle_reg[21] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[23]_i_1_n_6 ),
        .Q(o_cycle[21]));
  FDCE \cycle_reg[22] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[23]_i_1_n_5 ),
        .Q(o_cycle[22]));
  FDCE \cycle_reg[23] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[23]_i_1_n_4 ),
        .Q(o_cycle[23]));
  CARRY4 \cycle_reg[23]_i_1 
       (.CI(\cycle_reg[19]_i_1_n_0 ),
        .CO({\cycle_reg[23]_i_1_n_0 ,\cycle_reg[23]_i_1_n_1 ,\cycle_reg[23]_i_1_n_2 ,\cycle_reg[23]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\cycle_reg[23]_i_1_n_4 ,\cycle_reg[23]_i_1_n_5 ,\cycle_reg[23]_i_1_n_6 ,\cycle_reg[23]_i_1_n_7 }),
        .S({\cycle[23]_i_2_n_0 ,\cycle[23]_i_3_n_0 ,\cycle[23]_i_4_n_0 ,\cycle[23]_i_5_n_0 }));
  FDCE \cycle_reg[24] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[27]_i_1_n_7 ),
        .Q(o_cycle[24]));
  FDCE \cycle_reg[25] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[27]_i_1_n_6 ),
        .Q(o_cycle[25]));
  FDCE \cycle_reg[26] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[27]_i_1_n_5 ),
        .Q(o_cycle[26]));
  FDCE \cycle_reg[27] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[27]_i_1_n_4 ),
        .Q(o_cycle[27]));
  CARRY4 \cycle_reg[27]_i_1 
       (.CI(\cycle_reg[23]_i_1_n_0 ),
        .CO({\cycle_reg[27]_i_1_n_0 ,\cycle_reg[27]_i_1_n_1 ,\cycle_reg[27]_i_1_n_2 ,\cycle_reg[27]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\cycle_reg[27]_i_1_n_4 ,\cycle_reg[27]_i_1_n_5 ,\cycle_reg[27]_i_1_n_6 ,\cycle_reg[27]_i_1_n_7 }),
        .S({\cycle[27]_i_2_n_0 ,\cycle[27]_i_3_n_0 ,\cycle[27]_i_4_n_0 ,\cycle[27]_i_5_n_0 }));
  FDCE \cycle_reg[28] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[31]_i_1_n_7 ),
        .Q(o_cycle[28]));
  FDCE \cycle_reg[29] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[31]_i_1_n_6 ),
        .Q(o_cycle[29]));
  FDCE \cycle_reg[2] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[3]_i_1_n_5 ),
        .Q(o_cycle[2]));
  FDCE \cycle_reg[30] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[31]_i_1_n_5 ),
        .Q(o_cycle[30]));
  FDCE \cycle_reg[31] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[31]_i_1_n_4 ),
        .Q(o_cycle[31]));
  CARRY4 \cycle_reg[31]_i_1 
       (.CI(\cycle_reg[27]_i_1_n_0 ),
        .CO({\cycle_reg[31]_i_1_n_0 ,\cycle_reg[31]_i_1_n_1 ,\cycle_reg[31]_i_1_n_2 ,\cycle_reg[31]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\cycle_reg[31]_i_1_n_4 ,\cycle_reg[31]_i_1_n_5 ,\cycle_reg[31]_i_1_n_6 ,\cycle_reg[31]_i_1_n_7 }),
        .S({\cycle[31]_i_2_n_0 ,\cycle[31]_i_3_n_0 ,\cycle[31]_i_4_n_0 ,\cycle[31]_i_5_n_0 }));
  FDCE \cycle_reg[32] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[35]_i_1_n_7 ),
        .Q(o_cycle[32]));
  FDCE \cycle_reg[33] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[35]_i_1_n_6 ),
        .Q(o_cycle[33]));
  FDCE \cycle_reg[34] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[35]_i_1_n_5 ),
        .Q(o_cycle[34]));
  FDCE \cycle_reg[35] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[35]_i_1_n_4 ),
        .Q(o_cycle[35]));
  CARRY4 \cycle_reg[35]_i_1 
       (.CI(\cycle_reg[31]_i_1_n_0 ),
        .CO({\cycle_reg[35]_i_1_n_0 ,\cycle_reg[35]_i_1_n_1 ,\cycle_reg[35]_i_1_n_2 ,\cycle_reg[35]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\cycle_reg[35]_i_1_n_4 ,\cycle_reg[35]_i_1_n_5 ,\cycle_reg[35]_i_1_n_6 ,\cycle_reg[35]_i_1_n_7 }),
        .S({\cycle[35]_i_2_n_0 ,\cycle[35]_i_3_n_0 ,\cycle[35]_i_4_n_0 ,\cycle[35]_i_5_n_0 }));
  FDCE \cycle_reg[36] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[39]_i_1_n_7 ),
        .Q(o_cycle[36]));
  FDCE \cycle_reg[37] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[39]_i_1_n_6 ),
        .Q(o_cycle[37]));
  FDCE \cycle_reg[38] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[39]_i_1_n_5 ),
        .Q(o_cycle[38]));
  FDCE \cycle_reg[39] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[39]_i_1_n_4 ),
        .Q(o_cycle[39]));
  CARRY4 \cycle_reg[39]_i_1 
       (.CI(\cycle_reg[35]_i_1_n_0 ),
        .CO({\cycle_reg[39]_i_1_n_0 ,\cycle_reg[39]_i_1_n_1 ,\cycle_reg[39]_i_1_n_2 ,\cycle_reg[39]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\cycle_reg[39]_i_1_n_4 ,\cycle_reg[39]_i_1_n_5 ,\cycle_reg[39]_i_1_n_6 ,\cycle_reg[39]_i_1_n_7 }),
        .S({\cycle[39]_i_2_n_0 ,\cycle[39]_i_3_n_0 ,\cycle[39]_i_4_n_0 ,\cycle[39]_i_5_n_0 }));
  FDCE \cycle_reg[3] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[3]_i_1_n_4 ),
        .Q(o_cycle[3]));
  CARRY4 \cycle_reg[3]_i_1 
       (.CI(1'b0),
        .CO({\cycle_reg[3]_i_1_n_0 ,\cycle_reg[3]_i_1_n_1 ,\cycle_reg[3]_i_1_n_2 ,\cycle_reg[3]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,cycle1_carry__6_n_1}),
        .O({\cycle_reg[3]_i_1_n_4 ,\cycle_reg[3]_i_1_n_5 ,\cycle_reg[3]_i_1_n_6 ,\cycle_reg[3]_i_1_n_7 }),
        .S({\cycle[3]_i_2_n_0 ,\cycle[3]_i_3_n_0 ,\cycle[3]_i_4_n_0 ,\cycle[3]_i_5_n_0 }));
  FDCE \cycle_reg[40] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[43]_i_1_n_7 ),
        .Q(o_cycle[40]));
  FDCE \cycle_reg[41] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[43]_i_1_n_6 ),
        .Q(o_cycle[41]));
  FDCE \cycle_reg[42] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[43]_i_1_n_5 ),
        .Q(o_cycle[42]));
  FDCE \cycle_reg[43] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[43]_i_1_n_4 ),
        .Q(o_cycle[43]));
  CARRY4 \cycle_reg[43]_i_1 
       (.CI(\cycle_reg[39]_i_1_n_0 ),
        .CO({\cycle_reg[43]_i_1_n_0 ,\cycle_reg[43]_i_1_n_1 ,\cycle_reg[43]_i_1_n_2 ,\cycle_reg[43]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\cycle_reg[43]_i_1_n_4 ,\cycle_reg[43]_i_1_n_5 ,\cycle_reg[43]_i_1_n_6 ,\cycle_reg[43]_i_1_n_7 }),
        .S({\cycle[43]_i_2_n_0 ,\cycle[43]_i_3_n_0 ,\cycle[43]_i_4_n_0 ,\cycle[43]_i_5_n_0 }));
  FDCE \cycle_reg[44] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[47]_i_1_n_7 ),
        .Q(o_cycle[44]));
  FDCE \cycle_reg[45] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[47]_i_1_n_6 ),
        .Q(o_cycle[45]));
  FDCE \cycle_reg[46] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[47]_i_1_n_5 ),
        .Q(o_cycle[46]));
  FDCE \cycle_reg[47] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[47]_i_1_n_4 ),
        .Q(o_cycle[47]));
  CARRY4 \cycle_reg[47]_i_1 
       (.CI(\cycle_reg[43]_i_1_n_0 ),
        .CO({\cycle_reg[47]_i_1_n_0 ,\cycle_reg[47]_i_1_n_1 ,\cycle_reg[47]_i_1_n_2 ,\cycle_reg[47]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\cycle_reg[47]_i_1_n_4 ,\cycle_reg[47]_i_1_n_5 ,\cycle_reg[47]_i_1_n_6 ,\cycle_reg[47]_i_1_n_7 }),
        .S({\cycle[47]_i_2_n_0 ,\cycle[47]_i_3_n_0 ,\cycle[47]_i_4_n_0 ,\cycle[47]_i_5_n_0 }));
  FDCE \cycle_reg[48] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[51]_i_1_n_7 ),
        .Q(o_cycle[48]));
  FDCE \cycle_reg[49] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[51]_i_1_n_6 ),
        .Q(o_cycle[49]));
  FDCE \cycle_reg[4] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[7]_i_1_n_7 ),
        .Q(o_cycle[4]));
  FDCE \cycle_reg[50] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[51]_i_1_n_5 ),
        .Q(o_cycle[50]));
  FDCE \cycle_reg[51] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[51]_i_1_n_4 ),
        .Q(o_cycle[51]));
  CARRY4 \cycle_reg[51]_i_1 
       (.CI(\cycle_reg[47]_i_1_n_0 ),
        .CO({\cycle_reg[51]_i_1_n_0 ,\cycle_reg[51]_i_1_n_1 ,\cycle_reg[51]_i_1_n_2 ,\cycle_reg[51]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\cycle_reg[51]_i_1_n_4 ,\cycle_reg[51]_i_1_n_5 ,\cycle_reg[51]_i_1_n_6 ,\cycle_reg[51]_i_1_n_7 }),
        .S({\cycle[51]_i_2_n_0 ,\cycle[51]_i_3_n_0 ,\cycle[51]_i_4_n_0 ,\cycle[51]_i_5_n_0 }));
  FDCE \cycle_reg[52] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[55]_i_1_n_7 ),
        .Q(o_cycle[52]));
  FDCE \cycle_reg[53] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[55]_i_1_n_6 ),
        .Q(o_cycle[53]));
  FDCE \cycle_reg[54] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[55]_i_1_n_5 ),
        .Q(o_cycle[54]));
  FDCE \cycle_reg[55] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[55]_i_1_n_4 ),
        .Q(o_cycle[55]));
  CARRY4 \cycle_reg[55]_i_1 
       (.CI(\cycle_reg[51]_i_1_n_0 ),
        .CO({\cycle_reg[55]_i_1_n_0 ,\cycle_reg[55]_i_1_n_1 ,\cycle_reg[55]_i_1_n_2 ,\cycle_reg[55]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\cycle_reg[55]_i_1_n_4 ,\cycle_reg[55]_i_1_n_5 ,\cycle_reg[55]_i_1_n_6 ,\cycle_reg[55]_i_1_n_7 }),
        .S({\cycle[55]_i_2_n_0 ,\cycle[55]_i_3_n_0 ,\cycle[55]_i_4_n_0 ,\cycle[55]_i_5_n_0 }));
  FDCE \cycle_reg[56] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[59]_i_1_n_7 ),
        .Q(o_cycle[56]));
  FDCE \cycle_reg[57] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[59]_i_1_n_6 ),
        .Q(o_cycle[57]));
  FDCE \cycle_reg[58] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[59]_i_1_n_5 ),
        .Q(o_cycle[58]));
  FDCE \cycle_reg[59] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[59]_i_1_n_4 ),
        .Q(o_cycle[59]));
  CARRY4 \cycle_reg[59]_i_1 
       (.CI(\cycle_reg[55]_i_1_n_0 ),
        .CO({\cycle_reg[59]_i_1_n_0 ,\cycle_reg[59]_i_1_n_1 ,\cycle_reg[59]_i_1_n_2 ,\cycle_reg[59]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\cycle_reg[59]_i_1_n_4 ,\cycle_reg[59]_i_1_n_5 ,\cycle_reg[59]_i_1_n_6 ,\cycle_reg[59]_i_1_n_7 }),
        .S({\cycle[59]_i_2_n_0 ,\cycle[59]_i_3_n_0 ,\cycle[59]_i_4_n_0 ,\cycle[59]_i_5_n_0 }));
  FDCE \cycle_reg[5] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[7]_i_1_n_6 ),
        .Q(o_cycle[5]));
  FDCE \cycle_reg[60] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[63]_i_1_n_7 ),
        .Q(o_cycle[60]));
  FDCE \cycle_reg[61] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[63]_i_1_n_6 ),
        .Q(o_cycle[61]));
  FDCE \cycle_reg[62] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[63]_i_1_n_5 ),
        .Q(o_cycle[62]));
  FDCE \cycle_reg[63] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[63]_i_1_n_4 ),
        .Q(o_cycle[63]));
  CARRY4 \cycle_reg[63]_i_1 
       (.CI(\cycle_reg[59]_i_1_n_0 ),
        .CO({\NLW_cycle_reg[63]_i_1_CO_UNCONNECTED [3],\cycle_reg[63]_i_1_n_1 ,\cycle_reg[63]_i_1_n_2 ,\cycle_reg[63]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\cycle_reg[63]_i_1_n_4 ,\cycle_reg[63]_i_1_n_5 ,\cycle_reg[63]_i_1_n_6 ,\cycle_reg[63]_i_1_n_7 }),
        .S({\cycle[63]_i_3_n_0 ,\cycle[63]_i_4_n_0 ,\cycle[63]_i_5_n_0 ,\cycle[63]_i_6_n_0 }));
  FDCE \cycle_reg[6] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[7]_i_1_n_5 ),
        .Q(o_cycle[6]));
  FDCE \cycle_reg[7] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[7]_i_1_n_4 ),
        .Q(o_cycle[7]));
  CARRY4 \cycle_reg[7]_i_1 
       (.CI(\cycle_reg[3]_i_1_n_0 ),
        .CO({\cycle_reg[7]_i_1_n_0 ,\cycle_reg[7]_i_1_n_1 ,\cycle_reg[7]_i_1_n_2 ,\cycle_reg[7]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\cycle_reg[7]_i_1_n_4 ,\cycle_reg[7]_i_1_n_5 ,\cycle_reg[7]_i_1_n_6 ,\cycle_reg[7]_i_1_n_7 }),
        .S({\cycle[7]_i_2_n_0 ,\cycle[7]_i_3_n_0 ,\cycle[7]_i_4_n_0 ,\cycle[7]_i_5_n_0 }));
  FDCE \cycle_reg[8] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[11]_i_1_n_7 ),
        .Q(o_cycle[8]));
  FDCE \cycle_reg[9] 
       (.C(m00_axi_aclk),
        .CE(ila_smax_ctrlr_busy),
        .CLR(\cycle[63]_i_2_n_0 ),
        .D(\cycle_reg[11]_i_1_n_6 ),
        .Q(o_cycle[9]));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[11]_i_2 
       (.I0(o_epoch[11]),
        .O(\epoch[11]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[11]_i_3 
       (.I0(o_epoch[10]),
        .O(\epoch[11]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[11]_i_4 
       (.I0(o_epoch[9]),
        .O(\epoch[11]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[11]_i_5 
       (.I0(o_epoch[8]),
        .O(\epoch[11]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[15]_i_2 
       (.I0(o_epoch[15]),
        .O(\epoch[15]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[15]_i_3 
       (.I0(o_epoch[14]),
        .O(\epoch[15]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[15]_i_4 
       (.I0(o_epoch[13]),
        .O(\epoch[15]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[15]_i_5 
       (.I0(o_epoch[12]),
        .O(\epoch[15]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[19]_i_2 
       (.I0(o_epoch[19]),
        .O(\epoch[19]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[19]_i_3 
       (.I0(o_epoch[18]),
        .O(\epoch[19]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[19]_i_4 
       (.I0(o_epoch[17]),
        .O(\epoch[19]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[19]_i_5 
       (.I0(o_epoch[16]),
        .O(\epoch[19]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[23]_i_2 
       (.I0(o_epoch[23]),
        .O(\epoch[23]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[23]_i_3 
       (.I0(o_epoch[22]),
        .O(\epoch[23]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[23]_i_4 
       (.I0(o_epoch[21]),
        .O(\epoch[23]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[23]_i_5 
       (.I0(o_epoch[20]),
        .O(\epoch[23]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[27]_i_2 
       (.I0(o_epoch[27]),
        .O(\epoch[27]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[27]_i_3 
       (.I0(o_epoch[26]),
        .O(\epoch[27]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[27]_i_4 
       (.I0(o_epoch[25]),
        .O(\epoch[27]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[27]_i_5 
       (.I0(o_epoch[24]),
        .O(\epoch[27]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[31]_i_2 
       (.I0(o_epoch[31]),
        .O(\epoch[31]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[31]_i_3 
       (.I0(o_epoch[30]),
        .O(\epoch[31]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[31]_i_4 
       (.I0(o_epoch[29]),
        .O(\epoch[31]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[31]_i_5 
       (.I0(o_epoch[28]),
        .O(\epoch[31]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[35]_i_2 
       (.I0(o_epoch[35]),
        .O(\epoch[35]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[35]_i_3 
       (.I0(o_epoch[34]),
        .O(\epoch[35]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[35]_i_4 
       (.I0(o_epoch[33]),
        .O(\epoch[35]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[35]_i_5 
       (.I0(o_epoch[32]),
        .O(\epoch[35]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[39]_i_2 
       (.I0(o_epoch[39]),
        .O(\epoch[39]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[39]_i_3 
       (.I0(o_epoch[38]),
        .O(\epoch[39]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[39]_i_4 
       (.I0(o_epoch[37]),
        .O(\epoch[39]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[39]_i_5 
       (.I0(o_epoch[36]),
        .O(\epoch[39]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[3]_i_2 
       (.I0(o_epoch[3]),
        .O(\epoch[3]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[3]_i_3 
       (.I0(o_epoch[2]),
        .O(\epoch[3]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[3]_i_4 
       (.I0(o_epoch[1]),
        .O(\epoch[3]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \epoch[3]_i_5 
       (.I0(o_epoch[0]),
        .O(\epoch[3]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[43]_i_2 
       (.I0(o_epoch[43]),
        .O(\epoch[43]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[43]_i_3 
       (.I0(o_epoch[42]),
        .O(\epoch[43]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[43]_i_4 
       (.I0(o_epoch[41]),
        .O(\epoch[43]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[43]_i_5 
       (.I0(o_epoch[40]),
        .O(\epoch[43]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[47]_i_2 
       (.I0(o_epoch[47]),
        .O(\epoch[47]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[47]_i_3 
       (.I0(o_epoch[46]),
        .O(\epoch[47]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[47]_i_4 
       (.I0(o_epoch[45]),
        .O(\epoch[47]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[47]_i_5 
       (.I0(o_epoch[44]),
        .O(\epoch[47]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[51]_i_2 
       (.I0(o_epoch[51]),
        .O(\epoch[51]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[51]_i_3 
       (.I0(o_epoch[50]),
        .O(\epoch[51]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[51]_i_4 
       (.I0(o_epoch[49]),
        .O(\epoch[51]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[51]_i_5 
       (.I0(o_epoch[48]),
        .O(\epoch[51]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[55]_i_2 
       (.I0(o_epoch[55]),
        .O(\epoch[55]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[55]_i_3 
       (.I0(o_epoch[54]),
        .O(\epoch[55]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[55]_i_4 
       (.I0(o_epoch[53]),
        .O(\epoch[55]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[55]_i_5 
       (.I0(o_epoch[52]),
        .O(\epoch[55]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[59]_i_2 
       (.I0(o_epoch[59]),
        .O(\epoch[59]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[59]_i_3 
       (.I0(o_epoch[58]),
        .O(\epoch[59]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[59]_i_4 
       (.I0(o_epoch[57]),
        .O(\epoch[59]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[59]_i_5 
       (.I0(o_epoch[56]),
        .O(\epoch[59]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[63]_i_4 
       (.I0(o_epoch[63]),
        .O(\epoch[63]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[63]_i_5 
       (.I0(o_epoch[62]),
        .O(\epoch[63]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[63]_i_6 
       (.I0(o_epoch[61]),
        .O(\epoch[63]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[63]_i_7 
       (.I0(o_epoch[60]),
        .O(\epoch[63]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[7]_i_2 
       (.I0(o_epoch[7]),
        .O(\epoch[7]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[7]_i_3 
       (.I0(o_epoch[6]),
        .O(\epoch[7]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[7]_i_4 
       (.I0(o_epoch[5]),
        .O(\epoch[7]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \epoch[7]_i_5 
       (.I0(o_epoch[4]),
        .O(\epoch[7]_i_5_n_0 ));
  FDCE \epoch_reg[0] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[3]_i_1_n_7 ),
        .Q(o_epoch[0]));
  FDCE \epoch_reg[10] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[11]_i_1_n_5 ),
        .Q(o_epoch[10]));
  FDCE \epoch_reg[11] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[11]_i_1_n_4 ),
        .Q(o_epoch[11]));
  CARRY4 \epoch_reg[11]_i_1 
       (.CI(\epoch_reg[7]_i_1_n_0 ),
        .CO({\epoch_reg[11]_i_1_n_0 ,\epoch_reg[11]_i_1_n_1 ,\epoch_reg[11]_i_1_n_2 ,\epoch_reg[11]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\epoch_reg[11]_i_1_n_4 ,\epoch_reg[11]_i_1_n_5 ,\epoch_reg[11]_i_1_n_6 ,\epoch_reg[11]_i_1_n_7 }),
        .S({\epoch[11]_i_2_n_0 ,\epoch[11]_i_3_n_0 ,\epoch[11]_i_4_n_0 ,\epoch[11]_i_5_n_0 }));
  FDCE \epoch_reg[12] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[15]_i_1_n_7 ),
        .Q(o_epoch[12]));
  FDCE \epoch_reg[13] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[15]_i_1_n_6 ),
        .Q(o_epoch[13]));
  FDCE \epoch_reg[14] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[15]_i_1_n_5 ),
        .Q(o_epoch[14]));
  FDCE \epoch_reg[15] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[15]_i_1_n_4 ),
        .Q(o_epoch[15]));
  CARRY4 \epoch_reg[15]_i_1 
       (.CI(\epoch_reg[11]_i_1_n_0 ),
        .CO({\epoch_reg[15]_i_1_n_0 ,\epoch_reg[15]_i_1_n_1 ,\epoch_reg[15]_i_1_n_2 ,\epoch_reg[15]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\epoch_reg[15]_i_1_n_4 ,\epoch_reg[15]_i_1_n_5 ,\epoch_reg[15]_i_1_n_6 ,\epoch_reg[15]_i_1_n_7 }),
        .S({\epoch[15]_i_2_n_0 ,\epoch[15]_i_3_n_0 ,\epoch[15]_i_4_n_0 ,\epoch[15]_i_5_n_0 }));
  FDCE \epoch_reg[16] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[19]_i_1_n_7 ),
        .Q(o_epoch[16]));
  FDCE \epoch_reg[17] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[19]_i_1_n_6 ),
        .Q(o_epoch[17]));
  FDCE \epoch_reg[18] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[19]_i_1_n_5 ),
        .Q(o_epoch[18]));
  FDCE \epoch_reg[19] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[19]_i_1_n_4 ),
        .Q(o_epoch[19]));
  CARRY4 \epoch_reg[19]_i_1 
       (.CI(\epoch_reg[15]_i_1_n_0 ),
        .CO({\epoch_reg[19]_i_1_n_0 ,\epoch_reg[19]_i_1_n_1 ,\epoch_reg[19]_i_1_n_2 ,\epoch_reg[19]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\epoch_reg[19]_i_1_n_4 ,\epoch_reg[19]_i_1_n_5 ,\epoch_reg[19]_i_1_n_6 ,\epoch_reg[19]_i_1_n_7 }),
        .S({\epoch[19]_i_2_n_0 ,\epoch[19]_i_3_n_0 ,\epoch[19]_i_4_n_0 ,\epoch[19]_i_5_n_0 }));
  FDCE \epoch_reg[1] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[3]_i_1_n_6 ),
        .Q(o_epoch[1]));
  FDCE \epoch_reg[20] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[23]_i_1_n_7 ),
        .Q(o_epoch[20]));
  FDCE \epoch_reg[21] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[23]_i_1_n_6 ),
        .Q(o_epoch[21]));
  FDCE \epoch_reg[22] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[23]_i_1_n_5 ),
        .Q(o_epoch[22]));
  FDCE \epoch_reg[23] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[23]_i_1_n_4 ),
        .Q(o_epoch[23]));
  CARRY4 \epoch_reg[23]_i_1 
       (.CI(\epoch_reg[19]_i_1_n_0 ),
        .CO({\epoch_reg[23]_i_1_n_0 ,\epoch_reg[23]_i_1_n_1 ,\epoch_reg[23]_i_1_n_2 ,\epoch_reg[23]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\epoch_reg[23]_i_1_n_4 ,\epoch_reg[23]_i_1_n_5 ,\epoch_reg[23]_i_1_n_6 ,\epoch_reg[23]_i_1_n_7 }),
        .S({\epoch[23]_i_2_n_0 ,\epoch[23]_i_3_n_0 ,\epoch[23]_i_4_n_0 ,\epoch[23]_i_5_n_0 }));
  FDCE \epoch_reg[24] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[27]_i_1_n_7 ),
        .Q(o_epoch[24]));
  FDCE \epoch_reg[25] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[27]_i_1_n_6 ),
        .Q(o_epoch[25]));
  FDCE \epoch_reg[26] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[27]_i_1_n_5 ),
        .Q(o_epoch[26]));
  FDCE \epoch_reg[27] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[27]_i_1_n_4 ),
        .Q(o_epoch[27]));
  CARRY4 \epoch_reg[27]_i_1 
       (.CI(\epoch_reg[23]_i_1_n_0 ),
        .CO({\epoch_reg[27]_i_1_n_0 ,\epoch_reg[27]_i_1_n_1 ,\epoch_reg[27]_i_1_n_2 ,\epoch_reg[27]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\epoch_reg[27]_i_1_n_4 ,\epoch_reg[27]_i_1_n_5 ,\epoch_reg[27]_i_1_n_6 ,\epoch_reg[27]_i_1_n_7 }),
        .S({\epoch[27]_i_2_n_0 ,\epoch[27]_i_3_n_0 ,\epoch[27]_i_4_n_0 ,\epoch[27]_i_5_n_0 }));
  FDCE \epoch_reg[28] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[31]_i_1_n_7 ),
        .Q(o_epoch[28]));
  FDCE \epoch_reg[29] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[31]_i_1_n_6 ),
        .Q(o_epoch[29]));
  FDCE \epoch_reg[2] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[3]_i_1_n_5 ),
        .Q(o_epoch[2]));
  FDCE \epoch_reg[30] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[31]_i_1_n_5 ),
        .Q(o_epoch[30]));
  FDCE \epoch_reg[31] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[31]_i_1_n_4 ),
        .Q(o_epoch[31]));
  CARRY4 \epoch_reg[31]_i_1 
       (.CI(\epoch_reg[27]_i_1_n_0 ),
        .CO({\epoch_reg[31]_i_1_n_0 ,\epoch_reg[31]_i_1_n_1 ,\epoch_reg[31]_i_1_n_2 ,\epoch_reg[31]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\epoch_reg[31]_i_1_n_4 ,\epoch_reg[31]_i_1_n_5 ,\epoch_reg[31]_i_1_n_6 ,\epoch_reg[31]_i_1_n_7 }),
        .S({\epoch[31]_i_2_n_0 ,\epoch[31]_i_3_n_0 ,\epoch[31]_i_4_n_0 ,\epoch[31]_i_5_n_0 }));
  FDCE \epoch_reg[32] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[35]_i_1_n_7 ),
        .Q(o_epoch[32]));
  FDCE \epoch_reg[33] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[35]_i_1_n_6 ),
        .Q(o_epoch[33]));
  FDCE \epoch_reg[34] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[35]_i_1_n_5 ),
        .Q(o_epoch[34]));
  FDCE \epoch_reg[35] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[35]_i_1_n_4 ),
        .Q(o_epoch[35]));
  CARRY4 \epoch_reg[35]_i_1 
       (.CI(\epoch_reg[31]_i_1_n_0 ),
        .CO({\epoch_reg[35]_i_1_n_0 ,\epoch_reg[35]_i_1_n_1 ,\epoch_reg[35]_i_1_n_2 ,\epoch_reg[35]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\epoch_reg[35]_i_1_n_4 ,\epoch_reg[35]_i_1_n_5 ,\epoch_reg[35]_i_1_n_6 ,\epoch_reg[35]_i_1_n_7 }),
        .S({\epoch[35]_i_2_n_0 ,\epoch[35]_i_3_n_0 ,\epoch[35]_i_4_n_0 ,\epoch[35]_i_5_n_0 }));
  FDCE \epoch_reg[36] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[39]_i_1_n_7 ),
        .Q(o_epoch[36]));
  FDCE \epoch_reg[37] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[39]_i_1_n_6 ),
        .Q(o_epoch[37]));
  FDCE \epoch_reg[38] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[39]_i_1_n_5 ),
        .Q(o_epoch[38]));
  FDCE \epoch_reg[39] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[39]_i_1_n_4 ),
        .Q(o_epoch[39]));
  CARRY4 \epoch_reg[39]_i_1 
       (.CI(\epoch_reg[35]_i_1_n_0 ),
        .CO({\epoch_reg[39]_i_1_n_0 ,\epoch_reg[39]_i_1_n_1 ,\epoch_reg[39]_i_1_n_2 ,\epoch_reg[39]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\epoch_reg[39]_i_1_n_4 ,\epoch_reg[39]_i_1_n_5 ,\epoch_reg[39]_i_1_n_6 ,\epoch_reg[39]_i_1_n_7 }),
        .S({\epoch[39]_i_2_n_0 ,\epoch[39]_i_3_n_0 ,\epoch[39]_i_4_n_0 ,\epoch[39]_i_5_n_0 }));
  FDCE \epoch_reg[3] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[3]_i_1_n_4 ),
        .Q(o_epoch[3]));
  CARRY4 \epoch_reg[3]_i_1 
       (.CI(1'b0),
        .CO({\epoch_reg[3]_i_1_n_0 ,\epoch_reg[3]_i_1_n_1 ,\epoch_reg[3]_i_1_n_2 ,\epoch_reg[3]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\epoch_reg[3]_i_1_n_4 ,\epoch_reg[3]_i_1_n_5 ,\epoch_reg[3]_i_1_n_6 ,\epoch_reg[3]_i_1_n_7 }),
        .S({\epoch[3]_i_2_n_0 ,\epoch[3]_i_3_n_0 ,\epoch[3]_i_4_n_0 ,\epoch[3]_i_5_n_0 }));
  FDCE \epoch_reg[40] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[43]_i_1_n_7 ),
        .Q(o_epoch[40]));
  FDCE \epoch_reg[41] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[43]_i_1_n_6 ),
        .Q(o_epoch[41]));
  FDCE \epoch_reg[42] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[43]_i_1_n_5 ),
        .Q(o_epoch[42]));
  FDCE \epoch_reg[43] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[43]_i_1_n_4 ),
        .Q(o_epoch[43]));
  CARRY4 \epoch_reg[43]_i_1 
       (.CI(\epoch_reg[39]_i_1_n_0 ),
        .CO({\epoch_reg[43]_i_1_n_0 ,\epoch_reg[43]_i_1_n_1 ,\epoch_reg[43]_i_1_n_2 ,\epoch_reg[43]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\epoch_reg[43]_i_1_n_4 ,\epoch_reg[43]_i_1_n_5 ,\epoch_reg[43]_i_1_n_6 ,\epoch_reg[43]_i_1_n_7 }),
        .S({\epoch[43]_i_2_n_0 ,\epoch[43]_i_3_n_0 ,\epoch[43]_i_4_n_0 ,\epoch[43]_i_5_n_0 }));
  FDCE \epoch_reg[44] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[47]_i_1_n_7 ),
        .Q(o_epoch[44]));
  FDCE \epoch_reg[45] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[47]_i_1_n_6 ),
        .Q(o_epoch[45]));
  FDCE \epoch_reg[46] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[47]_i_1_n_5 ),
        .Q(o_epoch[46]));
  FDCE \epoch_reg[47] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[47]_i_1_n_4 ),
        .Q(o_epoch[47]));
  CARRY4 \epoch_reg[47]_i_1 
       (.CI(\epoch_reg[43]_i_1_n_0 ),
        .CO({\epoch_reg[47]_i_1_n_0 ,\epoch_reg[47]_i_1_n_1 ,\epoch_reg[47]_i_1_n_2 ,\epoch_reg[47]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\epoch_reg[47]_i_1_n_4 ,\epoch_reg[47]_i_1_n_5 ,\epoch_reg[47]_i_1_n_6 ,\epoch_reg[47]_i_1_n_7 }),
        .S({\epoch[47]_i_2_n_0 ,\epoch[47]_i_3_n_0 ,\epoch[47]_i_4_n_0 ,\epoch[47]_i_5_n_0 }));
  FDCE \epoch_reg[48] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[51]_i_1_n_7 ),
        .Q(o_epoch[48]));
  FDCE \epoch_reg[49] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[51]_i_1_n_6 ),
        .Q(o_epoch[49]));
  FDCE \epoch_reg[4] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[7]_i_1_n_7 ),
        .Q(o_epoch[4]));
  FDCE \epoch_reg[50] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[51]_i_1_n_5 ),
        .Q(o_epoch[50]));
  FDCE \epoch_reg[51] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[51]_i_1_n_4 ),
        .Q(o_epoch[51]));
  CARRY4 \epoch_reg[51]_i_1 
       (.CI(\epoch_reg[47]_i_1_n_0 ),
        .CO({\epoch_reg[51]_i_1_n_0 ,\epoch_reg[51]_i_1_n_1 ,\epoch_reg[51]_i_1_n_2 ,\epoch_reg[51]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\epoch_reg[51]_i_1_n_4 ,\epoch_reg[51]_i_1_n_5 ,\epoch_reg[51]_i_1_n_6 ,\epoch_reg[51]_i_1_n_7 }),
        .S({\epoch[51]_i_2_n_0 ,\epoch[51]_i_3_n_0 ,\epoch[51]_i_4_n_0 ,\epoch[51]_i_5_n_0 }));
  FDCE \epoch_reg[52] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[55]_i_1_n_7 ),
        .Q(o_epoch[52]));
  FDCE \epoch_reg[53] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[55]_i_1_n_6 ),
        .Q(o_epoch[53]));
  FDCE \epoch_reg[54] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[55]_i_1_n_5 ),
        .Q(o_epoch[54]));
  FDCE \epoch_reg[55] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[55]_i_1_n_4 ),
        .Q(o_epoch[55]));
  CARRY4 \epoch_reg[55]_i_1 
       (.CI(\epoch_reg[51]_i_1_n_0 ),
        .CO({\epoch_reg[55]_i_1_n_0 ,\epoch_reg[55]_i_1_n_1 ,\epoch_reg[55]_i_1_n_2 ,\epoch_reg[55]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\epoch_reg[55]_i_1_n_4 ,\epoch_reg[55]_i_1_n_5 ,\epoch_reg[55]_i_1_n_6 ,\epoch_reg[55]_i_1_n_7 }),
        .S({\epoch[55]_i_2_n_0 ,\epoch[55]_i_3_n_0 ,\epoch[55]_i_4_n_0 ,\epoch[55]_i_5_n_0 }));
  FDCE \epoch_reg[56] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[59]_i_1_n_7 ),
        .Q(o_epoch[56]));
  FDCE \epoch_reg[57] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[59]_i_1_n_6 ),
        .Q(o_epoch[57]));
  FDCE \epoch_reg[58] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[59]_i_1_n_5 ),
        .Q(o_epoch[58]));
  FDCE \epoch_reg[59] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[59]_i_1_n_4 ),
        .Q(o_epoch[59]));
  CARRY4 \epoch_reg[59]_i_1 
       (.CI(\epoch_reg[55]_i_1_n_0 ),
        .CO({\epoch_reg[59]_i_1_n_0 ,\epoch_reg[59]_i_1_n_1 ,\epoch_reg[59]_i_1_n_2 ,\epoch_reg[59]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\epoch_reg[59]_i_1_n_4 ,\epoch_reg[59]_i_1_n_5 ,\epoch_reg[59]_i_1_n_6 ,\epoch_reg[59]_i_1_n_7 }),
        .S({\epoch[59]_i_2_n_0 ,\epoch[59]_i_3_n_0 ,\epoch[59]_i_4_n_0 ,\epoch[59]_i_5_n_0 }));
  FDCE \epoch_reg[5] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[7]_i_1_n_6 ),
        .Q(o_epoch[5]));
  FDCE \epoch_reg[60] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[63]_i_2_n_7 ),
        .Q(o_epoch[60]));
  FDCE \epoch_reg[61] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[63]_i_2_n_6 ),
        .Q(o_epoch[61]));
  FDCE \epoch_reg[62] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[63]_i_2_n_5 ),
        .Q(o_epoch[62]));
  FDCE \epoch_reg[63] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[63]_i_2_n_4 ),
        .Q(o_epoch[63]));
  CARRY4 \epoch_reg[63]_i_2 
       (.CI(\epoch_reg[59]_i_1_n_0 ),
        .CO({\NLW_epoch_reg[63]_i_2_CO_UNCONNECTED [3],\epoch_reg[63]_i_2_n_1 ,\epoch_reg[63]_i_2_n_2 ,\epoch_reg[63]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\epoch_reg[63]_i_2_n_4 ,\epoch_reg[63]_i_2_n_5 ,\epoch_reg[63]_i_2_n_6 ,\epoch_reg[63]_i_2_n_7 }),
        .S({\epoch[63]_i_4_n_0 ,\epoch[63]_i_5_n_0 ,\epoch[63]_i_6_n_0 ,\epoch[63]_i_7_n_0 }));
  FDCE \epoch_reg[6] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[7]_i_1_n_5 ),
        .Q(o_epoch[6]));
  FDCE \epoch_reg[7] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[7]_i_1_n_4 ),
        .Q(o_epoch[7]));
  CARRY4 \epoch_reg[7]_i_1 
       (.CI(\epoch_reg[3]_i_1_n_0 ),
        .CO({\epoch_reg[7]_i_1_n_0 ,\epoch_reg[7]_i_1_n_1 ,\epoch_reg[7]_i_1_n_2 ,\epoch_reg[7]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\epoch_reg[7]_i_1_n_4 ,\epoch_reg[7]_i_1_n_5 ,\epoch_reg[7]_i_1_n_6 ,\epoch_reg[7]_i_1_n_7 }),
        .S({\epoch[7]_i_2_n_0 ,\epoch[7]_i_3_n_0 ,\epoch[7]_i_4_n_0 ,\epoch[7]_i_5_n_0 }));
  FDCE \epoch_reg[8] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[11]_i_1_n_7 ),
        .Q(o_epoch[8]));
  FDCE \epoch_reg[9] 
       (.C(m00_axi_aclk),
        .CE(softmax_logic_n_379),
        .CLR(softmax_logic_n_554),
        .D(\epoch_reg[11]_i_1_n_6 ),
        .Q(o_epoch[9]));
  final_accelerator_Softmax_Layer_32bit_0_0_softmax_unit softmax_logic
       (.CO(softmax_logic_n_373),
        .DI({Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_196,Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_197,Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_198,Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_199}),
        .\FSM_sequential_current_state_reg[1] (Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_334),
        .Q(ila_smax_exp_step_counter),
        .\addend_reg[0] (softmax_logic_n_555),
        .almost_full(ila_smax_exp_fifo_almost_full),
        .\current_state_reg[0] (Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_195),
        .\cycle_reg[62] (cycle1_carry__6_n_1),
        .\data_reg_reg[28] (softmax_logic_n_556),
        .dout(ila_smax_exp_fifo_dout),
        .\element_counter_reg[15] (softmax_logic_n_554),
        .empty(ila_smax_inbuff_empty),
        .\epoch_reg[63] (softmax_logic_n_379),
        .full(ila_smax_inbuff_full),
        .ila_smax_aw_addend(ila_smax_aw_addend),
        .ila_smax_aw_augend(ila_smax_aw_augend),
        .\ila_smax_aw_fsm_state[1] (\ila_smax_aw_fsm_state[1] ),
        .\ila_smax_aw_hold_counter[3] (\ila_smax_aw_hold_counter[3] ),
        .ila_smax_aw_rd_en(ila_smax_aw_rd_en),
        .ila_smax_aw_sum(ila_smax_aw_sum),
        .\ila_smax_aw_sum_counter[15] (\ila_smax_aw_sum_counter[15] ),
        .ila_smax_aw_sum_reg(ila_smax_aw_sum_reg),
        .ila_smax_aw_summing_complete(ila_smax_aw_summing_complete),
        .ila_smax_ctrlr_busy(ila_smax_ctrlr_busy),
        .ila_smax_ctrlr_clear_all(ila_smax_ctrlr_clear_all),
        .ila_smax_ctrlr_controller_ready(ila_smax_ctrlr_controller_ready),
        .\ila_smax_ctrlr_element_counter[15] (\ila_smax_ctrlr_element_counter[15] ),
        .ila_smax_ctrlr_exp_fifo_select(ila_smax_ctrlr_exp_fifo_select),
        .ila_smax_ctrlr_exp_input(ila_smax_ctrlr_exp_input),
        .ila_smax_ctrlr_exp_input_valid(ila_smax_ctrlr_exp_input_valid),
        .ila_smax_ctrlr_fsm_state(ila_smax_ctrlr_fsm_state),
        .ila_smax_data_loaded(ila_smax_data_loaded),
        .ila_smax_dw_dividend(ila_smax_dw_dividend),
        .ila_smax_dw_division_complete(ila_smax_dw_division_complete),
        .ila_smax_dw_division_reg(ila_smax_dw_division_reg),
        .ila_smax_dw_divisor(ila_smax_dw_divisor),
        .\ila_smax_dw_fsm_state[1] (Q),
        .\ila_smax_dw_hold_counter[4] (\ila_smax_dw_hold_counter[4] ),
        .ila_smax_dw_quotient(ila_smax_dw_quotient),
        .\ila_smax_dw_quotient_counter[15] (\ila_smax_dw_quotient_counter[15] ),
        .ila_smax_dw_quotient_result_valid(ila_smax_dw_quotient_result_valid),
        .ila_smax_dw_rd_en(ila_smax_dw_rd_en),
        .ila_smax_exp_addend(ila_smax_exp_addend),
        .ila_smax_exp_augend(ila_smax_exp_augend),
        .\ila_smax_exp_data_reg[31] (ila_smax_exp_data_reg),
        .ila_smax_exp_exp_done(ila_smax_exp_exp_done),
        .ila_smax_exp_fifo_almost_empty(ila_smax_exp_fifo_almost_empty),
        .ila_smax_exp_fifo_data(ila_smax_exp_fifo_data),
        .ila_smax_exp_fifo_empty(ila_smax_exp_fifo_empty),
        .ila_smax_exp_fifo_full(ila_smax_exp_fifo_full),
        .ila_smax_exp_fifo_rd_en(ila_smax_exp_fifo_rd_en),
        .ila_smax_exp_fifo_valid(ila_smax_exp_fifo_valid),
        .ila_smax_exp_fifo_wr_en(ila_smax_exp_fifo_wr_en),
        .\ila_smax_exp_fsm_state[2] (ila_smax_exp_fsm_state),
        .ila_smax_exp_function_ready(ila_smax_exp_function_ready),
        .\ila_smax_exp_hold_counter[3] (ila_smax_exp_hold_counter),
        .ila_smax_exp_mult_reg(ila_smax_exp_mult_reg),
        .ila_smax_exp_multiplicand_a(ila_smax_exp_multiplicand_a),
        .ila_smax_exp_multiplicand_b(ila_smax_exp_multiplicand_b),
        .ila_smax_exp_mux_data(ila_smax_exp_mux_data),
        .ila_smax_exp_mux_wr_en(ila_smax_exp_mux_wr_en),
        .ila_smax_exp_product(ila_smax_exp_product),
        .ila_smax_exp_sum(ila_smax_exp_sum),
        .\ila_smax_exp_sum_counter[4] (ila_smax_exp_sum_counter),
        .ila_smax_exp_valid_result(ila_smax_exp_valid_result),
        .ila_smax_inbuff_almost_empty(ila_smax_inbuff_almost_empty),
        .ila_smax_inbuff_almost_full(ila_smax_inbuff_almost_full),
        .ila_smax_inbuff_din(ila_smax_inbuff_din),
        .ila_smax_inbuff_dout(ila_smax_inbuff_dout),
        .ila_smax_inbuff_rd_en(ila_smax_inbuff_rd_en),
        .ila_smax_inbuff_valid(ila_smax_inbuff_valid),
        .ila_smax_inbuff_wr_en(ila_smax_inbuff_wr_en),
        .ila_smax_outbuff_almost_empty(ila_smax_outbuff_almost_empty),
        .ila_smax_outbuff_almost_full(ila_smax_outbuff_almost_full),
        .ila_smax_outbuff_din(ila_smax_outbuff_din),
        .ila_smax_outbuff_dout(ila_smax_outbuff_dout),
        .ila_smax_outbuff_empty(ila_smax_outbuff_empty),
        .ila_smax_outbuff_full(ila_smax_outbuff_full),
        .ila_smax_outbuff_rd_en(ila_smax_outbuff_rd_en),
        .ila_smax_outbuff_valid(ila_smax_outbuff_valid),
        .ila_smax_outbuff_wr_en(ila_smax_outbuff_wr_en),
        .\input_data_addr_reg_reg[0] (softmax_logic_n_499),
        .m00_axi_aclk(m00_axi_aclk),
        .m00_axi_aresetn(m00_axi_aresetn),
        .m00_axi_aresetn_0(Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_55),
        .m00_axi_aresetn_1(Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_170),
        .m00_axi_rvalid(m00_axi_rvalid),
        .m00_axi_wready(m00_axi_wready),
        .next_state1(\controller/next_state1 ),
        .\num_elements_reg[15] ({Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_200,Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_201,Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_202,Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_203}),
        .\num_elements_reg[15]_0 ({Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_208,Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_209,Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_210,Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_211}),
        .\num_elements_reg[15]_1 ({Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_216,Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_217,Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_218,Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_219}),
        .\num_elements_reg[15]_2 (\ila_smax_num_elements[15] ),
        .\num_elements_reg[7] ({Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_204,Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_205,Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_206,Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_207}),
        .\num_elements_reg[7]_0 ({Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_212,Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_213,Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_214,Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_215}),
        .out({Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_0,Softmax_Layer_32bit_v1_0_M00_AXI_inst_n_1}),
        .outbuff_rd_en(outbuff_rd_en),
        .start(start),
        .start_reg(softmax_logic_n_663),
        .\start_reg_reg[1] (start_reg),
        .\step_counter_reg[3] (softmax_logic_n_37),
        .\sum_counter_reg[0]_rep (softmax_logic_n_372));
endmodule

(* ORIG_REF_NAME = "Softmax_Layer_32bit_v1_0_M00_AXI" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_Softmax_Layer_32bit_v1_0_M00_AXI
   (out,
    ila_smax_inbuff_wr_en,
    Q,
    \ila_smax_num_elements[15] ,
    ila_smax_more_bursts_needed,
    ila_smax_calculated,
    start,
    m00_axi_awvalid,
    \output_data_addr_reg_reg[8]_0 ,
    m00_axi_arvalid,
    ila_smax_class_counter,
    ila_smax_channel_counter,
    m00_axi_rready,
    \ila_smax_output_data_addr_reg[31] ,
    ila_smax_writes_remaining,
    ila_smax_reads_remaining,
    \class_counter_reg[5]_0 ,
    ila_smax_axi_awlen,
    \ila_smax_wbc[7] ,
    \ila_smax_rbc[7] ,
    \gaf.ram_almost_full_i_reg ,
    DI,
    \element_counter_reg[15] ,
    summing_complete_reg,
    summing_complete_reg_0,
    \divisor_reg[31] ,
    \divisor_reg[31]_0 ,
    next_state1,
    start_reg_0,
    ila_smax_inbuff_din,
    m00_axi_awaddr,
    m00_axi_araddr,
    m00_axi_arlen,
    ila_smax_axi_bready,
    ila_smax_master_fsm_state,
    ila_smax_axi_wlast,
    ila_smax_outbuff_rd_en,
    ila_smax_data_loaded,
    \current_state_reg[0] ,
    ila_smax_axi_wdata,
    m00_axi_aclk,
    m00_axi_aresetn_0,
    m00_axi_aresetn_1,
    \FSM_sequential_current_state_reg[2]_0 ,
    slv_reg_wren,
    m00_axi_aresetn,
    CO,
    \current_state_reg[0]_0 ,
    \element_counter_reg[15]_0 ,
    \sum_counter_reg[15] ,
    \quotient_counter_reg[15] ,
    \FSM_sequential_current_state_reg[2]_1 ,
    empty,
    m00_axi_awready,
    m00_axi_arready,
    o_control_reg,
    m00_axi_aresetn_2,
    m00_axi_aresetn_3,
    \FSM_sequential_current_state_reg[1]_0 ,
    m00_axi_rvalid,
    full,
    m00_axi_rlast,
    ram_full_i_reg,
    m00_axi_bvalid,
    outbuff_rd_en,
    m00_axi_wready,
    ila_smax_outbuff_valid,
    empty_fwft_i_reg,
    o_output_data_addr_reg,
    ila_smax_outbuff_dout,
    m00_axi_rdata,
    o_input_data_addr_reg);
  output [1:0]out;
  output ila_smax_inbuff_wr_en;
  output [31:0]Q;
  output [15:0]\ila_smax_num_elements[15] ;
  output ila_smax_more_bursts_needed;
  output ila_smax_calculated;
  output start;
  output m00_axi_awvalid;
  output \output_data_addr_reg_reg[8]_0 ;
  output m00_axi_arvalid;
  output [31:0]ila_smax_class_counter;
  output [15:0]ila_smax_channel_counter;
  output m00_axi_rready;
  output [31:0]\ila_smax_output_data_addr_reg[31] ;
  output [15:0]ila_smax_writes_remaining;
  output [15:0]ila_smax_reads_remaining;
  output \class_counter_reg[5]_0 ;
  output [7:0]ila_smax_axi_awlen;
  output [7:0]\ila_smax_wbc[7] ;
  output [7:0]\ila_smax_rbc[7] ;
  output \gaf.ram_almost_full_i_reg ;
  output [3:0]DI;
  output [3:0]\element_counter_reg[15] ;
  output [3:0]summing_complete_reg;
  output [3:0]summing_complete_reg_0;
  output [3:0]\divisor_reg[31] ;
  output [3:0]\divisor_reg[31]_0 ;
  output next_state1;
  output [1:0]start_reg_0;
  output [31:0]ila_smax_inbuff_din;
  output [31:0]m00_axi_awaddr;
  output [31:0]m00_axi_araddr;
  output [7:0]m00_axi_arlen;
  output ila_smax_axi_bready;
  output [2:0]ila_smax_master_fsm_state;
  output ila_smax_axi_wlast;
  output ila_smax_outbuff_rd_en;
  output ila_smax_data_loaded;
  output \current_state_reg[0] ;
  output [31:0]ila_smax_axi_wdata;
  input m00_axi_aclk;
  input m00_axi_aresetn_0;
  input m00_axi_aresetn_1;
  input \FSM_sequential_current_state_reg[2]_0 ;
  input [2:0]slv_reg_wren;
  input m00_axi_aresetn;
  input [0:0]CO;
  input [0:0]\current_state_reg[0]_0 ;
  input [15:0]\element_counter_reg[15]_0 ;
  input [15:0]\sum_counter_reg[15] ;
  input [15:0]\quotient_counter_reg[15] ;
  input \FSM_sequential_current_state_reg[2]_1 ;
  input empty;
  input m00_axi_awready;
  input m00_axi_arready;
  input [16:0]o_control_reg;
  input m00_axi_aresetn_2;
  input m00_axi_aresetn_3;
  input \FSM_sequential_current_state_reg[1]_0 ;
  input m00_axi_rvalid;
  input full;
  input m00_axi_rlast;
  input ram_full_i_reg;
  input m00_axi_bvalid;
  input outbuff_rd_en;
  input m00_axi_wready;
  input ila_smax_outbuff_valid;
  input empty_fwft_i_reg;
  input [31:0]o_output_data_addr_reg;
  input [31:0]ila_smax_outbuff_dout;
  input [31:0]m00_axi_rdata;
  input [31:0]o_input_data_addr_reg;

  wire [0:0]CO;
  wire [3:0]DI;
  wire \FSM_sequential_current_state[0]_i_1_n_0 ;
  wire \FSM_sequential_current_state[0]_i_2_n_0 ;
  wire \FSM_sequential_current_state[0]_i_3_n_0 ;
  wire \FSM_sequential_current_state[0]_i_4_n_0 ;
  wire \FSM_sequential_current_state[1]_i_1_n_0 ;
  wire \FSM_sequential_current_state[2]_i_1_n_0 ;
  wire \FSM_sequential_current_state[2]_i_2__0_n_0 ;
  wire \FSM_sequential_current_state[2]_i_3_n_0 ;
  wire \FSM_sequential_current_state[2]_i_4_n_0 ;
  wire \FSM_sequential_current_state[2]_i_5_n_0 ;
  wire \FSM_sequential_current_state[3]_i_1_n_0 ;
  wire \FSM_sequential_current_state[3]_i_2_n_0 ;
  wire \FSM_sequential_current_state_reg[1]_0 ;
  wire \FSM_sequential_current_state_reg[2]_0 ;
  wire \FSM_sequential_current_state_reg[2]_1 ;
  wire [31:0]Q;
  wire [31:0]axi_araddr;
  wire \axi_araddr[31]_i_1_n_0 ;
  wire [7:0]axi_arlen;
  wire axi_arlen15_out;
  wire \axi_arlen[7]_i_1_n_0 ;
  wire \axi_arlen[7]_i_3_n_0 ;
  wire \axi_arlen[7]_i_4_n_0 ;
  wire axi_arvalid_i_1_n_0;
  wire [31:0]axi_awaddr;
  wire \axi_awaddr[31]_i_1_n_0 ;
  wire [7:0]axi_awlen;
  wire axi_awlen14_out;
  wire \axi_awlen[7]_i_1_n_0 ;
  wire \axi_awlen[7]_i_3_n_0 ;
  wire \axi_awlen[7]_i_4_n_0 ;
  wire axi_awvalid_i_1_n_0;
  wire calculated_i_1_n_0;
  wire [15:1]channel_counter;
  wire \channel_counter[0]_i_1_n_0 ;
  wire \channel_counter[12]_i_3_n_0 ;
  wire \channel_counter[12]_i_4_n_0 ;
  wire \channel_counter[12]_i_5_n_0 ;
  wire \channel_counter[12]_i_6_n_0 ;
  wire \channel_counter[15]_i_1_n_0 ;
  wire \channel_counter[15]_i_4_n_0 ;
  wire \channel_counter[15]_i_5_n_0 ;
  wire \channel_counter[15]_i_6_n_0 ;
  wire \channel_counter[4]_i_3_n_0 ;
  wire \channel_counter[4]_i_4_n_0 ;
  wire \channel_counter[4]_i_5_n_0 ;
  wire \channel_counter[4]_i_6_n_0 ;
  wire \channel_counter[8]_i_3_n_0 ;
  wire \channel_counter[8]_i_4_n_0 ;
  wire \channel_counter[8]_i_5_n_0 ;
  wire \channel_counter[8]_i_6_n_0 ;
  wire \channel_counter_reg[12]_i_2_n_0 ;
  wire \channel_counter_reg[12]_i_2_n_1 ;
  wire \channel_counter_reg[12]_i_2_n_2 ;
  wire \channel_counter_reg[12]_i_2_n_3 ;
  wire \channel_counter_reg[12]_i_2_n_4 ;
  wire \channel_counter_reg[12]_i_2_n_5 ;
  wire \channel_counter_reg[12]_i_2_n_6 ;
  wire \channel_counter_reg[12]_i_2_n_7 ;
  wire \channel_counter_reg[15]_i_3_n_2 ;
  wire \channel_counter_reg[15]_i_3_n_3 ;
  wire \channel_counter_reg[15]_i_3_n_5 ;
  wire \channel_counter_reg[15]_i_3_n_6 ;
  wire \channel_counter_reg[15]_i_3_n_7 ;
  wire \channel_counter_reg[4]_i_2_n_0 ;
  wire \channel_counter_reg[4]_i_2_n_1 ;
  wire \channel_counter_reg[4]_i_2_n_2 ;
  wire \channel_counter_reg[4]_i_2_n_3 ;
  wire \channel_counter_reg[4]_i_2_n_4 ;
  wire \channel_counter_reg[4]_i_2_n_5 ;
  wire \channel_counter_reg[4]_i_2_n_6 ;
  wire \channel_counter_reg[4]_i_2_n_7 ;
  wire \channel_counter_reg[8]_i_2_n_0 ;
  wire \channel_counter_reg[8]_i_2_n_1 ;
  wire \channel_counter_reg[8]_i_2_n_2 ;
  wire \channel_counter_reg[8]_i_2_n_3 ;
  wire \channel_counter_reg[8]_i_2_n_4 ;
  wire \channel_counter_reg[8]_i_2_n_5 ;
  wire \channel_counter_reg[8]_i_2_n_6 ;
  wire \channel_counter_reg[8]_i_2_n_7 ;
  wire [31:1]class_counter;
  wire \class_counter[0]_i_1_n_0 ;
  wire \class_counter[12]_i_3_n_0 ;
  wire \class_counter[12]_i_4_n_0 ;
  wire \class_counter[12]_i_5_n_0 ;
  wire \class_counter[12]_i_6_n_0 ;
  wire \class_counter[16]_i_3_n_0 ;
  wire \class_counter[16]_i_4_n_0 ;
  wire \class_counter[16]_i_5_n_0 ;
  wire \class_counter[16]_i_6_n_0 ;
  wire \class_counter[20]_i_3_n_0 ;
  wire \class_counter[20]_i_4_n_0 ;
  wire \class_counter[20]_i_5_n_0 ;
  wire \class_counter[20]_i_6_n_0 ;
  wire \class_counter[24]_i_3_n_0 ;
  wire \class_counter[24]_i_4_n_0 ;
  wire \class_counter[24]_i_5_n_0 ;
  wire \class_counter[24]_i_6_n_0 ;
  wire \class_counter[28]_i_3_n_0 ;
  wire \class_counter[28]_i_4_n_0 ;
  wire \class_counter[28]_i_5_n_0 ;
  wire \class_counter[28]_i_6_n_0 ;
  wire \class_counter[31]_i_1_n_0 ;
  wire \class_counter[31]_i_4_n_0 ;
  wire \class_counter[31]_i_5_n_0 ;
  wire \class_counter[31]_i_6_n_0 ;
  wire \class_counter[4]_i_3_n_0 ;
  wire \class_counter[4]_i_4_n_0 ;
  wire \class_counter[4]_i_5_n_0 ;
  wire \class_counter[4]_i_6_n_0 ;
  wire \class_counter[8]_i_3_n_0 ;
  wire \class_counter[8]_i_4_n_0 ;
  wire \class_counter[8]_i_5_n_0 ;
  wire \class_counter[8]_i_6_n_0 ;
  wire \class_counter_reg[12]_i_2_n_0 ;
  wire \class_counter_reg[12]_i_2_n_1 ;
  wire \class_counter_reg[12]_i_2_n_2 ;
  wire \class_counter_reg[12]_i_2_n_3 ;
  wire \class_counter_reg[12]_i_2_n_4 ;
  wire \class_counter_reg[12]_i_2_n_5 ;
  wire \class_counter_reg[12]_i_2_n_6 ;
  wire \class_counter_reg[12]_i_2_n_7 ;
  wire \class_counter_reg[16]_i_2_n_0 ;
  wire \class_counter_reg[16]_i_2_n_1 ;
  wire \class_counter_reg[16]_i_2_n_2 ;
  wire \class_counter_reg[16]_i_2_n_3 ;
  wire \class_counter_reg[16]_i_2_n_4 ;
  wire \class_counter_reg[16]_i_2_n_5 ;
  wire \class_counter_reg[16]_i_2_n_6 ;
  wire \class_counter_reg[16]_i_2_n_7 ;
  wire \class_counter_reg[20]_i_2_n_0 ;
  wire \class_counter_reg[20]_i_2_n_1 ;
  wire \class_counter_reg[20]_i_2_n_2 ;
  wire \class_counter_reg[20]_i_2_n_3 ;
  wire \class_counter_reg[20]_i_2_n_4 ;
  wire \class_counter_reg[20]_i_2_n_5 ;
  wire \class_counter_reg[20]_i_2_n_6 ;
  wire \class_counter_reg[20]_i_2_n_7 ;
  wire \class_counter_reg[24]_i_2_n_0 ;
  wire \class_counter_reg[24]_i_2_n_1 ;
  wire \class_counter_reg[24]_i_2_n_2 ;
  wire \class_counter_reg[24]_i_2_n_3 ;
  wire \class_counter_reg[24]_i_2_n_4 ;
  wire \class_counter_reg[24]_i_2_n_5 ;
  wire \class_counter_reg[24]_i_2_n_6 ;
  wire \class_counter_reg[24]_i_2_n_7 ;
  wire \class_counter_reg[28]_i_2_n_0 ;
  wire \class_counter_reg[28]_i_2_n_1 ;
  wire \class_counter_reg[28]_i_2_n_2 ;
  wire \class_counter_reg[28]_i_2_n_3 ;
  wire \class_counter_reg[28]_i_2_n_4 ;
  wire \class_counter_reg[28]_i_2_n_5 ;
  wire \class_counter_reg[28]_i_2_n_6 ;
  wire \class_counter_reg[28]_i_2_n_7 ;
  wire \class_counter_reg[31]_i_3_n_2 ;
  wire \class_counter_reg[31]_i_3_n_3 ;
  wire \class_counter_reg[31]_i_3_n_5 ;
  wire \class_counter_reg[31]_i_3_n_6 ;
  wire \class_counter_reg[31]_i_3_n_7 ;
  wire \class_counter_reg[4]_i_2_n_0 ;
  wire \class_counter_reg[4]_i_2_n_1 ;
  wire \class_counter_reg[4]_i_2_n_2 ;
  wire \class_counter_reg[4]_i_2_n_3 ;
  wire \class_counter_reg[4]_i_2_n_4 ;
  wire \class_counter_reg[4]_i_2_n_5 ;
  wire \class_counter_reg[4]_i_2_n_6 ;
  wire \class_counter_reg[4]_i_2_n_7 ;
  wire \class_counter_reg[5]_0 ;
  wire \class_counter_reg[8]_i_2_n_0 ;
  wire \class_counter_reg[8]_i_2_n_1 ;
  wire \class_counter_reg[8]_i_2_n_2 ;
  wire \class_counter_reg[8]_i_2_n_3 ;
  wire \class_counter_reg[8]_i_2_n_4 ;
  wire \class_counter_reg[8]_i_2_n_5 ;
  wire \class_counter_reg[8]_i_2_n_6 ;
  wire \class_counter_reg[8]_i_2_n_7 ;
  (* RTL_KEEP = "yes" *) wire [3:1]current_state;
  wire \current_state_reg[0] ;
  wire [0:0]\current_state_reg[0]_0 ;
  wire [3:0]\divisor_reg[31] ;
  wire [3:0]\divisor_reg[31]_0 ;
  wire [3:0]\element_counter_reg[15] ;
  wire [15:0]\element_counter_reg[15]_0 ;
  wire empty;
  wire empty_fwft_i_reg;
  wire full;
  wire \gaf.ram_almost_full_i_reg ;
  wire i__carry__0_i_1__0_n_0;
  wire i__carry__0_i_1__4_n_0;
  wire i__carry__0_i_1_n_0;
  wire i__carry__0_i_2__0_n_0;
  wire i__carry__0_i_2__4_n_0;
  wire i__carry__0_i_2_n_0;
  wire i__carry__0_i_3__0_n_0;
  wire i__carry__0_i_3__4_n_0;
  wire i__carry__0_i_3_n_0;
  wire i__carry__0_i_4__0_n_0;
  wire i__carry__0_i_4__4_n_0;
  wire i__carry__0_i_4_n_0;
  wire i__carry__1_i_1__0_n_0;
  wire i__carry__1_i_1__1_n_0;
  wire i__carry__1_i_1_n_0;
  wire i__carry__1_i_2_n_0;
  wire i__carry__1_i_3_n_0;
  wire i__carry__1_i_4_n_0;
  wire i__carry__2_i_1_n_0;
  wire i__carry__2_i_2_n_0;
  wire i__carry__2_i_3_n_0;
  wire i__carry__2_i_4_n_0;
  wire i__carry__3_i_1_n_0;
  wire i__carry__3_i_2_n_0;
  wire i__carry__3_i_3_n_0;
  wire i__carry__3_i_4_n_0;
  wire i__carry__4_i_1_n_0;
  wire i__carry__4_i_2_n_0;
  wire i__carry__4_i_3_n_0;
  wire i__carry__4_i_4_n_0;
  wire i__carry__5_i_1_n_0;
  wire i__carry__5_i_2_n_0;
  wire i__carry__5_i_3_n_0;
  wire i__carry__5_i_4_n_0;
  wire i__carry__6_i_1_n_0;
  wire i__carry__6_i_2_n_0;
  wire i__carry__6_i_3_n_0;
  wire i__carry_i_1__0_n_0;
  wire i__carry_i_1__4_n_0;
  wire i__carry_i_1_n_0;
  wire i__carry_i_2__0_n_0;
  wire i__carry_i_2__4_n_0;
  wire i__carry_i_2_n_0;
  wire i__carry_i_3__0_n_0;
  wire i__carry_i_3__1_n_0;
  wire i__carry_i_3_n_0;
  wire i__carry_i_4__2_n_0;
  wire i__carry_i_4__3_n_0;
  wire i__carry_i_4__4_n_0;
  wire [7:0]ila_smax_axi_awlen;
  wire ila_smax_axi_bready;
  wire [31:0]ila_smax_axi_wdata;
  wire ila_smax_axi_wlast;
  wire ila_smax_calculated;
  wire [15:0]ila_smax_channel_counter;
  wire [31:0]ila_smax_class_counter;
  wire ila_smax_data_loaded;
  wire [31:0]ila_smax_inbuff_din;
  wire ila_smax_inbuff_wr_en;
  wire [2:0]ila_smax_master_fsm_state;
  wire ila_smax_more_bursts_needed;
  wire [15:0]\ila_smax_num_elements[15] ;
  wire [31:0]ila_smax_outbuff_dout;
  wire ila_smax_outbuff_rd_en;
  wire ila_smax_outbuff_valid;
  wire [31:0]\ila_smax_output_data_addr_reg[31] ;
  wire [7:0]\ila_smax_rbc[7] ;
  wire [15:0]ila_smax_reads_remaining;
  wire [7:0]\ila_smax_wbc[7] ;
  wire [15:0]ila_smax_writes_remaining;
  wire [31:0]inbuff_din;
  wire \inbuff_din[31]_i_1_n_0 ;
  wire inbuff_wr_en;
  wire [31:0]input_data_addr_reg;
  wire \input_data_addr_reg[31]_i_1_n_0 ;
  wire m00_axi_aclk;
  wire [31:0]m00_axi_araddr;
  wire m00_axi_aresetn;
  wire m00_axi_aresetn_0;
  wire m00_axi_aresetn_1;
  wire m00_axi_aresetn_2;
  wire m00_axi_aresetn_3;
  wire [7:0]m00_axi_arlen;
  wire m00_axi_arready;
  wire m00_axi_arvalid;
  wire [31:0]m00_axi_awaddr;
  wire m00_axi_awready;
  wire m00_axi_awvalid;
  wire m00_axi_bvalid;
  wire [31:0]m00_axi_rdata;
  wire m00_axi_rlast;
  wire m00_axi_rready;
  wire m00_axi_rvalid;
  wire m00_axi_wlast_INST_0_i_1_n_0;
  wire m00_axi_wlast_INST_0_i_2_n_0;
  wire m00_axi_wlast_INST_0_i_3_n_0;
  wire m00_axi_wready;
  wire m00_axi_wvalid_INST_0_i_1_n_0;
  wire minusOp_carry__0_i_1_n_0;
  wire minusOp_carry__0_i_2_n_0;
  wire minusOp_carry__0_i_3_n_0;
  wire minusOp_carry__0_i_4_n_0;
  wire minusOp_carry__0_n_0;
  wire minusOp_carry__0_n_1;
  wire minusOp_carry__0_n_2;
  wire minusOp_carry__0_n_3;
  wire minusOp_carry__0_n_4;
  wire minusOp_carry__0_n_5;
  wire minusOp_carry__0_n_6;
  wire minusOp_carry__0_n_7;
  wire minusOp_carry__1_i_1_n_0;
  wire minusOp_carry__1_i_2_n_0;
  wire minusOp_carry__1_i_3_n_0;
  wire minusOp_carry__1_i_4_n_0;
  wire minusOp_carry__1_n_0;
  wire minusOp_carry__1_n_1;
  wire minusOp_carry__1_n_2;
  wire minusOp_carry__1_n_3;
  wire minusOp_carry__1_n_4;
  wire minusOp_carry__1_n_5;
  wire minusOp_carry__1_n_6;
  wire minusOp_carry__1_n_7;
  wire minusOp_carry__2_i_1_n_0;
  wire minusOp_carry__2_i_2_n_0;
  wire minusOp_carry__2_i_3_n_0;
  wire minusOp_carry__2_n_2;
  wire minusOp_carry__2_n_3;
  wire minusOp_carry__2_n_5;
  wire minusOp_carry__2_n_6;
  wire minusOp_carry__2_n_7;
  wire minusOp_carry_i_1_n_0;
  wire minusOp_carry_i_2_n_0;
  wire minusOp_carry_i_3_n_0;
  wire minusOp_carry_i_4_n_0;
  wire minusOp_carry_n_0;
  wire minusOp_carry_n_1;
  wire minusOp_carry_n_2;
  wire minusOp_carry_n_3;
  wire minusOp_carry_n_4;
  wire minusOp_carry_n_5;
  wire minusOp_carry_n_6;
  wire minusOp_carry_n_7;
  wire \minusOp_inferred__0/i__carry__0_n_0 ;
  wire \minusOp_inferred__0/i__carry__0_n_1 ;
  wire \minusOp_inferred__0/i__carry__0_n_2 ;
  wire \minusOp_inferred__0/i__carry__0_n_3 ;
  wire \minusOp_inferred__0/i__carry__0_n_4 ;
  wire \minusOp_inferred__0/i__carry__0_n_5 ;
  wire \minusOp_inferred__0/i__carry__0_n_6 ;
  wire \minusOp_inferred__0/i__carry__0_n_7 ;
  wire \minusOp_inferred__0/i__carry__1_n_7 ;
  wire \minusOp_inferred__0/i__carry_n_0 ;
  wire \minusOp_inferred__0/i__carry_n_1 ;
  wire \minusOp_inferred__0/i__carry_n_2 ;
  wire \minusOp_inferred__0/i__carry_n_3 ;
  wire \minusOp_inferred__0/i__carry_n_4 ;
  wire \minusOp_inferred__0/i__carry_n_5 ;
  wire \minusOp_inferred__0/i__carry_n_6 ;
  wire \minusOp_inferred__0/i__carry_n_7 ;
  wire \minusOp_inferred__2/i__carry__0_n_0 ;
  wire \minusOp_inferred__2/i__carry__0_n_1 ;
  wire \minusOp_inferred__2/i__carry__0_n_2 ;
  wire \minusOp_inferred__2/i__carry__0_n_3 ;
  wire \minusOp_inferred__2/i__carry__0_n_4 ;
  wire \minusOp_inferred__2/i__carry__0_n_5 ;
  wire \minusOp_inferred__2/i__carry__0_n_6 ;
  wire \minusOp_inferred__2/i__carry__0_n_7 ;
  wire \minusOp_inferred__2/i__carry__1_n_7 ;
  wire \minusOp_inferred__2/i__carry_n_0 ;
  wire \minusOp_inferred__2/i__carry_n_1 ;
  wire \minusOp_inferred__2/i__carry_n_2 ;
  wire \minusOp_inferred__2/i__carry_n_3 ;
  wire \minusOp_inferred__2/i__carry_n_4 ;
  wire \minusOp_inferred__2/i__carry_n_5 ;
  wire \minusOp_inferred__2/i__carry_n_6 ;
  wire \minusOp_inferred__2/i__carry_n_7 ;
  wire more_bursts_needed_i_1_n_0;
  wire more_bursts_needed_i_2_n_0;
  wire more_bursts_needed_i_3_n_0;
  wire next_state1;
  wire next_state29_in;
  wire next_state2_carry_i_1_n_0;
  wire next_state2_carry_i_2_n_0;
  wire next_state2_carry_i_3_n_0;
  wire next_state2_carry_i_4_n_0;
  wire next_state2_carry_i_5_n_0;
  wire next_state2_carry_i_6_n_0;
  wire next_state2_carry_i_7_n_0;
  wire next_state2_carry_i_8_n_0;
  wire next_state2_carry_n_1;
  wire next_state2_carry_n_2;
  wire next_state2_carry_n_3;
  wire \num_elements[15]_i_1_n_0 ;
  wire [16:0]o_control_reg;
  wire [31:0]o_input_data_addr_reg;
  wire [31:0]o_output_data_addr_reg;
  (* RTL_KEEP = "yes" *) wire [1:0]out;
  wire outbuff_rd_en;
  wire [31:0]output_data_addr_reg;
  wire \output_data_addr_reg[12]_i_3_n_0 ;
  wire \output_data_addr_reg[12]_i_4_n_0 ;
  wire \output_data_addr_reg[12]_i_5_n_0 ;
  wire \output_data_addr_reg[12]_i_6_n_0 ;
  wire \output_data_addr_reg[16]_i_3_n_0 ;
  wire \output_data_addr_reg[16]_i_4_n_0 ;
  wire \output_data_addr_reg[16]_i_5_n_0 ;
  wire \output_data_addr_reg[16]_i_6_n_0 ;
  wire \output_data_addr_reg[20]_i_3_n_0 ;
  wire \output_data_addr_reg[20]_i_4_n_0 ;
  wire \output_data_addr_reg[20]_i_5_n_0 ;
  wire \output_data_addr_reg[20]_i_6_n_0 ;
  wire \output_data_addr_reg[24]_i_3_n_0 ;
  wire \output_data_addr_reg[24]_i_4_n_0 ;
  wire \output_data_addr_reg[24]_i_5_n_0 ;
  wire \output_data_addr_reg[24]_i_6_n_0 ;
  wire \output_data_addr_reg[28]_i_3_n_0 ;
  wire \output_data_addr_reg[28]_i_4_n_0 ;
  wire \output_data_addr_reg[28]_i_5_n_0 ;
  wire \output_data_addr_reg[28]_i_6_n_0 ;
  wire \output_data_addr_reg[31]_i_1_n_0 ;
  wire \output_data_addr_reg[31]_i_4_n_0 ;
  wire \output_data_addr_reg[31]_i_5_n_0 ;
  wire \output_data_addr_reg[31]_i_6_n_0 ;
  wire \output_data_addr_reg[4]_i_3_n_0 ;
  wire \output_data_addr_reg[4]_i_4_n_0 ;
  wire \output_data_addr_reg[4]_i_5_n_0 ;
  wire \output_data_addr_reg[4]_i_6_n_0 ;
  wire \output_data_addr_reg[8]_i_3_n_0 ;
  wire \output_data_addr_reg[8]_i_4_n_0 ;
  wire \output_data_addr_reg[8]_i_5_n_0 ;
  wire \output_data_addr_reg[8]_i_6_n_0 ;
  wire \output_data_addr_reg_reg[12]_i_2_n_0 ;
  wire \output_data_addr_reg_reg[12]_i_2_n_1 ;
  wire \output_data_addr_reg_reg[12]_i_2_n_2 ;
  wire \output_data_addr_reg_reg[12]_i_2_n_3 ;
  wire \output_data_addr_reg_reg[12]_i_2_n_4 ;
  wire \output_data_addr_reg_reg[12]_i_2_n_5 ;
  wire \output_data_addr_reg_reg[12]_i_2_n_6 ;
  wire \output_data_addr_reg_reg[12]_i_2_n_7 ;
  wire \output_data_addr_reg_reg[16]_i_2_n_0 ;
  wire \output_data_addr_reg_reg[16]_i_2_n_1 ;
  wire \output_data_addr_reg_reg[16]_i_2_n_2 ;
  wire \output_data_addr_reg_reg[16]_i_2_n_3 ;
  wire \output_data_addr_reg_reg[16]_i_2_n_4 ;
  wire \output_data_addr_reg_reg[16]_i_2_n_5 ;
  wire \output_data_addr_reg_reg[16]_i_2_n_6 ;
  wire \output_data_addr_reg_reg[16]_i_2_n_7 ;
  wire \output_data_addr_reg_reg[20]_i_2_n_0 ;
  wire \output_data_addr_reg_reg[20]_i_2_n_1 ;
  wire \output_data_addr_reg_reg[20]_i_2_n_2 ;
  wire \output_data_addr_reg_reg[20]_i_2_n_3 ;
  wire \output_data_addr_reg_reg[20]_i_2_n_4 ;
  wire \output_data_addr_reg_reg[20]_i_2_n_5 ;
  wire \output_data_addr_reg_reg[20]_i_2_n_6 ;
  wire \output_data_addr_reg_reg[20]_i_2_n_7 ;
  wire \output_data_addr_reg_reg[24]_i_2_n_0 ;
  wire \output_data_addr_reg_reg[24]_i_2_n_1 ;
  wire \output_data_addr_reg_reg[24]_i_2_n_2 ;
  wire \output_data_addr_reg_reg[24]_i_2_n_3 ;
  wire \output_data_addr_reg_reg[24]_i_2_n_4 ;
  wire \output_data_addr_reg_reg[24]_i_2_n_5 ;
  wire \output_data_addr_reg_reg[24]_i_2_n_6 ;
  wire \output_data_addr_reg_reg[24]_i_2_n_7 ;
  wire \output_data_addr_reg_reg[28]_i_2_n_0 ;
  wire \output_data_addr_reg_reg[28]_i_2_n_1 ;
  wire \output_data_addr_reg_reg[28]_i_2_n_2 ;
  wire \output_data_addr_reg_reg[28]_i_2_n_3 ;
  wire \output_data_addr_reg_reg[28]_i_2_n_4 ;
  wire \output_data_addr_reg_reg[28]_i_2_n_5 ;
  wire \output_data_addr_reg_reg[28]_i_2_n_6 ;
  wire \output_data_addr_reg_reg[28]_i_2_n_7 ;
  wire \output_data_addr_reg_reg[31]_i_3_n_2 ;
  wire \output_data_addr_reg_reg[31]_i_3_n_3 ;
  wire \output_data_addr_reg_reg[31]_i_3_n_5 ;
  wire \output_data_addr_reg_reg[31]_i_3_n_6 ;
  wire \output_data_addr_reg_reg[31]_i_3_n_7 ;
  wire \output_data_addr_reg_reg[4]_i_2_n_0 ;
  wire \output_data_addr_reg_reg[4]_i_2_n_1 ;
  wire \output_data_addr_reg_reg[4]_i_2_n_2 ;
  wire \output_data_addr_reg_reg[4]_i_2_n_3 ;
  wire \output_data_addr_reg_reg[4]_i_2_n_4 ;
  wire \output_data_addr_reg_reg[4]_i_2_n_5 ;
  wire \output_data_addr_reg_reg[4]_i_2_n_6 ;
  wire \output_data_addr_reg_reg[4]_i_2_n_7 ;
  wire \output_data_addr_reg_reg[8]_0 ;
  wire \output_data_addr_reg_reg[8]_i_2_n_0 ;
  wire \output_data_addr_reg_reg[8]_i_2_n_1 ;
  wire \output_data_addr_reg_reg[8]_i_2_n_2 ;
  wire \output_data_addr_reg_reg[8]_i_2_n_3 ;
  wire \output_data_addr_reg_reg[8]_i_2_n_4 ;
  wire \output_data_addr_reg_reg[8]_i_2_n_5 ;
  wire \output_data_addr_reg_reg[8]_i_2_n_6 ;
  wire \output_data_addr_reg_reg[8]_i_2_n_7 ;
  wire \plusOp_inferred__3/i__carry__0_n_0 ;
  wire \plusOp_inferred__3/i__carry__0_n_1 ;
  wire \plusOp_inferred__3/i__carry__0_n_2 ;
  wire \plusOp_inferred__3/i__carry__0_n_3 ;
  wire \plusOp_inferred__3/i__carry__0_n_4 ;
  wire \plusOp_inferred__3/i__carry__0_n_5 ;
  wire \plusOp_inferred__3/i__carry__0_n_6 ;
  wire \plusOp_inferred__3/i__carry__0_n_7 ;
  wire \plusOp_inferred__3/i__carry__1_n_0 ;
  wire \plusOp_inferred__3/i__carry__1_n_1 ;
  wire \plusOp_inferred__3/i__carry__1_n_2 ;
  wire \plusOp_inferred__3/i__carry__1_n_3 ;
  wire \plusOp_inferred__3/i__carry__1_n_4 ;
  wire \plusOp_inferred__3/i__carry__1_n_5 ;
  wire \plusOp_inferred__3/i__carry__1_n_6 ;
  wire \plusOp_inferred__3/i__carry__1_n_7 ;
  wire \plusOp_inferred__3/i__carry__2_n_0 ;
  wire \plusOp_inferred__3/i__carry__2_n_1 ;
  wire \plusOp_inferred__3/i__carry__2_n_2 ;
  wire \plusOp_inferred__3/i__carry__2_n_3 ;
  wire \plusOp_inferred__3/i__carry__2_n_4 ;
  wire \plusOp_inferred__3/i__carry__2_n_5 ;
  wire \plusOp_inferred__3/i__carry__2_n_6 ;
  wire \plusOp_inferred__3/i__carry__2_n_7 ;
  wire \plusOp_inferred__3/i__carry__3_n_0 ;
  wire \plusOp_inferred__3/i__carry__3_n_1 ;
  wire \plusOp_inferred__3/i__carry__3_n_2 ;
  wire \plusOp_inferred__3/i__carry__3_n_3 ;
  wire \plusOp_inferred__3/i__carry__3_n_4 ;
  wire \plusOp_inferred__3/i__carry__3_n_5 ;
  wire \plusOp_inferred__3/i__carry__3_n_6 ;
  wire \plusOp_inferred__3/i__carry__3_n_7 ;
  wire \plusOp_inferred__3/i__carry__4_n_0 ;
  wire \plusOp_inferred__3/i__carry__4_n_1 ;
  wire \plusOp_inferred__3/i__carry__4_n_2 ;
  wire \plusOp_inferred__3/i__carry__4_n_3 ;
  wire \plusOp_inferred__3/i__carry__4_n_4 ;
  wire \plusOp_inferred__3/i__carry__4_n_5 ;
  wire \plusOp_inferred__3/i__carry__4_n_6 ;
  wire \plusOp_inferred__3/i__carry__4_n_7 ;
  wire \plusOp_inferred__3/i__carry__5_n_0 ;
  wire \plusOp_inferred__3/i__carry__5_n_1 ;
  wire \plusOp_inferred__3/i__carry__5_n_2 ;
  wire \plusOp_inferred__3/i__carry__5_n_3 ;
  wire \plusOp_inferred__3/i__carry__5_n_4 ;
  wire \plusOp_inferred__3/i__carry__5_n_5 ;
  wire \plusOp_inferred__3/i__carry__5_n_6 ;
  wire \plusOp_inferred__3/i__carry__5_n_7 ;
  wire \plusOp_inferred__3/i__carry__6_n_2 ;
  wire \plusOp_inferred__3/i__carry__6_n_3 ;
  wire \plusOp_inferred__3/i__carry__6_n_5 ;
  wire \plusOp_inferred__3/i__carry__6_n_6 ;
  wire \plusOp_inferred__3/i__carry__6_n_7 ;
  wire \plusOp_inferred__3/i__carry_n_0 ;
  wire \plusOp_inferred__3/i__carry_n_1 ;
  wire \plusOp_inferred__3/i__carry_n_2 ;
  wire \plusOp_inferred__3/i__carry_n_3 ;
  wire \plusOp_inferred__3/i__carry_n_4 ;
  wire \plusOp_inferred__3/i__carry_n_5 ;
  wire \plusOp_inferred__3/i__carry_n_6 ;
  wire \plusOp_inferred__3/i__carry_n_7 ;
  wire [15:0]\quotient_counter_reg[15] ;
  wire ram_full_i_reg;
  wire [7:0]read_beat_counter;
  wire \read_beat_counter[6]_i_2_n_0 ;
  wire \read_beat_counter[7]_i_1_n_0 ;
  wire \read_beat_counter[7]_i_3_n_0 ;
  wire \read_beat_counter[7]_i_4_n_0 ;
  wire [15:0]reads_remaining;
  wire \reads_remaining[12]_i_3_n_0 ;
  wire \reads_remaining[12]_i_4_n_0 ;
  wire \reads_remaining[12]_i_5_n_0 ;
  wire \reads_remaining[12]_i_6_n_0 ;
  wire \reads_remaining[15]_i_1_n_0 ;
  wire \reads_remaining[15]_i_4_n_0 ;
  wire \reads_remaining[15]_i_5_n_0 ;
  wire \reads_remaining[15]_i_6_n_0 ;
  wire \reads_remaining[4]_i_3_n_0 ;
  wire \reads_remaining[4]_i_4_n_0 ;
  wire \reads_remaining[4]_i_5_n_0 ;
  wire \reads_remaining[4]_i_6_n_0 ;
  wire \reads_remaining[6]_i_2_n_0 ;
  wire \reads_remaining[8]_i_3_n_0 ;
  wire \reads_remaining[8]_i_4_n_0 ;
  wire \reads_remaining[8]_i_5_n_0 ;
  wire \reads_remaining[8]_i_6_n_0 ;
  wire \reads_remaining_reg[12]_i_2_n_0 ;
  wire \reads_remaining_reg[12]_i_2_n_1 ;
  wire \reads_remaining_reg[12]_i_2_n_2 ;
  wire \reads_remaining_reg[12]_i_2_n_3 ;
  wire \reads_remaining_reg[12]_i_2_n_4 ;
  wire \reads_remaining_reg[12]_i_2_n_5 ;
  wire \reads_remaining_reg[12]_i_2_n_6 ;
  wire \reads_remaining_reg[12]_i_2_n_7 ;
  wire \reads_remaining_reg[15]_i_3_n_2 ;
  wire \reads_remaining_reg[15]_i_3_n_3 ;
  wire \reads_remaining_reg[15]_i_3_n_5 ;
  wire \reads_remaining_reg[15]_i_3_n_6 ;
  wire \reads_remaining_reg[15]_i_3_n_7 ;
  wire \reads_remaining_reg[4]_i_2_n_0 ;
  wire \reads_remaining_reg[4]_i_2_n_1 ;
  wire \reads_remaining_reg[4]_i_2_n_2 ;
  wire \reads_remaining_reg[4]_i_2_n_3 ;
  wire \reads_remaining_reg[4]_i_2_n_4 ;
  wire \reads_remaining_reg[4]_i_2_n_5 ;
  wire \reads_remaining_reg[4]_i_2_n_6 ;
  wire \reads_remaining_reg[4]_i_2_n_7 ;
  wire \reads_remaining_reg[8]_i_2_n_0 ;
  wire \reads_remaining_reg[8]_i_2_n_1 ;
  wire \reads_remaining_reg[8]_i_2_n_2 ;
  wire \reads_remaining_reg[8]_i_2_n_3 ;
  wire \reads_remaining_reg[8]_i_2_n_4 ;
  wire \reads_remaining_reg[8]_i_2_n_5 ;
  wire \reads_remaining_reg[8]_i_2_n_6 ;
  wire \reads_remaining_reg[8]_i_2_n_7 ;
  wire [2:0]slv_reg_wren;
  wire start;
  wire [1:0]start_reg_0;
  wire [15:0]\sum_counter_reg[15] ;
  wire [3:0]summing_complete_reg;
  wire [3:0]summing_complete_reg_0;
  wire [7:0]write_beat_counter;
  wire \write_beat_counter[5]_i_2_n_0 ;
  wire \write_beat_counter[7]_i_1_n_0 ;
  wire \write_beat_counter[7]_i_3_n_0 ;
  wire [15:0]writes_remaining;
  wire \writes_remaining[15]_i_1_n_0 ;
  wire [3:2]\NLW_channel_counter_reg[15]_i_3_CO_UNCONNECTED ;
  wire [3:3]\NLW_channel_counter_reg[15]_i_3_O_UNCONNECTED ;
  wire [3:2]\NLW_class_counter_reg[31]_i_3_CO_UNCONNECTED ;
  wire [3:3]\NLW_class_counter_reg[31]_i_3_O_UNCONNECTED ;
  wire [3:2]NLW_minusOp_carry__2_CO_UNCONNECTED;
  wire [3:3]NLW_minusOp_carry__2_O_UNCONNECTED;
  wire [3:0]\NLW_minusOp_inferred__0/i__carry__1_CO_UNCONNECTED ;
  wire [3:1]\NLW_minusOp_inferred__0/i__carry__1_O_UNCONNECTED ;
  wire [3:0]\NLW_minusOp_inferred__2/i__carry__1_CO_UNCONNECTED ;
  wire [3:1]\NLW_minusOp_inferred__2/i__carry__1_O_UNCONNECTED ;
  wire [3:0]NLW_next_state2_carry_O_UNCONNECTED;
  wire [3:2]\NLW_output_data_addr_reg_reg[31]_i_3_CO_UNCONNECTED ;
  wire [3:3]\NLW_output_data_addr_reg_reg[31]_i_3_O_UNCONNECTED ;
  wire [3:2]\NLW_plusOp_inferred__3/i__carry__6_CO_UNCONNECTED ;
  wire [3:3]\NLW_plusOp_inferred__3/i__carry__6_O_UNCONNECTED ;
  wire [3:2]\NLW_reads_remaining_reg[15]_i_3_CO_UNCONNECTED ;
  wire [3:3]\NLW_reads_remaining_reg[15]_i_3_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'h888F8888)) 
    \FSM_sequential_current_state[0]_i_1 
       (.I0(ila_smax_axi_bready),
        .I1(ila_smax_more_bursts_needed),
        .I2(\FSM_sequential_current_state[2]_i_2__0_n_0 ),
        .I3(\FSM_sequential_current_state[0]_i_2_n_0 ),
        .I4(\FSM_sequential_current_state[0]_i_3_n_0 ),
        .O(\FSM_sequential_current_state[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00400000)) 
    \FSM_sequential_current_state[0]_i_2 
       (.I0(out[1]),
        .I1(m00_axi_rlast),
        .I2(out[0]),
        .I3(full),
        .I4(m00_axi_rvalid),
        .I5(\FSM_sequential_current_state[0]_i_4_n_0 ),
        .O(\FSM_sequential_current_state[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hCFCCC2C2CFCCCECE)) 
    \FSM_sequential_current_state[0]_i_3 
       (.I0(start),
        .I1(current_state[1]),
        .I2(out[0]),
        .I3(\FSM_sequential_current_state_reg[1]_0 ),
        .I4(out[1]),
        .I5(m00_axi_arready),
        .O(\FSM_sequential_current_state[0]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hABAAAAAA)) 
    \FSM_sequential_current_state[0]_i_4 
       (.I0(current_state[3]),
        .I1(out[0]),
        .I2(m00_axi_awready),
        .I3(out[1]),
        .I4(current_state[1]),
        .O(\FSM_sequential_current_state[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h2330333023300000)) 
    \FSM_sequential_current_state[1]_i_1 
       (.I0(\FSM_sequential_current_state[3]_i_2_n_0 ),
        .I1(current_state[3]),
        .I2(current_state[1]),
        .I3(out[0]),
        .I4(out[1]),
        .I5(\FSM_sequential_current_state[2]_i_4_n_0 ),
        .O(\FSM_sequential_current_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7070707077707777)) 
    \FSM_sequential_current_state[2]_i_1 
       (.I0(\FSM_sequential_current_state[2]_i_2__0_n_0 ),
        .I1(current_state[1]),
        .I2(\FSM_sequential_current_state[2]_i_3_n_0 ),
        .I3(out[1]),
        .I4(\FSM_sequential_current_state[2]_i_4_n_0 ),
        .I5(current_state[3]),
        .O(\FSM_sequential_current_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0008880800000000)) 
    \FSM_sequential_current_state[2]_i_2__0 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(next_state29_in),
        .I3(ila_smax_more_bursts_needed),
        .I4(\FSM_sequential_current_state[2]_i_5_n_0 ),
        .I5(outbuff_rd_en),
        .O(\FSM_sequential_current_state[2]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \FSM_sequential_current_state[2]_i_3 
       (.I0(ila_smax_more_bursts_needed),
        .I1(current_state[3]),
        .I2(out[1]),
        .I3(current_state[1]),
        .I4(out[0]),
        .I5(m00_axi_bvalid),
        .O(\FSM_sequential_current_state[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFDFFFFFFF)) 
    \FSM_sequential_current_state[2]_i_4 
       (.I0(m00_axi_rvalid),
        .I1(full),
        .I2(out[0]),
        .I3(current_state[1]),
        .I4(m00_axi_rlast),
        .I5(ila_smax_more_bursts_needed),
        .O(\FSM_sequential_current_state[2]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hDF)) 
    \FSM_sequential_current_state[2]_i_5 
       (.I0(\ila_smax_wbc[7] [6]),
        .I1(\write_beat_counter[7]_i_3_n_0 ),
        .I2(\ila_smax_wbc[7] [7]),
        .O(\FSM_sequential_current_state[2]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0300000000000050)) 
    \FSM_sequential_current_state[3]_i_1 
       (.I0(m00_axi_bvalid),
        .I1(\FSM_sequential_current_state[3]_i_2_n_0 ),
        .I2(current_state[3]),
        .I3(out[1]),
        .I4(current_state[1]),
        .I5(out[0]),
        .O(\FSM_sequential_current_state[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF7FFFFFFF7FF5555)) 
    \FSM_sequential_current_state[3]_i_2 
       (.I0(outbuff_rd_en),
        .I1(\ila_smax_wbc[7] [7]),
        .I2(\write_beat_counter[7]_i_3_n_0 ),
        .I3(\ila_smax_wbc[7] [6]),
        .I4(ila_smax_more_bursts_needed),
        .I5(next_state29_in),
        .O(\FSM_sequential_current_state[3]_i_2_n_0 ));
  (* KEEP = "yes" *) 
  FDCE \FSM_sequential_current_state_reg[0] 
       (.C(m00_axi_aclk),
        .CE(1'b1),
        .CLR(m00_axi_aresetn_0),
        .D(\FSM_sequential_current_state[0]_i_1_n_0 ),
        .Q(out[0]));
  (* KEEP = "yes" *) 
  FDCE \FSM_sequential_current_state_reg[1] 
       (.C(m00_axi_aclk),
        .CE(1'b1),
        .CLR(m00_axi_aresetn_0),
        .D(\FSM_sequential_current_state[1]_i_1_n_0 ),
        .Q(current_state[1]));
  (* KEEP = "yes" *) 
  FDCE \FSM_sequential_current_state_reg[2] 
       (.C(m00_axi_aclk),
        .CE(1'b1),
        .CLR(m00_axi_aresetn_0),
        .D(\FSM_sequential_current_state[2]_i_1_n_0 ),
        .Q(out[1]));
  (* KEEP = "yes" *) 
  FDCE \FSM_sequential_current_state_reg[3] 
       (.C(m00_axi_aclk),
        .CE(1'b1),
        .CLR(m00_axi_aresetn_0),
        .D(\FSM_sequential_current_state[3]_i_1_n_0 ),
        .Q(current_state[3]));
  LUT3 #(
    .INIT(8'h08)) 
    \axi_araddr[0]_i_1 
       (.I0(Q[0]),
        .I1(current_state[1]),
        .I2(current_state[3]),
        .O(axi_araddr[0]));
  LUT3 #(
    .INIT(8'h08)) 
    \axi_araddr[10]_i_1 
       (.I0(Q[10]),
        .I1(current_state[1]),
        .I2(current_state[3]),
        .O(axi_araddr[10]));
  LUT3 #(
    .INIT(8'h08)) 
    \axi_araddr[11]_i_1 
       (.I0(Q[11]),
        .I1(current_state[1]),
        .I2(current_state[3]),
        .O(axi_araddr[11]));
  LUT3 #(
    .INIT(8'h08)) 
    \axi_araddr[12]_i_1 
       (.I0(Q[12]),
        .I1(current_state[1]),
        .I2(current_state[3]),
        .O(axi_araddr[12]));
  LUT3 #(
    .INIT(8'h08)) 
    \axi_araddr[13]_i_1 
       (.I0(Q[13]),
        .I1(current_state[1]),
        .I2(current_state[3]),
        .O(axi_araddr[13]));
  LUT3 #(
    .INIT(8'h08)) 
    \axi_araddr[14]_i_1 
       (.I0(Q[14]),
        .I1(current_state[1]),
        .I2(current_state[3]),
        .O(axi_araddr[14]));
  LUT3 #(
    .INIT(8'h08)) 
    \axi_araddr[15]_i_1 
       (.I0(Q[15]),
        .I1(current_state[1]),
        .I2(current_state[3]),
        .O(axi_araddr[15]));
  LUT3 #(
    .INIT(8'h08)) 
    \axi_araddr[16]_i_1 
       (.I0(Q[16]),
        .I1(current_state[1]),
        .I2(current_state[3]),
        .O(axi_araddr[16]));
  LUT3 #(
    .INIT(8'h08)) 
    \axi_araddr[17]_i_1 
       (.I0(Q[17]),
        .I1(current_state[1]),
        .I2(current_state[3]),
        .O(axi_araddr[17]));
  LUT3 #(
    .INIT(8'h08)) 
    \axi_araddr[18]_i_1 
       (.I0(Q[18]),
        .I1(current_state[1]),
        .I2(current_state[3]),
        .O(axi_araddr[18]));
  LUT3 #(
    .INIT(8'h08)) 
    \axi_araddr[19]_i_1 
       (.I0(Q[19]),
        .I1(current_state[1]),
        .I2(current_state[3]),
        .O(axi_araddr[19]));
  LUT3 #(
    .INIT(8'h08)) 
    \axi_araddr[1]_i_1 
       (.I0(Q[1]),
        .I1(current_state[1]),
        .I2(current_state[3]),
        .O(axi_araddr[1]));
  LUT3 #(
    .INIT(8'h08)) 
    \axi_araddr[20]_i_1 
       (.I0(Q[20]),
        .I1(current_state[1]),
        .I2(current_state[3]),
        .O(axi_araddr[20]));
  LUT3 #(
    .INIT(8'h08)) 
    \axi_araddr[21]_i_1 
       (.I0(Q[21]),
        .I1(current_state[1]),
        .I2(current_state[3]),
        .O(axi_araddr[21]));
  LUT3 #(
    .INIT(8'h08)) 
    \axi_araddr[22]_i_1 
       (.I0(Q[22]),
        .I1(current_state[1]),
        .I2(current_state[3]),
        .O(axi_araddr[22]));
  LUT3 #(
    .INIT(8'h08)) 
    \axi_araddr[23]_i_1 
       (.I0(Q[23]),
        .I1(current_state[1]),
        .I2(current_state[3]),
        .O(axi_araddr[23]));
  LUT3 #(
    .INIT(8'h08)) 
    \axi_araddr[24]_i_1 
       (.I0(Q[24]),
        .I1(current_state[1]),
        .I2(current_state[3]),
        .O(axi_araddr[24]));
  LUT3 #(
    .INIT(8'h08)) 
    \axi_araddr[25]_i_1 
       (.I0(Q[25]),
        .I1(current_state[1]),
        .I2(current_state[3]),
        .O(axi_araddr[25]));
  LUT3 #(
    .INIT(8'h08)) 
    \axi_araddr[26]_i_1 
       (.I0(Q[26]),
        .I1(current_state[1]),
        .I2(current_state[3]),
        .O(axi_araddr[26]));
  LUT3 #(
    .INIT(8'h08)) 
    \axi_araddr[27]_i_1 
       (.I0(Q[27]),
        .I1(current_state[1]),
        .I2(current_state[3]),
        .O(axi_araddr[27]));
  LUT3 #(
    .INIT(8'h08)) 
    \axi_araddr[28]_i_1 
       (.I0(Q[28]),
        .I1(current_state[1]),
        .I2(current_state[3]),
        .O(axi_araddr[28]));
  LUT3 #(
    .INIT(8'h08)) 
    \axi_araddr[29]_i_1 
       (.I0(Q[29]),
        .I1(current_state[1]),
        .I2(current_state[3]),
        .O(axi_araddr[29]));
  LUT3 #(
    .INIT(8'h08)) 
    \axi_araddr[2]_i_1 
       (.I0(Q[2]),
        .I1(current_state[1]),
        .I2(current_state[3]),
        .O(axi_araddr[2]));
  LUT3 #(
    .INIT(8'h08)) 
    \axi_araddr[30]_i_1 
       (.I0(Q[30]),
        .I1(current_state[1]),
        .I2(current_state[3]),
        .O(axi_araddr[30]));
  LUT3 #(
    .INIT(8'h01)) 
    \axi_araddr[31]_i_1 
       (.I0(out[0]),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(\axi_araddr[31]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h08)) 
    \axi_araddr[31]_i_2 
       (.I0(Q[31]),
        .I1(current_state[1]),
        .I2(current_state[3]),
        .O(axi_araddr[31]));
  LUT3 #(
    .INIT(8'h08)) 
    \axi_araddr[3]_i_1 
       (.I0(Q[3]),
        .I1(current_state[1]),
        .I2(current_state[3]),
        .O(axi_araddr[3]));
  LUT3 #(
    .INIT(8'h08)) 
    \axi_araddr[4]_i_1 
       (.I0(Q[4]),
        .I1(current_state[1]),
        .I2(current_state[3]),
        .O(axi_araddr[4]));
  LUT3 #(
    .INIT(8'h08)) 
    \axi_araddr[5]_i_1 
       (.I0(Q[5]),
        .I1(current_state[1]),
        .I2(current_state[3]),
        .O(axi_araddr[5]));
  LUT3 #(
    .INIT(8'h08)) 
    \axi_araddr[6]_i_1 
       (.I0(Q[6]),
        .I1(current_state[1]),
        .I2(current_state[3]),
        .O(axi_araddr[6]));
  LUT3 #(
    .INIT(8'h08)) 
    \axi_araddr[7]_i_1 
       (.I0(Q[7]),
        .I1(current_state[1]),
        .I2(current_state[3]),
        .O(axi_araddr[7]));
  LUT3 #(
    .INIT(8'h08)) 
    \axi_araddr[8]_i_1 
       (.I0(Q[8]),
        .I1(current_state[1]),
        .I2(current_state[3]),
        .O(axi_araddr[8]));
  LUT3 #(
    .INIT(8'h08)) 
    \axi_araddr[9]_i_1 
       (.I0(Q[9]),
        .I1(current_state[1]),
        .I2(current_state[3]),
        .O(axi_araddr[9]));
  FDCE \axi_araddr_reg[0] 
       (.C(m00_axi_aclk),
        .CE(\axi_araddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_araddr[0]),
        .Q(m00_axi_araddr[0]));
  FDCE \axi_araddr_reg[10] 
       (.C(m00_axi_aclk),
        .CE(\axi_araddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_araddr[10]),
        .Q(m00_axi_araddr[10]));
  FDCE \axi_araddr_reg[11] 
       (.C(m00_axi_aclk),
        .CE(\axi_araddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_araddr[11]),
        .Q(m00_axi_araddr[11]));
  FDCE \axi_araddr_reg[12] 
       (.C(m00_axi_aclk),
        .CE(\axi_araddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_araddr[12]),
        .Q(m00_axi_araddr[12]));
  FDCE \axi_araddr_reg[13] 
       (.C(m00_axi_aclk),
        .CE(\axi_araddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_araddr[13]),
        .Q(m00_axi_araddr[13]));
  FDCE \axi_araddr_reg[14] 
       (.C(m00_axi_aclk),
        .CE(\axi_araddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_araddr[14]),
        .Q(m00_axi_araddr[14]));
  FDCE \axi_araddr_reg[15] 
       (.C(m00_axi_aclk),
        .CE(\axi_araddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_araddr[15]),
        .Q(m00_axi_araddr[15]));
  FDCE \axi_araddr_reg[16] 
       (.C(m00_axi_aclk),
        .CE(\axi_araddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_araddr[16]),
        .Q(m00_axi_araddr[16]));
  FDCE \axi_araddr_reg[17] 
       (.C(m00_axi_aclk),
        .CE(\axi_araddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_araddr[17]),
        .Q(m00_axi_araddr[17]));
  FDCE \axi_araddr_reg[18] 
       (.C(m00_axi_aclk),
        .CE(\axi_araddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_araddr[18]),
        .Q(m00_axi_araddr[18]));
  FDCE \axi_araddr_reg[19] 
       (.C(m00_axi_aclk),
        .CE(\axi_araddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_araddr[19]),
        .Q(m00_axi_araddr[19]));
  FDCE \axi_araddr_reg[1] 
       (.C(m00_axi_aclk),
        .CE(\axi_araddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_araddr[1]),
        .Q(m00_axi_araddr[1]));
  FDCE \axi_araddr_reg[20] 
       (.C(m00_axi_aclk),
        .CE(\axi_araddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_araddr[20]),
        .Q(m00_axi_araddr[20]));
  FDCE \axi_araddr_reg[21] 
       (.C(m00_axi_aclk),
        .CE(\axi_araddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_araddr[21]),
        .Q(m00_axi_araddr[21]));
  FDCE \axi_araddr_reg[22] 
       (.C(m00_axi_aclk),
        .CE(\axi_araddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_araddr[22]),
        .Q(m00_axi_araddr[22]));
  FDCE \axi_araddr_reg[23] 
       (.C(m00_axi_aclk),
        .CE(\axi_araddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_araddr[23]),
        .Q(m00_axi_araddr[23]));
  FDCE \axi_araddr_reg[24] 
       (.C(m00_axi_aclk),
        .CE(\axi_araddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_araddr[24]),
        .Q(m00_axi_araddr[24]));
  FDCE \axi_araddr_reg[25] 
       (.C(m00_axi_aclk),
        .CE(\axi_araddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_araddr[25]),
        .Q(m00_axi_araddr[25]));
  FDCE \axi_araddr_reg[26] 
       (.C(m00_axi_aclk),
        .CE(\axi_araddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_araddr[26]),
        .Q(m00_axi_araddr[26]));
  FDCE \axi_araddr_reg[27] 
       (.C(m00_axi_aclk),
        .CE(\axi_araddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_araddr[27]),
        .Q(m00_axi_araddr[27]));
  FDCE \axi_araddr_reg[28] 
       (.C(m00_axi_aclk),
        .CE(\axi_araddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_araddr[28]),
        .Q(m00_axi_araddr[28]));
  FDCE \axi_araddr_reg[29] 
       (.C(m00_axi_aclk),
        .CE(\axi_araddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_araddr[29]),
        .Q(m00_axi_araddr[29]));
  FDCE \axi_araddr_reg[2] 
       (.C(m00_axi_aclk),
        .CE(\axi_araddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_araddr[2]),
        .Q(m00_axi_araddr[2]));
  FDCE \axi_araddr_reg[30] 
       (.C(m00_axi_aclk),
        .CE(\axi_araddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_araddr[30]),
        .Q(m00_axi_araddr[30]));
  FDCE \axi_araddr_reg[31] 
       (.C(m00_axi_aclk),
        .CE(\axi_araddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_araddr[31]),
        .Q(m00_axi_araddr[31]));
  FDCE \axi_araddr_reg[3] 
       (.C(m00_axi_aclk),
        .CE(\axi_araddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_araddr[3]),
        .Q(m00_axi_araddr[3]));
  FDCE \axi_araddr_reg[4] 
       (.C(m00_axi_aclk),
        .CE(\axi_araddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_araddr[4]),
        .Q(m00_axi_araddr[4]));
  FDCE \axi_araddr_reg[5] 
       (.C(m00_axi_aclk),
        .CE(\axi_araddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_araddr[5]),
        .Q(m00_axi_araddr[5]));
  FDCE \axi_araddr_reg[6] 
       (.C(m00_axi_aclk),
        .CE(\axi_araddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_araddr[6]),
        .Q(m00_axi_araddr[6]));
  FDCE \axi_araddr_reg[7] 
       (.C(m00_axi_aclk),
        .CE(\axi_araddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_araddr[7]),
        .Q(m00_axi_araddr[7]));
  FDCE \axi_araddr_reg[8] 
       (.C(m00_axi_aclk),
        .CE(\axi_araddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_araddr[8]),
        .Q(m00_axi_araddr[8]));
  FDCE \axi_araddr_reg[9] 
       (.C(m00_axi_aclk),
        .CE(\axi_araddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_araddr[9]),
        .Q(m00_axi_araddr[9]));
  LUT4 #(
    .INIT(16'h00E0)) 
    \axi_arlen[0]_i_1 
       (.I0(ila_smax_reads_remaining[0]),
        .I1(axi_arlen15_out),
        .I2(out[0]),
        .I3(current_state[3]),
        .O(axi_arlen[0]));
  LUT4 #(
    .INIT(16'h00E0)) 
    \axi_arlen[1]_i_1 
       (.I0(ila_smax_reads_remaining[1]),
        .I1(axi_arlen15_out),
        .I2(out[0]),
        .I3(current_state[3]),
        .O(axi_arlen[1]));
  LUT4 #(
    .INIT(16'h00E0)) 
    \axi_arlen[2]_i_1 
       (.I0(ila_smax_reads_remaining[2]),
        .I1(axi_arlen15_out),
        .I2(out[0]),
        .I3(current_state[3]),
        .O(axi_arlen[2]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \axi_arlen[2]_i_2 
       (.I0(\axi_arlen[7]_i_3_n_0 ),
        .I1(ila_smax_calculated),
        .O(axi_arlen15_out));
  LUT5 #(
    .INIT(32'h0000AE00)) 
    \axi_arlen[3]_i_1 
       (.I0(ila_smax_reads_remaining[3]),
        .I1(\axi_arlen[7]_i_3_n_0 ),
        .I2(ila_smax_calculated),
        .I3(out[0]),
        .I4(current_state[3]),
        .O(axi_arlen[3]));
  LUT5 #(
    .INIT(32'h0000AE00)) 
    \axi_arlen[4]_i_1 
       (.I0(ila_smax_reads_remaining[4]),
        .I1(\axi_arlen[7]_i_3_n_0 ),
        .I2(ila_smax_calculated),
        .I3(out[0]),
        .I4(current_state[3]),
        .O(axi_arlen[4]));
  LUT5 #(
    .INIT(32'h0000AE00)) 
    \axi_arlen[5]_i_1 
       (.I0(ila_smax_reads_remaining[5]),
        .I1(\axi_arlen[7]_i_3_n_0 ),
        .I2(ila_smax_calculated),
        .I3(out[0]),
        .I4(current_state[3]),
        .O(axi_arlen[5]));
  LUT5 #(
    .INIT(32'h0000AE00)) 
    \axi_arlen[6]_i_1 
       (.I0(ila_smax_reads_remaining[6]),
        .I1(\axi_arlen[7]_i_3_n_0 ),
        .I2(ila_smax_calculated),
        .I3(out[0]),
        .I4(current_state[3]),
        .O(axi_arlen[6]));
  LUT5 #(
    .INIT(32'h00010101)) 
    \axi_arlen[7]_i_1 
       (.I0(out[1]),
        .I1(current_state[3]),
        .I2(current_state[1]),
        .I3(ila_smax_calculated),
        .I4(out[0]),
        .O(\axi_arlen[7]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0000AE00)) 
    \axi_arlen[7]_i_2 
       (.I0(ila_smax_reads_remaining[7]),
        .I1(\axi_arlen[7]_i_3_n_0 ),
        .I2(ila_smax_calculated),
        .I3(out[0]),
        .I4(current_state[3]),
        .O(axi_arlen[7]));
  LUT3 #(
    .INIT(8'hFE)) 
    \axi_arlen[7]_i_3 
       (.I0(ila_smax_reads_remaining[12]),
        .I1(\axi_arlen[7]_i_4_n_0 ),
        .I2(ila_smax_reads_remaining[13]),
        .O(\axi_arlen[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \axi_arlen[7]_i_4 
       (.I0(ila_smax_reads_remaining[15]),
        .I1(ila_smax_reads_remaining[10]),
        .I2(ila_smax_reads_remaining[8]),
        .I3(ila_smax_reads_remaining[9]),
        .I4(ila_smax_reads_remaining[11]),
        .I5(ila_smax_reads_remaining[14]),
        .O(\axi_arlen[7]_i_4_n_0 ));
  FDCE \axi_arlen_reg[0] 
       (.C(m00_axi_aclk),
        .CE(\axi_arlen[7]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_arlen[0]),
        .Q(m00_axi_arlen[0]));
  FDCE \axi_arlen_reg[1] 
       (.C(m00_axi_aclk),
        .CE(\axi_arlen[7]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_arlen[1]),
        .Q(m00_axi_arlen[1]));
  FDCE \axi_arlen_reg[2] 
       (.C(m00_axi_aclk),
        .CE(\axi_arlen[7]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_arlen[2]),
        .Q(m00_axi_arlen[2]));
  FDCE \axi_arlen_reg[3] 
       (.C(m00_axi_aclk),
        .CE(\axi_arlen[7]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_arlen[3]),
        .Q(m00_axi_arlen[3]));
  FDCE \axi_arlen_reg[4] 
       (.C(m00_axi_aclk),
        .CE(\axi_arlen[7]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_arlen[4]),
        .Q(m00_axi_arlen[4]));
  FDCE \axi_arlen_reg[5] 
       (.C(m00_axi_aclk),
        .CE(\axi_arlen[7]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_arlen[5]),
        .Q(m00_axi_arlen[5]));
  FDCE \axi_arlen_reg[6] 
       (.C(m00_axi_aclk),
        .CE(\axi_arlen[7]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_arlen[6]),
        .Q(m00_axi_arlen[6]));
  FDCE \axi_arlen_reg[7] 
       (.C(m00_axi_aclk),
        .CE(\axi_arlen[7]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_arlen[7]),
        .Q(m00_axi_arlen[7]));
  LUT6 #(
    .INIT(64'hFFF3FFF400000004)) 
    axi_arvalid_i_1
       (.I0(m00_axi_arready),
        .I1(current_state[1]),
        .I2(out[1]),
        .I3(current_state[3]),
        .I4(out[0]),
        .I5(m00_axi_arvalid),
        .O(axi_arvalid_i_1_n_0));
  FDCE axi_arvalid_reg
       (.C(m00_axi_aclk),
        .CE(1'b1),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(axi_arvalid_i_1_n_0),
        .Q(m00_axi_arvalid));
  LUT3 #(
    .INIT(8'h20)) 
    \axi_awaddr[0]_i_1 
       (.I0(\ila_smax_output_data_addr_reg[31] [0]),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(axi_awaddr[0]));
  LUT3 #(
    .INIT(8'h20)) 
    \axi_awaddr[10]_i_1 
       (.I0(\ila_smax_output_data_addr_reg[31] [10]),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(axi_awaddr[10]));
  LUT3 #(
    .INIT(8'h20)) 
    \axi_awaddr[11]_i_1 
       (.I0(\ila_smax_output_data_addr_reg[31] [11]),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(axi_awaddr[11]));
  LUT3 #(
    .INIT(8'h20)) 
    \axi_awaddr[12]_i_1 
       (.I0(\ila_smax_output_data_addr_reg[31] [12]),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(axi_awaddr[12]));
  LUT3 #(
    .INIT(8'h20)) 
    \axi_awaddr[13]_i_1 
       (.I0(\ila_smax_output_data_addr_reg[31] [13]),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(axi_awaddr[13]));
  LUT3 #(
    .INIT(8'h20)) 
    \axi_awaddr[14]_i_1 
       (.I0(\ila_smax_output_data_addr_reg[31] [14]),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(axi_awaddr[14]));
  LUT3 #(
    .INIT(8'h20)) 
    \axi_awaddr[15]_i_1 
       (.I0(\ila_smax_output_data_addr_reg[31] [15]),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(axi_awaddr[15]));
  LUT3 #(
    .INIT(8'h20)) 
    \axi_awaddr[16]_i_1 
       (.I0(\ila_smax_output_data_addr_reg[31] [16]),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(axi_awaddr[16]));
  LUT3 #(
    .INIT(8'h20)) 
    \axi_awaddr[17]_i_1 
       (.I0(\ila_smax_output_data_addr_reg[31] [17]),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(axi_awaddr[17]));
  LUT3 #(
    .INIT(8'h20)) 
    \axi_awaddr[18]_i_1 
       (.I0(\ila_smax_output_data_addr_reg[31] [18]),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(axi_awaddr[18]));
  LUT3 #(
    .INIT(8'h20)) 
    \axi_awaddr[19]_i_1 
       (.I0(\ila_smax_output_data_addr_reg[31] [19]),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(axi_awaddr[19]));
  LUT3 #(
    .INIT(8'h20)) 
    \axi_awaddr[1]_i_1 
       (.I0(\ila_smax_output_data_addr_reg[31] [1]),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(axi_awaddr[1]));
  LUT3 #(
    .INIT(8'h20)) 
    \axi_awaddr[20]_i_1 
       (.I0(\ila_smax_output_data_addr_reg[31] [20]),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(axi_awaddr[20]));
  LUT3 #(
    .INIT(8'h20)) 
    \axi_awaddr[21]_i_1 
       (.I0(\ila_smax_output_data_addr_reg[31] [21]),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(axi_awaddr[21]));
  LUT3 #(
    .INIT(8'h20)) 
    \axi_awaddr[22]_i_1 
       (.I0(\ila_smax_output_data_addr_reg[31] [22]),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(axi_awaddr[22]));
  LUT3 #(
    .INIT(8'h20)) 
    \axi_awaddr[23]_i_1 
       (.I0(\ila_smax_output_data_addr_reg[31] [23]),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(axi_awaddr[23]));
  LUT3 #(
    .INIT(8'h20)) 
    \axi_awaddr[24]_i_1 
       (.I0(\ila_smax_output_data_addr_reg[31] [24]),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(axi_awaddr[24]));
  LUT3 #(
    .INIT(8'h20)) 
    \axi_awaddr[25]_i_1 
       (.I0(\ila_smax_output_data_addr_reg[31] [25]),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(axi_awaddr[25]));
  LUT3 #(
    .INIT(8'h20)) 
    \axi_awaddr[26]_i_1 
       (.I0(\ila_smax_output_data_addr_reg[31] [26]),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(axi_awaddr[26]));
  LUT3 #(
    .INIT(8'h20)) 
    \axi_awaddr[27]_i_1 
       (.I0(\ila_smax_output_data_addr_reg[31] [27]),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(axi_awaddr[27]));
  LUT3 #(
    .INIT(8'h20)) 
    \axi_awaddr[28]_i_1 
       (.I0(\ila_smax_output_data_addr_reg[31] [28]),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(axi_awaddr[28]));
  LUT3 #(
    .INIT(8'h20)) 
    \axi_awaddr[29]_i_1 
       (.I0(\ila_smax_output_data_addr_reg[31] [29]),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(axi_awaddr[29]));
  LUT3 #(
    .INIT(8'h20)) 
    \axi_awaddr[2]_i_1 
       (.I0(\ila_smax_output_data_addr_reg[31] [2]),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(axi_awaddr[2]));
  LUT3 #(
    .INIT(8'h20)) 
    \axi_awaddr[30]_i_1 
       (.I0(\ila_smax_output_data_addr_reg[31] [30]),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(axi_awaddr[30]));
  LUT4 #(
    .INIT(16'h1001)) 
    \axi_awaddr[31]_i_1 
       (.I0(current_state[3]),
        .I1(out[0]),
        .I2(current_state[1]),
        .I3(out[1]),
        .O(\axi_awaddr[31]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h20)) 
    \axi_awaddr[31]_i_2 
       (.I0(\ila_smax_output_data_addr_reg[31] [31]),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(axi_awaddr[31]));
  LUT3 #(
    .INIT(8'h20)) 
    \axi_awaddr[3]_i_1 
       (.I0(\ila_smax_output_data_addr_reg[31] [3]),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(axi_awaddr[3]));
  LUT3 #(
    .INIT(8'h20)) 
    \axi_awaddr[4]_i_1 
       (.I0(\ila_smax_output_data_addr_reg[31] [4]),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(axi_awaddr[4]));
  LUT3 #(
    .INIT(8'h20)) 
    \axi_awaddr[5]_i_1 
       (.I0(\ila_smax_output_data_addr_reg[31] [5]),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(axi_awaddr[5]));
  LUT3 #(
    .INIT(8'h20)) 
    \axi_awaddr[6]_i_1 
       (.I0(\ila_smax_output_data_addr_reg[31] [6]),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(axi_awaddr[6]));
  LUT3 #(
    .INIT(8'h20)) 
    \axi_awaddr[7]_i_1 
       (.I0(\ila_smax_output_data_addr_reg[31] [7]),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(axi_awaddr[7]));
  LUT3 #(
    .INIT(8'h20)) 
    \axi_awaddr[8]_i_1 
       (.I0(\ila_smax_output_data_addr_reg[31] [8]),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(axi_awaddr[8]));
  LUT3 #(
    .INIT(8'h20)) 
    \axi_awaddr[9]_i_1 
       (.I0(\ila_smax_output_data_addr_reg[31] [9]),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(axi_awaddr[9]));
  FDCE \axi_awaddr_reg[0] 
       (.C(m00_axi_aclk),
        .CE(\axi_awaddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_awaddr[0]),
        .Q(m00_axi_awaddr[0]));
  FDCE \axi_awaddr_reg[10] 
       (.C(m00_axi_aclk),
        .CE(\axi_awaddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_awaddr[10]),
        .Q(m00_axi_awaddr[10]));
  FDCE \axi_awaddr_reg[11] 
       (.C(m00_axi_aclk),
        .CE(\axi_awaddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_awaddr[11]),
        .Q(m00_axi_awaddr[11]));
  FDCE \axi_awaddr_reg[12] 
       (.C(m00_axi_aclk),
        .CE(\axi_awaddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_awaddr[12]),
        .Q(m00_axi_awaddr[12]));
  FDCE \axi_awaddr_reg[13] 
       (.C(m00_axi_aclk),
        .CE(\axi_awaddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_awaddr[13]),
        .Q(m00_axi_awaddr[13]));
  FDCE \axi_awaddr_reg[14] 
       (.C(m00_axi_aclk),
        .CE(\axi_awaddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_awaddr[14]),
        .Q(m00_axi_awaddr[14]));
  FDCE \axi_awaddr_reg[15] 
       (.C(m00_axi_aclk),
        .CE(\axi_awaddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_awaddr[15]),
        .Q(m00_axi_awaddr[15]));
  FDCE \axi_awaddr_reg[16] 
       (.C(m00_axi_aclk),
        .CE(\axi_awaddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_awaddr[16]),
        .Q(m00_axi_awaddr[16]));
  FDCE \axi_awaddr_reg[17] 
       (.C(m00_axi_aclk),
        .CE(\axi_awaddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_awaddr[17]),
        .Q(m00_axi_awaddr[17]));
  FDCE \axi_awaddr_reg[18] 
       (.C(m00_axi_aclk),
        .CE(\axi_awaddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_awaddr[18]),
        .Q(m00_axi_awaddr[18]));
  FDCE \axi_awaddr_reg[19] 
       (.C(m00_axi_aclk),
        .CE(\axi_awaddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_awaddr[19]),
        .Q(m00_axi_awaddr[19]));
  FDCE \axi_awaddr_reg[1] 
       (.C(m00_axi_aclk),
        .CE(\axi_awaddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_awaddr[1]),
        .Q(m00_axi_awaddr[1]));
  FDCE \axi_awaddr_reg[20] 
       (.C(m00_axi_aclk),
        .CE(\axi_awaddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_awaddr[20]),
        .Q(m00_axi_awaddr[20]));
  FDCE \axi_awaddr_reg[21] 
       (.C(m00_axi_aclk),
        .CE(\axi_awaddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_awaddr[21]),
        .Q(m00_axi_awaddr[21]));
  FDCE \axi_awaddr_reg[22] 
       (.C(m00_axi_aclk),
        .CE(\axi_awaddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_awaddr[22]),
        .Q(m00_axi_awaddr[22]));
  FDCE \axi_awaddr_reg[23] 
       (.C(m00_axi_aclk),
        .CE(\axi_awaddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_awaddr[23]),
        .Q(m00_axi_awaddr[23]));
  FDCE \axi_awaddr_reg[24] 
       (.C(m00_axi_aclk),
        .CE(\axi_awaddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_awaddr[24]),
        .Q(m00_axi_awaddr[24]));
  FDCE \axi_awaddr_reg[25] 
       (.C(m00_axi_aclk),
        .CE(\axi_awaddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_awaddr[25]),
        .Q(m00_axi_awaddr[25]));
  FDCE \axi_awaddr_reg[26] 
       (.C(m00_axi_aclk),
        .CE(\axi_awaddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_awaddr[26]),
        .Q(m00_axi_awaddr[26]));
  FDCE \axi_awaddr_reg[27] 
       (.C(m00_axi_aclk),
        .CE(\axi_awaddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_awaddr[27]),
        .Q(m00_axi_awaddr[27]));
  FDCE \axi_awaddr_reg[28] 
       (.C(m00_axi_aclk),
        .CE(\axi_awaddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_awaddr[28]),
        .Q(m00_axi_awaddr[28]));
  FDCE \axi_awaddr_reg[29] 
       (.C(m00_axi_aclk),
        .CE(\axi_awaddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_awaddr[29]),
        .Q(m00_axi_awaddr[29]));
  FDCE \axi_awaddr_reg[2] 
       (.C(m00_axi_aclk),
        .CE(\axi_awaddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_awaddr[2]),
        .Q(m00_axi_awaddr[2]));
  FDCE \axi_awaddr_reg[30] 
       (.C(m00_axi_aclk),
        .CE(\axi_awaddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_awaddr[30]),
        .Q(m00_axi_awaddr[30]));
  FDCE \axi_awaddr_reg[31] 
       (.C(m00_axi_aclk),
        .CE(\axi_awaddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_awaddr[31]),
        .Q(m00_axi_awaddr[31]));
  FDCE \axi_awaddr_reg[3] 
       (.C(m00_axi_aclk),
        .CE(\axi_awaddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_awaddr[3]),
        .Q(m00_axi_awaddr[3]));
  FDCE \axi_awaddr_reg[4] 
       (.C(m00_axi_aclk),
        .CE(\axi_awaddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_awaddr[4]),
        .Q(m00_axi_awaddr[4]));
  FDCE \axi_awaddr_reg[5] 
       (.C(m00_axi_aclk),
        .CE(\axi_awaddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_awaddr[5]),
        .Q(m00_axi_awaddr[5]));
  FDCE \axi_awaddr_reg[6] 
       (.C(m00_axi_aclk),
        .CE(\axi_awaddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_awaddr[6]),
        .Q(m00_axi_awaddr[6]));
  FDCE \axi_awaddr_reg[7] 
       (.C(m00_axi_aclk),
        .CE(\axi_awaddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_awaddr[7]),
        .Q(m00_axi_awaddr[7]));
  FDCE \axi_awaddr_reg[8] 
       (.C(m00_axi_aclk),
        .CE(\axi_awaddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_awaddr[8]),
        .Q(m00_axi_awaddr[8]));
  FDCE \axi_awaddr_reg[9] 
       (.C(m00_axi_aclk),
        .CE(\axi_awaddr[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(axi_awaddr[9]),
        .Q(m00_axi_awaddr[9]));
  LUT5 #(
    .INIT(32'h00AE0000)) 
    \axi_awlen[0]_i_1 
       (.I0(ila_smax_writes_remaining[0]),
        .I1(\axi_awlen[7]_i_3_n_0 ),
        .I2(ila_smax_calculated),
        .I3(current_state[3]),
        .I4(out[1]),
        .O(axi_awlen[0]));
  LUT5 #(
    .INIT(32'h00AE0000)) 
    \axi_awlen[1]_i_1 
       (.I0(ila_smax_writes_remaining[1]),
        .I1(\axi_awlen[7]_i_3_n_0 ),
        .I2(ila_smax_calculated),
        .I3(current_state[3]),
        .I4(out[1]),
        .O(axi_awlen[1]));
  LUT5 #(
    .INIT(32'h00AE0000)) 
    \axi_awlen[2]_i_1 
       (.I0(ila_smax_writes_remaining[2]),
        .I1(\axi_awlen[7]_i_3_n_0 ),
        .I2(ila_smax_calculated),
        .I3(current_state[3]),
        .I4(out[1]),
        .O(axi_awlen[2]));
  LUT5 #(
    .INIT(32'h00AE0000)) 
    \axi_awlen[3]_i_1 
       (.I0(ila_smax_writes_remaining[3]),
        .I1(\axi_awlen[7]_i_3_n_0 ),
        .I2(ila_smax_calculated),
        .I3(current_state[3]),
        .I4(out[1]),
        .O(axi_awlen[3]));
  LUT5 #(
    .INIT(32'h00AE0000)) 
    \axi_awlen[4]_i_1 
       (.I0(ila_smax_writes_remaining[4]),
        .I1(\axi_awlen[7]_i_3_n_0 ),
        .I2(ila_smax_calculated),
        .I3(current_state[3]),
        .I4(out[1]),
        .O(axi_awlen[4]));
  LUT5 #(
    .INIT(32'h00AE0000)) 
    \axi_awlen[5]_i_1 
       (.I0(ila_smax_writes_remaining[5]),
        .I1(\axi_awlen[7]_i_3_n_0 ),
        .I2(ila_smax_calculated),
        .I3(current_state[3]),
        .I4(out[1]),
        .O(axi_awlen[5]));
  LUT5 #(
    .INIT(32'h00AE0000)) 
    \axi_awlen[6]_i_1 
       (.I0(ila_smax_writes_remaining[6]),
        .I1(\axi_awlen[7]_i_3_n_0 ),
        .I2(ila_smax_calculated),
        .I3(current_state[3]),
        .I4(out[1]),
        .O(axi_awlen[6]));
  LUT5 #(
    .INIT(32'h01000003)) 
    \axi_awlen[7]_i_1 
       (.I0(ila_smax_calculated),
        .I1(current_state[1]),
        .I2(current_state[3]),
        .I3(out[0]),
        .I4(out[1]),
        .O(\axi_awlen[7]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00AE0000)) 
    \axi_awlen[7]_i_2 
       (.I0(ila_smax_writes_remaining[7]),
        .I1(\axi_awlen[7]_i_3_n_0 ),
        .I2(ila_smax_calculated),
        .I3(current_state[3]),
        .I4(out[1]),
        .O(axi_awlen[7]));
  LUT3 #(
    .INIT(8'hFE)) 
    \axi_awlen[7]_i_3 
       (.I0(ila_smax_writes_remaining[13]),
        .I1(\axi_awlen[7]_i_4_n_0 ),
        .I2(ila_smax_writes_remaining[12]),
        .O(\axi_awlen[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \axi_awlen[7]_i_4 
       (.I0(ila_smax_writes_remaining[15]),
        .I1(ila_smax_writes_remaining[10]),
        .I2(ila_smax_writes_remaining[8]),
        .I3(ila_smax_writes_remaining[9]),
        .I4(ila_smax_writes_remaining[11]),
        .I5(ila_smax_writes_remaining[14]),
        .O(\axi_awlen[7]_i_4_n_0 ));
  FDCE \axi_awlen_reg[0] 
       (.C(m00_axi_aclk),
        .CE(\axi_awlen[7]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(axi_awlen[0]),
        .Q(ila_smax_axi_awlen[0]));
  FDCE \axi_awlen_reg[1] 
       (.C(m00_axi_aclk),
        .CE(\axi_awlen[7]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(axi_awlen[1]),
        .Q(ila_smax_axi_awlen[1]));
  FDCE \axi_awlen_reg[2] 
       (.C(m00_axi_aclk),
        .CE(\axi_awlen[7]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(axi_awlen[2]),
        .Q(ila_smax_axi_awlen[2]));
  FDCE \axi_awlen_reg[3] 
       (.C(m00_axi_aclk),
        .CE(\axi_awlen[7]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(axi_awlen[3]),
        .Q(ila_smax_axi_awlen[3]));
  FDCE \axi_awlen_reg[4] 
       (.C(m00_axi_aclk),
        .CE(\axi_awlen[7]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(axi_awlen[4]),
        .Q(ila_smax_axi_awlen[4]));
  FDCE \axi_awlen_reg[5] 
       (.C(m00_axi_aclk),
        .CE(\axi_awlen[7]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(axi_awlen[5]),
        .Q(ila_smax_axi_awlen[5]));
  FDCE \axi_awlen_reg[6] 
       (.C(m00_axi_aclk),
        .CE(\axi_awlen[7]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(axi_awlen[6]),
        .Q(ila_smax_axi_awlen[6]));
  FDCE \axi_awlen_reg[7] 
       (.C(m00_axi_aclk),
        .CE(\axi_awlen[7]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(axi_awlen[7]),
        .Q(ila_smax_axi_awlen[7]));
  LUT6 #(
    .INIT(64'hCDFFFFFC01000000)) 
    axi_awvalid_i_1
       (.I0(m00_axi_awready),
        .I1(current_state[3]),
        .I2(out[0]),
        .I3(current_state[1]),
        .I4(out[1]),
        .I5(m00_axi_awvalid),
        .O(axi_awvalid_i_1_n_0));
  FDCE axi_awvalid_reg
       (.C(m00_axi_aclk),
        .CE(1'b1),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(axi_awvalid_i_1_n_0),
        .Q(m00_axi_awvalid));
  LUT5 #(
    .INIT(32'hFF3E0030)) 
    calculated_i_1
       (.I0(out[1]),
        .I1(current_state[1]),
        .I2(out[0]),
        .I3(current_state[3]),
        .I4(ila_smax_calculated),
        .O(calculated_i_1_n_0));
  FDCE calculated_reg
       (.C(m00_axi_aclk),
        .CE(1'b1),
        .CLR(m00_axi_aresetn_0),
        .D(calculated_i_1_n_0),
        .Q(ila_smax_calculated));
  LUT3 #(
    .INIT(8'h04)) 
    \channel_counter[0]_i_1 
       (.I0(current_state[3]),
        .I1(out[1]),
        .I2(ila_smax_channel_counter[0]),
        .O(\channel_counter[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h20)) 
    \channel_counter[10]_i_1 
       (.I0(\channel_counter_reg[12]_i_2_n_6 ),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(channel_counter[10]));
  LUT3 #(
    .INIT(8'h20)) 
    \channel_counter[11]_i_1 
       (.I0(\channel_counter_reg[12]_i_2_n_5 ),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(channel_counter[11]));
  LUT3 #(
    .INIT(8'h20)) 
    \channel_counter[12]_i_1 
       (.I0(\channel_counter_reg[12]_i_2_n_4 ),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(channel_counter[12]));
  LUT1 #(
    .INIT(2'h2)) 
    \channel_counter[12]_i_3 
       (.I0(ila_smax_channel_counter[12]),
        .O(\channel_counter[12]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \channel_counter[12]_i_4 
       (.I0(ila_smax_channel_counter[11]),
        .O(\channel_counter[12]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \channel_counter[12]_i_5 
       (.I0(ila_smax_channel_counter[10]),
        .O(\channel_counter[12]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \channel_counter[12]_i_6 
       (.I0(ila_smax_channel_counter[9]),
        .O(\channel_counter[12]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'h20)) 
    \channel_counter[13]_i_1 
       (.I0(\channel_counter_reg[15]_i_3_n_7 ),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(channel_counter[13]));
  LUT3 #(
    .INIT(8'h20)) 
    \channel_counter[14]_i_1 
       (.I0(\channel_counter_reg[15]_i_3_n_6 ),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(channel_counter[14]));
  LUT6 #(
    .INIT(64'h0000000001810101)) 
    \channel_counter[15]_i_1 
       (.I0(current_state[1]),
        .I1(out[0]),
        .I2(out[1]),
        .I3(next_state29_in),
        .I4(outbuff_rd_en),
        .I5(current_state[3]),
        .O(\channel_counter[15]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h20)) 
    \channel_counter[15]_i_2 
       (.I0(\channel_counter_reg[15]_i_3_n_5 ),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(channel_counter[15]));
  LUT1 #(
    .INIT(2'h2)) 
    \channel_counter[15]_i_4 
       (.I0(ila_smax_channel_counter[15]),
        .O(\channel_counter[15]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \channel_counter[15]_i_5 
       (.I0(ila_smax_channel_counter[14]),
        .O(\channel_counter[15]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \channel_counter[15]_i_6 
       (.I0(ila_smax_channel_counter[13]),
        .O(\channel_counter[15]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'h20)) 
    \channel_counter[1]_i_1 
       (.I0(\channel_counter_reg[4]_i_2_n_7 ),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(channel_counter[1]));
  LUT3 #(
    .INIT(8'h20)) 
    \channel_counter[2]_i_1 
       (.I0(\channel_counter_reg[4]_i_2_n_6 ),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(channel_counter[2]));
  LUT3 #(
    .INIT(8'h20)) 
    \channel_counter[3]_i_1 
       (.I0(\channel_counter_reg[4]_i_2_n_5 ),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(channel_counter[3]));
  LUT3 #(
    .INIT(8'h20)) 
    \channel_counter[4]_i_1 
       (.I0(\channel_counter_reg[4]_i_2_n_4 ),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(channel_counter[4]));
  LUT1 #(
    .INIT(2'h2)) 
    \channel_counter[4]_i_3 
       (.I0(ila_smax_channel_counter[4]),
        .O(\channel_counter[4]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \channel_counter[4]_i_4 
       (.I0(ila_smax_channel_counter[3]),
        .O(\channel_counter[4]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \channel_counter[4]_i_5 
       (.I0(ila_smax_channel_counter[2]),
        .O(\channel_counter[4]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \channel_counter[4]_i_6 
       (.I0(ila_smax_channel_counter[1]),
        .O(\channel_counter[4]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'h20)) 
    \channel_counter[5]_i_1 
       (.I0(\channel_counter_reg[8]_i_2_n_7 ),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(channel_counter[5]));
  LUT3 #(
    .INIT(8'h20)) 
    \channel_counter[6]_i_1 
       (.I0(\channel_counter_reg[8]_i_2_n_6 ),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(channel_counter[6]));
  LUT3 #(
    .INIT(8'h20)) 
    \channel_counter[7]_i_1 
       (.I0(\channel_counter_reg[8]_i_2_n_5 ),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(channel_counter[7]));
  LUT3 #(
    .INIT(8'h20)) 
    \channel_counter[8]_i_1 
       (.I0(\channel_counter_reg[8]_i_2_n_4 ),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(channel_counter[8]));
  LUT1 #(
    .INIT(2'h2)) 
    \channel_counter[8]_i_3 
       (.I0(ila_smax_channel_counter[8]),
        .O(\channel_counter[8]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \channel_counter[8]_i_4 
       (.I0(ila_smax_channel_counter[7]),
        .O(\channel_counter[8]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \channel_counter[8]_i_5 
       (.I0(ila_smax_channel_counter[6]),
        .O(\channel_counter[8]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \channel_counter[8]_i_6 
       (.I0(ila_smax_channel_counter[5]),
        .O(\channel_counter[8]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'h20)) 
    \channel_counter[9]_i_1 
       (.I0(\channel_counter_reg[12]_i_2_n_7 ),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(channel_counter[9]));
  FDCE \channel_counter_reg[0] 
       (.C(m00_axi_aclk),
        .CE(\channel_counter[15]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(\channel_counter[0]_i_1_n_0 ),
        .Q(ila_smax_channel_counter[0]));
  FDCE \channel_counter_reg[10] 
       (.C(m00_axi_aclk),
        .CE(\channel_counter[15]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(channel_counter[10]),
        .Q(ila_smax_channel_counter[10]));
  FDCE \channel_counter_reg[11] 
       (.C(m00_axi_aclk),
        .CE(\channel_counter[15]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(channel_counter[11]),
        .Q(ila_smax_channel_counter[11]));
  FDCE \channel_counter_reg[12] 
       (.C(m00_axi_aclk),
        .CE(\channel_counter[15]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(channel_counter[12]),
        .Q(ila_smax_channel_counter[12]));
  CARRY4 \channel_counter_reg[12]_i_2 
       (.CI(\channel_counter_reg[8]_i_2_n_0 ),
        .CO({\channel_counter_reg[12]_i_2_n_0 ,\channel_counter_reg[12]_i_2_n_1 ,\channel_counter_reg[12]_i_2_n_2 ,\channel_counter_reg[12]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\channel_counter_reg[12]_i_2_n_4 ,\channel_counter_reg[12]_i_2_n_5 ,\channel_counter_reg[12]_i_2_n_6 ,\channel_counter_reg[12]_i_2_n_7 }),
        .S({\channel_counter[12]_i_3_n_0 ,\channel_counter[12]_i_4_n_0 ,\channel_counter[12]_i_5_n_0 ,\channel_counter[12]_i_6_n_0 }));
  FDCE \channel_counter_reg[13] 
       (.C(m00_axi_aclk),
        .CE(\channel_counter[15]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(channel_counter[13]),
        .Q(ila_smax_channel_counter[13]));
  FDCE \channel_counter_reg[14] 
       (.C(m00_axi_aclk),
        .CE(\channel_counter[15]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(channel_counter[14]),
        .Q(ila_smax_channel_counter[14]));
  FDCE \channel_counter_reg[15] 
       (.C(m00_axi_aclk),
        .CE(\channel_counter[15]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(channel_counter[15]),
        .Q(ila_smax_channel_counter[15]));
  CARRY4 \channel_counter_reg[15]_i_3 
       (.CI(\channel_counter_reg[12]_i_2_n_0 ),
        .CO({\NLW_channel_counter_reg[15]_i_3_CO_UNCONNECTED [3:2],\channel_counter_reg[15]_i_3_n_2 ,\channel_counter_reg[15]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_channel_counter_reg[15]_i_3_O_UNCONNECTED [3],\channel_counter_reg[15]_i_3_n_5 ,\channel_counter_reg[15]_i_3_n_6 ,\channel_counter_reg[15]_i_3_n_7 }),
        .S({1'b0,\channel_counter[15]_i_4_n_0 ,\channel_counter[15]_i_5_n_0 ,\channel_counter[15]_i_6_n_0 }));
  FDCE \channel_counter_reg[1] 
       (.C(m00_axi_aclk),
        .CE(\channel_counter[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_0),
        .D(channel_counter[1]),
        .Q(ila_smax_channel_counter[1]));
  FDCE \channel_counter_reg[2] 
       (.C(m00_axi_aclk),
        .CE(\channel_counter[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_0),
        .D(channel_counter[2]),
        .Q(ila_smax_channel_counter[2]));
  FDCE \channel_counter_reg[3] 
       (.C(m00_axi_aclk),
        .CE(\channel_counter[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_0),
        .D(channel_counter[3]),
        .Q(ila_smax_channel_counter[3]));
  FDCE \channel_counter_reg[4] 
       (.C(m00_axi_aclk),
        .CE(\channel_counter[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_0),
        .D(channel_counter[4]),
        .Q(ila_smax_channel_counter[4]));
  CARRY4 \channel_counter_reg[4]_i_2 
       (.CI(1'b0),
        .CO({\channel_counter_reg[4]_i_2_n_0 ,\channel_counter_reg[4]_i_2_n_1 ,\channel_counter_reg[4]_i_2_n_2 ,\channel_counter_reg[4]_i_2_n_3 }),
        .CYINIT(ila_smax_channel_counter[0]),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\channel_counter_reg[4]_i_2_n_4 ,\channel_counter_reg[4]_i_2_n_5 ,\channel_counter_reg[4]_i_2_n_6 ,\channel_counter_reg[4]_i_2_n_7 }),
        .S({\channel_counter[4]_i_3_n_0 ,\channel_counter[4]_i_4_n_0 ,\channel_counter[4]_i_5_n_0 ,\channel_counter[4]_i_6_n_0 }));
  FDCE \channel_counter_reg[5] 
       (.C(m00_axi_aclk),
        .CE(\channel_counter[15]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(channel_counter[5]),
        .Q(ila_smax_channel_counter[5]));
  FDCE \channel_counter_reg[6] 
       (.C(m00_axi_aclk),
        .CE(\channel_counter[15]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(channel_counter[6]),
        .Q(ila_smax_channel_counter[6]));
  FDCE \channel_counter_reg[7] 
       (.C(m00_axi_aclk),
        .CE(\channel_counter[15]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(channel_counter[7]),
        .Q(ila_smax_channel_counter[7]));
  FDCE \channel_counter_reg[8] 
       (.C(m00_axi_aclk),
        .CE(\channel_counter[15]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(channel_counter[8]),
        .Q(ila_smax_channel_counter[8]));
  CARRY4 \channel_counter_reg[8]_i_2 
       (.CI(\channel_counter_reg[4]_i_2_n_0 ),
        .CO({\channel_counter_reg[8]_i_2_n_0 ,\channel_counter_reg[8]_i_2_n_1 ,\channel_counter_reg[8]_i_2_n_2 ,\channel_counter_reg[8]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\channel_counter_reg[8]_i_2_n_4 ,\channel_counter_reg[8]_i_2_n_5 ,\channel_counter_reg[8]_i_2_n_6 ,\channel_counter_reg[8]_i_2_n_7 }),
        .S({\channel_counter[8]_i_3_n_0 ,\channel_counter[8]_i_4_n_0 ,\channel_counter[8]_i_5_n_0 ,\channel_counter[8]_i_6_n_0 }));
  FDCE \channel_counter_reg[9] 
       (.C(m00_axi_aclk),
        .CE(\channel_counter[15]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(channel_counter[9]),
        .Q(ila_smax_channel_counter[9]));
  LUT3 #(
    .INIT(8'h04)) 
    \class_counter[0]_i_1 
       (.I0(current_state[3]),
        .I1(out[1]),
        .I2(ila_smax_class_counter[0]),
        .O(\class_counter[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h20)) 
    \class_counter[10]_i_1 
       (.I0(\class_counter_reg[12]_i_2_n_6 ),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(class_counter[10]));
  LUT3 #(
    .INIT(8'h20)) 
    \class_counter[11]_i_1 
       (.I0(\class_counter_reg[12]_i_2_n_5 ),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(class_counter[11]));
  LUT3 #(
    .INIT(8'h20)) 
    \class_counter[12]_i_1 
       (.I0(\class_counter_reg[12]_i_2_n_4 ),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(class_counter[12]));
  LUT1 #(
    .INIT(2'h2)) 
    \class_counter[12]_i_3 
       (.I0(ila_smax_class_counter[12]),
        .O(\class_counter[12]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \class_counter[12]_i_4 
       (.I0(ila_smax_class_counter[11]),
        .O(\class_counter[12]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \class_counter[12]_i_5 
       (.I0(ila_smax_class_counter[10]),
        .O(\class_counter[12]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \class_counter[12]_i_6 
       (.I0(ila_smax_class_counter[9]),
        .O(\class_counter[12]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'h20)) 
    \class_counter[13]_i_1 
       (.I0(\class_counter_reg[16]_i_2_n_7 ),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(class_counter[13]));
  LUT3 #(
    .INIT(8'h20)) 
    \class_counter[14]_i_1 
       (.I0(\class_counter_reg[16]_i_2_n_6 ),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(class_counter[14]));
  LUT3 #(
    .INIT(8'h20)) 
    \class_counter[15]_i_1 
       (.I0(\class_counter_reg[16]_i_2_n_5 ),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(class_counter[15]));
  LUT3 #(
    .INIT(8'h20)) 
    \class_counter[16]_i_1 
       (.I0(\class_counter_reg[16]_i_2_n_4 ),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(class_counter[16]));
  LUT1 #(
    .INIT(2'h2)) 
    \class_counter[16]_i_3 
       (.I0(ila_smax_class_counter[16]),
        .O(\class_counter[16]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \class_counter[16]_i_4 
       (.I0(ila_smax_class_counter[15]),
        .O(\class_counter[16]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \class_counter[16]_i_5 
       (.I0(ila_smax_class_counter[14]),
        .O(\class_counter[16]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \class_counter[16]_i_6 
       (.I0(ila_smax_class_counter[13]),
        .O(\class_counter[16]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'h20)) 
    \class_counter[17]_i_1 
       (.I0(\class_counter_reg[20]_i_2_n_7 ),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(class_counter[17]));
  LUT3 #(
    .INIT(8'h20)) 
    \class_counter[18]_i_1 
       (.I0(\class_counter_reg[20]_i_2_n_6 ),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(class_counter[18]));
  LUT3 #(
    .INIT(8'h20)) 
    \class_counter[19]_i_1 
       (.I0(\class_counter_reg[20]_i_2_n_5 ),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(class_counter[19]));
  LUT3 #(
    .INIT(8'h20)) 
    \class_counter[1]_i_1 
       (.I0(\class_counter_reg[4]_i_2_n_7 ),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(class_counter[1]));
  LUT3 #(
    .INIT(8'h20)) 
    \class_counter[20]_i_1 
       (.I0(\class_counter_reg[20]_i_2_n_4 ),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(class_counter[20]));
  LUT1 #(
    .INIT(2'h2)) 
    \class_counter[20]_i_3 
       (.I0(ila_smax_class_counter[20]),
        .O(\class_counter[20]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \class_counter[20]_i_4 
       (.I0(ila_smax_class_counter[19]),
        .O(\class_counter[20]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \class_counter[20]_i_5 
       (.I0(ila_smax_class_counter[18]),
        .O(\class_counter[20]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \class_counter[20]_i_6 
       (.I0(ila_smax_class_counter[17]),
        .O(\class_counter[20]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'h20)) 
    \class_counter[21]_i_1 
       (.I0(\class_counter_reg[24]_i_2_n_7 ),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(class_counter[21]));
  LUT3 #(
    .INIT(8'h20)) 
    \class_counter[22]_i_1 
       (.I0(\class_counter_reg[24]_i_2_n_6 ),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(class_counter[22]));
  LUT3 #(
    .INIT(8'h20)) 
    \class_counter[23]_i_1 
       (.I0(\class_counter_reg[24]_i_2_n_5 ),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(class_counter[23]));
  LUT3 #(
    .INIT(8'h20)) 
    \class_counter[24]_i_1 
       (.I0(\class_counter_reg[24]_i_2_n_4 ),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(class_counter[24]));
  LUT1 #(
    .INIT(2'h2)) 
    \class_counter[24]_i_3 
       (.I0(ila_smax_class_counter[24]),
        .O(\class_counter[24]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \class_counter[24]_i_4 
       (.I0(ila_smax_class_counter[23]),
        .O(\class_counter[24]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \class_counter[24]_i_5 
       (.I0(ila_smax_class_counter[22]),
        .O(\class_counter[24]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \class_counter[24]_i_6 
       (.I0(ila_smax_class_counter[21]),
        .O(\class_counter[24]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'h20)) 
    \class_counter[25]_i_1 
       (.I0(\class_counter_reg[28]_i_2_n_7 ),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(class_counter[25]));
  LUT3 #(
    .INIT(8'h20)) 
    \class_counter[26]_i_1 
       (.I0(\class_counter_reg[28]_i_2_n_6 ),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(class_counter[26]));
  LUT3 #(
    .INIT(8'h20)) 
    \class_counter[27]_i_1 
       (.I0(\class_counter_reg[28]_i_2_n_5 ),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(class_counter[27]));
  LUT3 #(
    .INIT(8'h20)) 
    \class_counter[28]_i_1 
       (.I0(\class_counter_reg[28]_i_2_n_4 ),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(class_counter[28]));
  LUT1 #(
    .INIT(2'h2)) 
    \class_counter[28]_i_3 
       (.I0(ila_smax_class_counter[28]),
        .O(\class_counter[28]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \class_counter[28]_i_4 
       (.I0(ila_smax_class_counter[27]),
        .O(\class_counter[28]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \class_counter[28]_i_5 
       (.I0(ila_smax_class_counter[26]),
        .O(\class_counter[28]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \class_counter[28]_i_6 
       (.I0(ila_smax_class_counter[25]),
        .O(\class_counter[28]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'h20)) 
    \class_counter[29]_i_1 
       (.I0(\class_counter_reg[31]_i_3_n_7 ),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(class_counter[29]));
  LUT3 #(
    .INIT(8'h20)) 
    \class_counter[2]_i_1 
       (.I0(\class_counter_reg[4]_i_2_n_6 ),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(class_counter[2]));
  LUT3 #(
    .INIT(8'h20)) 
    \class_counter[30]_i_1 
       (.I0(\class_counter_reg[31]_i_3_n_6 ),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(class_counter[30]));
  LUT6 #(
    .INIT(64'h0000000081010101)) 
    \class_counter[31]_i_1 
       (.I0(current_state[1]),
        .I1(out[0]),
        .I2(out[1]),
        .I3(next_state29_in),
        .I4(outbuff_rd_en),
        .I5(current_state[3]),
        .O(\class_counter[31]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h20)) 
    \class_counter[31]_i_2 
       (.I0(\class_counter_reg[31]_i_3_n_5 ),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(class_counter[31]));
  LUT1 #(
    .INIT(2'h2)) 
    \class_counter[31]_i_4 
       (.I0(ila_smax_class_counter[31]),
        .O(\class_counter[31]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \class_counter[31]_i_5 
       (.I0(ila_smax_class_counter[30]),
        .O(\class_counter[31]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \class_counter[31]_i_6 
       (.I0(ila_smax_class_counter[29]),
        .O(\class_counter[31]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'h20)) 
    \class_counter[3]_i_1 
       (.I0(\class_counter_reg[4]_i_2_n_5 ),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(class_counter[3]));
  LUT3 #(
    .INIT(8'h20)) 
    \class_counter[4]_i_1 
       (.I0(\class_counter_reg[4]_i_2_n_4 ),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(class_counter[4]));
  LUT1 #(
    .INIT(2'h2)) 
    \class_counter[4]_i_3 
       (.I0(ila_smax_class_counter[4]),
        .O(\class_counter[4]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \class_counter[4]_i_4 
       (.I0(ila_smax_class_counter[3]),
        .O(\class_counter[4]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \class_counter[4]_i_5 
       (.I0(ila_smax_class_counter[2]),
        .O(\class_counter[4]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \class_counter[4]_i_6 
       (.I0(ila_smax_class_counter[1]),
        .O(\class_counter[4]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'h20)) 
    \class_counter[5]_i_1 
       (.I0(\class_counter_reg[8]_i_2_n_7 ),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(class_counter[5]));
  LUT3 #(
    .INIT(8'h20)) 
    \class_counter[6]_i_1 
       (.I0(\class_counter_reg[8]_i_2_n_6 ),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(class_counter[6]));
  LUT3 #(
    .INIT(8'h20)) 
    \class_counter[7]_i_1 
       (.I0(\class_counter_reg[8]_i_2_n_5 ),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(class_counter[7]));
  LUT3 #(
    .INIT(8'h20)) 
    \class_counter[8]_i_1 
       (.I0(\class_counter_reg[8]_i_2_n_4 ),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(class_counter[8]));
  LUT1 #(
    .INIT(2'h2)) 
    \class_counter[8]_i_3 
       (.I0(ila_smax_class_counter[8]),
        .O(\class_counter[8]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \class_counter[8]_i_4 
       (.I0(ila_smax_class_counter[7]),
        .O(\class_counter[8]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \class_counter[8]_i_5 
       (.I0(ila_smax_class_counter[6]),
        .O(\class_counter[8]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \class_counter[8]_i_6 
       (.I0(ila_smax_class_counter[5]),
        .O(\class_counter[8]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'h20)) 
    \class_counter[9]_i_1 
       (.I0(\class_counter_reg[12]_i_2_n_7 ),
        .I1(current_state[3]),
        .I2(out[1]),
        .O(class_counter[9]));
  FDCE \class_counter_reg[0] 
       (.C(m00_axi_aclk),
        .CE(\class_counter[31]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(\class_counter[0]_i_1_n_0 ),
        .Q(ila_smax_class_counter[0]));
  FDCE \class_counter_reg[10] 
       (.C(m00_axi_aclk),
        .CE(\class_counter[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(class_counter[10]),
        .Q(ila_smax_class_counter[10]));
  FDCE \class_counter_reg[11] 
       (.C(m00_axi_aclk),
        .CE(\class_counter[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(class_counter[11]),
        .Q(ila_smax_class_counter[11]));
  FDCE \class_counter_reg[12] 
       (.C(m00_axi_aclk),
        .CE(\class_counter[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(class_counter[12]),
        .Q(ila_smax_class_counter[12]));
  CARRY4 \class_counter_reg[12]_i_2 
       (.CI(\class_counter_reg[8]_i_2_n_0 ),
        .CO({\class_counter_reg[12]_i_2_n_0 ,\class_counter_reg[12]_i_2_n_1 ,\class_counter_reg[12]_i_2_n_2 ,\class_counter_reg[12]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\class_counter_reg[12]_i_2_n_4 ,\class_counter_reg[12]_i_2_n_5 ,\class_counter_reg[12]_i_2_n_6 ,\class_counter_reg[12]_i_2_n_7 }),
        .S({\class_counter[12]_i_3_n_0 ,\class_counter[12]_i_4_n_0 ,\class_counter[12]_i_5_n_0 ,\class_counter[12]_i_6_n_0 }));
  FDCE \class_counter_reg[13] 
       (.C(m00_axi_aclk),
        .CE(\class_counter[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(class_counter[13]),
        .Q(ila_smax_class_counter[13]));
  FDCE \class_counter_reg[14] 
       (.C(m00_axi_aclk),
        .CE(\class_counter[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(class_counter[14]),
        .Q(ila_smax_class_counter[14]));
  FDCE \class_counter_reg[15] 
       (.C(m00_axi_aclk),
        .CE(\class_counter[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(class_counter[15]),
        .Q(ila_smax_class_counter[15]));
  FDCE \class_counter_reg[16] 
       (.C(m00_axi_aclk),
        .CE(\class_counter[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(class_counter[16]),
        .Q(ila_smax_class_counter[16]));
  CARRY4 \class_counter_reg[16]_i_2 
       (.CI(\class_counter_reg[12]_i_2_n_0 ),
        .CO({\class_counter_reg[16]_i_2_n_0 ,\class_counter_reg[16]_i_2_n_1 ,\class_counter_reg[16]_i_2_n_2 ,\class_counter_reg[16]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\class_counter_reg[16]_i_2_n_4 ,\class_counter_reg[16]_i_2_n_5 ,\class_counter_reg[16]_i_2_n_6 ,\class_counter_reg[16]_i_2_n_7 }),
        .S({\class_counter[16]_i_3_n_0 ,\class_counter[16]_i_4_n_0 ,\class_counter[16]_i_5_n_0 ,\class_counter[16]_i_6_n_0 }));
  FDCE \class_counter_reg[17] 
       (.C(m00_axi_aclk),
        .CE(\class_counter[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(class_counter[17]),
        .Q(ila_smax_class_counter[17]));
  FDCE \class_counter_reg[18] 
       (.C(m00_axi_aclk),
        .CE(\class_counter[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(class_counter[18]),
        .Q(ila_smax_class_counter[18]));
  FDCE \class_counter_reg[19] 
       (.C(m00_axi_aclk),
        .CE(\class_counter[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(class_counter[19]),
        .Q(ila_smax_class_counter[19]));
  FDCE \class_counter_reg[1] 
       (.C(m00_axi_aclk),
        .CE(\class_counter[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_0),
        .D(class_counter[1]),
        .Q(ila_smax_class_counter[1]));
  FDCE \class_counter_reg[20] 
       (.C(m00_axi_aclk),
        .CE(\class_counter[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(class_counter[20]),
        .Q(ila_smax_class_counter[20]));
  CARRY4 \class_counter_reg[20]_i_2 
       (.CI(\class_counter_reg[16]_i_2_n_0 ),
        .CO({\class_counter_reg[20]_i_2_n_0 ,\class_counter_reg[20]_i_2_n_1 ,\class_counter_reg[20]_i_2_n_2 ,\class_counter_reg[20]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\class_counter_reg[20]_i_2_n_4 ,\class_counter_reg[20]_i_2_n_5 ,\class_counter_reg[20]_i_2_n_6 ,\class_counter_reg[20]_i_2_n_7 }),
        .S({\class_counter[20]_i_3_n_0 ,\class_counter[20]_i_4_n_0 ,\class_counter[20]_i_5_n_0 ,\class_counter[20]_i_6_n_0 }));
  FDCE \class_counter_reg[21] 
       (.C(m00_axi_aclk),
        .CE(\class_counter[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(class_counter[21]),
        .Q(ila_smax_class_counter[21]));
  FDCE \class_counter_reg[22] 
       (.C(m00_axi_aclk),
        .CE(\class_counter[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(class_counter[22]),
        .Q(ila_smax_class_counter[22]));
  FDCE \class_counter_reg[23] 
       (.C(m00_axi_aclk),
        .CE(\class_counter[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(class_counter[23]),
        .Q(ila_smax_class_counter[23]));
  FDCE \class_counter_reg[24] 
       (.C(m00_axi_aclk),
        .CE(\class_counter[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(class_counter[24]),
        .Q(ila_smax_class_counter[24]));
  CARRY4 \class_counter_reg[24]_i_2 
       (.CI(\class_counter_reg[20]_i_2_n_0 ),
        .CO({\class_counter_reg[24]_i_2_n_0 ,\class_counter_reg[24]_i_2_n_1 ,\class_counter_reg[24]_i_2_n_2 ,\class_counter_reg[24]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\class_counter_reg[24]_i_2_n_4 ,\class_counter_reg[24]_i_2_n_5 ,\class_counter_reg[24]_i_2_n_6 ,\class_counter_reg[24]_i_2_n_7 }),
        .S({\class_counter[24]_i_3_n_0 ,\class_counter[24]_i_4_n_0 ,\class_counter[24]_i_5_n_0 ,\class_counter[24]_i_6_n_0 }));
  FDCE \class_counter_reg[25] 
       (.C(m00_axi_aclk),
        .CE(\class_counter[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(class_counter[25]),
        .Q(ila_smax_class_counter[25]));
  FDCE \class_counter_reg[26] 
       (.C(m00_axi_aclk),
        .CE(\class_counter[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(class_counter[26]),
        .Q(ila_smax_class_counter[26]));
  FDCE \class_counter_reg[27] 
       (.C(m00_axi_aclk),
        .CE(\class_counter[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(class_counter[27]),
        .Q(ila_smax_class_counter[27]));
  FDCE \class_counter_reg[28] 
       (.C(m00_axi_aclk),
        .CE(\class_counter[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(class_counter[28]),
        .Q(ila_smax_class_counter[28]));
  CARRY4 \class_counter_reg[28]_i_2 
       (.CI(\class_counter_reg[24]_i_2_n_0 ),
        .CO({\class_counter_reg[28]_i_2_n_0 ,\class_counter_reg[28]_i_2_n_1 ,\class_counter_reg[28]_i_2_n_2 ,\class_counter_reg[28]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\class_counter_reg[28]_i_2_n_4 ,\class_counter_reg[28]_i_2_n_5 ,\class_counter_reg[28]_i_2_n_6 ,\class_counter_reg[28]_i_2_n_7 }),
        .S({\class_counter[28]_i_3_n_0 ,\class_counter[28]_i_4_n_0 ,\class_counter[28]_i_5_n_0 ,\class_counter[28]_i_6_n_0 }));
  FDCE \class_counter_reg[29] 
       (.C(m00_axi_aclk),
        .CE(\class_counter[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(class_counter[29]),
        .Q(ila_smax_class_counter[29]));
  FDCE \class_counter_reg[2] 
       (.C(m00_axi_aclk),
        .CE(\class_counter[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_0),
        .D(class_counter[2]),
        .Q(ila_smax_class_counter[2]));
  FDCE \class_counter_reg[30] 
       (.C(m00_axi_aclk),
        .CE(\class_counter[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(class_counter[30]),
        .Q(ila_smax_class_counter[30]));
  FDCE \class_counter_reg[31] 
       (.C(m00_axi_aclk),
        .CE(\class_counter[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(class_counter[31]),
        .Q(ila_smax_class_counter[31]));
  CARRY4 \class_counter_reg[31]_i_3 
       (.CI(\class_counter_reg[28]_i_2_n_0 ),
        .CO({\NLW_class_counter_reg[31]_i_3_CO_UNCONNECTED [3:2],\class_counter_reg[31]_i_3_n_2 ,\class_counter_reg[31]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_class_counter_reg[31]_i_3_O_UNCONNECTED [3],\class_counter_reg[31]_i_3_n_5 ,\class_counter_reg[31]_i_3_n_6 ,\class_counter_reg[31]_i_3_n_7 }),
        .S({1'b0,\class_counter[31]_i_4_n_0 ,\class_counter[31]_i_5_n_0 ,\class_counter[31]_i_6_n_0 }));
  FDCE \class_counter_reg[3] 
       (.C(m00_axi_aclk),
        .CE(\class_counter[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_0),
        .D(class_counter[3]),
        .Q(ila_smax_class_counter[3]));
  FDCE \class_counter_reg[4] 
       (.C(m00_axi_aclk),
        .CE(\class_counter[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_0),
        .D(class_counter[4]),
        .Q(ila_smax_class_counter[4]));
  CARRY4 \class_counter_reg[4]_i_2 
       (.CI(1'b0),
        .CO({\class_counter_reg[4]_i_2_n_0 ,\class_counter_reg[4]_i_2_n_1 ,\class_counter_reg[4]_i_2_n_2 ,\class_counter_reg[4]_i_2_n_3 }),
        .CYINIT(ila_smax_class_counter[0]),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\class_counter_reg[4]_i_2_n_4 ,\class_counter_reg[4]_i_2_n_5 ,\class_counter_reg[4]_i_2_n_6 ,\class_counter_reg[4]_i_2_n_7 }),
        .S({\class_counter[4]_i_3_n_0 ,\class_counter[4]_i_4_n_0 ,\class_counter[4]_i_5_n_0 ,\class_counter[4]_i_6_n_0 }));
  FDCE \class_counter_reg[5] 
       (.C(m00_axi_aclk),
        .CE(\class_counter[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(class_counter[5]),
        .Q(ila_smax_class_counter[5]));
  FDCE \class_counter_reg[6] 
       (.C(m00_axi_aclk),
        .CE(\class_counter[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(class_counter[6]),
        .Q(ila_smax_class_counter[6]));
  FDCE \class_counter_reg[7] 
       (.C(m00_axi_aclk),
        .CE(\class_counter[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(class_counter[7]),
        .Q(ila_smax_class_counter[7]));
  FDCE \class_counter_reg[8] 
       (.C(m00_axi_aclk),
        .CE(\class_counter[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(class_counter[8]),
        .Q(ila_smax_class_counter[8]));
  CARRY4 \class_counter_reg[8]_i_2 
       (.CI(\class_counter_reg[4]_i_2_n_0 ),
        .CO({\class_counter_reg[8]_i_2_n_0 ,\class_counter_reg[8]_i_2_n_1 ,\class_counter_reg[8]_i_2_n_2 ,\class_counter_reg[8]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\class_counter_reg[8]_i_2_n_4 ,\class_counter_reg[8]_i_2_n_5 ,\class_counter_reg[8]_i_2_n_6 ,\class_counter_reg[8]_i_2_n_7 }),
        .S({\class_counter[8]_i_3_n_0 ,\class_counter[8]_i_4_n_0 ,\class_counter[8]_i_5_n_0 ,\class_counter[8]_i_6_n_0 }));
  FDCE \class_counter_reg[9] 
       (.C(m00_axi_aclk),
        .CE(\class_counter[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(class_counter[9]),
        .Q(ila_smax_class_counter[9]));
  LUT2 #(
    .INIT(4'h1)) 
    \current_state[0]_i_4 
       (.I0(current_state[1]),
        .I1(current_state[3]),
        .O(\current_state_reg[0] ));
  LUT1 #(
    .INIT(2'h1)) 
    \current_state[2]_i_2 
       (.I0(m00_axi_aresetn),
        .O(\output_data_addr_reg_reg[8]_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__0_i_1
       (.I0(ila_smax_writes_remaining[14]),
        .O(i__carry__0_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__0_i_1__0
       (.I0(ila_smax_reads_remaining[14]),
        .O(i__carry__0_i_1__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    i__carry__0_i_1__1
       (.I0(\ila_smax_num_elements[15] [15]),
        .I1(\element_counter_reg[15]_0 [15]),
        .I2(\ila_smax_num_elements[15] [14]),
        .I3(\element_counter_reg[15]_0 [14]),
        .O(\element_counter_reg[15] [3]));
  LUT4 #(
    .INIT(16'h22B2)) 
    i__carry__0_i_1__2
       (.I0(\ila_smax_num_elements[15] [15]),
        .I1(\sum_counter_reg[15] [15]),
        .I2(\ila_smax_num_elements[15] [14]),
        .I3(\sum_counter_reg[15] [14]),
        .O(summing_complete_reg_0[3]));
  LUT4 #(
    .INIT(16'h22B2)) 
    i__carry__0_i_1__3
       (.I0(\ila_smax_num_elements[15] [15]),
        .I1(\quotient_counter_reg[15] [15]),
        .I2(\ila_smax_num_elements[15] [14]),
        .I3(\quotient_counter_reg[15] [14]),
        .O(\divisor_reg[31]_0 [3]));
  LUT1 #(
    .INIT(2'h2)) 
    i__carry__0_i_1__4
       (.I0(Q[8]),
        .O(i__carry__0_i_1__4_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__0_i_2
       (.I0(ila_smax_writes_remaining[13]),
        .O(i__carry__0_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__0_i_2__0
       (.I0(ila_smax_reads_remaining[13]),
        .O(i__carry__0_i_2__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    i__carry__0_i_2__1
       (.I0(\ila_smax_num_elements[15] [13]),
        .I1(\element_counter_reg[15]_0 [13]),
        .I2(\ila_smax_num_elements[15] [12]),
        .I3(\element_counter_reg[15]_0 [12]),
        .O(\element_counter_reg[15] [2]));
  LUT4 #(
    .INIT(16'h22B2)) 
    i__carry__0_i_2__2
       (.I0(\ila_smax_num_elements[15] [13]),
        .I1(\sum_counter_reg[15] [13]),
        .I2(\ila_smax_num_elements[15] [12]),
        .I3(\sum_counter_reg[15] [12]),
        .O(summing_complete_reg_0[2]));
  LUT4 #(
    .INIT(16'h22B2)) 
    i__carry__0_i_2__3
       (.I0(\ila_smax_num_elements[15] [13]),
        .I1(\quotient_counter_reg[15] [13]),
        .I2(\ila_smax_num_elements[15] [12]),
        .I3(\quotient_counter_reg[15] [12]),
        .O(\divisor_reg[31]_0 [2]));
  LUT1 #(
    .INIT(2'h2)) 
    i__carry__0_i_2__4
       (.I0(Q[7]),
        .O(i__carry__0_i_2__4_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__0_i_3
       (.I0(ila_smax_writes_remaining[12]),
        .O(i__carry__0_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__0_i_3__0
       (.I0(ila_smax_reads_remaining[12]),
        .O(i__carry__0_i_3__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    i__carry__0_i_3__1
       (.I0(\ila_smax_num_elements[15] [11]),
        .I1(\element_counter_reg[15]_0 [11]),
        .I2(\ila_smax_num_elements[15] [10]),
        .I3(\element_counter_reg[15]_0 [10]),
        .O(\element_counter_reg[15] [1]));
  LUT4 #(
    .INIT(16'h22B2)) 
    i__carry__0_i_3__2
       (.I0(\ila_smax_num_elements[15] [11]),
        .I1(\sum_counter_reg[15] [11]),
        .I2(\ila_smax_num_elements[15] [10]),
        .I3(\sum_counter_reg[15] [10]),
        .O(summing_complete_reg_0[1]));
  LUT4 #(
    .INIT(16'h22B2)) 
    i__carry__0_i_3__3
       (.I0(\ila_smax_num_elements[15] [11]),
        .I1(\quotient_counter_reg[15] [11]),
        .I2(\ila_smax_num_elements[15] [10]),
        .I3(\quotient_counter_reg[15] [10]),
        .O(\divisor_reg[31]_0 [1]));
  LUT1 #(
    .INIT(2'h2)) 
    i__carry__0_i_3__4
       (.I0(Q[6]),
        .O(i__carry__0_i_3__4_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__0_i_4
       (.I0(ila_smax_writes_remaining[11]),
        .O(i__carry__0_i_4_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__0_i_4__0
       (.I0(ila_smax_reads_remaining[11]),
        .O(i__carry__0_i_4__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    i__carry__0_i_4__1
       (.I0(\ila_smax_num_elements[15] [9]),
        .I1(\element_counter_reg[15]_0 [9]),
        .I2(\ila_smax_num_elements[15] [8]),
        .I3(\element_counter_reg[15]_0 [8]),
        .O(\element_counter_reg[15] [0]));
  LUT4 #(
    .INIT(16'h22B2)) 
    i__carry__0_i_4__2
       (.I0(\ila_smax_num_elements[15] [9]),
        .I1(\sum_counter_reg[15] [9]),
        .I2(\ila_smax_num_elements[15] [8]),
        .I3(\sum_counter_reg[15] [8]),
        .O(summing_complete_reg_0[0]));
  LUT4 #(
    .INIT(16'h22B2)) 
    i__carry__0_i_4__3
       (.I0(\ila_smax_num_elements[15] [9]),
        .I1(\quotient_counter_reg[15] [9]),
        .I2(\ila_smax_num_elements[15] [8]),
        .I3(\quotient_counter_reg[15] [8]),
        .O(\divisor_reg[31]_0 [0]));
  LUT1 #(
    .INIT(2'h2)) 
    i__carry__0_i_4__4
       (.I0(Q[5]),
        .O(i__carry__0_i_4__4_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__1_i_1
       (.I0(ila_smax_writes_remaining[15]),
        .O(i__carry__1_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__1_i_1__0
       (.I0(ila_smax_reads_remaining[15]),
        .O(i__carry__1_i_1__0_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i__carry__1_i_1__1
       (.I0(Q[12]),
        .O(i__carry__1_i_1__1_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i__carry__1_i_2
       (.I0(Q[11]),
        .O(i__carry__1_i_2_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i__carry__1_i_3
       (.I0(Q[10]),
        .O(i__carry__1_i_3_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i__carry__1_i_4
       (.I0(Q[9]),
        .O(i__carry__1_i_4_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i__carry__2_i_1
       (.I0(Q[16]),
        .O(i__carry__2_i_1_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i__carry__2_i_2
       (.I0(Q[15]),
        .O(i__carry__2_i_2_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i__carry__2_i_3
       (.I0(Q[14]),
        .O(i__carry__2_i_3_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i__carry__2_i_4
       (.I0(Q[13]),
        .O(i__carry__2_i_4_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i__carry__3_i_1
       (.I0(Q[20]),
        .O(i__carry__3_i_1_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i__carry__3_i_2
       (.I0(Q[19]),
        .O(i__carry__3_i_2_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i__carry__3_i_3
       (.I0(Q[18]),
        .O(i__carry__3_i_3_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i__carry__3_i_4
       (.I0(Q[17]),
        .O(i__carry__3_i_4_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i__carry__4_i_1
       (.I0(Q[24]),
        .O(i__carry__4_i_1_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i__carry__4_i_2
       (.I0(Q[23]),
        .O(i__carry__4_i_2_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i__carry__4_i_3
       (.I0(Q[22]),
        .O(i__carry__4_i_3_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i__carry__4_i_4
       (.I0(Q[21]),
        .O(i__carry__4_i_4_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i__carry__5_i_1
       (.I0(Q[28]),
        .O(i__carry__5_i_1_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i__carry__5_i_2
       (.I0(Q[27]),
        .O(i__carry__5_i_2_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i__carry__5_i_3
       (.I0(Q[26]),
        .O(i__carry__5_i_3_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i__carry__5_i_4
       (.I0(Q[25]),
        .O(i__carry__5_i_4_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i__carry__6_i_1
       (.I0(Q[31]),
        .O(i__carry__6_i_1_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i__carry__6_i_2
       (.I0(Q[30]),
        .O(i__carry__6_i_2_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i__carry__6_i_3
       (.I0(Q[29]),
        .O(i__carry__6_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry_i_1
       (.I0(ila_smax_writes_remaining[10]),
        .O(i__carry_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry_i_1__0
       (.I0(ila_smax_reads_remaining[10]),
        .O(i__carry_i_1__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    i__carry_i_1__1
       (.I0(\ila_smax_num_elements[15] [7]),
        .I1(\element_counter_reg[15]_0 [7]),
        .I2(\ila_smax_num_elements[15] [6]),
        .I3(\element_counter_reg[15]_0 [6]),
        .O(DI[3]));
  LUT4 #(
    .INIT(16'h22B2)) 
    i__carry_i_1__2
       (.I0(\ila_smax_num_elements[15] [7]),
        .I1(\sum_counter_reg[15] [7]),
        .I2(\ila_smax_num_elements[15] [6]),
        .I3(\sum_counter_reg[15] [6]),
        .O(summing_complete_reg[3]));
  LUT4 #(
    .INIT(16'h22B2)) 
    i__carry_i_1__3
       (.I0(\ila_smax_num_elements[15] [7]),
        .I1(\quotient_counter_reg[15] [7]),
        .I2(\ila_smax_num_elements[15] [6]),
        .I3(\quotient_counter_reg[15] [6]),
        .O(\divisor_reg[31] [3]));
  LUT1 #(
    .INIT(2'h2)) 
    i__carry_i_1__4
       (.I0(Q[4]),
        .O(i__carry_i_1__4_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry_i_2
       (.I0(ila_smax_writes_remaining[9]),
        .O(i__carry_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry_i_2__0
       (.I0(ila_smax_reads_remaining[9]),
        .O(i__carry_i_2__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    i__carry_i_2__1
       (.I0(\ila_smax_num_elements[15] [5]),
        .I1(\element_counter_reg[15]_0 [5]),
        .I2(\ila_smax_num_elements[15] [4]),
        .I3(\element_counter_reg[15]_0 [4]),
        .O(DI[2]));
  LUT4 #(
    .INIT(16'h22B2)) 
    i__carry_i_2__2
       (.I0(\ila_smax_num_elements[15] [5]),
        .I1(\sum_counter_reg[15] [5]),
        .I2(\ila_smax_num_elements[15] [4]),
        .I3(\sum_counter_reg[15] [4]),
        .O(summing_complete_reg[2]));
  LUT4 #(
    .INIT(16'h22B2)) 
    i__carry_i_2__3
       (.I0(\ila_smax_num_elements[15] [5]),
        .I1(\quotient_counter_reg[15] [5]),
        .I2(\ila_smax_num_elements[15] [4]),
        .I3(\quotient_counter_reg[15] [4]),
        .O(\divisor_reg[31] [2]));
  LUT1 #(
    .INIT(2'h2)) 
    i__carry_i_2__4
       (.I0(Q[3]),
        .O(i__carry_i_2__4_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry_i_3
       (.I0(Q[2]),
        .O(i__carry_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry_i_3__0
       (.I0(ila_smax_writes_remaining[8]),
        .O(i__carry_i_3__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry_i_3__1
       (.I0(ila_smax_reads_remaining[8]),
        .O(i__carry_i_3__1_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    i__carry_i_3__2
       (.I0(\ila_smax_num_elements[15] [3]),
        .I1(\element_counter_reg[15]_0 [3]),
        .I2(\ila_smax_num_elements[15] [2]),
        .I3(\element_counter_reg[15]_0 [2]),
        .O(DI[1]));
  LUT4 #(
    .INIT(16'h22B2)) 
    i__carry_i_3__3
       (.I0(\ila_smax_num_elements[15] [3]),
        .I1(\sum_counter_reg[15] [3]),
        .I2(\ila_smax_num_elements[15] [2]),
        .I3(\sum_counter_reg[15] [2]),
        .O(summing_complete_reg[1]));
  LUT4 #(
    .INIT(16'h22B2)) 
    i__carry_i_3__4
       (.I0(\ila_smax_num_elements[15] [3]),
        .I1(\quotient_counter_reg[15] [3]),
        .I2(\ila_smax_num_elements[15] [2]),
        .I3(\quotient_counter_reg[15] [2]),
        .O(\divisor_reg[31] [1]));
  LUT4 #(
    .INIT(16'h22B2)) 
    i__carry_i_4
       (.I0(\ila_smax_num_elements[15] [1]),
        .I1(\element_counter_reg[15]_0 [1]),
        .I2(\ila_smax_num_elements[15] [0]),
        .I3(\element_counter_reg[15]_0 [0]),
        .O(DI[0]));
  LUT4 #(
    .INIT(16'h22B2)) 
    i__carry_i_4__0
       (.I0(\ila_smax_num_elements[15] [1]),
        .I1(\sum_counter_reg[15] [1]),
        .I2(\ila_smax_num_elements[15] [0]),
        .I3(\sum_counter_reg[15] [0]),
        .O(summing_complete_reg[0]));
  LUT4 #(
    .INIT(16'h22B2)) 
    i__carry_i_4__1
       (.I0(\ila_smax_num_elements[15] [1]),
        .I1(\quotient_counter_reg[15] [1]),
        .I2(\ila_smax_num_elements[15] [0]),
        .I3(\quotient_counter_reg[15] [0]),
        .O(\divisor_reg[31] [0]));
  LUT1 #(
    .INIT(2'h2)) 
    i__carry_i_4__2
       (.I0(Q[1]),
        .O(i__carry_i_4__2_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i__carry_i_4__3
       (.I0(ila_smax_writes_remaining[7]),
        .O(i__carry_i_4__3_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i__carry_i_4__4
       (.I0(ila_smax_reads_remaining[7]),
        .O(i__carry_i_4__4_n_0));
  LUT4 #(
    .INIT(16'h0004)) 
    ila_smax_data_loaded_INST_0
       (.I0(out[0]),
        .I1(out[1]),
        .I2(current_state[3]),
        .I3(current_state[1]),
        .O(ila_smax_data_loaded));
  LUT2 #(
    .INIT(4'h7)) 
    ila_smax_exp_mux_wr_en_INST_0_i_1
       (.I0(CO),
        .I1(\current_state_reg[0]_0 ),
        .O(\gaf.ram_almost_full_i_reg ));
  LUT6 #(
    .INIT(64'h00040000FFFF0000)) 
    ila_smax_inbuff_rd_en_INST_0_i_1
       (.I0(out[0]),
        .I1(out[1]),
        .I2(current_state[3]),
        .I3(current_state[1]),
        .I4(\FSM_sequential_current_state_reg[2]_1 ),
        .I5(empty),
        .O(next_state1));
  LUT4 #(
    .INIT(16'h2110)) 
    \ila_smax_master_fsm_state[0]_INST_0 
       (.I0(out[0]),
        .I1(current_state[3]),
        .I2(out[1]),
        .I3(current_state[1]),
        .O(ila_smax_master_fsm_state[0]));
  LUT4 #(
    .INIT(16'h1006)) 
    \ila_smax_master_fsm_state[1]_INST_0 
       (.I0(out[1]),
        .I1(current_state[3]),
        .I2(out[0]),
        .I3(current_state[1]),
        .O(ila_smax_master_fsm_state[1]));
  LUT4 #(
    .INIT(16'h5002)) 
    \ila_smax_master_fsm_state[2]_INST_0 
       (.I0(current_state[3]),
        .I1(out[0]),
        .I2(current_state[1]),
        .I3(out[1]),
        .O(ila_smax_master_fsm_state[2]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \inbuff_din[0]_i_1 
       (.I0(m00_axi_rdata[0]),
        .I1(m00_axi_rvalid),
        .I2(full),
        .I3(current_state[1]),
        .I4(current_state[3]),
        .O(inbuff_din[0]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \inbuff_din[10]_i_1 
       (.I0(m00_axi_rdata[10]),
        .I1(m00_axi_rvalid),
        .I2(full),
        .I3(current_state[1]),
        .I4(current_state[3]),
        .O(inbuff_din[10]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \inbuff_din[11]_i_1 
       (.I0(m00_axi_rdata[11]),
        .I1(m00_axi_rvalid),
        .I2(full),
        .I3(current_state[1]),
        .I4(current_state[3]),
        .O(inbuff_din[11]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \inbuff_din[12]_i_1 
       (.I0(m00_axi_rdata[12]),
        .I1(m00_axi_rvalid),
        .I2(full),
        .I3(current_state[1]),
        .I4(current_state[3]),
        .O(inbuff_din[12]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \inbuff_din[13]_i_1 
       (.I0(m00_axi_rdata[13]),
        .I1(m00_axi_rvalid),
        .I2(full),
        .I3(current_state[1]),
        .I4(current_state[3]),
        .O(inbuff_din[13]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \inbuff_din[14]_i_1 
       (.I0(m00_axi_rdata[14]),
        .I1(m00_axi_rvalid),
        .I2(full),
        .I3(current_state[1]),
        .I4(current_state[3]),
        .O(inbuff_din[14]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \inbuff_din[15]_i_1 
       (.I0(m00_axi_rdata[15]),
        .I1(m00_axi_rvalid),
        .I2(full),
        .I3(current_state[1]),
        .I4(current_state[3]),
        .O(inbuff_din[15]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \inbuff_din[16]_i_1 
       (.I0(m00_axi_rdata[16]),
        .I1(m00_axi_rvalid),
        .I2(full),
        .I3(current_state[1]),
        .I4(current_state[3]),
        .O(inbuff_din[16]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \inbuff_din[17]_i_1 
       (.I0(m00_axi_rdata[17]),
        .I1(m00_axi_rvalid),
        .I2(full),
        .I3(current_state[1]),
        .I4(current_state[3]),
        .O(inbuff_din[17]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \inbuff_din[18]_i_1 
       (.I0(m00_axi_rdata[18]),
        .I1(m00_axi_rvalid),
        .I2(full),
        .I3(current_state[1]),
        .I4(current_state[3]),
        .O(inbuff_din[18]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \inbuff_din[19]_i_1 
       (.I0(m00_axi_rdata[19]),
        .I1(m00_axi_rvalid),
        .I2(full),
        .I3(current_state[1]),
        .I4(current_state[3]),
        .O(inbuff_din[19]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \inbuff_din[1]_i_1 
       (.I0(m00_axi_rdata[1]),
        .I1(m00_axi_rvalid),
        .I2(full),
        .I3(current_state[1]),
        .I4(current_state[3]),
        .O(inbuff_din[1]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \inbuff_din[20]_i_1 
       (.I0(m00_axi_rdata[20]),
        .I1(m00_axi_rvalid),
        .I2(full),
        .I3(current_state[1]),
        .I4(current_state[3]),
        .O(inbuff_din[20]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \inbuff_din[21]_i_1 
       (.I0(m00_axi_rdata[21]),
        .I1(m00_axi_rvalid),
        .I2(full),
        .I3(current_state[1]),
        .I4(current_state[3]),
        .O(inbuff_din[21]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \inbuff_din[22]_i_1 
       (.I0(m00_axi_rdata[22]),
        .I1(m00_axi_rvalid),
        .I2(full),
        .I3(current_state[1]),
        .I4(current_state[3]),
        .O(inbuff_din[22]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \inbuff_din[23]_i_1 
       (.I0(m00_axi_rdata[23]),
        .I1(m00_axi_rvalid),
        .I2(full),
        .I3(current_state[1]),
        .I4(current_state[3]),
        .O(inbuff_din[23]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \inbuff_din[24]_i_1 
       (.I0(m00_axi_rdata[24]),
        .I1(m00_axi_rvalid),
        .I2(full),
        .I3(current_state[1]),
        .I4(current_state[3]),
        .O(inbuff_din[24]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \inbuff_din[25]_i_1 
       (.I0(m00_axi_rdata[25]),
        .I1(m00_axi_rvalid),
        .I2(full),
        .I3(current_state[1]),
        .I4(current_state[3]),
        .O(inbuff_din[25]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \inbuff_din[26]_i_1 
       (.I0(m00_axi_rdata[26]),
        .I1(m00_axi_rvalid),
        .I2(full),
        .I3(current_state[1]),
        .I4(current_state[3]),
        .O(inbuff_din[26]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \inbuff_din[27]_i_1 
       (.I0(m00_axi_rdata[27]),
        .I1(m00_axi_rvalid),
        .I2(full),
        .I3(current_state[1]),
        .I4(current_state[3]),
        .O(inbuff_din[27]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \inbuff_din[28]_i_1 
       (.I0(m00_axi_rdata[28]),
        .I1(m00_axi_rvalid),
        .I2(full),
        .I3(current_state[1]),
        .I4(current_state[3]),
        .O(inbuff_din[28]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \inbuff_din[29]_i_1 
       (.I0(m00_axi_rdata[29]),
        .I1(m00_axi_rvalid),
        .I2(full),
        .I3(current_state[1]),
        .I4(current_state[3]),
        .O(inbuff_din[29]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \inbuff_din[2]_i_1 
       (.I0(m00_axi_rdata[2]),
        .I1(m00_axi_rvalid),
        .I2(full),
        .I3(current_state[1]),
        .I4(current_state[3]),
        .O(inbuff_din[2]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \inbuff_din[30]_i_1 
       (.I0(m00_axi_rdata[30]),
        .I1(m00_axi_rvalid),
        .I2(full),
        .I3(current_state[1]),
        .I4(current_state[3]),
        .O(inbuff_din[30]));
  LUT4 #(
    .INIT(16'h000D)) 
    \inbuff_din[31]_i_1 
       (.I0(current_state[1]),
        .I1(out[0]),
        .I2(current_state[3]),
        .I3(out[1]),
        .O(\inbuff_din[31]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000800)) 
    \inbuff_din[31]_i_2 
       (.I0(m00_axi_rdata[31]),
        .I1(m00_axi_rvalid),
        .I2(full),
        .I3(current_state[1]),
        .I4(current_state[3]),
        .O(inbuff_din[31]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \inbuff_din[3]_i_1 
       (.I0(m00_axi_rdata[3]),
        .I1(m00_axi_rvalid),
        .I2(full),
        .I3(current_state[1]),
        .I4(current_state[3]),
        .O(inbuff_din[3]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \inbuff_din[4]_i_1 
       (.I0(m00_axi_rdata[4]),
        .I1(m00_axi_rvalid),
        .I2(full),
        .I3(current_state[1]),
        .I4(current_state[3]),
        .O(inbuff_din[4]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \inbuff_din[5]_i_1 
       (.I0(m00_axi_rdata[5]),
        .I1(m00_axi_rvalid),
        .I2(full),
        .I3(current_state[1]),
        .I4(current_state[3]),
        .O(inbuff_din[5]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \inbuff_din[6]_i_1 
       (.I0(m00_axi_rdata[6]),
        .I1(m00_axi_rvalid),
        .I2(full),
        .I3(current_state[1]),
        .I4(current_state[3]),
        .O(inbuff_din[6]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \inbuff_din[7]_i_1 
       (.I0(m00_axi_rdata[7]),
        .I1(m00_axi_rvalid),
        .I2(full),
        .I3(current_state[1]),
        .I4(current_state[3]),
        .O(inbuff_din[7]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \inbuff_din[8]_i_1 
       (.I0(m00_axi_rdata[8]),
        .I1(m00_axi_rvalid),
        .I2(full),
        .I3(current_state[1]),
        .I4(current_state[3]),
        .O(inbuff_din[8]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \inbuff_din[9]_i_1 
       (.I0(m00_axi_rdata[9]),
        .I1(m00_axi_rvalid),
        .I2(full),
        .I3(current_state[1]),
        .I4(current_state[3]),
        .O(inbuff_din[9]));
  FDCE \inbuff_din_reg[0] 
       (.C(m00_axi_aclk),
        .CE(\inbuff_din[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(inbuff_din[0]),
        .Q(ila_smax_inbuff_din[0]));
  FDCE \inbuff_din_reg[10] 
       (.C(m00_axi_aclk),
        .CE(\inbuff_din[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(inbuff_din[10]),
        .Q(ila_smax_inbuff_din[10]));
  FDCE \inbuff_din_reg[11] 
       (.C(m00_axi_aclk),
        .CE(\inbuff_din[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(inbuff_din[11]),
        .Q(ila_smax_inbuff_din[11]));
  FDCE \inbuff_din_reg[12] 
       (.C(m00_axi_aclk),
        .CE(\inbuff_din[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(inbuff_din[12]),
        .Q(ila_smax_inbuff_din[12]));
  FDCE \inbuff_din_reg[13] 
       (.C(m00_axi_aclk),
        .CE(\inbuff_din[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(inbuff_din[13]),
        .Q(ila_smax_inbuff_din[13]));
  FDCE \inbuff_din_reg[14] 
       (.C(m00_axi_aclk),
        .CE(\inbuff_din[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(inbuff_din[14]),
        .Q(ila_smax_inbuff_din[14]));
  FDCE \inbuff_din_reg[15] 
       (.C(m00_axi_aclk),
        .CE(\inbuff_din[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(inbuff_din[15]),
        .Q(ila_smax_inbuff_din[15]));
  FDCE \inbuff_din_reg[16] 
       (.C(m00_axi_aclk),
        .CE(\inbuff_din[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(inbuff_din[16]),
        .Q(ila_smax_inbuff_din[16]));
  FDCE \inbuff_din_reg[17] 
       (.C(m00_axi_aclk),
        .CE(\inbuff_din[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(inbuff_din[17]),
        .Q(ila_smax_inbuff_din[17]));
  FDCE \inbuff_din_reg[18] 
       (.C(m00_axi_aclk),
        .CE(\inbuff_din[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(inbuff_din[18]),
        .Q(ila_smax_inbuff_din[18]));
  FDCE \inbuff_din_reg[19] 
       (.C(m00_axi_aclk),
        .CE(\inbuff_din[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(inbuff_din[19]),
        .Q(ila_smax_inbuff_din[19]));
  FDCE \inbuff_din_reg[1] 
       (.C(m00_axi_aclk),
        .CE(\inbuff_din[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(inbuff_din[1]),
        .Q(ila_smax_inbuff_din[1]));
  FDCE \inbuff_din_reg[20] 
       (.C(m00_axi_aclk),
        .CE(\inbuff_din[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(inbuff_din[20]),
        .Q(ila_smax_inbuff_din[20]));
  FDCE \inbuff_din_reg[21] 
       (.C(m00_axi_aclk),
        .CE(\inbuff_din[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(inbuff_din[21]),
        .Q(ila_smax_inbuff_din[21]));
  FDCE \inbuff_din_reg[22] 
       (.C(m00_axi_aclk),
        .CE(\inbuff_din[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(inbuff_din[22]),
        .Q(ila_smax_inbuff_din[22]));
  FDCE \inbuff_din_reg[23] 
       (.C(m00_axi_aclk),
        .CE(\inbuff_din[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(inbuff_din[23]),
        .Q(ila_smax_inbuff_din[23]));
  FDCE \inbuff_din_reg[24] 
       (.C(m00_axi_aclk),
        .CE(\inbuff_din[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(inbuff_din[24]),
        .Q(ila_smax_inbuff_din[24]));
  FDCE \inbuff_din_reg[25] 
       (.C(m00_axi_aclk),
        .CE(\inbuff_din[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(inbuff_din[25]),
        .Q(ila_smax_inbuff_din[25]));
  FDCE \inbuff_din_reg[26] 
       (.C(m00_axi_aclk),
        .CE(\inbuff_din[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(inbuff_din[26]),
        .Q(ila_smax_inbuff_din[26]));
  FDCE \inbuff_din_reg[27] 
       (.C(m00_axi_aclk),
        .CE(\inbuff_din[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(inbuff_din[27]),
        .Q(ila_smax_inbuff_din[27]));
  FDCE \inbuff_din_reg[28] 
       (.C(m00_axi_aclk),
        .CE(\inbuff_din[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(inbuff_din[28]),
        .Q(ila_smax_inbuff_din[28]));
  FDCE \inbuff_din_reg[29] 
       (.C(m00_axi_aclk),
        .CE(\inbuff_din[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(inbuff_din[29]),
        .Q(ila_smax_inbuff_din[29]));
  FDCE \inbuff_din_reg[2] 
       (.C(m00_axi_aclk),
        .CE(\inbuff_din[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(inbuff_din[2]),
        .Q(ila_smax_inbuff_din[2]));
  FDCE \inbuff_din_reg[30] 
       (.C(m00_axi_aclk),
        .CE(\inbuff_din[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(inbuff_din[30]),
        .Q(ila_smax_inbuff_din[30]));
  FDCE \inbuff_din_reg[31] 
       (.C(m00_axi_aclk),
        .CE(\inbuff_din[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(inbuff_din[31]),
        .Q(ila_smax_inbuff_din[31]));
  FDCE \inbuff_din_reg[3] 
       (.C(m00_axi_aclk),
        .CE(\inbuff_din[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(inbuff_din[3]),
        .Q(ila_smax_inbuff_din[3]));
  FDCE \inbuff_din_reg[4] 
       (.C(m00_axi_aclk),
        .CE(\inbuff_din[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(inbuff_din[4]),
        .Q(ila_smax_inbuff_din[4]));
  FDCE \inbuff_din_reg[5] 
       (.C(m00_axi_aclk),
        .CE(\inbuff_din[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(inbuff_din[5]),
        .Q(ila_smax_inbuff_din[5]));
  FDCE \inbuff_din_reg[6] 
       (.C(m00_axi_aclk),
        .CE(\inbuff_din[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(inbuff_din[6]),
        .Q(ila_smax_inbuff_din[6]));
  FDCE \inbuff_din_reg[7] 
       (.C(m00_axi_aclk),
        .CE(\inbuff_din[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(inbuff_din[7]),
        .Q(ila_smax_inbuff_din[7]));
  FDCE \inbuff_din_reg[8] 
       (.C(m00_axi_aclk),
        .CE(\inbuff_din[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(inbuff_din[8]),
        .Q(ila_smax_inbuff_din[8]));
  FDCE \inbuff_din_reg[9] 
       (.C(m00_axi_aclk),
        .CE(\inbuff_din[31]_i_1_n_0 ),
        .CLR(\class_counter_reg[5]_0 ),
        .D(inbuff_din[9]),
        .Q(ila_smax_inbuff_din[9]));
  LUT4 #(
    .INIT(16'h0040)) 
    inbuff_wr_en_i_1
       (.I0(full),
        .I1(m00_axi_rvalid),
        .I2(current_state[1]),
        .I3(current_state[3]),
        .O(inbuff_wr_en));
  FDCE inbuff_wr_en_reg
       (.C(m00_axi_aclk),
        .CE(\inbuff_din[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(inbuff_wr_en),
        .Q(ila_smax_inbuff_wr_en));
  LUT6 #(
    .INIT(64'h00000000E222E2E2)) 
    \input_data_addr_reg[0]_i_1 
       (.I0(o_input_data_addr_reg[0]),
        .I1(current_state[1]),
        .I2(Q[0]),
        .I3(ila_smax_more_bursts_needed),
        .I4(m00_axi_rlast),
        .I5(current_state[3]),
        .O(input_data_addr_reg[0]));
  LUT6 #(
    .INIT(64'h00000000E222E2E2)) 
    \input_data_addr_reg[10]_i_1 
       (.I0(o_input_data_addr_reg[10]),
        .I1(current_state[1]),
        .I2(\plusOp_inferred__3/i__carry__1_n_6 ),
        .I3(ila_smax_more_bursts_needed),
        .I4(m00_axi_rlast),
        .I5(current_state[3]),
        .O(input_data_addr_reg[10]));
  LUT6 #(
    .INIT(64'h00000000E222E2E2)) 
    \input_data_addr_reg[11]_i_1 
       (.I0(o_input_data_addr_reg[11]),
        .I1(current_state[1]),
        .I2(\plusOp_inferred__3/i__carry__1_n_5 ),
        .I3(ila_smax_more_bursts_needed),
        .I4(m00_axi_rlast),
        .I5(current_state[3]),
        .O(input_data_addr_reg[11]));
  LUT6 #(
    .INIT(64'h00000000E222E2E2)) 
    \input_data_addr_reg[12]_i_1 
       (.I0(o_input_data_addr_reg[12]),
        .I1(current_state[1]),
        .I2(\plusOp_inferred__3/i__carry__1_n_4 ),
        .I3(ila_smax_more_bursts_needed),
        .I4(m00_axi_rlast),
        .I5(current_state[3]),
        .O(input_data_addr_reg[12]));
  LUT6 #(
    .INIT(64'h00000000E222E2E2)) 
    \input_data_addr_reg[13]_i_1 
       (.I0(o_input_data_addr_reg[13]),
        .I1(current_state[1]),
        .I2(\plusOp_inferred__3/i__carry__2_n_7 ),
        .I3(ila_smax_more_bursts_needed),
        .I4(m00_axi_rlast),
        .I5(current_state[3]),
        .O(input_data_addr_reg[13]));
  LUT6 #(
    .INIT(64'h00000000E222E2E2)) 
    \input_data_addr_reg[14]_i_1 
       (.I0(o_input_data_addr_reg[14]),
        .I1(current_state[1]),
        .I2(\plusOp_inferred__3/i__carry__2_n_6 ),
        .I3(ila_smax_more_bursts_needed),
        .I4(m00_axi_rlast),
        .I5(current_state[3]),
        .O(input_data_addr_reg[14]));
  LUT6 #(
    .INIT(64'h00000000E222E2E2)) 
    \input_data_addr_reg[15]_i_1 
       (.I0(o_input_data_addr_reg[15]),
        .I1(current_state[1]),
        .I2(\plusOp_inferred__3/i__carry__2_n_5 ),
        .I3(ila_smax_more_bursts_needed),
        .I4(m00_axi_rlast),
        .I5(current_state[3]),
        .O(input_data_addr_reg[15]));
  LUT6 #(
    .INIT(64'h00000000E222E2E2)) 
    \input_data_addr_reg[16]_i_1 
       (.I0(o_input_data_addr_reg[16]),
        .I1(current_state[1]),
        .I2(\plusOp_inferred__3/i__carry__2_n_4 ),
        .I3(ila_smax_more_bursts_needed),
        .I4(m00_axi_rlast),
        .I5(current_state[3]),
        .O(input_data_addr_reg[16]));
  LUT6 #(
    .INIT(64'h00000000E222E2E2)) 
    \input_data_addr_reg[17]_i_1 
       (.I0(o_input_data_addr_reg[17]),
        .I1(current_state[1]),
        .I2(\plusOp_inferred__3/i__carry__3_n_7 ),
        .I3(ila_smax_more_bursts_needed),
        .I4(m00_axi_rlast),
        .I5(current_state[3]),
        .O(input_data_addr_reg[17]));
  LUT6 #(
    .INIT(64'h00000000E222E2E2)) 
    \input_data_addr_reg[18]_i_1 
       (.I0(o_input_data_addr_reg[18]),
        .I1(current_state[1]),
        .I2(\plusOp_inferred__3/i__carry__3_n_6 ),
        .I3(ila_smax_more_bursts_needed),
        .I4(m00_axi_rlast),
        .I5(current_state[3]),
        .O(input_data_addr_reg[18]));
  LUT6 #(
    .INIT(64'h00000000E222E2E2)) 
    \input_data_addr_reg[19]_i_1 
       (.I0(o_input_data_addr_reg[19]),
        .I1(current_state[1]),
        .I2(\plusOp_inferred__3/i__carry__3_n_5 ),
        .I3(ila_smax_more_bursts_needed),
        .I4(m00_axi_rlast),
        .I5(current_state[3]),
        .O(input_data_addr_reg[19]));
  LUT6 #(
    .INIT(64'h00000000E222E2E2)) 
    \input_data_addr_reg[1]_i_1 
       (.I0(o_input_data_addr_reg[1]),
        .I1(current_state[1]),
        .I2(\plusOp_inferred__3/i__carry_n_7 ),
        .I3(ila_smax_more_bursts_needed),
        .I4(m00_axi_rlast),
        .I5(current_state[3]),
        .O(input_data_addr_reg[1]));
  LUT6 #(
    .INIT(64'h00000000E222E2E2)) 
    \input_data_addr_reg[20]_i_1 
       (.I0(o_input_data_addr_reg[20]),
        .I1(current_state[1]),
        .I2(\plusOp_inferred__3/i__carry__3_n_4 ),
        .I3(ila_smax_more_bursts_needed),
        .I4(m00_axi_rlast),
        .I5(current_state[3]),
        .O(input_data_addr_reg[20]));
  LUT6 #(
    .INIT(64'h00000000E222E2E2)) 
    \input_data_addr_reg[21]_i_1 
       (.I0(o_input_data_addr_reg[21]),
        .I1(current_state[1]),
        .I2(\plusOp_inferred__3/i__carry__4_n_7 ),
        .I3(ila_smax_more_bursts_needed),
        .I4(m00_axi_rlast),
        .I5(current_state[3]),
        .O(input_data_addr_reg[21]));
  LUT6 #(
    .INIT(64'h00000000E222E2E2)) 
    \input_data_addr_reg[22]_i_1 
       (.I0(o_input_data_addr_reg[22]),
        .I1(current_state[1]),
        .I2(\plusOp_inferred__3/i__carry__4_n_6 ),
        .I3(ila_smax_more_bursts_needed),
        .I4(m00_axi_rlast),
        .I5(current_state[3]),
        .O(input_data_addr_reg[22]));
  LUT6 #(
    .INIT(64'h00000000E222E2E2)) 
    \input_data_addr_reg[23]_i_1 
       (.I0(o_input_data_addr_reg[23]),
        .I1(current_state[1]),
        .I2(\plusOp_inferred__3/i__carry__4_n_5 ),
        .I3(ila_smax_more_bursts_needed),
        .I4(m00_axi_rlast),
        .I5(current_state[3]),
        .O(input_data_addr_reg[23]));
  LUT6 #(
    .INIT(64'h00000000E222E2E2)) 
    \input_data_addr_reg[24]_i_1 
       (.I0(o_input_data_addr_reg[24]),
        .I1(current_state[1]),
        .I2(\plusOp_inferred__3/i__carry__4_n_4 ),
        .I3(ila_smax_more_bursts_needed),
        .I4(m00_axi_rlast),
        .I5(current_state[3]),
        .O(input_data_addr_reg[24]));
  LUT6 #(
    .INIT(64'h00000000E222E2E2)) 
    \input_data_addr_reg[25]_i_1 
       (.I0(o_input_data_addr_reg[25]),
        .I1(current_state[1]),
        .I2(\plusOp_inferred__3/i__carry__5_n_7 ),
        .I3(ila_smax_more_bursts_needed),
        .I4(m00_axi_rlast),
        .I5(current_state[3]),
        .O(input_data_addr_reg[25]));
  LUT6 #(
    .INIT(64'h00000000E222E2E2)) 
    \input_data_addr_reg[26]_i_1 
       (.I0(o_input_data_addr_reg[26]),
        .I1(current_state[1]),
        .I2(\plusOp_inferred__3/i__carry__5_n_6 ),
        .I3(ila_smax_more_bursts_needed),
        .I4(m00_axi_rlast),
        .I5(current_state[3]),
        .O(input_data_addr_reg[26]));
  LUT6 #(
    .INIT(64'h00000000E222E2E2)) 
    \input_data_addr_reg[27]_i_1 
       (.I0(o_input_data_addr_reg[27]),
        .I1(current_state[1]),
        .I2(\plusOp_inferred__3/i__carry__5_n_5 ),
        .I3(ila_smax_more_bursts_needed),
        .I4(m00_axi_rlast),
        .I5(current_state[3]),
        .O(input_data_addr_reg[27]));
  LUT6 #(
    .INIT(64'h00000000E222E2E2)) 
    \input_data_addr_reg[28]_i_1 
       (.I0(o_input_data_addr_reg[28]),
        .I1(current_state[1]),
        .I2(\plusOp_inferred__3/i__carry__5_n_4 ),
        .I3(ila_smax_more_bursts_needed),
        .I4(m00_axi_rlast),
        .I5(current_state[3]),
        .O(input_data_addr_reg[28]));
  LUT6 #(
    .INIT(64'h00000000E222E2E2)) 
    \input_data_addr_reg[29]_i_1 
       (.I0(o_input_data_addr_reg[29]),
        .I1(current_state[1]),
        .I2(\plusOp_inferred__3/i__carry__6_n_7 ),
        .I3(ila_smax_more_bursts_needed),
        .I4(m00_axi_rlast),
        .I5(current_state[3]),
        .O(input_data_addr_reg[29]));
  LUT6 #(
    .INIT(64'h00000000E222E2E2)) 
    \input_data_addr_reg[2]_i_1 
       (.I0(o_input_data_addr_reg[2]),
        .I1(current_state[1]),
        .I2(\plusOp_inferred__3/i__carry_n_6 ),
        .I3(ila_smax_more_bursts_needed),
        .I4(m00_axi_rlast),
        .I5(current_state[3]),
        .O(input_data_addr_reg[2]));
  LUT6 #(
    .INIT(64'h00000000E222E2E2)) 
    \input_data_addr_reg[30]_i_1 
       (.I0(o_input_data_addr_reg[30]),
        .I1(current_state[1]),
        .I2(\plusOp_inferred__3/i__carry__6_n_6 ),
        .I3(ila_smax_more_bursts_needed),
        .I4(m00_axi_rlast),
        .I5(current_state[3]),
        .O(input_data_addr_reg[30]));
  LUT6 #(
    .INIT(64'h1100001000000010)) 
    \input_data_addr_reg[31]_i_1 
       (.I0(out[1]),
        .I1(current_state[3]),
        .I2(slv_reg_wren[1]),
        .I3(current_state[1]),
        .I4(out[0]),
        .I5(ram_full_i_reg),
        .O(\input_data_addr_reg[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000E222E2E2)) 
    \input_data_addr_reg[31]_i_2 
       (.I0(o_input_data_addr_reg[31]),
        .I1(current_state[1]),
        .I2(\plusOp_inferred__3/i__carry__6_n_5 ),
        .I3(ila_smax_more_bursts_needed),
        .I4(m00_axi_rlast),
        .I5(current_state[3]),
        .O(input_data_addr_reg[31]));
  LUT6 #(
    .INIT(64'h00000000E222E2E2)) 
    \input_data_addr_reg[3]_i_1 
       (.I0(o_input_data_addr_reg[3]),
        .I1(current_state[1]),
        .I2(\plusOp_inferred__3/i__carry_n_5 ),
        .I3(ila_smax_more_bursts_needed),
        .I4(m00_axi_rlast),
        .I5(current_state[3]),
        .O(input_data_addr_reg[3]));
  LUT6 #(
    .INIT(64'h00000000E222E2E2)) 
    \input_data_addr_reg[4]_i_1 
       (.I0(o_input_data_addr_reg[4]),
        .I1(current_state[1]),
        .I2(\plusOp_inferred__3/i__carry_n_4 ),
        .I3(ila_smax_more_bursts_needed),
        .I4(m00_axi_rlast),
        .I5(current_state[3]),
        .O(input_data_addr_reg[4]));
  LUT6 #(
    .INIT(64'h00000000E222E2E2)) 
    \input_data_addr_reg[5]_i_1 
       (.I0(o_input_data_addr_reg[5]),
        .I1(current_state[1]),
        .I2(\plusOp_inferred__3/i__carry__0_n_7 ),
        .I3(ila_smax_more_bursts_needed),
        .I4(m00_axi_rlast),
        .I5(current_state[3]),
        .O(input_data_addr_reg[5]));
  LUT6 #(
    .INIT(64'h00000000E222E2E2)) 
    \input_data_addr_reg[6]_i_1 
       (.I0(o_input_data_addr_reg[6]),
        .I1(current_state[1]),
        .I2(\plusOp_inferred__3/i__carry__0_n_6 ),
        .I3(ila_smax_more_bursts_needed),
        .I4(m00_axi_rlast),
        .I5(current_state[3]),
        .O(input_data_addr_reg[6]));
  LUT6 #(
    .INIT(64'h00000000E222E2E2)) 
    \input_data_addr_reg[7]_i_1 
       (.I0(o_input_data_addr_reg[7]),
        .I1(current_state[1]),
        .I2(\plusOp_inferred__3/i__carry__0_n_5 ),
        .I3(ila_smax_more_bursts_needed),
        .I4(m00_axi_rlast),
        .I5(current_state[3]),
        .O(input_data_addr_reg[7]));
  LUT6 #(
    .INIT(64'h00000000E222E2E2)) 
    \input_data_addr_reg[8]_i_1 
       (.I0(o_input_data_addr_reg[8]),
        .I1(current_state[1]),
        .I2(\plusOp_inferred__3/i__carry__0_n_4 ),
        .I3(ila_smax_more_bursts_needed),
        .I4(m00_axi_rlast),
        .I5(current_state[3]),
        .O(input_data_addr_reg[8]));
  LUT6 #(
    .INIT(64'h00000000E222E2E2)) 
    \input_data_addr_reg[9]_i_1 
       (.I0(o_input_data_addr_reg[9]),
        .I1(current_state[1]),
        .I2(\plusOp_inferred__3/i__carry__1_n_7 ),
        .I3(ila_smax_more_bursts_needed),
        .I4(m00_axi_rlast),
        .I5(current_state[3]),
        .O(input_data_addr_reg[9]));
  FDCE \input_data_addr_reg_reg[0] 
       (.C(m00_axi_aclk),
        .CE(\input_data_addr_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(input_data_addr_reg[0]),
        .Q(Q[0]));
  FDCE \input_data_addr_reg_reg[10] 
       (.C(m00_axi_aclk),
        .CE(\input_data_addr_reg[31]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(input_data_addr_reg[10]),
        .Q(Q[10]));
  FDCE \input_data_addr_reg_reg[11] 
       (.C(m00_axi_aclk),
        .CE(\input_data_addr_reg[31]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(input_data_addr_reg[11]),
        .Q(Q[11]));
  FDCE \input_data_addr_reg_reg[12] 
       (.C(m00_axi_aclk),
        .CE(\input_data_addr_reg[31]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(input_data_addr_reg[12]),
        .Q(Q[12]));
  FDCE \input_data_addr_reg_reg[13] 
       (.C(m00_axi_aclk),
        .CE(\input_data_addr_reg[31]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(input_data_addr_reg[13]),
        .Q(Q[13]));
  FDCE \input_data_addr_reg_reg[14] 
       (.C(m00_axi_aclk),
        .CE(\input_data_addr_reg[31]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(input_data_addr_reg[14]),
        .Q(Q[14]));
  FDCE \input_data_addr_reg_reg[15] 
       (.C(m00_axi_aclk),
        .CE(\input_data_addr_reg[31]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(input_data_addr_reg[15]),
        .Q(Q[15]));
  FDCE \input_data_addr_reg_reg[16] 
       (.C(m00_axi_aclk),
        .CE(\input_data_addr_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(input_data_addr_reg[16]),
        .Q(Q[16]));
  FDCE \input_data_addr_reg_reg[17] 
       (.C(m00_axi_aclk),
        .CE(\input_data_addr_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(input_data_addr_reg[17]),
        .Q(Q[17]));
  FDCE \input_data_addr_reg_reg[18] 
       (.C(m00_axi_aclk),
        .CE(\input_data_addr_reg[31]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(input_data_addr_reg[18]),
        .Q(Q[18]));
  FDCE \input_data_addr_reg_reg[19] 
       (.C(m00_axi_aclk),
        .CE(\input_data_addr_reg[31]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(input_data_addr_reg[19]),
        .Q(Q[19]));
  FDCE \input_data_addr_reg_reg[1] 
       (.C(m00_axi_aclk),
        .CE(\input_data_addr_reg[31]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(input_data_addr_reg[1]),
        .Q(Q[1]));
  FDCE \input_data_addr_reg_reg[20] 
       (.C(m00_axi_aclk),
        .CE(\input_data_addr_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(input_data_addr_reg[20]),
        .Q(Q[20]));
  FDCE \input_data_addr_reg_reg[21] 
       (.C(m00_axi_aclk),
        .CE(\input_data_addr_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(input_data_addr_reg[21]),
        .Q(Q[21]));
  FDCE \input_data_addr_reg_reg[22] 
       (.C(m00_axi_aclk),
        .CE(\input_data_addr_reg[31]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(input_data_addr_reg[22]),
        .Q(Q[22]));
  FDCE \input_data_addr_reg_reg[23] 
       (.C(m00_axi_aclk),
        .CE(\input_data_addr_reg[31]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(input_data_addr_reg[23]),
        .Q(Q[23]));
  FDCE \input_data_addr_reg_reg[24] 
       (.C(m00_axi_aclk),
        .CE(\input_data_addr_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(input_data_addr_reg[24]),
        .Q(Q[24]));
  FDCE \input_data_addr_reg_reg[25] 
       (.C(m00_axi_aclk),
        .CE(\input_data_addr_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(input_data_addr_reg[25]),
        .Q(Q[25]));
  FDCE \input_data_addr_reg_reg[26] 
       (.C(m00_axi_aclk),
        .CE(\input_data_addr_reg[31]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(input_data_addr_reg[26]),
        .Q(Q[26]));
  FDCE \input_data_addr_reg_reg[27] 
       (.C(m00_axi_aclk),
        .CE(\input_data_addr_reg[31]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(input_data_addr_reg[27]),
        .Q(Q[27]));
  FDCE \input_data_addr_reg_reg[28] 
       (.C(m00_axi_aclk),
        .CE(\input_data_addr_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(input_data_addr_reg[28]),
        .Q(Q[28]));
  FDCE \input_data_addr_reg_reg[29] 
       (.C(m00_axi_aclk),
        .CE(\input_data_addr_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(input_data_addr_reg[29]),
        .Q(Q[29]));
  FDCE \input_data_addr_reg_reg[2] 
       (.C(m00_axi_aclk),
        .CE(\input_data_addr_reg[31]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(input_data_addr_reg[2]),
        .Q(Q[2]));
  FDCE \input_data_addr_reg_reg[30] 
       (.C(m00_axi_aclk),
        .CE(\input_data_addr_reg[31]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(input_data_addr_reg[30]),
        .Q(Q[30]));
  FDCE \input_data_addr_reg_reg[31] 
       (.C(m00_axi_aclk),
        .CE(\input_data_addr_reg[31]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(input_data_addr_reg[31]),
        .Q(Q[31]));
  FDCE \input_data_addr_reg_reg[3] 
       (.C(m00_axi_aclk),
        .CE(\input_data_addr_reg[31]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(input_data_addr_reg[3]),
        .Q(Q[3]));
  FDCE \input_data_addr_reg_reg[4] 
       (.C(m00_axi_aclk),
        .CE(\input_data_addr_reg[31]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(input_data_addr_reg[4]),
        .Q(Q[4]));
  FDCE \input_data_addr_reg_reg[5] 
       (.C(m00_axi_aclk),
        .CE(\input_data_addr_reg[31]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(input_data_addr_reg[5]),
        .Q(Q[5]));
  FDCE \input_data_addr_reg_reg[6] 
       (.C(m00_axi_aclk),
        .CE(\input_data_addr_reg[31]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(input_data_addr_reg[6]),
        .Q(Q[6]));
  FDCE \input_data_addr_reg_reg[7] 
       (.C(m00_axi_aclk),
        .CE(\input_data_addr_reg[31]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(input_data_addr_reg[7]),
        .Q(Q[7]));
  FDCE \input_data_addr_reg_reg[8] 
       (.C(m00_axi_aclk),
        .CE(\input_data_addr_reg[31]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(input_data_addr_reg[8]),
        .Q(Q[8]));
  FDCE \input_data_addr_reg_reg[9] 
       (.C(m00_axi_aclk),
        .CE(\input_data_addr_reg[31]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(input_data_addr_reg[9]),
        .Q(Q[9]));
  LUT5 #(
    .INIT(32'h00020000)) 
    m00_axi_bready_INST_0
       (.I0(m00_axi_bvalid),
        .I1(out[0]),
        .I2(current_state[1]),
        .I3(out[1]),
        .I4(current_state[3]),
        .O(ila_smax_axi_bready));
  LUT4 #(
    .INIT(16'h1000)) 
    m00_axi_rready_INST_0
       (.I0(out[1]),
        .I1(current_state[3]),
        .I2(current_state[1]),
        .I3(out[0]),
        .O(m00_axi_rready));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \m00_axi_wdata[0]_INST_0 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(current_state[1]),
        .I3(outbuff_rd_en),
        .I4(ila_smax_outbuff_dout[0]),
        .I5(current_state[3]),
        .O(ila_smax_axi_wdata[0]));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \m00_axi_wdata[10]_INST_0 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(current_state[1]),
        .I3(outbuff_rd_en),
        .I4(ila_smax_outbuff_dout[10]),
        .I5(current_state[3]),
        .O(ila_smax_axi_wdata[10]));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \m00_axi_wdata[11]_INST_0 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(current_state[1]),
        .I3(outbuff_rd_en),
        .I4(ila_smax_outbuff_dout[11]),
        .I5(current_state[3]),
        .O(ila_smax_axi_wdata[11]));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \m00_axi_wdata[12]_INST_0 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(current_state[1]),
        .I3(outbuff_rd_en),
        .I4(ila_smax_outbuff_dout[12]),
        .I5(current_state[3]),
        .O(ila_smax_axi_wdata[12]));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \m00_axi_wdata[13]_INST_0 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(current_state[1]),
        .I3(outbuff_rd_en),
        .I4(ila_smax_outbuff_dout[13]),
        .I5(current_state[3]),
        .O(ila_smax_axi_wdata[13]));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \m00_axi_wdata[14]_INST_0 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(current_state[1]),
        .I3(outbuff_rd_en),
        .I4(ila_smax_outbuff_dout[14]),
        .I5(current_state[3]),
        .O(ila_smax_axi_wdata[14]));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \m00_axi_wdata[15]_INST_0 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(current_state[1]),
        .I3(outbuff_rd_en),
        .I4(ila_smax_outbuff_dout[15]),
        .I5(current_state[3]),
        .O(ila_smax_axi_wdata[15]));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \m00_axi_wdata[16]_INST_0 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(current_state[1]),
        .I3(outbuff_rd_en),
        .I4(ila_smax_outbuff_dout[16]),
        .I5(current_state[3]),
        .O(ila_smax_axi_wdata[16]));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \m00_axi_wdata[17]_INST_0 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(current_state[1]),
        .I3(outbuff_rd_en),
        .I4(ila_smax_outbuff_dout[17]),
        .I5(current_state[3]),
        .O(ila_smax_axi_wdata[17]));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \m00_axi_wdata[18]_INST_0 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(current_state[1]),
        .I3(outbuff_rd_en),
        .I4(ila_smax_outbuff_dout[18]),
        .I5(current_state[3]),
        .O(ila_smax_axi_wdata[18]));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \m00_axi_wdata[19]_INST_0 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(current_state[1]),
        .I3(outbuff_rd_en),
        .I4(ila_smax_outbuff_dout[19]),
        .I5(current_state[3]),
        .O(ila_smax_axi_wdata[19]));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \m00_axi_wdata[1]_INST_0 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(current_state[1]),
        .I3(outbuff_rd_en),
        .I4(ila_smax_outbuff_dout[1]),
        .I5(current_state[3]),
        .O(ila_smax_axi_wdata[1]));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \m00_axi_wdata[20]_INST_0 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(current_state[1]),
        .I3(outbuff_rd_en),
        .I4(ila_smax_outbuff_dout[20]),
        .I5(current_state[3]),
        .O(ila_smax_axi_wdata[20]));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \m00_axi_wdata[21]_INST_0 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(current_state[1]),
        .I3(outbuff_rd_en),
        .I4(ila_smax_outbuff_dout[21]),
        .I5(current_state[3]),
        .O(ila_smax_axi_wdata[21]));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \m00_axi_wdata[22]_INST_0 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(current_state[1]),
        .I3(outbuff_rd_en),
        .I4(ila_smax_outbuff_dout[22]),
        .I5(current_state[3]),
        .O(ila_smax_axi_wdata[22]));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \m00_axi_wdata[23]_INST_0 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(current_state[1]),
        .I3(outbuff_rd_en),
        .I4(ila_smax_outbuff_dout[23]),
        .I5(current_state[3]),
        .O(ila_smax_axi_wdata[23]));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \m00_axi_wdata[24]_INST_0 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(current_state[1]),
        .I3(outbuff_rd_en),
        .I4(ila_smax_outbuff_dout[24]),
        .I5(current_state[3]),
        .O(ila_smax_axi_wdata[24]));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \m00_axi_wdata[25]_INST_0 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(current_state[1]),
        .I3(outbuff_rd_en),
        .I4(ila_smax_outbuff_dout[25]),
        .I5(current_state[3]),
        .O(ila_smax_axi_wdata[25]));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \m00_axi_wdata[26]_INST_0 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(current_state[1]),
        .I3(outbuff_rd_en),
        .I4(ila_smax_outbuff_dout[26]),
        .I5(current_state[3]),
        .O(ila_smax_axi_wdata[26]));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \m00_axi_wdata[27]_INST_0 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(current_state[1]),
        .I3(outbuff_rd_en),
        .I4(ila_smax_outbuff_dout[27]),
        .I5(current_state[3]),
        .O(ila_smax_axi_wdata[27]));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \m00_axi_wdata[28]_INST_0 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(current_state[1]),
        .I3(outbuff_rd_en),
        .I4(ila_smax_outbuff_dout[28]),
        .I5(current_state[3]),
        .O(ila_smax_axi_wdata[28]));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \m00_axi_wdata[29]_INST_0 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(current_state[1]),
        .I3(outbuff_rd_en),
        .I4(ila_smax_outbuff_dout[29]),
        .I5(current_state[3]),
        .O(ila_smax_axi_wdata[29]));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \m00_axi_wdata[2]_INST_0 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(current_state[1]),
        .I3(outbuff_rd_en),
        .I4(ila_smax_outbuff_dout[2]),
        .I5(current_state[3]),
        .O(ila_smax_axi_wdata[2]));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \m00_axi_wdata[30]_INST_0 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(current_state[1]),
        .I3(outbuff_rd_en),
        .I4(ila_smax_outbuff_dout[30]),
        .I5(current_state[3]),
        .O(ila_smax_axi_wdata[30]));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \m00_axi_wdata[31]_INST_0 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(current_state[1]),
        .I3(outbuff_rd_en),
        .I4(ila_smax_outbuff_dout[31]),
        .I5(current_state[3]),
        .O(ila_smax_axi_wdata[31]));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \m00_axi_wdata[3]_INST_0 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(current_state[1]),
        .I3(outbuff_rd_en),
        .I4(ila_smax_outbuff_dout[3]),
        .I5(current_state[3]),
        .O(ila_smax_axi_wdata[3]));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \m00_axi_wdata[4]_INST_0 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(current_state[1]),
        .I3(outbuff_rd_en),
        .I4(ila_smax_outbuff_dout[4]),
        .I5(current_state[3]),
        .O(ila_smax_axi_wdata[4]));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \m00_axi_wdata[5]_INST_0 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(current_state[1]),
        .I3(outbuff_rd_en),
        .I4(ila_smax_outbuff_dout[5]),
        .I5(current_state[3]),
        .O(ila_smax_axi_wdata[5]));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \m00_axi_wdata[6]_INST_0 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(current_state[1]),
        .I3(outbuff_rd_en),
        .I4(ila_smax_outbuff_dout[6]),
        .I5(current_state[3]),
        .O(ila_smax_axi_wdata[6]));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \m00_axi_wdata[7]_INST_0 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(current_state[1]),
        .I3(outbuff_rd_en),
        .I4(ila_smax_outbuff_dout[7]),
        .I5(current_state[3]),
        .O(ila_smax_axi_wdata[7]));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \m00_axi_wdata[8]_INST_0 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(current_state[1]),
        .I3(outbuff_rd_en),
        .I4(ila_smax_outbuff_dout[8]),
        .I5(current_state[3]),
        .O(ila_smax_axi_wdata[8]));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \m00_axi_wdata[9]_INST_0 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(current_state[1]),
        .I3(outbuff_rd_en),
        .I4(ila_smax_outbuff_dout[9]),
        .I5(current_state[3]),
        .O(ila_smax_axi_wdata[9]));
  LUT6 #(
    .INIT(64'h008044C400000000)) 
    m00_axi_wlast_INST_0
       (.I0(ila_smax_more_bursts_needed),
        .I1(outbuff_rd_en),
        .I2(\ila_smax_wbc[7] [7]),
        .I3(m00_axi_wlast_INST_0_i_1_n_0),
        .I4(next_state29_in),
        .I5(m00_axi_wlast_INST_0_i_2_n_0),
        .O(ila_smax_axi_wlast));
  LUT6 #(
    .INIT(64'hDFFFFFFFFFFFFFFF)) 
    m00_axi_wlast_INST_0_i_1
       (.I0(\ila_smax_wbc[7] [5]),
        .I1(m00_axi_wlast_INST_0_i_3_n_0),
        .I2(\ila_smax_wbc[7] [2]),
        .I3(\ila_smax_wbc[7] [3]),
        .I4(\ila_smax_wbc[7] [4]),
        .I5(\ila_smax_wbc[7] [6]),
        .O(m00_axi_wlast_INST_0_i_1_n_0));
  LUT4 #(
    .INIT(16'h4000)) 
    m00_axi_wlast_INST_0_i_2
       (.I0(current_state[3]),
        .I1(out[1]),
        .I2(current_state[1]),
        .I3(out[0]),
        .O(m00_axi_wlast_INST_0_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT2 #(
    .INIT(4'h7)) 
    m00_axi_wlast_INST_0_i_3
       (.I0(\ila_smax_wbc[7] [0]),
        .I1(\ila_smax_wbc[7] [1]),
        .O(m00_axi_wlast_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h0800000000000000)) 
    m00_axi_wvalid_INST_0
       (.I0(m00_axi_wready),
        .I1(ila_smax_outbuff_valid),
        .I2(empty_fwft_i_reg),
        .I3(out[0]),
        .I4(current_state[1]),
        .I5(m00_axi_wvalid_INST_0_i_1_n_0),
        .O(ila_smax_outbuff_rd_en));
  LUT2 #(
    .INIT(4'h2)) 
    m00_axi_wvalid_INST_0_i_1
       (.I0(out[1]),
        .I1(current_state[3]),
        .O(m00_axi_wvalid_INST_0_i_1_n_0));
  CARRY4 minusOp_carry
       (.CI(1'b0),
        .CO({minusOp_carry_n_0,minusOp_carry_n_1,minusOp_carry_n_2,minusOp_carry_n_3}),
        .CYINIT(\ila_smax_num_elements[15] [0]),
        .DI(\ila_smax_num_elements[15] [4:1]),
        .O({minusOp_carry_n_4,minusOp_carry_n_5,minusOp_carry_n_6,minusOp_carry_n_7}),
        .S({minusOp_carry_i_1_n_0,minusOp_carry_i_2_n_0,minusOp_carry_i_3_n_0,minusOp_carry_i_4_n_0}));
  CARRY4 minusOp_carry__0
       (.CI(minusOp_carry_n_0),
        .CO({minusOp_carry__0_n_0,minusOp_carry__0_n_1,minusOp_carry__0_n_2,minusOp_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI(\ila_smax_num_elements[15] [8:5]),
        .O({minusOp_carry__0_n_4,minusOp_carry__0_n_5,minusOp_carry__0_n_6,minusOp_carry__0_n_7}),
        .S({minusOp_carry__0_i_1_n_0,minusOp_carry__0_i_2_n_0,minusOp_carry__0_i_3_n_0,minusOp_carry__0_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry__0_i_1
       (.I0(\ila_smax_num_elements[15] [8]),
        .O(minusOp_carry__0_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry__0_i_2
       (.I0(\ila_smax_num_elements[15] [7]),
        .O(minusOp_carry__0_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry__0_i_3
       (.I0(\ila_smax_num_elements[15] [6]),
        .O(minusOp_carry__0_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry__0_i_4
       (.I0(\ila_smax_num_elements[15] [5]),
        .O(minusOp_carry__0_i_4_n_0));
  CARRY4 minusOp_carry__1
       (.CI(minusOp_carry__0_n_0),
        .CO({minusOp_carry__1_n_0,minusOp_carry__1_n_1,minusOp_carry__1_n_2,minusOp_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI(\ila_smax_num_elements[15] [12:9]),
        .O({minusOp_carry__1_n_4,minusOp_carry__1_n_5,minusOp_carry__1_n_6,minusOp_carry__1_n_7}),
        .S({minusOp_carry__1_i_1_n_0,minusOp_carry__1_i_2_n_0,minusOp_carry__1_i_3_n_0,minusOp_carry__1_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry__1_i_1
       (.I0(\ila_smax_num_elements[15] [12]),
        .O(minusOp_carry__1_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry__1_i_2
       (.I0(\ila_smax_num_elements[15] [11]),
        .O(minusOp_carry__1_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry__1_i_3
       (.I0(\ila_smax_num_elements[15] [10]),
        .O(minusOp_carry__1_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry__1_i_4
       (.I0(\ila_smax_num_elements[15] [9]),
        .O(minusOp_carry__1_i_4_n_0));
  CARRY4 minusOp_carry__2
       (.CI(minusOp_carry__1_n_0),
        .CO({NLW_minusOp_carry__2_CO_UNCONNECTED[3:2],minusOp_carry__2_n_2,minusOp_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,\ila_smax_num_elements[15] [14:13]}),
        .O({NLW_minusOp_carry__2_O_UNCONNECTED[3],minusOp_carry__2_n_5,minusOp_carry__2_n_6,minusOp_carry__2_n_7}),
        .S({1'b0,minusOp_carry__2_i_1_n_0,minusOp_carry__2_i_2_n_0,minusOp_carry__2_i_3_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry__2_i_1
       (.I0(\ila_smax_num_elements[15] [15]),
        .O(minusOp_carry__2_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry__2_i_2
       (.I0(\ila_smax_num_elements[15] [14]),
        .O(minusOp_carry__2_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry__2_i_3
       (.I0(\ila_smax_num_elements[15] [13]),
        .O(minusOp_carry__2_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry_i_1
       (.I0(\ila_smax_num_elements[15] [4]),
        .O(minusOp_carry_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry_i_2
       (.I0(\ila_smax_num_elements[15] [3]),
        .O(minusOp_carry_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry_i_3
       (.I0(\ila_smax_num_elements[15] [2]),
        .O(minusOp_carry_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry_i_4
       (.I0(\ila_smax_num_elements[15] [1]),
        .O(minusOp_carry_i_4_n_0));
  CARRY4 \minusOp_inferred__0/i__carry 
       (.CI(1'b0),
        .CO({\minusOp_inferred__0/i__carry_n_0 ,\minusOp_inferred__0/i__carry_n_1 ,\minusOp_inferred__0/i__carry_n_2 ,\minusOp_inferred__0/i__carry_n_3 }),
        .CYINIT(1'b0),
        .DI({ila_smax_writes_remaining[10:8],1'b0}),
        .O({\minusOp_inferred__0/i__carry_n_4 ,\minusOp_inferred__0/i__carry_n_5 ,\minusOp_inferred__0/i__carry_n_6 ,\minusOp_inferred__0/i__carry_n_7 }),
        .S({i__carry_i_1_n_0,i__carry_i_2_n_0,i__carry_i_3__0_n_0,i__carry_i_4__3_n_0}));
  CARRY4 \minusOp_inferred__0/i__carry__0 
       (.CI(\minusOp_inferred__0/i__carry_n_0 ),
        .CO({\minusOp_inferred__0/i__carry__0_n_0 ,\minusOp_inferred__0/i__carry__0_n_1 ,\minusOp_inferred__0/i__carry__0_n_2 ,\minusOp_inferred__0/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI(ila_smax_writes_remaining[14:11]),
        .O({\minusOp_inferred__0/i__carry__0_n_4 ,\minusOp_inferred__0/i__carry__0_n_5 ,\minusOp_inferred__0/i__carry__0_n_6 ,\minusOp_inferred__0/i__carry__0_n_7 }),
        .S({i__carry__0_i_1_n_0,i__carry__0_i_2_n_0,i__carry__0_i_3_n_0,i__carry__0_i_4_n_0}));
  CARRY4 \minusOp_inferred__0/i__carry__1 
       (.CI(\minusOp_inferred__0/i__carry__0_n_0 ),
        .CO(\NLW_minusOp_inferred__0/i__carry__1_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_minusOp_inferred__0/i__carry__1_O_UNCONNECTED [3:1],\minusOp_inferred__0/i__carry__1_n_7 }),
        .S({1'b0,1'b0,1'b0,i__carry__1_i_1_n_0}));
  CARRY4 \minusOp_inferred__2/i__carry 
       (.CI(1'b0),
        .CO({\minusOp_inferred__2/i__carry_n_0 ,\minusOp_inferred__2/i__carry_n_1 ,\minusOp_inferred__2/i__carry_n_2 ,\minusOp_inferred__2/i__carry_n_3 }),
        .CYINIT(1'b0),
        .DI({ila_smax_reads_remaining[10:8],1'b0}),
        .O({\minusOp_inferred__2/i__carry_n_4 ,\minusOp_inferred__2/i__carry_n_5 ,\minusOp_inferred__2/i__carry_n_6 ,\minusOp_inferred__2/i__carry_n_7 }),
        .S({i__carry_i_1__0_n_0,i__carry_i_2__0_n_0,i__carry_i_3__1_n_0,i__carry_i_4__4_n_0}));
  CARRY4 \minusOp_inferred__2/i__carry__0 
       (.CI(\minusOp_inferred__2/i__carry_n_0 ),
        .CO({\minusOp_inferred__2/i__carry__0_n_0 ,\minusOp_inferred__2/i__carry__0_n_1 ,\minusOp_inferred__2/i__carry__0_n_2 ,\minusOp_inferred__2/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI(ila_smax_reads_remaining[14:11]),
        .O({\minusOp_inferred__2/i__carry__0_n_4 ,\minusOp_inferred__2/i__carry__0_n_5 ,\minusOp_inferred__2/i__carry__0_n_6 ,\minusOp_inferred__2/i__carry__0_n_7 }),
        .S({i__carry__0_i_1__0_n_0,i__carry__0_i_2__0_n_0,i__carry__0_i_3__0_n_0,i__carry__0_i_4__0_n_0}));
  CARRY4 \minusOp_inferred__2/i__carry__1 
       (.CI(\minusOp_inferred__2/i__carry__0_n_0 ),
        .CO(\NLW_minusOp_inferred__2/i__carry__1_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_minusOp_inferred__2/i__carry__1_O_UNCONNECTED [3:1],\minusOp_inferred__2/i__carry__1_n_7 }),
        .S({1'b0,1'b0,1'b0,i__carry__1_i_1__0_n_0}));
  LUT6 #(
    .INIT(64'h00E2FFFF00E20000)) 
    more_bursts_needed_i_1
       (.I0(axi_arlen15_out),
        .I1(out[1]),
        .I2(axi_awlen14_out),
        .I3(more_bursts_needed_i_2_n_0),
        .I4(more_bursts_needed_i_3_n_0),
        .I5(ila_smax_more_bursts_needed),
        .O(more_bursts_needed_i_1_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    more_bursts_needed_i_2
       (.I0(current_state[3]),
        .I1(out[0]),
        .O(more_bursts_needed_i_2_n_0));
  LUT4 #(
    .INIT(16'h0007)) 
    more_bursts_needed_i_3
       (.I0(out[0]),
        .I1(ila_smax_calculated),
        .I2(current_state[1]),
        .I3(current_state[3]),
        .O(more_bursts_needed_i_3_n_0));
  FDCE more_bursts_needed_reg
       (.C(m00_axi_aclk),
        .CE(1'b1),
        .CLR(m00_axi_aresetn_1),
        .D(more_bursts_needed_i_1_n_0),
        .Q(ila_smax_more_bursts_needed));
  CARRY4 next_state2_carry
       (.CI(1'b0),
        .CO({next_state29_in,next_state2_carry_n_1,next_state2_carry_n_2,next_state2_carry_n_3}),
        .CYINIT(1'b0),
        .DI({next_state2_carry_i_1_n_0,next_state2_carry_i_2_n_0,next_state2_carry_i_3_n_0,next_state2_carry_i_4_n_0}),
        .O(NLW_next_state2_carry_O_UNCONNECTED[3:0]),
        .S({next_state2_carry_i_5_n_0,next_state2_carry_i_6_n_0,next_state2_carry_i_7_n_0,next_state2_carry_i_8_n_0}));
  LUT4 #(
    .INIT(16'h22B2)) 
    next_state2_carry_i_1
       (.I0(ila_smax_axi_awlen[7]),
        .I1(\ila_smax_wbc[7] [7]),
        .I2(ila_smax_axi_awlen[6]),
        .I3(\ila_smax_wbc[7] [6]),
        .O(next_state2_carry_i_1_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    next_state2_carry_i_2
       (.I0(ila_smax_axi_awlen[5]),
        .I1(\ila_smax_wbc[7] [5]),
        .I2(ila_smax_axi_awlen[4]),
        .I3(\ila_smax_wbc[7] [4]),
        .O(next_state2_carry_i_2_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    next_state2_carry_i_3
       (.I0(ila_smax_axi_awlen[3]),
        .I1(\ila_smax_wbc[7] [3]),
        .I2(ila_smax_axi_awlen[2]),
        .I3(\ila_smax_wbc[7] [2]),
        .O(next_state2_carry_i_3_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    next_state2_carry_i_4
       (.I0(ila_smax_axi_awlen[1]),
        .I1(\ila_smax_wbc[7] [1]),
        .I2(ila_smax_axi_awlen[0]),
        .I3(\ila_smax_wbc[7] [0]),
        .O(next_state2_carry_i_4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    next_state2_carry_i_5
       (.I0(\ila_smax_wbc[7] [7]),
        .I1(ila_smax_axi_awlen[7]),
        .I2(\ila_smax_wbc[7] [6]),
        .I3(ila_smax_axi_awlen[6]),
        .O(next_state2_carry_i_5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    next_state2_carry_i_6
       (.I0(\ila_smax_wbc[7] [5]),
        .I1(ila_smax_axi_awlen[5]),
        .I2(\ila_smax_wbc[7] [4]),
        .I3(ila_smax_axi_awlen[4]),
        .O(next_state2_carry_i_6_n_0));
  LUT4 #(
    .INIT(16'h8421)) 
    next_state2_carry_i_7
       (.I0(\ila_smax_wbc[7] [2]),
        .I1(\ila_smax_wbc[7] [3]),
        .I2(ila_smax_axi_awlen[2]),
        .I3(ila_smax_axi_awlen[3]),
        .O(next_state2_carry_i_7_n_0));
  LUT4 #(
    .INIT(16'h8421)) 
    next_state2_carry_i_8
       (.I0(\ila_smax_wbc[7] [0]),
        .I1(\ila_smax_wbc[7] [1]),
        .I2(ila_smax_axi_awlen[0]),
        .I3(ila_smax_axi_awlen[1]),
        .O(next_state2_carry_i_8_n_0));
  LUT6 #(
    .INIT(64'h0000001000000000)) 
    \num_elements[15]_i_1 
       (.I0(out[0]),
        .I1(current_state[3]),
        .I2(slv_reg_wren[0]),
        .I3(current_state[1]),
        .I4(out[1]),
        .I5(m00_axi_aresetn),
        .O(\num_elements[15]_i_1_n_0 ));
  FDRE \num_elements_reg[0] 
       (.C(m00_axi_aclk),
        .CE(\num_elements[15]_i_1_n_0 ),
        .D(o_control_reg[1]),
        .Q(\ila_smax_num_elements[15] [0]),
        .R(1'b0));
  FDRE \num_elements_reg[10] 
       (.C(m00_axi_aclk),
        .CE(\num_elements[15]_i_1_n_0 ),
        .D(o_control_reg[11]),
        .Q(\ila_smax_num_elements[15] [10]),
        .R(1'b0));
  FDRE \num_elements_reg[11] 
       (.C(m00_axi_aclk),
        .CE(\num_elements[15]_i_1_n_0 ),
        .D(o_control_reg[12]),
        .Q(\ila_smax_num_elements[15] [11]),
        .R(1'b0));
  FDRE \num_elements_reg[12] 
       (.C(m00_axi_aclk),
        .CE(\num_elements[15]_i_1_n_0 ),
        .D(o_control_reg[13]),
        .Q(\ila_smax_num_elements[15] [12]),
        .R(1'b0));
  FDRE \num_elements_reg[13] 
       (.C(m00_axi_aclk),
        .CE(\num_elements[15]_i_1_n_0 ),
        .D(o_control_reg[14]),
        .Q(\ila_smax_num_elements[15] [13]),
        .R(1'b0));
  FDRE \num_elements_reg[14] 
       (.C(m00_axi_aclk),
        .CE(\num_elements[15]_i_1_n_0 ),
        .D(o_control_reg[15]),
        .Q(\ila_smax_num_elements[15] [14]),
        .R(1'b0));
  FDRE \num_elements_reg[15] 
       (.C(m00_axi_aclk),
        .CE(\num_elements[15]_i_1_n_0 ),
        .D(o_control_reg[16]),
        .Q(\ila_smax_num_elements[15] [15]),
        .R(1'b0));
  FDRE \num_elements_reg[1] 
       (.C(m00_axi_aclk),
        .CE(\num_elements[15]_i_1_n_0 ),
        .D(o_control_reg[2]),
        .Q(\ila_smax_num_elements[15] [1]),
        .R(1'b0));
  FDRE \num_elements_reg[2] 
       (.C(m00_axi_aclk),
        .CE(\num_elements[15]_i_1_n_0 ),
        .D(o_control_reg[3]),
        .Q(\ila_smax_num_elements[15] [2]),
        .R(1'b0));
  FDRE \num_elements_reg[3] 
       (.C(m00_axi_aclk),
        .CE(\num_elements[15]_i_1_n_0 ),
        .D(o_control_reg[4]),
        .Q(\ila_smax_num_elements[15] [3]),
        .R(1'b0));
  FDRE \num_elements_reg[4] 
       (.C(m00_axi_aclk),
        .CE(\num_elements[15]_i_1_n_0 ),
        .D(o_control_reg[5]),
        .Q(\ila_smax_num_elements[15] [4]),
        .R(1'b0));
  FDRE \num_elements_reg[5] 
       (.C(m00_axi_aclk),
        .CE(\num_elements[15]_i_1_n_0 ),
        .D(o_control_reg[6]),
        .Q(\ila_smax_num_elements[15] [5]),
        .R(1'b0));
  FDRE \num_elements_reg[6] 
       (.C(m00_axi_aclk),
        .CE(\num_elements[15]_i_1_n_0 ),
        .D(o_control_reg[7]),
        .Q(\ila_smax_num_elements[15] [6]),
        .R(1'b0));
  FDRE \num_elements_reg[7] 
       (.C(m00_axi_aclk),
        .CE(\num_elements[15]_i_1_n_0 ),
        .D(o_control_reg[8]),
        .Q(\ila_smax_num_elements[15] [7]),
        .R(1'b0));
  FDRE \num_elements_reg[8] 
       (.C(m00_axi_aclk),
        .CE(\num_elements[15]_i_1_n_0 ),
        .D(o_control_reg[9]),
        .Q(\ila_smax_num_elements[15] [8]),
        .R(1'b0));
  FDRE \num_elements_reg[9] 
       (.C(m00_axi_aclk),
        .CE(\num_elements[15]_i_1_n_0 ),
        .D(o_control_reg[10]),
        .Q(\ila_smax_num_elements[15] [9]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h0B08)) 
    \output_data_addr_reg[0]_i_1 
       (.I0(\ila_smax_output_data_addr_reg[31] [0]),
        .I1(out[1]),
        .I2(current_state[3]),
        .I3(o_output_data_addr_reg[0]),
        .O(output_data_addr_reg[0]));
  LUT4 #(
    .INIT(16'h00E2)) 
    \output_data_addr_reg[10]_i_1 
       (.I0(o_output_data_addr_reg[10]),
        .I1(out[1]),
        .I2(\output_data_addr_reg_reg[12]_i_2_n_6 ),
        .I3(current_state[3]),
        .O(output_data_addr_reg[10]));
  LUT4 #(
    .INIT(16'h00E2)) 
    \output_data_addr_reg[11]_i_1 
       (.I0(o_output_data_addr_reg[11]),
        .I1(out[1]),
        .I2(\output_data_addr_reg_reg[12]_i_2_n_5 ),
        .I3(current_state[3]),
        .O(output_data_addr_reg[11]));
  LUT4 #(
    .INIT(16'h00E2)) 
    \output_data_addr_reg[12]_i_1 
       (.I0(o_output_data_addr_reg[12]),
        .I1(out[1]),
        .I2(\output_data_addr_reg_reg[12]_i_2_n_4 ),
        .I3(current_state[3]),
        .O(output_data_addr_reg[12]));
  LUT1 #(
    .INIT(2'h2)) 
    \output_data_addr_reg[12]_i_3 
       (.I0(\ila_smax_output_data_addr_reg[31] [12]),
        .O(\output_data_addr_reg[12]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \output_data_addr_reg[12]_i_4 
       (.I0(\ila_smax_output_data_addr_reg[31] [11]),
        .O(\output_data_addr_reg[12]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \output_data_addr_reg[12]_i_5 
       (.I0(\ila_smax_output_data_addr_reg[31] [10]),
        .O(\output_data_addr_reg[12]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \output_data_addr_reg[12]_i_6 
       (.I0(\ila_smax_output_data_addr_reg[31] [9]),
        .O(\output_data_addr_reg[12]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \output_data_addr_reg[13]_i_1 
       (.I0(o_output_data_addr_reg[13]),
        .I1(out[1]),
        .I2(\output_data_addr_reg_reg[16]_i_2_n_7 ),
        .I3(current_state[3]),
        .O(output_data_addr_reg[13]));
  LUT4 #(
    .INIT(16'h00E2)) 
    \output_data_addr_reg[14]_i_1 
       (.I0(o_output_data_addr_reg[14]),
        .I1(out[1]),
        .I2(\output_data_addr_reg_reg[16]_i_2_n_6 ),
        .I3(current_state[3]),
        .O(output_data_addr_reg[14]));
  LUT4 #(
    .INIT(16'h00E2)) 
    \output_data_addr_reg[15]_i_1 
       (.I0(o_output_data_addr_reg[15]),
        .I1(out[1]),
        .I2(\output_data_addr_reg_reg[16]_i_2_n_5 ),
        .I3(current_state[3]),
        .O(output_data_addr_reg[15]));
  LUT4 #(
    .INIT(16'h00E2)) 
    \output_data_addr_reg[16]_i_1 
       (.I0(o_output_data_addr_reg[16]),
        .I1(out[1]),
        .I2(\output_data_addr_reg_reg[16]_i_2_n_4 ),
        .I3(current_state[3]),
        .O(output_data_addr_reg[16]));
  LUT1 #(
    .INIT(2'h2)) 
    \output_data_addr_reg[16]_i_3 
       (.I0(\ila_smax_output_data_addr_reg[31] [16]),
        .O(\output_data_addr_reg[16]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \output_data_addr_reg[16]_i_4 
       (.I0(\ila_smax_output_data_addr_reg[31] [15]),
        .O(\output_data_addr_reg[16]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \output_data_addr_reg[16]_i_5 
       (.I0(\ila_smax_output_data_addr_reg[31] [14]),
        .O(\output_data_addr_reg[16]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \output_data_addr_reg[16]_i_6 
       (.I0(\ila_smax_output_data_addr_reg[31] [13]),
        .O(\output_data_addr_reg[16]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \output_data_addr_reg[17]_i_1 
       (.I0(o_output_data_addr_reg[17]),
        .I1(out[1]),
        .I2(\output_data_addr_reg_reg[20]_i_2_n_7 ),
        .I3(current_state[3]),
        .O(output_data_addr_reg[17]));
  LUT4 #(
    .INIT(16'h00E2)) 
    \output_data_addr_reg[18]_i_1 
       (.I0(o_output_data_addr_reg[18]),
        .I1(out[1]),
        .I2(\output_data_addr_reg_reg[20]_i_2_n_6 ),
        .I3(current_state[3]),
        .O(output_data_addr_reg[18]));
  LUT4 #(
    .INIT(16'h00E2)) 
    \output_data_addr_reg[19]_i_1 
       (.I0(o_output_data_addr_reg[19]),
        .I1(out[1]),
        .I2(\output_data_addr_reg_reg[20]_i_2_n_5 ),
        .I3(current_state[3]),
        .O(output_data_addr_reg[19]));
  LUT4 #(
    .INIT(16'h00E2)) 
    \output_data_addr_reg[1]_i_1 
       (.I0(o_output_data_addr_reg[1]),
        .I1(out[1]),
        .I2(\output_data_addr_reg_reg[4]_i_2_n_7 ),
        .I3(current_state[3]),
        .O(output_data_addr_reg[1]));
  LUT4 #(
    .INIT(16'h00E2)) 
    \output_data_addr_reg[20]_i_1 
       (.I0(o_output_data_addr_reg[20]),
        .I1(out[1]),
        .I2(\output_data_addr_reg_reg[20]_i_2_n_4 ),
        .I3(current_state[3]),
        .O(output_data_addr_reg[20]));
  LUT1 #(
    .INIT(2'h2)) 
    \output_data_addr_reg[20]_i_3 
       (.I0(\ila_smax_output_data_addr_reg[31] [20]),
        .O(\output_data_addr_reg[20]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \output_data_addr_reg[20]_i_4 
       (.I0(\ila_smax_output_data_addr_reg[31] [19]),
        .O(\output_data_addr_reg[20]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \output_data_addr_reg[20]_i_5 
       (.I0(\ila_smax_output_data_addr_reg[31] [18]),
        .O(\output_data_addr_reg[20]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \output_data_addr_reg[20]_i_6 
       (.I0(\ila_smax_output_data_addr_reg[31] [17]),
        .O(\output_data_addr_reg[20]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \output_data_addr_reg[21]_i_1 
       (.I0(o_output_data_addr_reg[21]),
        .I1(out[1]),
        .I2(\output_data_addr_reg_reg[24]_i_2_n_7 ),
        .I3(current_state[3]),
        .O(output_data_addr_reg[21]));
  LUT4 #(
    .INIT(16'h00E2)) 
    \output_data_addr_reg[22]_i_1 
       (.I0(o_output_data_addr_reg[22]),
        .I1(out[1]),
        .I2(\output_data_addr_reg_reg[24]_i_2_n_6 ),
        .I3(current_state[3]),
        .O(output_data_addr_reg[22]));
  LUT4 #(
    .INIT(16'h00E2)) 
    \output_data_addr_reg[23]_i_1 
       (.I0(o_output_data_addr_reg[23]),
        .I1(out[1]),
        .I2(\output_data_addr_reg_reg[24]_i_2_n_5 ),
        .I3(current_state[3]),
        .O(output_data_addr_reg[23]));
  LUT4 #(
    .INIT(16'h00E2)) 
    \output_data_addr_reg[24]_i_1 
       (.I0(o_output_data_addr_reg[24]),
        .I1(out[1]),
        .I2(\output_data_addr_reg_reg[24]_i_2_n_4 ),
        .I3(current_state[3]),
        .O(output_data_addr_reg[24]));
  LUT1 #(
    .INIT(2'h2)) 
    \output_data_addr_reg[24]_i_3 
       (.I0(\ila_smax_output_data_addr_reg[31] [24]),
        .O(\output_data_addr_reg[24]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \output_data_addr_reg[24]_i_4 
       (.I0(\ila_smax_output_data_addr_reg[31] [23]),
        .O(\output_data_addr_reg[24]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \output_data_addr_reg[24]_i_5 
       (.I0(\ila_smax_output_data_addr_reg[31] [22]),
        .O(\output_data_addr_reg[24]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \output_data_addr_reg[24]_i_6 
       (.I0(\ila_smax_output_data_addr_reg[31] [21]),
        .O(\output_data_addr_reg[24]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \output_data_addr_reg[25]_i_1 
       (.I0(o_output_data_addr_reg[25]),
        .I1(out[1]),
        .I2(\output_data_addr_reg_reg[28]_i_2_n_7 ),
        .I3(current_state[3]),
        .O(output_data_addr_reg[25]));
  LUT4 #(
    .INIT(16'h00E2)) 
    \output_data_addr_reg[26]_i_1 
       (.I0(o_output_data_addr_reg[26]),
        .I1(out[1]),
        .I2(\output_data_addr_reg_reg[28]_i_2_n_6 ),
        .I3(current_state[3]),
        .O(output_data_addr_reg[26]));
  LUT4 #(
    .INIT(16'h00E2)) 
    \output_data_addr_reg[27]_i_1 
       (.I0(o_output_data_addr_reg[27]),
        .I1(out[1]),
        .I2(\output_data_addr_reg_reg[28]_i_2_n_5 ),
        .I3(current_state[3]),
        .O(output_data_addr_reg[27]));
  LUT4 #(
    .INIT(16'h00E2)) 
    \output_data_addr_reg[28]_i_1 
       (.I0(o_output_data_addr_reg[28]),
        .I1(out[1]),
        .I2(\output_data_addr_reg_reg[28]_i_2_n_4 ),
        .I3(current_state[3]),
        .O(output_data_addr_reg[28]));
  LUT1 #(
    .INIT(2'h2)) 
    \output_data_addr_reg[28]_i_3 
       (.I0(\ila_smax_output_data_addr_reg[31] [28]),
        .O(\output_data_addr_reg[28]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \output_data_addr_reg[28]_i_4 
       (.I0(\ila_smax_output_data_addr_reg[31] [27]),
        .O(\output_data_addr_reg[28]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \output_data_addr_reg[28]_i_5 
       (.I0(\ila_smax_output_data_addr_reg[31] [26]),
        .O(\output_data_addr_reg[28]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \output_data_addr_reg[28]_i_6 
       (.I0(\ila_smax_output_data_addr_reg[31] [25]),
        .O(\output_data_addr_reg[28]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \output_data_addr_reg[29]_i_1 
       (.I0(o_output_data_addr_reg[29]),
        .I1(out[1]),
        .I2(\output_data_addr_reg_reg[31]_i_3_n_7 ),
        .I3(current_state[3]),
        .O(output_data_addr_reg[29]));
  LUT4 #(
    .INIT(16'h00E2)) 
    \output_data_addr_reg[2]_i_1 
       (.I0(o_output_data_addr_reg[2]),
        .I1(out[1]),
        .I2(\output_data_addr_reg_reg[4]_i_2_n_6 ),
        .I3(current_state[3]),
        .O(output_data_addr_reg[2]));
  LUT4 #(
    .INIT(16'h00E2)) 
    \output_data_addr_reg[30]_i_1 
       (.I0(o_output_data_addr_reg[30]),
        .I1(out[1]),
        .I2(\output_data_addr_reg_reg[31]_i_3_n_6 ),
        .I3(current_state[3]),
        .O(output_data_addr_reg[30]));
  LUT6 #(
    .INIT(64'h4000400000050000)) 
    \output_data_addr_reg[31]_i_1 
       (.I0(current_state[3]),
        .I1(outbuff_rd_en),
        .I2(out[0]),
        .I3(current_state[1]),
        .I4(slv_reg_wren[2]),
        .I5(out[1]),
        .O(\output_data_addr_reg[31]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \output_data_addr_reg[31]_i_2 
       (.I0(o_output_data_addr_reg[31]),
        .I1(out[1]),
        .I2(\output_data_addr_reg_reg[31]_i_3_n_5 ),
        .I3(current_state[3]),
        .O(output_data_addr_reg[31]));
  LUT1 #(
    .INIT(2'h2)) 
    \output_data_addr_reg[31]_i_4 
       (.I0(\ila_smax_output_data_addr_reg[31] [31]),
        .O(\output_data_addr_reg[31]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \output_data_addr_reg[31]_i_5 
       (.I0(\ila_smax_output_data_addr_reg[31] [30]),
        .O(\output_data_addr_reg[31]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \output_data_addr_reg[31]_i_6 
       (.I0(\ila_smax_output_data_addr_reg[31] [29]),
        .O(\output_data_addr_reg[31]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \output_data_addr_reg[3]_i_1 
       (.I0(o_output_data_addr_reg[3]),
        .I1(out[1]),
        .I2(\output_data_addr_reg_reg[4]_i_2_n_5 ),
        .I3(current_state[3]),
        .O(output_data_addr_reg[3]));
  LUT4 #(
    .INIT(16'h00E2)) 
    \output_data_addr_reg[4]_i_1 
       (.I0(o_output_data_addr_reg[4]),
        .I1(out[1]),
        .I2(\output_data_addr_reg_reg[4]_i_2_n_4 ),
        .I3(current_state[3]),
        .O(output_data_addr_reg[4]));
  LUT1 #(
    .INIT(2'h2)) 
    \output_data_addr_reg[4]_i_3 
       (.I0(\ila_smax_output_data_addr_reg[31] [4]),
        .O(\output_data_addr_reg[4]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \output_data_addr_reg[4]_i_4 
       (.I0(\ila_smax_output_data_addr_reg[31] [3]),
        .O(\output_data_addr_reg[4]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \output_data_addr_reg[4]_i_5 
       (.I0(\ila_smax_output_data_addr_reg[31] [2]),
        .O(\output_data_addr_reg[4]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \output_data_addr_reg[4]_i_6 
       (.I0(\ila_smax_output_data_addr_reg[31] [1]),
        .O(\output_data_addr_reg[4]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \output_data_addr_reg[5]_i_1 
       (.I0(o_output_data_addr_reg[5]),
        .I1(out[1]),
        .I2(\output_data_addr_reg_reg[8]_i_2_n_7 ),
        .I3(current_state[3]),
        .O(output_data_addr_reg[5]));
  LUT4 #(
    .INIT(16'h00E2)) 
    \output_data_addr_reg[6]_i_1 
       (.I0(o_output_data_addr_reg[6]),
        .I1(out[1]),
        .I2(\output_data_addr_reg_reg[8]_i_2_n_6 ),
        .I3(current_state[3]),
        .O(output_data_addr_reg[6]));
  LUT4 #(
    .INIT(16'h00E2)) 
    \output_data_addr_reg[7]_i_1 
       (.I0(o_output_data_addr_reg[7]),
        .I1(out[1]),
        .I2(\output_data_addr_reg_reg[8]_i_2_n_5 ),
        .I3(current_state[3]),
        .O(output_data_addr_reg[7]));
  LUT4 #(
    .INIT(16'h00E2)) 
    \output_data_addr_reg[8]_i_1 
       (.I0(o_output_data_addr_reg[8]),
        .I1(out[1]),
        .I2(\output_data_addr_reg_reg[8]_i_2_n_4 ),
        .I3(current_state[3]),
        .O(output_data_addr_reg[8]));
  LUT1 #(
    .INIT(2'h2)) 
    \output_data_addr_reg[8]_i_3 
       (.I0(\ila_smax_output_data_addr_reg[31] [8]),
        .O(\output_data_addr_reg[8]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \output_data_addr_reg[8]_i_4 
       (.I0(\ila_smax_output_data_addr_reg[31] [7]),
        .O(\output_data_addr_reg[8]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \output_data_addr_reg[8]_i_5 
       (.I0(\ila_smax_output_data_addr_reg[31] [6]),
        .O(\output_data_addr_reg[8]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \output_data_addr_reg[8]_i_6 
       (.I0(\ila_smax_output_data_addr_reg[31] [5]),
        .O(\output_data_addr_reg[8]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \output_data_addr_reg[9]_i_1 
       (.I0(o_output_data_addr_reg[9]),
        .I1(out[1]),
        .I2(\output_data_addr_reg_reg[12]_i_2_n_7 ),
        .I3(current_state[3]),
        .O(output_data_addr_reg[9]));
  FDCE \output_data_addr_reg_reg[0] 
       (.C(m00_axi_aclk),
        .CE(\output_data_addr_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(output_data_addr_reg[0]),
        .Q(\ila_smax_output_data_addr_reg[31] [0]));
  FDCE \output_data_addr_reg_reg[10] 
       (.C(m00_axi_aclk),
        .CE(\output_data_addr_reg[31]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(output_data_addr_reg[10]),
        .Q(\ila_smax_output_data_addr_reg[31] [10]));
  FDCE \output_data_addr_reg_reg[11] 
       (.C(m00_axi_aclk),
        .CE(\output_data_addr_reg[31]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(output_data_addr_reg[11]),
        .Q(\ila_smax_output_data_addr_reg[31] [11]));
  FDCE \output_data_addr_reg_reg[12] 
       (.C(m00_axi_aclk),
        .CE(\output_data_addr_reg[31]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(output_data_addr_reg[12]),
        .Q(\ila_smax_output_data_addr_reg[31] [12]));
  CARRY4 \output_data_addr_reg_reg[12]_i_2 
       (.CI(\output_data_addr_reg_reg[8]_i_2_n_0 ),
        .CO({\output_data_addr_reg_reg[12]_i_2_n_0 ,\output_data_addr_reg_reg[12]_i_2_n_1 ,\output_data_addr_reg_reg[12]_i_2_n_2 ,\output_data_addr_reg_reg[12]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\output_data_addr_reg_reg[12]_i_2_n_4 ,\output_data_addr_reg_reg[12]_i_2_n_5 ,\output_data_addr_reg_reg[12]_i_2_n_6 ,\output_data_addr_reg_reg[12]_i_2_n_7 }),
        .S({\output_data_addr_reg[12]_i_3_n_0 ,\output_data_addr_reg[12]_i_4_n_0 ,\output_data_addr_reg[12]_i_5_n_0 ,\output_data_addr_reg[12]_i_6_n_0 }));
  FDCE \output_data_addr_reg_reg[13] 
       (.C(m00_axi_aclk),
        .CE(\output_data_addr_reg[31]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(output_data_addr_reg[13]),
        .Q(\ila_smax_output_data_addr_reg[31] [13]));
  FDCE \output_data_addr_reg_reg[14] 
       (.C(m00_axi_aclk),
        .CE(\output_data_addr_reg[31]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(output_data_addr_reg[14]),
        .Q(\ila_smax_output_data_addr_reg[31] [14]));
  FDCE \output_data_addr_reg_reg[15] 
       (.C(m00_axi_aclk),
        .CE(\output_data_addr_reg[31]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(output_data_addr_reg[15]),
        .Q(\ila_smax_output_data_addr_reg[31] [15]));
  FDCE \output_data_addr_reg_reg[16] 
       (.C(m00_axi_aclk),
        .CE(\output_data_addr_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(output_data_addr_reg[16]),
        .Q(\ila_smax_output_data_addr_reg[31] [16]));
  CARRY4 \output_data_addr_reg_reg[16]_i_2 
       (.CI(\output_data_addr_reg_reg[12]_i_2_n_0 ),
        .CO({\output_data_addr_reg_reg[16]_i_2_n_0 ,\output_data_addr_reg_reg[16]_i_2_n_1 ,\output_data_addr_reg_reg[16]_i_2_n_2 ,\output_data_addr_reg_reg[16]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\output_data_addr_reg_reg[16]_i_2_n_4 ,\output_data_addr_reg_reg[16]_i_2_n_5 ,\output_data_addr_reg_reg[16]_i_2_n_6 ,\output_data_addr_reg_reg[16]_i_2_n_7 }),
        .S({\output_data_addr_reg[16]_i_3_n_0 ,\output_data_addr_reg[16]_i_4_n_0 ,\output_data_addr_reg[16]_i_5_n_0 ,\output_data_addr_reg[16]_i_6_n_0 }));
  FDCE \output_data_addr_reg_reg[17] 
       (.C(m00_axi_aclk),
        .CE(\output_data_addr_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(output_data_addr_reg[17]),
        .Q(\ila_smax_output_data_addr_reg[31] [17]));
  FDCE \output_data_addr_reg_reg[18] 
       (.C(m00_axi_aclk),
        .CE(\output_data_addr_reg[31]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(output_data_addr_reg[18]),
        .Q(\ila_smax_output_data_addr_reg[31] [18]));
  FDCE \output_data_addr_reg_reg[19] 
       (.C(m00_axi_aclk),
        .CE(\output_data_addr_reg[31]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(output_data_addr_reg[19]),
        .Q(\ila_smax_output_data_addr_reg[31] [19]));
  FDCE \output_data_addr_reg_reg[1] 
       (.C(m00_axi_aclk),
        .CE(\output_data_addr_reg[31]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(output_data_addr_reg[1]),
        .Q(\ila_smax_output_data_addr_reg[31] [1]));
  FDCE \output_data_addr_reg_reg[20] 
       (.C(m00_axi_aclk),
        .CE(\output_data_addr_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(output_data_addr_reg[20]),
        .Q(\ila_smax_output_data_addr_reg[31] [20]));
  CARRY4 \output_data_addr_reg_reg[20]_i_2 
       (.CI(\output_data_addr_reg_reg[16]_i_2_n_0 ),
        .CO({\output_data_addr_reg_reg[20]_i_2_n_0 ,\output_data_addr_reg_reg[20]_i_2_n_1 ,\output_data_addr_reg_reg[20]_i_2_n_2 ,\output_data_addr_reg_reg[20]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\output_data_addr_reg_reg[20]_i_2_n_4 ,\output_data_addr_reg_reg[20]_i_2_n_5 ,\output_data_addr_reg_reg[20]_i_2_n_6 ,\output_data_addr_reg_reg[20]_i_2_n_7 }),
        .S({\output_data_addr_reg[20]_i_3_n_0 ,\output_data_addr_reg[20]_i_4_n_0 ,\output_data_addr_reg[20]_i_5_n_0 ,\output_data_addr_reg[20]_i_6_n_0 }));
  FDCE \output_data_addr_reg_reg[21] 
       (.C(m00_axi_aclk),
        .CE(\output_data_addr_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(output_data_addr_reg[21]),
        .Q(\ila_smax_output_data_addr_reg[31] [21]));
  FDCE \output_data_addr_reg_reg[22] 
       (.C(m00_axi_aclk),
        .CE(\output_data_addr_reg[31]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(output_data_addr_reg[22]),
        .Q(\ila_smax_output_data_addr_reg[31] [22]));
  FDCE \output_data_addr_reg_reg[23] 
       (.C(m00_axi_aclk),
        .CE(\output_data_addr_reg[31]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(output_data_addr_reg[23]),
        .Q(\ila_smax_output_data_addr_reg[31] [23]));
  FDCE \output_data_addr_reg_reg[24] 
       (.C(m00_axi_aclk),
        .CE(\output_data_addr_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(output_data_addr_reg[24]),
        .Q(\ila_smax_output_data_addr_reg[31] [24]));
  CARRY4 \output_data_addr_reg_reg[24]_i_2 
       (.CI(\output_data_addr_reg_reg[20]_i_2_n_0 ),
        .CO({\output_data_addr_reg_reg[24]_i_2_n_0 ,\output_data_addr_reg_reg[24]_i_2_n_1 ,\output_data_addr_reg_reg[24]_i_2_n_2 ,\output_data_addr_reg_reg[24]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\output_data_addr_reg_reg[24]_i_2_n_4 ,\output_data_addr_reg_reg[24]_i_2_n_5 ,\output_data_addr_reg_reg[24]_i_2_n_6 ,\output_data_addr_reg_reg[24]_i_2_n_7 }),
        .S({\output_data_addr_reg[24]_i_3_n_0 ,\output_data_addr_reg[24]_i_4_n_0 ,\output_data_addr_reg[24]_i_5_n_0 ,\output_data_addr_reg[24]_i_6_n_0 }));
  FDCE \output_data_addr_reg_reg[25] 
       (.C(m00_axi_aclk),
        .CE(\output_data_addr_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(output_data_addr_reg[25]),
        .Q(\ila_smax_output_data_addr_reg[31] [25]));
  FDCE \output_data_addr_reg_reg[26] 
       (.C(m00_axi_aclk),
        .CE(\output_data_addr_reg[31]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(output_data_addr_reg[26]),
        .Q(\ila_smax_output_data_addr_reg[31] [26]));
  FDCE \output_data_addr_reg_reg[27] 
       (.C(m00_axi_aclk),
        .CE(\output_data_addr_reg[31]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(output_data_addr_reg[27]),
        .Q(\ila_smax_output_data_addr_reg[31] [27]));
  FDCE \output_data_addr_reg_reg[28] 
       (.C(m00_axi_aclk),
        .CE(\output_data_addr_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(output_data_addr_reg[28]),
        .Q(\ila_smax_output_data_addr_reg[31] [28]));
  CARRY4 \output_data_addr_reg_reg[28]_i_2 
       (.CI(\output_data_addr_reg_reg[24]_i_2_n_0 ),
        .CO({\output_data_addr_reg_reg[28]_i_2_n_0 ,\output_data_addr_reg_reg[28]_i_2_n_1 ,\output_data_addr_reg_reg[28]_i_2_n_2 ,\output_data_addr_reg_reg[28]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\output_data_addr_reg_reg[28]_i_2_n_4 ,\output_data_addr_reg_reg[28]_i_2_n_5 ,\output_data_addr_reg_reg[28]_i_2_n_6 ,\output_data_addr_reg_reg[28]_i_2_n_7 }),
        .S({\output_data_addr_reg[28]_i_3_n_0 ,\output_data_addr_reg[28]_i_4_n_0 ,\output_data_addr_reg[28]_i_5_n_0 ,\output_data_addr_reg[28]_i_6_n_0 }));
  FDCE \output_data_addr_reg_reg[29] 
       (.C(m00_axi_aclk),
        .CE(\output_data_addr_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(output_data_addr_reg[29]),
        .Q(\ila_smax_output_data_addr_reg[31] [29]));
  FDCE \output_data_addr_reg_reg[2] 
       (.C(m00_axi_aclk),
        .CE(\output_data_addr_reg[31]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(output_data_addr_reg[2]),
        .Q(\ila_smax_output_data_addr_reg[31] [2]));
  FDCE \output_data_addr_reg_reg[30] 
       (.C(m00_axi_aclk),
        .CE(\output_data_addr_reg[31]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(output_data_addr_reg[30]),
        .Q(\ila_smax_output_data_addr_reg[31] [30]));
  FDCE \output_data_addr_reg_reg[31] 
       (.C(m00_axi_aclk),
        .CE(\output_data_addr_reg[31]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(output_data_addr_reg[31]),
        .Q(\ila_smax_output_data_addr_reg[31] [31]));
  CARRY4 \output_data_addr_reg_reg[31]_i_3 
       (.CI(\output_data_addr_reg_reg[28]_i_2_n_0 ),
        .CO({\NLW_output_data_addr_reg_reg[31]_i_3_CO_UNCONNECTED [3:2],\output_data_addr_reg_reg[31]_i_3_n_2 ,\output_data_addr_reg_reg[31]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_output_data_addr_reg_reg[31]_i_3_O_UNCONNECTED [3],\output_data_addr_reg_reg[31]_i_3_n_5 ,\output_data_addr_reg_reg[31]_i_3_n_6 ,\output_data_addr_reg_reg[31]_i_3_n_7 }),
        .S({1'b0,\output_data_addr_reg[31]_i_4_n_0 ,\output_data_addr_reg[31]_i_5_n_0 ,\output_data_addr_reg[31]_i_6_n_0 }));
  FDCE \output_data_addr_reg_reg[3] 
       (.C(m00_axi_aclk),
        .CE(\output_data_addr_reg[31]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(output_data_addr_reg[3]),
        .Q(\ila_smax_output_data_addr_reg[31] [3]));
  FDCE \output_data_addr_reg_reg[4] 
       (.C(m00_axi_aclk),
        .CE(\output_data_addr_reg[31]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(output_data_addr_reg[4]),
        .Q(\ila_smax_output_data_addr_reg[31] [4]));
  CARRY4 \output_data_addr_reg_reg[4]_i_2 
       (.CI(1'b0),
        .CO({\output_data_addr_reg_reg[4]_i_2_n_0 ,\output_data_addr_reg_reg[4]_i_2_n_1 ,\output_data_addr_reg_reg[4]_i_2_n_2 ,\output_data_addr_reg_reg[4]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,\ila_smax_output_data_addr_reg[31] [2],1'b0}),
        .O({\output_data_addr_reg_reg[4]_i_2_n_4 ,\output_data_addr_reg_reg[4]_i_2_n_5 ,\output_data_addr_reg_reg[4]_i_2_n_6 ,\output_data_addr_reg_reg[4]_i_2_n_7 }),
        .S({\output_data_addr_reg[4]_i_3_n_0 ,\output_data_addr_reg[4]_i_4_n_0 ,\output_data_addr_reg[4]_i_5_n_0 ,\output_data_addr_reg[4]_i_6_n_0 }));
  FDCE \output_data_addr_reg_reg[5] 
       (.C(m00_axi_aclk),
        .CE(\output_data_addr_reg[31]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(output_data_addr_reg[5]),
        .Q(\ila_smax_output_data_addr_reg[31] [5]));
  FDCE \output_data_addr_reg_reg[6] 
       (.C(m00_axi_aclk),
        .CE(\output_data_addr_reg[31]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(output_data_addr_reg[6]),
        .Q(\ila_smax_output_data_addr_reg[31] [6]));
  FDCE \output_data_addr_reg_reg[7] 
       (.C(m00_axi_aclk),
        .CE(\output_data_addr_reg[31]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(output_data_addr_reg[7]),
        .Q(\ila_smax_output_data_addr_reg[31] [7]));
  FDCE \output_data_addr_reg_reg[8] 
       (.C(m00_axi_aclk),
        .CE(\output_data_addr_reg[31]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(output_data_addr_reg[8]),
        .Q(\ila_smax_output_data_addr_reg[31] [8]));
  CARRY4 \output_data_addr_reg_reg[8]_i_2 
       (.CI(\output_data_addr_reg_reg[4]_i_2_n_0 ),
        .CO({\output_data_addr_reg_reg[8]_i_2_n_0 ,\output_data_addr_reg_reg[8]_i_2_n_1 ,\output_data_addr_reg_reg[8]_i_2_n_2 ,\output_data_addr_reg_reg[8]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\output_data_addr_reg_reg[8]_i_2_n_4 ,\output_data_addr_reg_reg[8]_i_2_n_5 ,\output_data_addr_reg_reg[8]_i_2_n_6 ,\output_data_addr_reg_reg[8]_i_2_n_7 }),
        .S({\output_data_addr_reg[8]_i_3_n_0 ,\output_data_addr_reg[8]_i_4_n_0 ,\output_data_addr_reg[8]_i_5_n_0 ,\output_data_addr_reg[8]_i_6_n_0 }));
  FDCE \output_data_addr_reg_reg[9] 
       (.C(m00_axi_aclk),
        .CE(\output_data_addr_reg[31]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(output_data_addr_reg[9]),
        .Q(\ila_smax_output_data_addr_reg[31] [9]));
  CARRY4 \plusOp_inferred__3/i__carry 
       (.CI(1'b0),
        .CO({\plusOp_inferred__3/i__carry_n_0 ,\plusOp_inferred__3/i__carry_n_1 ,\plusOp_inferred__3/i__carry_n_2 ,\plusOp_inferred__3/i__carry_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,Q[2],1'b0}),
        .O({\plusOp_inferred__3/i__carry_n_4 ,\plusOp_inferred__3/i__carry_n_5 ,\plusOp_inferred__3/i__carry_n_6 ,\plusOp_inferred__3/i__carry_n_7 }),
        .S({i__carry_i_1__4_n_0,i__carry_i_2__4_n_0,i__carry_i_3_n_0,i__carry_i_4__2_n_0}));
  CARRY4 \plusOp_inferred__3/i__carry__0 
       (.CI(\plusOp_inferred__3/i__carry_n_0 ),
        .CO({\plusOp_inferred__3/i__carry__0_n_0 ,\plusOp_inferred__3/i__carry__0_n_1 ,\plusOp_inferred__3/i__carry__0_n_2 ,\plusOp_inferred__3/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\plusOp_inferred__3/i__carry__0_n_4 ,\plusOp_inferred__3/i__carry__0_n_5 ,\plusOp_inferred__3/i__carry__0_n_6 ,\plusOp_inferred__3/i__carry__0_n_7 }),
        .S({i__carry__0_i_1__4_n_0,i__carry__0_i_2__4_n_0,i__carry__0_i_3__4_n_0,i__carry__0_i_4__4_n_0}));
  CARRY4 \plusOp_inferred__3/i__carry__1 
       (.CI(\plusOp_inferred__3/i__carry__0_n_0 ),
        .CO({\plusOp_inferred__3/i__carry__1_n_0 ,\plusOp_inferred__3/i__carry__1_n_1 ,\plusOp_inferred__3/i__carry__1_n_2 ,\plusOp_inferred__3/i__carry__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\plusOp_inferred__3/i__carry__1_n_4 ,\plusOp_inferred__3/i__carry__1_n_5 ,\plusOp_inferred__3/i__carry__1_n_6 ,\plusOp_inferred__3/i__carry__1_n_7 }),
        .S({i__carry__1_i_1__1_n_0,i__carry__1_i_2_n_0,i__carry__1_i_3_n_0,i__carry__1_i_4_n_0}));
  CARRY4 \plusOp_inferred__3/i__carry__2 
       (.CI(\plusOp_inferred__3/i__carry__1_n_0 ),
        .CO({\plusOp_inferred__3/i__carry__2_n_0 ,\plusOp_inferred__3/i__carry__2_n_1 ,\plusOp_inferred__3/i__carry__2_n_2 ,\plusOp_inferred__3/i__carry__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\plusOp_inferred__3/i__carry__2_n_4 ,\plusOp_inferred__3/i__carry__2_n_5 ,\plusOp_inferred__3/i__carry__2_n_6 ,\plusOp_inferred__3/i__carry__2_n_7 }),
        .S({i__carry__2_i_1_n_0,i__carry__2_i_2_n_0,i__carry__2_i_3_n_0,i__carry__2_i_4_n_0}));
  CARRY4 \plusOp_inferred__3/i__carry__3 
       (.CI(\plusOp_inferred__3/i__carry__2_n_0 ),
        .CO({\plusOp_inferred__3/i__carry__3_n_0 ,\plusOp_inferred__3/i__carry__3_n_1 ,\plusOp_inferred__3/i__carry__3_n_2 ,\plusOp_inferred__3/i__carry__3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\plusOp_inferred__3/i__carry__3_n_4 ,\plusOp_inferred__3/i__carry__3_n_5 ,\plusOp_inferred__3/i__carry__3_n_6 ,\plusOp_inferred__3/i__carry__3_n_7 }),
        .S({i__carry__3_i_1_n_0,i__carry__3_i_2_n_0,i__carry__3_i_3_n_0,i__carry__3_i_4_n_0}));
  CARRY4 \plusOp_inferred__3/i__carry__4 
       (.CI(\plusOp_inferred__3/i__carry__3_n_0 ),
        .CO({\plusOp_inferred__3/i__carry__4_n_0 ,\plusOp_inferred__3/i__carry__4_n_1 ,\plusOp_inferred__3/i__carry__4_n_2 ,\plusOp_inferred__3/i__carry__4_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\plusOp_inferred__3/i__carry__4_n_4 ,\plusOp_inferred__3/i__carry__4_n_5 ,\plusOp_inferred__3/i__carry__4_n_6 ,\plusOp_inferred__3/i__carry__4_n_7 }),
        .S({i__carry__4_i_1_n_0,i__carry__4_i_2_n_0,i__carry__4_i_3_n_0,i__carry__4_i_4_n_0}));
  CARRY4 \plusOp_inferred__3/i__carry__5 
       (.CI(\plusOp_inferred__3/i__carry__4_n_0 ),
        .CO({\plusOp_inferred__3/i__carry__5_n_0 ,\plusOp_inferred__3/i__carry__5_n_1 ,\plusOp_inferred__3/i__carry__5_n_2 ,\plusOp_inferred__3/i__carry__5_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\plusOp_inferred__3/i__carry__5_n_4 ,\plusOp_inferred__3/i__carry__5_n_5 ,\plusOp_inferred__3/i__carry__5_n_6 ,\plusOp_inferred__3/i__carry__5_n_7 }),
        .S({i__carry__5_i_1_n_0,i__carry__5_i_2_n_0,i__carry__5_i_3_n_0,i__carry__5_i_4_n_0}));
  CARRY4 \plusOp_inferred__3/i__carry__6 
       (.CI(\plusOp_inferred__3/i__carry__5_n_0 ),
        .CO({\NLW_plusOp_inferred__3/i__carry__6_CO_UNCONNECTED [3:2],\plusOp_inferred__3/i__carry__6_n_2 ,\plusOp_inferred__3/i__carry__6_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_plusOp_inferred__3/i__carry__6_O_UNCONNECTED [3],\plusOp_inferred__3/i__carry__6_n_5 ,\plusOp_inferred__3/i__carry__6_n_6 ,\plusOp_inferred__3/i__carry__6_n_7 }),
        .S({1'b0,i__carry__6_i_1_n_0,i__carry__6_i_2_n_0,i__carry__6_i_3_n_0}));
  LUT4 #(
    .INIT(16'h0010)) 
    \read_beat_counter[0]_i_1 
       (.I0(\ila_smax_rbc[7] [0]),
        .I1(m00_axi_rlast),
        .I2(current_state[1]),
        .I3(current_state[3]),
        .O(read_beat_counter[0]));
  LUT5 #(
    .INIT(32'h00001400)) 
    \read_beat_counter[1]_i_1 
       (.I0(m00_axi_rlast),
        .I1(\ila_smax_rbc[7] [0]),
        .I2(\ila_smax_rbc[7] [1]),
        .I3(current_state[1]),
        .I4(current_state[3]),
        .O(read_beat_counter[1]));
  LUT6 #(
    .INIT(64'h0000000015400000)) 
    \read_beat_counter[2]_i_1 
       (.I0(m00_axi_rlast),
        .I1(\ila_smax_rbc[7] [1]),
        .I2(\ila_smax_rbc[7] [0]),
        .I3(\ila_smax_rbc[7] [2]),
        .I4(current_state[1]),
        .I5(current_state[3]),
        .O(read_beat_counter[2]));
  LUT6 #(
    .INIT(64'h0000000015554000)) 
    \read_beat_counter[3]_i_1 
       (.I0(m00_axi_rlast),
        .I1(\ila_smax_rbc[7] [2]),
        .I2(\ila_smax_rbc[7] [0]),
        .I3(\ila_smax_rbc[7] [1]),
        .I4(\ila_smax_rbc[7] [3]),
        .I5(\read_beat_counter[6]_i_2_n_0 ),
        .O(read_beat_counter[3]));
  LUT5 #(
    .INIT(32'h00001400)) 
    \read_beat_counter[4]_i_1 
       (.I0(m00_axi_rlast),
        .I1(\read_beat_counter[7]_i_3_n_0 ),
        .I2(\ila_smax_rbc[7] [4]),
        .I3(current_state[1]),
        .I4(current_state[3]),
        .O(read_beat_counter[4]));
  LUT6 #(
    .INIT(64'h0000000015400000)) 
    \read_beat_counter[5]_i_1 
       (.I0(m00_axi_rlast),
        .I1(\ila_smax_rbc[7] [4]),
        .I2(\read_beat_counter[7]_i_3_n_0 ),
        .I3(\ila_smax_rbc[7] [5]),
        .I4(current_state[1]),
        .I5(current_state[3]),
        .O(read_beat_counter[5]));
  LUT6 #(
    .INIT(64'h0000000015554000)) 
    \read_beat_counter[6]_i_1 
       (.I0(m00_axi_rlast),
        .I1(\read_beat_counter[7]_i_3_n_0 ),
        .I2(\ila_smax_rbc[7] [4]),
        .I3(\ila_smax_rbc[7] [5]),
        .I4(\ila_smax_rbc[7] [6]),
        .I5(\read_beat_counter[6]_i_2_n_0 ),
        .O(read_beat_counter[6]));
  LUT2 #(
    .INIT(4'hB)) 
    \read_beat_counter[6]_i_2 
       (.I0(current_state[3]),
        .I1(current_state[1]),
        .O(\read_beat_counter[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000001911)) 
    \read_beat_counter[7]_i_1 
       (.I0(current_state[1]),
        .I1(out[0]),
        .I2(full),
        .I3(m00_axi_rvalid),
        .I4(current_state[3]),
        .I5(out[1]),
        .O(\read_beat_counter[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000015400000)) 
    \read_beat_counter[7]_i_2 
       (.I0(m00_axi_rlast),
        .I1(\read_beat_counter[7]_i_3_n_0 ),
        .I2(\read_beat_counter[7]_i_4_n_0 ),
        .I3(\ila_smax_rbc[7] [7]),
        .I4(current_state[1]),
        .I5(current_state[3]),
        .O(read_beat_counter[7]));
  LUT4 #(
    .INIT(16'h8000)) 
    \read_beat_counter[7]_i_3 
       (.I0(\ila_smax_rbc[7] [2]),
        .I1(\ila_smax_rbc[7] [0]),
        .I2(\ila_smax_rbc[7] [1]),
        .I3(\ila_smax_rbc[7] [3]),
        .O(\read_beat_counter[7]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \read_beat_counter[7]_i_4 
       (.I0(\ila_smax_rbc[7] [6]),
        .I1(\ila_smax_rbc[7] [5]),
        .I2(\ila_smax_rbc[7] [4]),
        .O(\read_beat_counter[7]_i_4_n_0 ));
  FDCE \read_beat_counter_reg[0] 
       (.C(m00_axi_aclk),
        .CE(\read_beat_counter[7]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(read_beat_counter[0]),
        .Q(\ila_smax_rbc[7] [0]));
  FDCE \read_beat_counter_reg[1] 
       (.C(m00_axi_aclk),
        .CE(\read_beat_counter[7]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(read_beat_counter[1]),
        .Q(\ila_smax_rbc[7] [1]));
  FDCE \read_beat_counter_reg[2] 
       (.C(m00_axi_aclk),
        .CE(\read_beat_counter[7]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(read_beat_counter[2]),
        .Q(\ila_smax_rbc[7] [2]));
  FDCE \read_beat_counter_reg[3] 
       (.C(m00_axi_aclk),
        .CE(\read_beat_counter[7]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(read_beat_counter[3]),
        .Q(\ila_smax_rbc[7] [3]));
  FDCE \read_beat_counter_reg[4] 
       (.C(m00_axi_aclk),
        .CE(\read_beat_counter[7]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(read_beat_counter[4]),
        .Q(\ila_smax_rbc[7] [4]));
  FDCE \read_beat_counter_reg[5] 
       (.C(m00_axi_aclk),
        .CE(\read_beat_counter[7]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(read_beat_counter[5]),
        .Q(\ila_smax_rbc[7] [5]));
  FDCE \read_beat_counter_reg[6] 
       (.C(m00_axi_aclk),
        .CE(\read_beat_counter[7]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(read_beat_counter[6]),
        .Q(\ila_smax_rbc[7] [6]));
  FDCE \read_beat_counter_reg[7] 
       (.C(m00_axi_aclk),
        .CE(\read_beat_counter[7]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(read_beat_counter[7]),
        .Q(\ila_smax_rbc[7] [7]));
  LUT6 #(
    .INIT(64'h000000000000D111)) 
    \reads_remaining[0]_i_1 
       (.I0(o_control_reg[1]),
        .I1(out[0]),
        .I2(ila_smax_reads_remaining[0]),
        .I3(axi_arlen15_out),
        .I4(current_state[3]),
        .I5(out[1]),
        .O(reads_remaining[0]));
  LUT6 #(
    .INIT(64'h000000000000E222)) 
    \reads_remaining[10]_i_1 
       (.I0(\reads_remaining_reg[12]_i_2_n_6 ),
        .I1(out[0]),
        .I2(\minusOp_inferred__2/i__carry_n_4 ),
        .I3(axi_arlen15_out),
        .I4(current_state[3]),
        .I5(out[1]),
        .O(reads_remaining[10]));
  LUT6 #(
    .INIT(64'h000000000000E222)) 
    \reads_remaining[11]_i_1 
       (.I0(\reads_remaining_reg[12]_i_2_n_5 ),
        .I1(out[0]),
        .I2(\minusOp_inferred__2/i__carry__0_n_7 ),
        .I3(axi_arlen15_out),
        .I4(current_state[3]),
        .I5(out[1]),
        .O(reads_remaining[11]));
  LUT6 #(
    .INIT(64'h000000000000E222)) 
    \reads_remaining[12]_i_1 
       (.I0(\reads_remaining_reg[12]_i_2_n_4 ),
        .I1(out[0]),
        .I2(\minusOp_inferred__2/i__carry__0_n_6 ),
        .I3(axi_arlen15_out),
        .I4(current_state[3]),
        .I5(out[1]),
        .O(reads_remaining[12]));
  LUT1 #(
    .INIT(2'h1)) 
    \reads_remaining[12]_i_3 
       (.I0(o_control_reg[13]),
        .O(\reads_remaining[12]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \reads_remaining[12]_i_4 
       (.I0(o_control_reg[12]),
        .O(\reads_remaining[12]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \reads_remaining[12]_i_5 
       (.I0(o_control_reg[11]),
        .O(\reads_remaining[12]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \reads_remaining[12]_i_6 
       (.I0(o_control_reg[10]),
        .O(\reads_remaining[12]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000E222)) 
    \reads_remaining[13]_i_1 
       (.I0(\reads_remaining_reg[15]_i_3_n_7 ),
        .I1(out[0]),
        .I2(\minusOp_inferred__2/i__carry__0_n_5 ),
        .I3(axi_arlen15_out),
        .I4(current_state[3]),
        .I5(out[1]),
        .O(reads_remaining[13]));
  LUT6 #(
    .INIT(64'h000000000000E222)) 
    \reads_remaining[14]_i_1 
       (.I0(\reads_remaining_reg[15]_i_3_n_6 ),
        .I1(out[0]),
        .I2(\minusOp_inferred__2/i__carry__0_n_4 ),
        .I3(axi_arlen15_out),
        .I4(current_state[3]),
        .I5(out[1]),
        .O(reads_remaining[14]));
  LUT6 #(
    .INIT(64'h0000111000111110)) 
    \reads_remaining[15]_i_1 
       (.I0(current_state[3]),
        .I1(current_state[1]),
        .I2(slv_reg_wren[0]),
        .I3(out[1]),
        .I4(out[0]),
        .I5(ila_smax_calculated),
        .O(\reads_remaining[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000E222)) 
    \reads_remaining[15]_i_2 
       (.I0(\reads_remaining_reg[15]_i_3_n_5 ),
        .I1(out[0]),
        .I2(\minusOp_inferred__2/i__carry__1_n_7 ),
        .I3(axi_arlen15_out),
        .I4(current_state[3]),
        .I5(out[1]),
        .O(reads_remaining[15]));
  LUT1 #(
    .INIT(2'h1)) 
    \reads_remaining[15]_i_4 
       (.I0(o_control_reg[16]),
        .O(\reads_remaining[15]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \reads_remaining[15]_i_5 
       (.I0(o_control_reg[15]),
        .O(\reads_remaining[15]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \reads_remaining[15]_i_6 
       (.I0(o_control_reg[14]),
        .O(\reads_remaining[15]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000E222)) 
    \reads_remaining[1]_i_1 
       (.I0(\reads_remaining_reg[4]_i_2_n_7 ),
        .I1(out[0]),
        .I2(ila_smax_reads_remaining[1]),
        .I3(axi_arlen15_out),
        .I4(current_state[3]),
        .I5(out[1]),
        .O(reads_remaining[1]));
  LUT6 #(
    .INIT(64'h000000000000E222)) 
    \reads_remaining[2]_i_1 
       (.I0(\reads_remaining_reg[4]_i_2_n_6 ),
        .I1(out[0]),
        .I2(ila_smax_reads_remaining[2]),
        .I3(axi_arlen15_out),
        .I4(current_state[3]),
        .I5(out[1]),
        .O(reads_remaining[2]));
  LUT6 #(
    .INIT(64'h000000002E222222)) 
    \reads_remaining[3]_i_1 
       (.I0(\reads_remaining_reg[4]_i_2_n_5 ),
        .I1(out[0]),
        .I2(ila_smax_calculated),
        .I3(\axi_arlen[7]_i_3_n_0 ),
        .I4(ila_smax_reads_remaining[3]),
        .I5(\reads_remaining[6]_i_2_n_0 ),
        .O(reads_remaining[3]));
  LUT6 #(
    .INIT(64'h000000002E222222)) 
    \reads_remaining[4]_i_1 
       (.I0(\reads_remaining_reg[4]_i_2_n_4 ),
        .I1(out[0]),
        .I2(ila_smax_calculated),
        .I3(\axi_arlen[7]_i_3_n_0 ),
        .I4(ila_smax_reads_remaining[4]),
        .I5(\reads_remaining[6]_i_2_n_0 ),
        .O(reads_remaining[4]));
  LUT1 #(
    .INIT(2'h1)) 
    \reads_remaining[4]_i_3 
       (.I0(o_control_reg[5]),
        .O(\reads_remaining[4]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \reads_remaining[4]_i_4 
       (.I0(o_control_reg[4]),
        .O(\reads_remaining[4]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \reads_remaining[4]_i_5 
       (.I0(o_control_reg[3]),
        .O(\reads_remaining[4]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \reads_remaining[4]_i_6 
       (.I0(o_control_reg[2]),
        .O(\reads_remaining[4]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h000000002E222222)) 
    \reads_remaining[5]_i_1 
       (.I0(\reads_remaining_reg[8]_i_2_n_7 ),
        .I1(out[0]),
        .I2(ila_smax_calculated),
        .I3(\axi_arlen[7]_i_3_n_0 ),
        .I4(ila_smax_reads_remaining[5]),
        .I5(\reads_remaining[6]_i_2_n_0 ),
        .O(reads_remaining[5]));
  LUT6 #(
    .INIT(64'h000000002E222222)) 
    \reads_remaining[6]_i_1 
       (.I0(\reads_remaining_reg[8]_i_2_n_6 ),
        .I1(out[0]),
        .I2(ila_smax_calculated),
        .I3(\axi_arlen[7]_i_3_n_0 ),
        .I4(ila_smax_reads_remaining[6]),
        .I5(\reads_remaining[6]_i_2_n_0 ),
        .O(reads_remaining[6]));
  LUT2 #(
    .INIT(4'hE)) 
    \reads_remaining[6]_i_2 
       (.I0(out[1]),
        .I1(current_state[3]),
        .O(\reads_remaining[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000E222)) 
    \reads_remaining[7]_i_1 
       (.I0(\reads_remaining_reg[8]_i_2_n_5 ),
        .I1(out[0]),
        .I2(\minusOp_inferred__2/i__carry_n_7 ),
        .I3(axi_arlen15_out),
        .I4(current_state[3]),
        .I5(out[1]),
        .O(reads_remaining[7]));
  LUT6 #(
    .INIT(64'h000000000000E222)) 
    \reads_remaining[8]_i_1 
       (.I0(\reads_remaining_reg[8]_i_2_n_4 ),
        .I1(out[0]),
        .I2(\minusOp_inferred__2/i__carry_n_6 ),
        .I3(axi_arlen15_out),
        .I4(current_state[3]),
        .I5(out[1]),
        .O(reads_remaining[8]));
  LUT1 #(
    .INIT(2'h1)) 
    \reads_remaining[8]_i_3 
       (.I0(o_control_reg[9]),
        .O(\reads_remaining[8]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \reads_remaining[8]_i_4 
       (.I0(o_control_reg[8]),
        .O(\reads_remaining[8]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \reads_remaining[8]_i_5 
       (.I0(o_control_reg[7]),
        .O(\reads_remaining[8]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \reads_remaining[8]_i_6 
       (.I0(o_control_reg[6]),
        .O(\reads_remaining[8]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000E222)) 
    \reads_remaining[9]_i_1 
       (.I0(\reads_remaining_reg[12]_i_2_n_7 ),
        .I1(out[0]),
        .I2(\minusOp_inferred__2/i__carry_n_5 ),
        .I3(axi_arlen15_out),
        .I4(current_state[3]),
        .I5(out[1]),
        .O(reads_remaining[9]));
  FDCE \reads_remaining_reg[0] 
       (.C(m00_axi_aclk),
        .CE(\reads_remaining[15]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(reads_remaining[0]),
        .Q(ila_smax_reads_remaining[0]));
  FDCE \reads_remaining_reg[10] 
       (.C(m00_axi_aclk),
        .CE(\reads_remaining[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_0),
        .D(reads_remaining[10]),
        .Q(ila_smax_reads_remaining[10]));
  FDCE \reads_remaining_reg[11] 
       (.C(m00_axi_aclk),
        .CE(\reads_remaining[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_0),
        .D(reads_remaining[11]),
        .Q(ila_smax_reads_remaining[11]));
  FDCE \reads_remaining_reg[12] 
       (.C(m00_axi_aclk),
        .CE(\reads_remaining[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_0),
        .D(reads_remaining[12]),
        .Q(ila_smax_reads_remaining[12]));
  CARRY4 \reads_remaining_reg[12]_i_2 
       (.CI(\reads_remaining_reg[8]_i_2_n_0 ),
        .CO({\reads_remaining_reg[12]_i_2_n_0 ,\reads_remaining_reg[12]_i_2_n_1 ,\reads_remaining_reg[12]_i_2_n_2 ,\reads_remaining_reg[12]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI(o_control_reg[13:10]),
        .O({\reads_remaining_reg[12]_i_2_n_4 ,\reads_remaining_reg[12]_i_2_n_5 ,\reads_remaining_reg[12]_i_2_n_6 ,\reads_remaining_reg[12]_i_2_n_7 }),
        .S({\reads_remaining[12]_i_3_n_0 ,\reads_remaining[12]_i_4_n_0 ,\reads_remaining[12]_i_5_n_0 ,\reads_remaining[12]_i_6_n_0 }));
  FDCE \reads_remaining_reg[13] 
       (.C(m00_axi_aclk),
        .CE(\reads_remaining[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_0),
        .D(reads_remaining[13]),
        .Q(ila_smax_reads_remaining[13]));
  FDCE \reads_remaining_reg[14] 
       (.C(m00_axi_aclk),
        .CE(\reads_remaining[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_0),
        .D(reads_remaining[14]),
        .Q(ila_smax_reads_remaining[14]));
  FDCE \reads_remaining_reg[15] 
       (.C(m00_axi_aclk),
        .CE(\reads_remaining[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_0),
        .D(reads_remaining[15]),
        .Q(ila_smax_reads_remaining[15]));
  CARRY4 \reads_remaining_reg[15]_i_3 
       (.CI(\reads_remaining_reg[12]_i_2_n_0 ),
        .CO({\NLW_reads_remaining_reg[15]_i_3_CO_UNCONNECTED [3:2],\reads_remaining_reg[15]_i_3_n_2 ,\reads_remaining_reg[15]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,o_control_reg[15:14]}),
        .O({\NLW_reads_remaining_reg[15]_i_3_O_UNCONNECTED [3],\reads_remaining_reg[15]_i_3_n_5 ,\reads_remaining_reg[15]_i_3_n_6 ,\reads_remaining_reg[15]_i_3_n_7 }),
        .S({1'b0,\reads_remaining[15]_i_4_n_0 ,\reads_remaining[15]_i_5_n_0 ,\reads_remaining[15]_i_6_n_0 }));
  FDCE \reads_remaining_reg[1] 
       (.C(m00_axi_aclk),
        .CE(\reads_remaining[15]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(reads_remaining[1]),
        .Q(ila_smax_reads_remaining[1]));
  FDCE \reads_remaining_reg[2] 
       (.C(m00_axi_aclk),
        .CE(\reads_remaining[15]_i_1_n_0 ),
        .CLR(\output_data_addr_reg_reg[8]_0 ),
        .D(reads_remaining[2]),
        .Q(ila_smax_reads_remaining[2]));
  FDCE \reads_remaining_reg[3] 
       (.C(m00_axi_aclk),
        .CE(\reads_remaining[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_0),
        .D(reads_remaining[3]),
        .Q(ila_smax_reads_remaining[3]));
  FDCE \reads_remaining_reg[4] 
       (.C(m00_axi_aclk),
        .CE(\reads_remaining[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_0),
        .D(reads_remaining[4]),
        .Q(ila_smax_reads_remaining[4]));
  CARRY4 \reads_remaining_reg[4]_i_2 
       (.CI(1'b0),
        .CO({\reads_remaining_reg[4]_i_2_n_0 ,\reads_remaining_reg[4]_i_2_n_1 ,\reads_remaining_reg[4]_i_2_n_2 ,\reads_remaining_reg[4]_i_2_n_3 }),
        .CYINIT(o_control_reg[1]),
        .DI(o_control_reg[5:2]),
        .O({\reads_remaining_reg[4]_i_2_n_4 ,\reads_remaining_reg[4]_i_2_n_5 ,\reads_remaining_reg[4]_i_2_n_6 ,\reads_remaining_reg[4]_i_2_n_7 }),
        .S({\reads_remaining[4]_i_3_n_0 ,\reads_remaining[4]_i_4_n_0 ,\reads_remaining[4]_i_5_n_0 ,\reads_remaining[4]_i_6_n_0 }));
  FDCE \reads_remaining_reg[5] 
       (.C(m00_axi_aclk),
        .CE(\reads_remaining[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_0),
        .D(reads_remaining[5]),
        .Q(ila_smax_reads_remaining[5]));
  FDCE \reads_remaining_reg[6] 
       (.C(m00_axi_aclk),
        .CE(\reads_remaining[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_0),
        .D(reads_remaining[6]),
        .Q(ila_smax_reads_remaining[6]));
  FDCE \reads_remaining_reg[7] 
       (.C(m00_axi_aclk),
        .CE(\reads_remaining[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_0),
        .D(reads_remaining[7]),
        .Q(ila_smax_reads_remaining[7]));
  FDCE \reads_remaining_reg[8] 
       (.C(m00_axi_aclk),
        .CE(\reads_remaining[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_0),
        .D(reads_remaining[8]),
        .Q(ila_smax_reads_remaining[8]));
  CARRY4 \reads_remaining_reg[8]_i_2 
       (.CI(\reads_remaining_reg[4]_i_2_n_0 ),
        .CO({\reads_remaining_reg[8]_i_2_n_0 ,\reads_remaining_reg[8]_i_2_n_1 ,\reads_remaining_reg[8]_i_2_n_2 ,\reads_remaining_reg[8]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI(o_control_reg[9:6]),
        .O({\reads_remaining_reg[8]_i_2_n_4 ,\reads_remaining_reg[8]_i_2_n_5 ,\reads_remaining_reg[8]_i_2_n_6 ,\reads_remaining_reg[8]_i_2_n_7 }),
        .S({\reads_remaining[8]_i_3_n_0 ,\reads_remaining[8]_i_4_n_0 ,\reads_remaining[8]_i_5_n_0 ,\reads_remaining[8]_i_6_n_0 }));
  FDCE \reads_remaining_reg[9] 
       (.C(m00_axi_aclk),
        .CE(\reads_remaining[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_0),
        .D(reads_remaining[9]),
        .Q(ila_smax_reads_remaining[9]));
  FDCE start_reg
       (.C(m00_axi_aclk),
        .CE(1'b1),
        .CLR(m00_axi_aresetn_1),
        .D(\FSM_sequential_current_state_reg[2]_0 ),
        .Q(start));
  FDCE \start_reg_reg[0] 
       (.C(m00_axi_aclk),
        .CE(1'b1),
        .CLR(m00_axi_aresetn_2),
        .D(o_control_reg[0]),
        .Q(start_reg_0[0]));
  FDCE \start_reg_reg[1] 
       (.C(m00_axi_aclk),
        .CE(1'b1),
        .CLR(m00_axi_aresetn_1),
        .D(start_reg_0[0]),
        .Q(start_reg_0[1]));
  LUT1 #(
    .INIT(2'h1)) 
    \sum_counter[15]_i_2 
       (.I0(m00_axi_aresetn),
        .O(\class_counter_reg[5]_0 ));
  LUT4 #(
    .INIT(16'h0400)) 
    \write_beat_counter[0]_i_1 
       (.I0(\ila_smax_wbc[7] [0]),
        .I1(next_state29_in),
        .I2(current_state[3]),
        .I3(out[1]),
        .O(write_beat_counter[0]));
  LUT5 #(
    .INIT(32'h00600000)) 
    \write_beat_counter[1]_i_1 
       (.I0(\ila_smax_wbc[7] [0]),
        .I1(\ila_smax_wbc[7] [1]),
        .I2(next_state29_in),
        .I3(current_state[3]),
        .I4(out[1]),
        .O(write_beat_counter[1]));
  LUT6 #(
    .INIT(64'h0000780000000000)) 
    \write_beat_counter[2]_i_1 
       (.I0(\ila_smax_wbc[7] [1]),
        .I1(\ila_smax_wbc[7] [0]),
        .I2(\ila_smax_wbc[7] [2]),
        .I3(next_state29_in),
        .I4(current_state[3]),
        .I5(out[1]),
        .O(write_beat_counter[2]));
  LUT6 #(
    .INIT(64'h7F80000000000000)) 
    \write_beat_counter[3]_i_1 
       (.I0(\ila_smax_wbc[7] [0]),
        .I1(\ila_smax_wbc[7] [1]),
        .I2(\ila_smax_wbc[7] [2]),
        .I3(\ila_smax_wbc[7] [3]),
        .I4(next_state29_in),
        .I5(m00_axi_wvalid_INST_0_i_1_n_0),
        .O(write_beat_counter[3]));
  LUT6 #(
    .INIT(64'hBF40000000000000)) 
    \write_beat_counter[4]_i_1 
       (.I0(m00_axi_wlast_INST_0_i_3_n_0),
        .I1(\ila_smax_wbc[7] [2]),
        .I2(\ila_smax_wbc[7] [3]),
        .I3(\ila_smax_wbc[7] [4]),
        .I4(next_state29_in),
        .I5(m00_axi_wvalid_INST_0_i_1_n_0),
        .O(write_beat_counter[4]));
  LUT5 #(
    .INIT(32'h00900000)) 
    \write_beat_counter[5]_i_1 
       (.I0(\write_beat_counter[5]_i_2_n_0 ),
        .I1(\ila_smax_wbc[7] [5]),
        .I2(next_state29_in),
        .I3(current_state[3]),
        .I4(out[1]),
        .O(write_beat_counter[5]));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \write_beat_counter[5]_i_2 
       (.I0(\ila_smax_wbc[7] [0]),
        .I1(\ila_smax_wbc[7] [1]),
        .I2(\ila_smax_wbc[7] [2]),
        .I3(\ila_smax_wbc[7] [3]),
        .I4(\ila_smax_wbc[7] [4]),
        .O(\write_beat_counter[5]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00900000)) 
    \write_beat_counter[6]_i_1 
       (.I0(\write_beat_counter[7]_i_3_n_0 ),
        .I1(\ila_smax_wbc[7] [6]),
        .I2(next_state29_in),
        .I3(current_state[3]),
        .I4(out[1]),
        .O(write_beat_counter[6]));
  LUT5 #(
    .INIT(32'h00008101)) 
    \write_beat_counter[7]_i_1 
       (.I0(current_state[1]),
        .I1(out[0]),
        .I2(out[1]),
        .I3(outbuff_rd_en),
        .I4(current_state[3]),
        .O(\write_beat_counter[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000D20000000000)) 
    \write_beat_counter[7]_i_2 
       (.I0(\ila_smax_wbc[7] [6]),
        .I1(\write_beat_counter[7]_i_3_n_0 ),
        .I2(\ila_smax_wbc[7] [7]),
        .I3(next_state29_in),
        .I4(current_state[3]),
        .I5(out[1]),
        .O(write_beat_counter[7]));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \write_beat_counter[7]_i_3 
       (.I0(\ila_smax_wbc[7] [4]),
        .I1(\ila_smax_wbc[7] [3]),
        .I2(\ila_smax_wbc[7] [2]),
        .I3(\ila_smax_wbc[7] [1]),
        .I4(\ila_smax_wbc[7] [0]),
        .I5(\ila_smax_wbc[7] [5]),
        .O(\write_beat_counter[7]_i_3_n_0 ));
  FDCE \write_beat_counter_reg[0] 
       (.C(m00_axi_aclk),
        .CE(\write_beat_counter[7]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(write_beat_counter[0]),
        .Q(\ila_smax_wbc[7] [0]));
  FDCE \write_beat_counter_reg[1] 
       (.C(m00_axi_aclk),
        .CE(\write_beat_counter[7]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(write_beat_counter[1]),
        .Q(\ila_smax_wbc[7] [1]));
  FDCE \write_beat_counter_reg[2] 
       (.C(m00_axi_aclk),
        .CE(\write_beat_counter[7]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(write_beat_counter[2]),
        .Q(\ila_smax_wbc[7] [2]));
  FDCE \write_beat_counter_reg[3] 
       (.C(m00_axi_aclk),
        .CE(\write_beat_counter[7]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(write_beat_counter[3]),
        .Q(\ila_smax_wbc[7] [3]));
  FDCE \write_beat_counter_reg[4] 
       (.C(m00_axi_aclk),
        .CE(\write_beat_counter[7]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(write_beat_counter[4]),
        .Q(\ila_smax_wbc[7] [4]));
  FDCE \write_beat_counter_reg[5] 
       (.C(m00_axi_aclk),
        .CE(\write_beat_counter[7]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(write_beat_counter[5]),
        .Q(\ila_smax_wbc[7] [5]));
  FDCE \write_beat_counter_reg[6] 
       (.C(m00_axi_aclk),
        .CE(\write_beat_counter[7]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(write_beat_counter[6]),
        .Q(\ila_smax_wbc[7] [6]));
  FDCE \write_beat_counter_reg[7] 
       (.C(m00_axi_aclk),
        .CE(\write_beat_counter[7]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(write_beat_counter[7]),
        .Q(\ila_smax_wbc[7] [7]));
  LUT6 #(
    .INIT(64'h02A2020202020202)) 
    \writes_remaining[0]_i_1 
       (.I0(m00_axi_wvalid_INST_0_i_1_n_0),
        .I1(\ila_smax_num_elements[15] [0]),
        .I2(out[0]),
        .I3(ila_smax_calculated),
        .I4(\axi_awlen[7]_i_3_n_0 ),
        .I5(ila_smax_writes_remaining[0]),
        .O(writes_remaining[0]));
  LUT6 #(
    .INIT(64'h4440004000400040)) 
    \writes_remaining[10]_i_1 
       (.I0(current_state[3]),
        .I1(out[1]),
        .I2(minusOp_carry__1_n_6),
        .I3(out[0]),
        .I4(\minusOp_inferred__0/i__carry_n_4 ),
        .I5(axi_awlen14_out),
        .O(writes_remaining[10]));
  LUT6 #(
    .INIT(64'h4440004000400040)) 
    \writes_remaining[11]_i_1 
       (.I0(current_state[3]),
        .I1(out[1]),
        .I2(minusOp_carry__1_n_5),
        .I3(out[0]),
        .I4(\minusOp_inferred__0/i__carry__0_n_7 ),
        .I5(axi_awlen14_out),
        .O(writes_remaining[11]));
  LUT6 #(
    .INIT(64'h4440004000400040)) 
    \writes_remaining[12]_i_1 
       (.I0(current_state[3]),
        .I1(out[1]),
        .I2(minusOp_carry__1_n_4),
        .I3(out[0]),
        .I4(\minusOp_inferred__0/i__carry__0_n_6 ),
        .I5(axi_awlen14_out),
        .O(writes_remaining[12]));
  LUT6 #(
    .INIT(64'h4440004000400040)) 
    \writes_remaining[13]_i_1 
       (.I0(current_state[3]),
        .I1(out[1]),
        .I2(minusOp_carry__2_n_7),
        .I3(out[0]),
        .I4(\minusOp_inferred__0/i__carry__0_n_5 ),
        .I5(axi_awlen14_out),
        .O(writes_remaining[13]));
  LUT6 #(
    .INIT(64'h4440004000400040)) 
    \writes_remaining[14]_i_1 
       (.I0(current_state[3]),
        .I1(out[1]),
        .I2(minusOp_carry__2_n_6),
        .I3(out[0]),
        .I4(\minusOp_inferred__0/i__carry__0_n_4 ),
        .I5(axi_awlen14_out),
        .O(writes_remaining[14]));
  LUT5 #(
    .INIT(32'h00101111)) 
    \writes_remaining[15]_i_1 
       (.I0(current_state[3]),
        .I1(current_state[1]),
        .I2(out[1]),
        .I3(ila_smax_calculated),
        .I4(out[0]),
        .O(\writes_remaining[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h4440004000400040)) 
    \writes_remaining[15]_i_2 
       (.I0(current_state[3]),
        .I1(out[1]),
        .I2(minusOp_carry__2_n_5),
        .I3(out[0]),
        .I4(\minusOp_inferred__0/i__carry__1_n_7 ),
        .I5(axi_awlen14_out),
        .O(writes_remaining[15]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \writes_remaining[15]_i_3 
       (.I0(\axi_awlen[7]_i_3_n_0 ),
        .I1(ila_smax_calculated),
        .O(axi_awlen14_out));
  LUT6 #(
    .INIT(64'h08A8080808080808)) 
    \writes_remaining[1]_i_1 
       (.I0(m00_axi_wvalid_INST_0_i_1_n_0),
        .I1(minusOp_carry_n_7),
        .I2(out[0]),
        .I3(ila_smax_calculated),
        .I4(\axi_awlen[7]_i_3_n_0 ),
        .I5(ila_smax_writes_remaining[1]),
        .O(writes_remaining[1]));
  LUT6 #(
    .INIT(64'h08A8080808080808)) 
    \writes_remaining[2]_i_1 
       (.I0(m00_axi_wvalid_INST_0_i_1_n_0),
        .I1(minusOp_carry_n_6),
        .I2(out[0]),
        .I3(ila_smax_calculated),
        .I4(\axi_awlen[7]_i_3_n_0 ),
        .I5(ila_smax_writes_remaining[2]),
        .O(writes_remaining[2]));
  LUT6 #(
    .INIT(64'h08A8080808080808)) 
    \writes_remaining[3]_i_1 
       (.I0(m00_axi_wvalid_INST_0_i_1_n_0),
        .I1(minusOp_carry_n_5),
        .I2(out[0]),
        .I3(ila_smax_calculated),
        .I4(\axi_awlen[7]_i_3_n_0 ),
        .I5(ila_smax_writes_remaining[3]),
        .O(writes_remaining[3]));
  LUT6 #(
    .INIT(64'h08A8080808080808)) 
    \writes_remaining[4]_i_1 
       (.I0(m00_axi_wvalid_INST_0_i_1_n_0),
        .I1(minusOp_carry_n_4),
        .I2(out[0]),
        .I3(ila_smax_calculated),
        .I4(\axi_awlen[7]_i_3_n_0 ),
        .I5(ila_smax_writes_remaining[4]),
        .O(writes_remaining[4]));
  LUT6 #(
    .INIT(64'h08A8080808080808)) 
    \writes_remaining[5]_i_1 
       (.I0(m00_axi_wvalid_INST_0_i_1_n_0),
        .I1(minusOp_carry__0_n_7),
        .I2(out[0]),
        .I3(ila_smax_calculated),
        .I4(\axi_awlen[7]_i_3_n_0 ),
        .I5(ila_smax_writes_remaining[5]),
        .O(writes_remaining[5]));
  LUT6 #(
    .INIT(64'h08A8080808080808)) 
    \writes_remaining[6]_i_1 
       (.I0(m00_axi_wvalid_INST_0_i_1_n_0),
        .I1(minusOp_carry__0_n_6),
        .I2(out[0]),
        .I3(ila_smax_calculated),
        .I4(\axi_awlen[7]_i_3_n_0 ),
        .I5(ila_smax_writes_remaining[6]),
        .O(writes_remaining[6]));
  LUT6 #(
    .INIT(64'h4440004000400040)) 
    \writes_remaining[7]_i_1 
       (.I0(current_state[3]),
        .I1(out[1]),
        .I2(minusOp_carry__0_n_5),
        .I3(out[0]),
        .I4(\minusOp_inferred__0/i__carry_n_7 ),
        .I5(axi_awlen14_out),
        .O(writes_remaining[7]));
  LUT6 #(
    .INIT(64'h4440004000400040)) 
    \writes_remaining[8]_i_1 
       (.I0(current_state[3]),
        .I1(out[1]),
        .I2(minusOp_carry__0_n_4),
        .I3(out[0]),
        .I4(\minusOp_inferred__0/i__carry_n_6 ),
        .I5(axi_awlen14_out),
        .O(writes_remaining[8]));
  LUT6 #(
    .INIT(64'h4440004000400040)) 
    \writes_remaining[9]_i_1 
       (.I0(current_state[3]),
        .I1(out[1]),
        .I2(minusOp_carry__1_n_7),
        .I3(out[0]),
        .I4(\minusOp_inferred__0/i__carry_n_5 ),
        .I5(axi_awlen14_out),
        .O(writes_remaining[9]));
  FDCE \writes_remaining_reg[0] 
       (.C(m00_axi_aclk),
        .CE(\writes_remaining[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_0),
        .D(writes_remaining[0]),
        .Q(ila_smax_writes_remaining[0]));
  FDCE \writes_remaining_reg[10] 
       (.C(m00_axi_aclk),
        .CE(\writes_remaining[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_0),
        .D(writes_remaining[10]),
        .Q(ila_smax_writes_remaining[10]));
  FDCE \writes_remaining_reg[11] 
       (.C(m00_axi_aclk),
        .CE(\writes_remaining[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_0),
        .D(writes_remaining[11]),
        .Q(ila_smax_writes_remaining[11]));
  FDCE \writes_remaining_reg[12] 
       (.C(m00_axi_aclk),
        .CE(\writes_remaining[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_0),
        .D(writes_remaining[12]),
        .Q(ila_smax_writes_remaining[12]));
  FDCE \writes_remaining_reg[13] 
       (.C(m00_axi_aclk),
        .CE(\writes_remaining[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_0),
        .D(writes_remaining[13]),
        .Q(ila_smax_writes_remaining[13]));
  FDCE \writes_remaining_reg[14] 
       (.C(m00_axi_aclk),
        .CE(\writes_remaining[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_0),
        .D(writes_remaining[14]),
        .Q(ila_smax_writes_remaining[14]));
  FDCE \writes_remaining_reg[15] 
       (.C(m00_axi_aclk),
        .CE(\writes_remaining[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_0),
        .D(writes_remaining[15]),
        .Q(ila_smax_writes_remaining[15]));
  FDCE \writes_remaining_reg[1] 
       (.C(m00_axi_aclk),
        .CE(\writes_remaining[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_0),
        .D(writes_remaining[1]),
        .Q(ila_smax_writes_remaining[1]));
  FDCE \writes_remaining_reg[2] 
       (.C(m00_axi_aclk),
        .CE(\writes_remaining[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_0),
        .D(writes_remaining[2]),
        .Q(ila_smax_writes_remaining[2]));
  FDCE \writes_remaining_reg[3] 
       (.C(m00_axi_aclk),
        .CE(\writes_remaining[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_0),
        .D(writes_remaining[3]),
        .Q(ila_smax_writes_remaining[3]));
  FDCE \writes_remaining_reg[4] 
       (.C(m00_axi_aclk),
        .CE(\writes_remaining[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_0),
        .D(writes_remaining[4]),
        .Q(ila_smax_writes_remaining[4]));
  FDCE \writes_remaining_reg[5] 
       (.C(m00_axi_aclk),
        .CE(\writes_remaining[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_0),
        .D(writes_remaining[5]),
        .Q(ila_smax_writes_remaining[5]));
  FDCE \writes_remaining_reg[6] 
       (.C(m00_axi_aclk),
        .CE(\writes_remaining[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_0),
        .D(writes_remaining[6]),
        .Q(ila_smax_writes_remaining[6]));
  FDCE \writes_remaining_reg[7] 
       (.C(m00_axi_aclk),
        .CE(\writes_remaining[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_0),
        .D(writes_remaining[7]),
        .Q(ila_smax_writes_remaining[7]));
  FDCE \writes_remaining_reg[8] 
       (.C(m00_axi_aclk),
        .CE(\writes_remaining[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_0),
        .D(writes_remaining[8]),
        .Q(ila_smax_writes_remaining[8]));
  FDCE \writes_remaining_reg[9] 
       (.C(m00_axi_aclk),
        .CE(\writes_remaining[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_0),
        .D(writes_remaining[9]),
        .Q(ila_smax_writes_remaining[9]));
endmodule

(* ORIG_REF_NAME = "Softmax_Layer_32bit_v1_0_S00_AXI" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_Softmax_Layer_32bit_v1_0_S00_AXI
   (s00_axi_awready,
    s00_axi_wready,
    s00_axi_arready,
    s00_axi_rvalid,
    s00_axi_bvalid,
    Q,
    \input_data_addr_reg_reg[31] ,
    \output_data_addr_reg_reg[31] ,
    slv_reg_wren,
    s00_axi_rdata,
    s00_axi_aclk,
    axi_arready_reg_0,
    axi_bvalid_reg_0,
    s00_axi_arvalid,
    s00_axi_awaddr,
    s00_axi_wdata,
    s00_axi_araddr,
    \output_data_addr_reg_reg[31]_0 ,
    \input_data_addr_reg_reg[31]_0 ,
    almost_full,
    full,
    ila_smax_exp_fifo_almost_empty,
    empty,
    ila_smax_inbuff_almost_full,
    ram_full_i_reg,
    ila_smax_inbuff_almost_empty,
    empty_fwft_i_reg,
    ila_smax_outbuff_almost_full,
    ram_full_i_reg_0,
    ila_smax_outbuff_almost_empty,
    empty_fwft_i_reg_0,
    \FSM_sequential_current_state_reg[1] ,
    ila_smax_ctrlr_busy,
    s00_axi_wvalid,
    s00_axi_awvalid,
    s00_axi_wstrb,
    s00_axi_aresetn);
  output s00_axi_awready;
  output s00_axi_wready;
  output s00_axi_arready;
  output s00_axi_rvalid;
  output s00_axi_bvalid;
  output [16:0]Q;
  output [31:0]\input_data_addr_reg_reg[31] ;
  output [31:0]\output_data_addr_reg_reg[31] ;
  output [2:0]slv_reg_wren;
  output [31:0]s00_axi_rdata;
  input s00_axi_aclk;
  input axi_arready_reg_0;
  input axi_bvalid_reg_0;
  input s00_axi_arvalid;
  input [3:0]s00_axi_awaddr;
  input [31:0]s00_axi_wdata;
  input [3:0]s00_axi_araddr;
  input [31:0]\output_data_addr_reg_reg[31]_0 ;
  input [31:0]\input_data_addr_reg_reg[31]_0 ;
  input almost_full;
  input full;
  input ila_smax_exp_fifo_almost_empty;
  input empty;
  input ila_smax_inbuff_almost_full;
  input ram_full_i_reg;
  input ila_smax_inbuff_almost_empty;
  input empty_fwft_i_reg;
  input ila_smax_outbuff_almost_full;
  input ram_full_i_reg_0;
  input ila_smax_outbuff_almost_empty;
  input empty_fwft_i_reg_0;
  input \FSM_sequential_current_state_reg[1] ;
  input ila_smax_ctrlr_busy;
  input s00_axi_wvalid;
  input s00_axi_awvalid;
  input [3:0]s00_axi_wstrb;
  input s00_axi_aresetn;

  wire \FSM_sequential_current_state_reg[1] ;
  wire [16:0]Q;
  wire almost_full;
  wire [5:2]axi_araddr;
  wire axi_arready_i_1_n_0;
  wire axi_arready_reg_0;
  wire axi_awready0;
  wire axi_bvalid_reg_0;
  wire \axi_rdata[0]_i_2_n_0 ;
  wire \axi_rdata[0]_i_3_n_0 ;
  wire \axi_rdata[10]_i_2_n_0 ;
  wire \axi_rdata[10]_i_3_n_0 ;
  wire \axi_rdata[11]_i_2_n_0 ;
  wire \axi_rdata[11]_i_3_n_0 ;
  wire \axi_rdata[12]_i_2_n_0 ;
  wire \axi_rdata[12]_i_3_n_0 ;
  wire \axi_rdata[13]_i_2_n_0 ;
  wire \axi_rdata[13]_i_3_n_0 ;
  wire \axi_rdata[14]_i_2_n_0 ;
  wire \axi_rdata[14]_i_3_n_0 ;
  wire \axi_rdata[15]_i_2_n_0 ;
  wire \axi_rdata[15]_i_3_n_0 ;
  wire \axi_rdata[16]_i_2_n_0 ;
  wire \axi_rdata[16]_i_3_n_0 ;
  wire \axi_rdata[17]_i_2_n_0 ;
  wire \axi_rdata[17]_i_3_n_0 ;
  wire \axi_rdata[18]_i_2_n_0 ;
  wire \axi_rdata[18]_i_3_n_0 ;
  wire \axi_rdata[19]_i_2_n_0 ;
  wire \axi_rdata[19]_i_3_n_0 ;
  wire \axi_rdata[1]_i_2_n_0 ;
  wire \axi_rdata[1]_i_3_n_0 ;
  wire \axi_rdata[20]_i_2_n_0 ;
  wire \axi_rdata[20]_i_3_n_0 ;
  wire \axi_rdata[21]_i_2_n_0 ;
  wire \axi_rdata[21]_i_3_n_0 ;
  wire \axi_rdata[22]_i_2_n_0 ;
  wire \axi_rdata[22]_i_3_n_0 ;
  wire \axi_rdata[23]_i_2_n_0 ;
  wire \axi_rdata[23]_i_3_n_0 ;
  wire \axi_rdata[24]_i_2_n_0 ;
  wire \axi_rdata[24]_i_3_n_0 ;
  wire \axi_rdata[25]_i_2_n_0 ;
  wire \axi_rdata[25]_i_3_n_0 ;
  wire \axi_rdata[26]_i_2_n_0 ;
  wire \axi_rdata[26]_i_3_n_0 ;
  wire \axi_rdata[27]_i_2_n_0 ;
  wire \axi_rdata[27]_i_3_n_0 ;
  wire \axi_rdata[28]_i_2_n_0 ;
  wire \axi_rdata[28]_i_3_n_0 ;
  wire \axi_rdata[29]_i_2_n_0 ;
  wire \axi_rdata[29]_i_3_n_0 ;
  wire \axi_rdata[2]_i_2_n_0 ;
  wire \axi_rdata[2]_i_3_n_0 ;
  wire \axi_rdata[30]_i_2_n_0 ;
  wire \axi_rdata[30]_i_3_n_0 ;
  wire \axi_rdata[31]_i_1_n_0 ;
  wire \axi_rdata[31]_i_3_n_0 ;
  wire \axi_rdata[31]_i_4_n_0 ;
  wire \axi_rdata[31]_i_5_n_0 ;
  wire \axi_rdata[3]_i_2_n_0 ;
  wire \axi_rdata[3]_i_3_n_0 ;
  wire \axi_rdata[4]_i_2_n_0 ;
  wire \axi_rdata[4]_i_3_n_0 ;
  wire \axi_rdata[5]_i_2_n_0 ;
  wire \axi_rdata[5]_i_3_n_0 ;
  wire \axi_rdata[6]_i_2_n_0 ;
  wire \axi_rdata[6]_i_3_n_0 ;
  wire \axi_rdata[7]_i_2_n_0 ;
  wire \axi_rdata[7]_i_3_n_0 ;
  wire \axi_rdata[8]_i_2_n_0 ;
  wire \axi_rdata[8]_i_3_n_0 ;
  wire \axi_rdata[9]_i_2_n_0 ;
  wire \axi_rdata[9]_i_3_n_0 ;
  wire axi_wready0;
  wire empty;
  wire empty_fwft_i_reg;
  wire empty_fwft_i_reg_0;
  wire full;
  wire ila_smax_ctrlr_busy;
  wire ila_smax_exp_fifo_almost_empty;
  wire ila_smax_inbuff_almost_empty;
  wire ila_smax_inbuff_almost_full;
  wire ila_smax_outbuff_almost_empty;
  wire ila_smax_outbuff_almost_full;
  wire [31:0]\input_data_addr_reg_reg[31] ;
  wire [31:0]\input_data_addr_reg_reg[31]_0 ;
  wire \int_slv_reg_wren[0]_i_1_n_0 ;
  wire \int_slv_reg_wren[2]_i_1_n_0 ;
  wire \int_slv_reg_wren[3]_i_1_n_0 ;
  wire \int_slv_reg_wren[3]_i_2_n_0 ;
  wire \int_slv_reg_wren[3]_i_3_n_0 ;
  wire [31:0]\output_data_addr_reg_reg[31] ;
  wire [31:0]\output_data_addr_reg_reg[31]_0 ;
  wire p_0_in;
  wire [31:7]p_1_in;
  wire ram_full_i_reg;
  wire ram_full_i_reg_0;
  wire [31:0]reg_data_out__0;
  wire s00_axi_aclk;
  wire [3:0]s00_axi_araddr;
  wire s00_axi_aresetn;
  wire s00_axi_arready;
  wire s00_axi_arvalid;
  wire [3:0]s00_axi_awaddr;
  wire s00_axi_awready;
  wire s00_axi_awvalid;
  wire s00_axi_bvalid;
  wire [31:0]s00_axi_rdata;
  wire s00_axi_rvalid;
  wire [31:0]s00_axi_wdata;
  wire s00_axi_wready;
  wire [3:0]s00_axi_wstrb;
  wire s00_axi_wvalid;
  wire [3:0]sel0;
  wire [2:0]slv_reg_wren;
  wire \wr_slv_reg0[31]_i_2_n_0 ;
  wire \wr_slv_reg0_reg_n_0_[10] ;
  wire \wr_slv_reg0_reg_n_0_[11] ;
  wire \wr_slv_reg0_reg_n_0_[12] ;
  wire \wr_slv_reg0_reg_n_0_[13] ;
  wire \wr_slv_reg0_reg_n_0_[14] ;
  wire \wr_slv_reg0_reg_n_0_[15] ;
  wire \wr_slv_reg0_reg_n_0_[1] ;
  wire \wr_slv_reg0_reg_n_0_[2] ;
  wire \wr_slv_reg0_reg_n_0_[3] ;
  wire \wr_slv_reg0_reg_n_0_[4] ;
  wire \wr_slv_reg0_reg_n_0_[5] ;
  wire \wr_slv_reg0_reg_n_0_[6] ;
  wire \wr_slv_reg0_reg_n_0_[7] ;
  wire \wr_slv_reg0_reg_n_0_[8] ;
  wire \wr_slv_reg0_reg_n_0_[9] ;
  wire \wr_slv_reg2[15]_i_1_n_0 ;
  wire \wr_slv_reg2[23]_i_1_n_0 ;
  wire \wr_slv_reg2[31]_i_1_n_0 ;
  wire \wr_slv_reg2[7]_i_1_n_0 ;
  wire \wr_slv_reg3[15]_i_1_n_0 ;
  wire \wr_slv_reg3[23]_i_1_n_0 ;
  wire \wr_slv_reg3[31]_i_1_n_0 ;
  wire \wr_slv_reg3[7]_i_1_n_0 ;
  wire \wr_slv_reg4[15]_i_1_n_0 ;
  wire \wr_slv_reg4[23]_i_1_n_0 ;
  wire \wr_slv_reg4[31]_i_1_n_0 ;
  wire \wr_slv_reg4[7]_i_1_n_0 ;
  wire \wr_slv_reg4_reg_n_0_[0] ;
  wire \wr_slv_reg4_reg_n_0_[10] ;
  wire \wr_slv_reg4_reg_n_0_[11] ;
  wire \wr_slv_reg4_reg_n_0_[12] ;
  wire \wr_slv_reg4_reg_n_0_[13] ;
  wire \wr_slv_reg4_reg_n_0_[14] ;
  wire \wr_slv_reg4_reg_n_0_[15] ;
  wire \wr_slv_reg4_reg_n_0_[16] ;
  wire \wr_slv_reg4_reg_n_0_[17] ;
  wire \wr_slv_reg4_reg_n_0_[18] ;
  wire \wr_slv_reg4_reg_n_0_[19] ;
  wire \wr_slv_reg4_reg_n_0_[1] ;
  wire \wr_slv_reg4_reg_n_0_[20] ;
  wire \wr_slv_reg4_reg_n_0_[21] ;
  wire \wr_slv_reg4_reg_n_0_[22] ;
  wire \wr_slv_reg4_reg_n_0_[23] ;
  wire \wr_slv_reg4_reg_n_0_[24] ;
  wire \wr_slv_reg4_reg_n_0_[25] ;
  wire \wr_slv_reg4_reg_n_0_[26] ;
  wire \wr_slv_reg4_reg_n_0_[27] ;
  wire \wr_slv_reg4_reg_n_0_[28] ;
  wire \wr_slv_reg4_reg_n_0_[29] ;
  wire \wr_slv_reg4_reg_n_0_[2] ;
  wire \wr_slv_reg4_reg_n_0_[30] ;
  wire \wr_slv_reg4_reg_n_0_[31] ;
  wire \wr_slv_reg4_reg_n_0_[3] ;
  wire \wr_slv_reg4_reg_n_0_[4] ;
  wire \wr_slv_reg4_reg_n_0_[5] ;
  wire \wr_slv_reg4_reg_n_0_[6] ;
  wire \wr_slv_reg4_reg_n_0_[7] ;
  wire \wr_slv_reg4_reg_n_0_[8] ;
  wire \wr_slv_reg4_reg_n_0_[9] ;
  wire \wr_slv_reg5[15]_i_1_n_0 ;
  wire \wr_slv_reg5[23]_i_1_n_0 ;
  wire \wr_slv_reg5[31]_i_1_n_0 ;
  wire \wr_slv_reg5[7]_i_1_n_0 ;
  wire \wr_slv_reg5_reg_n_0_[0] ;
  wire \wr_slv_reg5_reg_n_0_[10] ;
  wire \wr_slv_reg5_reg_n_0_[11] ;
  wire \wr_slv_reg5_reg_n_0_[12] ;
  wire \wr_slv_reg5_reg_n_0_[13] ;
  wire \wr_slv_reg5_reg_n_0_[14] ;
  wire \wr_slv_reg5_reg_n_0_[15] ;
  wire \wr_slv_reg5_reg_n_0_[16] ;
  wire \wr_slv_reg5_reg_n_0_[17] ;
  wire \wr_slv_reg5_reg_n_0_[18] ;
  wire \wr_slv_reg5_reg_n_0_[19] ;
  wire \wr_slv_reg5_reg_n_0_[1] ;
  wire \wr_slv_reg5_reg_n_0_[20] ;
  wire \wr_slv_reg5_reg_n_0_[21] ;
  wire \wr_slv_reg5_reg_n_0_[22] ;
  wire \wr_slv_reg5_reg_n_0_[23] ;
  wire \wr_slv_reg5_reg_n_0_[24] ;
  wire \wr_slv_reg5_reg_n_0_[25] ;
  wire \wr_slv_reg5_reg_n_0_[26] ;
  wire \wr_slv_reg5_reg_n_0_[27] ;
  wire \wr_slv_reg5_reg_n_0_[28] ;
  wire \wr_slv_reg5_reg_n_0_[29] ;
  wire \wr_slv_reg5_reg_n_0_[2] ;
  wire \wr_slv_reg5_reg_n_0_[30] ;
  wire \wr_slv_reg5_reg_n_0_[31] ;
  wire \wr_slv_reg5_reg_n_0_[3] ;
  wire \wr_slv_reg5_reg_n_0_[4] ;
  wire \wr_slv_reg5_reg_n_0_[5] ;
  wire \wr_slv_reg5_reg_n_0_[6] ;
  wire \wr_slv_reg5_reg_n_0_[7] ;
  wire \wr_slv_reg5_reg_n_0_[8] ;
  wire \wr_slv_reg5_reg_n_0_[9] ;
  wire \wr_slv_reg6[15]_i_1_n_0 ;
  wire \wr_slv_reg6[23]_i_1_n_0 ;
  wire \wr_slv_reg6[31]_i_1_n_0 ;
  wire \wr_slv_reg6[7]_i_1_n_0 ;
  wire \wr_slv_reg6_reg_n_0_[0] ;
  wire \wr_slv_reg6_reg_n_0_[10] ;
  wire \wr_slv_reg6_reg_n_0_[11] ;
  wire \wr_slv_reg6_reg_n_0_[12] ;
  wire \wr_slv_reg6_reg_n_0_[13] ;
  wire \wr_slv_reg6_reg_n_0_[14] ;
  wire \wr_slv_reg6_reg_n_0_[15] ;
  wire \wr_slv_reg6_reg_n_0_[16] ;
  wire \wr_slv_reg6_reg_n_0_[17] ;
  wire \wr_slv_reg6_reg_n_0_[18] ;
  wire \wr_slv_reg6_reg_n_0_[19] ;
  wire \wr_slv_reg6_reg_n_0_[1] ;
  wire \wr_slv_reg6_reg_n_0_[20] ;
  wire \wr_slv_reg6_reg_n_0_[21] ;
  wire \wr_slv_reg6_reg_n_0_[22] ;
  wire \wr_slv_reg6_reg_n_0_[23] ;
  wire \wr_slv_reg6_reg_n_0_[24] ;
  wire \wr_slv_reg6_reg_n_0_[25] ;
  wire \wr_slv_reg6_reg_n_0_[26] ;
  wire \wr_slv_reg6_reg_n_0_[27] ;
  wire \wr_slv_reg6_reg_n_0_[28] ;
  wire \wr_slv_reg6_reg_n_0_[29] ;
  wire \wr_slv_reg6_reg_n_0_[2] ;
  wire \wr_slv_reg6_reg_n_0_[30] ;
  wire \wr_slv_reg6_reg_n_0_[31] ;
  wire \wr_slv_reg6_reg_n_0_[3] ;
  wire \wr_slv_reg6_reg_n_0_[4] ;
  wire \wr_slv_reg6_reg_n_0_[5] ;
  wire \wr_slv_reg6_reg_n_0_[6] ;
  wire \wr_slv_reg6_reg_n_0_[7] ;
  wire \wr_slv_reg6_reg_n_0_[8] ;
  wire \wr_slv_reg6_reg_n_0_[9] ;
  wire \wr_slv_reg7[15]_i_1_n_0 ;
  wire \wr_slv_reg7[23]_i_1_n_0 ;
  wire \wr_slv_reg7[31]_i_1_n_0 ;
  wire \wr_slv_reg7[7]_i_1_n_0 ;
  wire \wr_slv_reg7_reg_n_0_[0] ;
  wire \wr_slv_reg7_reg_n_0_[10] ;
  wire \wr_slv_reg7_reg_n_0_[11] ;
  wire \wr_slv_reg7_reg_n_0_[12] ;
  wire \wr_slv_reg7_reg_n_0_[13] ;
  wire \wr_slv_reg7_reg_n_0_[14] ;
  wire \wr_slv_reg7_reg_n_0_[15] ;
  wire \wr_slv_reg7_reg_n_0_[16] ;
  wire \wr_slv_reg7_reg_n_0_[17] ;
  wire \wr_slv_reg7_reg_n_0_[18] ;
  wire \wr_slv_reg7_reg_n_0_[19] ;
  wire \wr_slv_reg7_reg_n_0_[1] ;
  wire \wr_slv_reg7_reg_n_0_[20] ;
  wire \wr_slv_reg7_reg_n_0_[21] ;
  wire \wr_slv_reg7_reg_n_0_[22] ;
  wire \wr_slv_reg7_reg_n_0_[23] ;
  wire \wr_slv_reg7_reg_n_0_[24] ;
  wire \wr_slv_reg7_reg_n_0_[25] ;
  wire \wr_slv_reg7_reg_n_0_[26] ;
  wire \wr_slv_reg7_reg_n_0_[27] ;
  wire \wr_slv_reg7_reg_n_0_[28] ;
  wire \wr_slv_reg7_reg_n_0_[29] ;
  wire \wr_slv_reg7_reg_n_0_[2] ;
  wire \wr_slv_reg7_reg_n_0_[30] ;
  wire \wr_slv_reg7_reg_n_0_[31] ;
  wire \wr_slv_reg7_reg_n_0_[3] ;
  wire \wr_slv_reg7_reg_n_0_[4] ;
  wire \wr_slv_reg7_reg_n_0_[5] ;
  wire \wr_slv_reg7_reg_n_0_[6] ;
  wire \wr_slv_reg7_reg_n_0_[7] ;
  wire \wr_slv_reg7_reg_n_0_[8] ;
  wire \wr_slv_reg7_reg_n_0_[9] ;
  wire \wr_slv_reg8[15]_i_1_n_0 ;
  wire \wr_slv_reg8[23]_i_1_n_0 ;
  wire \wr_slv_reg8[31]_i_1_n_0 ;
  wire \wr_slv_reg8[7]_i_1_n_0 ;
  wire \wr_slv_reg8_reg_n_0_[0] ;
  wire \wr_slv_reg8_reg_n_0_[10] ;
  wire \wr_slv_reg8_reg_n_0_[11] ;
  wire \wr_slv_reg8_reg_n_0_[12] ;
  wire \wr_slv_reg8_reg_n_0_[13] ;
  wire \wr_slv_reg8_reg_n_0_[14] ;
  wire \wr_slv_reg8_reg_n_0_[15] ;
  wire \wr_slv_reg8_reg_n_0_[16] ;
  wire \wr_slv_reg8_reg_n_0_[17] ;
  wire \wr_slv_reg8_reg_n_0_[18] ;
  wire \wr_slv_reg8_reg_n_0_[19] ;
  wire \wr_slv_reg8_reg_n_0_[1] ;
  wire \wr_slv_reg8_reg_n_0_[20] ;
  wire \wr_slv_reg8_reg_n_0_[21] ;
  wire \wr_slv_reg8_reg_n_0_[22] ;
  wire \wr_slv_reg8_reg_n_0_[23] ;
  wire \wr_slv_reg8_reg_n_0_[24] ;
  wire \wr_slv_reg8_reg_n_0_[25] ;
  wire \wr_slv_reg8_reg_n_0_[26] ;
  wire \wr_slv_reg8_reg_n_0_[27] ;
  wire \wr_slv_reg8_reg_n_0_[28] ;
  wire \wr_slv_reg8_reg_n_0_[29] ;
  wire \wr_slv_reg8_reg_n_0_[2] ;
  wire \wr_slv_reg8_reg_n_0_[30] ;
  wire \wr_slv_reg8_reg_n_0_[31] ;
  wire \wr_slv_reg8_reg_n_0_[3] ;
  wire \wr_slv_reg8_reg_n_0_[4] ;
  wire \wr_slv_reg8_reg_n_0_[5] ;
  wire \wr_slv_reg8_reg_n_0_[6] ;
  wire \wr_slv_reg8_reg_n_0_[7] ;
  wire \wr_slv_reg8_reg_n_0_[8] ;
  wire \wr_slv_reg8_reg_n_0_[9] ;

  FDSE \axi_araddr_reg[2] 
       (.C(s00_axi_aclk),
        .CE(axi_arready_i_1_n_0),
        .D(s00_axi_araddr[0]),
        .Q(axi_araddr[2]),
        .S(p_0_in));
  FDSE \axi_araddr_reg[3] 
       (.C(s00_axi_aclk),
        .CE(axi_arready_i_1_n_0),
        .D(s00_axi_araddr[1]),
        .Q(axi_araddr[3]),
        .S(p_0_in));
  FDSE \axi_araddr_reg[4] 
       (.C(s00_axi_aclk),
        .CE(axi_arready_i_1_n_0),
        .D(s00_axi_araddr[2]),
        .Q(axi_araddr[4]),
        .S(p_0_in));
  FDSE \axi_araddr_reg[5] 
       (.C(s00_axi_aclk),
        .CE(axi_arready_i_1_n_0),
        .D(s00_axi_araddr[3]),
        .Q(axi_araddr[5]),
        .S(p_0_in));
  LUT2 #(
    .INIT(4'h2)) 
    axi_arready_i_1
       (.I0(s00_axi_arvalid),
        .I1(s00_axi_arready),
        .O(axi_arready_i_1_n_0));
  FDRE axi_arready_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(axi_arready_i_1_n_0),
        .Q(s00_axi_arready),
        .R(p_0_in));
  FDRE \axi_awaddr_reg[2] 
       (.C(s00_axi_aclk),
        .CE(axi_awready0),
        .D(s00_axi_awaddr[0]),
        .Q(sel0[0]),
        .R(p_0_in));
  FDRE \axi_awaddr_reg[3] 
       (.C(s00_axi_aclk),
        .CE(axi_awready0),
        .D(s00_axi_awaddr[1]),
        .Q(sel0[1]),
        .R(p_0_in));
  FDRE \axi_awaddr_reg[4] 
       (.C(s00_axi_aclk),
        .CE(axi_awready0),
        .D(s00_axi_awaddr[2]),
        .Q(sel0[2]),
        .R(p_0_in));
  FDRE \axi_awaddr_reg[5] 
       (.C(s00_axi_aclk),
        .CE(axi_awready0),
        .D(s00_axi_awaddr[3]),
        .Q(sel0[3]),
        .R(p_0_in));
  LUT1 #(
    .INIT(2'h1)) 
    axi_awready_i_1
       (.I0(s00_axi_aresetn),
        .O(p_0_in));
  LUT3 #(
    .INIT(8'h08)) 
    axi_awready_i_2
       (.I0(s00_axi_wvalid),
        .I1(s00_axi_awvalid),
        .I2(s00_axi_awready),
        .O(axi_awready0));
  FDRE axi_awready_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(axi_awready0),
        .Q(s00_axi_awready),
        .R(p_0_in));
  FDRE axi_bvalid_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(axi_bvalid_reg_0),
        .Q(s00_axi_bvalid),
        .R(p_0_in));
  LUT6 #(
    .INIT(64'h8F808F8F8F808080)) 
    \axi_rdata[0]_i_1 
       (.I0(\axi_rdata[31]_i_3_n_0 ),
        .I1(\wr_slv_reg8_reg_n_0_[0] ),
        .I2(axi_araddr[5]),
        .I3(\axi_rdata[0]_i_2_n_0 ),
        .I4(axi_araddr[4]),
        .I5(\axi_rdata[0]_i_3_n_0 ),
        .O(reg_data_out__0[0]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_rdata[0]_i_2 
       (.I0(\wr_slv_reg7_reg_n_0_[0] ),
        .I1(\wr_slv_reg6_reg_n_0_[0] ),
        .I2(axi_araddr[3]),
        .I3(\wr_slv_reg5_reg_n_0_[0] ),
        .I4(axi_araddr[2]),
        .I5(\wr_slv_reg4_reg_n_0_[0] ),
        .O(\axi_rdata[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_rdata[0]_i_3 
       (.I0(\output_data_addr_reg_reg[31]_0 [0]),
        .I1(\input_data_addr_reg_reg[31]_0 [0]),
        .I2(axi_araddr[3]),
        .I3(ila_smax_ctrlr_busy),
        .I4(axi_araddr[2]),
        .I5(Q[0]),
        .O(\axi_rdata[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8F808F8F8F808080)) 
    \axi_rdata[10]_i_1 
       (.I0(\axi_rdata[31]_i_3_n_0 ),
        .I1(\wr_slv_reg8_reg_n_0_[10] ),
        .I2(axi_araddr[5]),
        .I3(\axi_rdata[10]_i_2_n_0 ),
        .I4(axi_araddr[4]),
        .I5(\axi_rdata[10]_i_3_n_0 ),
        .O(reg_data_out__0[10]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_rdata[10]_i_2 
       (.I0(\wr_slv_reg7_reg_n_0_[10] ),
        .I1(\wr_slv_reg6_reg_n_0_[10] ),
        .I2(axi_araddr[3]),
        .I3(\wr_slv_reg5_reg_n_0_[10] ),
        .I4(axi_araddr[2]),
        .I5(\wr_slv_reg4_reg_n_0_[10] ),
        .O(\axi_rdata[10]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \axi_rdata[10]_i_3 
       (.I0(\output_data_addr_reg_reg[31]_0 [10]),
        .I1(\input_data_addr_reg_reg[31]_0 [10]),
        .I2(axi_araddr[3]),
        .I3(\wr_slv_reg0_reg_n_0_[10] ),
        .I4(axi_araddr[2]),
        .O(\axi_rdata[10]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8F808F8F8F808080)) 
    \axi_rdata[11]_i_1 
       (.I0(\axi_rdata[31]_i_3_n_0 ),
        .I1(\wr_slv_reg8_reg_n_0_[11] ),
        .I2(axi_araddr[5]),
        .I3(\axi_rdata[11]_i_2_n_0 ),
        .I4(axi_araddr[4]),
        .I5(\axi_rdata[11]_i_3_n_0 ),
        .O(reg_data_out__0[11]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_rdata[11]_i_2 
       (.I0(\wr_slv_reg7_reg_n_0_[11] ),
        .I1(\wr_slv_reg6_reg_n_0_[11] ),
        .I2(axi_araddr[3]),
        .I3(\wr_slv_reg5_reg_n_0_[11] ),
        .I4(axi_araddr[2]),
        .I5(\wr_slv_reg4_reg_n_0_[11] ),
        .O(\axi_rdata[11]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \axi_rdata[11]_i_3 
       (.I0(\output_data_addr_reg_reg[31]_0 [11]),
        .I1(\input_data_addr_reg_reg[31]_0 [11]),
        .I2(axi_araddr[3]),
        .I3(\wr_slv_reg0_reg_n_0_[11] ),
        .I4(axi_araddr[2]),
        .O(\axi_rdata[11]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8F808F8F8F808080)) 
    \axi_rdata[12]_i_1 
       (.I0(\axi_rdata[31]_i_3_n_0 ),
        .I1(\wr_slv_reg8_reg_n_0_[12] ),
        .I2(axi_araddr[5]),
        .I3(\axi_rdata[12]_i_2_n_0 ),
        .I4(axi_araddr[4]),
        .I5(\axi_rdata[12]_i_3_n_0 ),
        .O(reg_data_out__0[12]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_rdata[12]_i_2 
       (.I0(\wr_slv_reg7_reg_n_0_[12] ),
        .I1(\wr_slv_reg6_reg_n_0_[12] ),
        .I2(axi_araddr[3]),
        .I3(\wr_slv_reg5_reg_n_0_[12] ),
        .I4(axi_araddr[2]),
        .I5(\wr_slv_reg4_reg_n_0_[12] ),
        .O(\axi_rdata[12]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_rdata[12]_i_3 
       (.I0(\output_data_addr_reg_reg[31]_0 [12]),
        .I1(\input_data_addr_reg_reg[31]_0 [12]),
        .I2(axi_araddr[3]),
        .I3(ram_full_i_reg_0),
        .I4(axi_araddr[2]),
        .I5(\wr_slv_reg0_reg_n_0_[12] ),
        .O(\axi_rdata[12]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8F808F8F8F808080)) 
    \axi_rdata[13]_i_1 
       (.I0(\axi_rdata[31]_i_3_n_0 ),
        .I1(\wr_slv_reg8_reg_n_0_[13] ),
        .I2(axi_araddr[5]),
        .I3(\axi_rdata[13]_i_2_n_0 ),
        .I4(axi_araddr[4]),
        .I5(\axi_rdata[13]_i_3_n_0 ),
        .O(reg_data_out__0[13]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_rdata[13]_i_2 
       (.I0(\wr_slv_reg7_reg_n_0_[13] ),
        .I1(\wr_slv_reg6_reg_n_0_[13] ),
        .I2(axi_araddr[3]),
        .I3(\wr_slv_reg5_reg_n_0_[13] ),
        .I4(axi_araddr[2]),
        .I5(\wr_slv_reg4_reg_n_0_[13] ),
        .O(\axi_rdata[13]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_rdata[13]_i_3 
       (.I0(\output_data_addr_reg_reg[31]_0 [13]),
        .I1(\input_data_addr_reg_reg[31]_0 [13]),
        .I2(axi_araddr[3]),
        .I3(ila_smax_outbuff_almost_full),
        .I4(axi_araddr[2]),
        .I5(\wr_slv_reg0_reg_n_0_[13] ),
        .O(\axi_rdata[13]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8F808F8F8F808080)) 
    \axi_rdata[14]_i_1 
       (.I0(\axi_rdata[31]_i_3_n_0 ),
        .I1(\wr_slv_reg8_reg_n_0_[14] ),
        .I2(axi_araddr[5]),
        .I3(\axi_rdata[14]_i_2_n_0 ),
        .I4(axi_araddr[4]),
        .I5(\axi_rdata[14]_i_3_n_0 ),
        .O(reg_data_out__0[14]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_rdata[14]_i_2 
       (.I0(\wr_slv_reg7_reg_n_0_[14] ),
        .I1(\wr_slv_reg6_reg_n_0_[14] ),
        .I2(axi_araddr[3]),
        .I3(\wr_slv_reg5_reg_n_0_[14] ),
        .I4(axi_araddr[2]),
        .I5(\wr_slv_reg4_reg_n_0_[14] ),
        .O(\axi_rdata[14]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \axi_rdata[14]_i_3 
       (.I0(\output_data_addr_reg_reg[31]_0 [14]),
        .I1(\input_data_addr_reg_reg[31]_0 [14]),
        .I2(axi_araddr[3]),
        .I3(\wr_slv_reg0_reg_n_0_[14] ),
        .I4(axi_araddr[2]),
        .O(\axi_rdata[14]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8F808F8F8F808080)) 
    \axi_rdata[15]_i_1 
       (.I0(\axi_rdata[31]_i_3_n_0 ),
        .I1(\wr_slv_reg8_reg_n_0_[15] ),
        .I2(axi_araddr[5]),
        .I3(\axi_rdata[15]_i_2_n_0 ),
        .I4(axi_araddr[4]),
        .I5(\axi_rdata[15]_i_3_n_0 ),
        .O(reg_data_out__0[15]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_rdata[15]_i_2 
       (.I0(\wr_slv_reg7_reg_n_0_[15] ),
        .I1(\wr_slv_reg6_reg_n_0_[15] ),
        .I2(axi_araddr[3]),
        .I3(\wr_slv_reg5_reg_n_0_[15] ),
        .I4(axi_araddr[2]),
        .I5(\wr_slv_reg4_reg_n_0_[15] ),
        .O(\axi_rdata[15]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \axi_rdata[15]_i_3 
       (.I0(\output_data_addr_reg_reg[31]_0 [15]),
        .I1(\input_data_addr_reg_reg[31]_0 [15]),
        .I2(axi_araddr[3]),
        .I3(\wr_slv_reg0_reg_n_0_[15] ),
        .I4(axi_araddr[2]),
        .O(\axi_rdata[15]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8F808F8F8F808080)) 
    \axi_rdata[16]_i_1 
       (.I0(\axi_rdata[31]_i_3_n_0 ),
        .I1(\wr_slv_reg8_reg_n_0_[16] ),
        .I2(axi_araddr[5]),
        .I3(\axi_rdata[16]_i_2_n_0 ),
        .I4(axi_araddr[4]),
        .I5(\axi_rdata[16]_i_3_n_0 ),
        .O(reg_data_out__0[16]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_rdata[16]_i_2 
       (.I0(\wr_slv_reg7_reg_n_0_[16] ),
        .I1(\wr_slv_reg6_reg_n_0_[16] ),
        .I2(axi_araddr[3]),
        .I3(\wr_slv_reg5_reg_n_0_[16] ),
        .I4(axi_araddr[2]),
        .I5(\wr_slv_reg4_reg_n_0_[16] ),
        .O(\axi_rdata[16]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_rdata[16]_i_3 
       (.I0(\output_data_addr_reg_reg[31]_0 [16]),
        .I1(\input_data_addr_reg_reg[31]_0 [16]),
        .I2(axi_araddr[3]),
        .I3(empty_fwft_i_reg),
        .I4(axi_araddr[2]),
        .I5(Q[1]),
        .O(\axi_rdata[16]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8F808F8F8F808080)) 
    \axi_rdata[17]_i_1 
       (.I0(\axi_rdata[31]_i_3_n_0 ),
        .I1(\wr_slv_reg8_reg_n_0_[17] ),
        .I2(axi_araddr[5]),
        .I3(\axi_rdata[17]_i_2_n_0 ),
        .I4(axi_araddr[4]),
        .I5(\axi_rdata[17]_i_3_n_0 ),
        .O(reg_data_out__0[17]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_rdata[17]_i_2 
       (.I0(\wr_slv_reg7_reg_n_0_[17] ),
        .I1(\wr_slv_reg6_reg_n_0_[17] ),
        .I2(axi_araddr[3]),
        .I3(\wr_slv_reg5_reg_n_0_[17] ),
        .I4(axi_araddr[2]),
        .I5(\wr_slv_reg4_reg_n_0_[17] ),
        .O(\axi_rdata[17]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_rdata[17]_i_3 
       (.I0(\output_data_addr_reg_reg[31]_0 [17]),
        .I1(\input_data_addr_reg_reg[31]_0 [17]),
        .I2(axi_araddr[3]),
        .I3(ila_smax_inbuff_almost_empty),
        .I4(axi_araddr[2]),
        .I5(Q[2]),
        .O(\axi_rdata[17]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8F808F8F8F808080)) 
    \axi_rdata[18]_i_1 
       (.I0(\axi_rdata[31]_i_3_n_0 ),
        .I1(\wr_slv_reg8_reg_n_0_[18] ),
        .I2(axi_araddr[5]),
        .I3(\axi_rdata[18]_i_2_n_0 ),
        .I4(axi_araddr[4]),
        .I5(\axi_rdata[18]_i_3_n_0 ),
        .O(reg_data_out__0[18]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_rdata[18]_i_2 
       (.I0(\wr_slv_reg7_reg_n_0_[18] ),
        .I1(\wr_slv_reg6_reg_n_0_[18] ),
        .I2(axi_araddr[3]),
        .I3(\wr_slv_reg5_reg_n_0_[18] ),
        .I4(axi_araddr[2]),
        .I5(\wr_slv_reg4_reg_n_0_[18] ),
        .O(\axi_rdata[18]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \axi_rdata[18]_i_3 
       (.I0(\output_data_addr_reg_reg[31]_0 [18]),
        .I1(\input_data_addr_reg_reg[31]_0 [18]),
        .I2(axi_araddr[3]),
        .I3(Q[3]),
        .I4(axi_araddr[2]),
        .O(\axi_rdata[18]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8F808F8F8F808080)) 
    \axi_rdata[19]_i_1 
       (.I0(\axi_rdata[31]_i_3_n_0 ),
        .I1(\wr_slv_reg8_reg_n_0_[19] ),
        .I2(axi_araddr[5]),
        .I3(\axi_rdata[19]_i_2_n_0 ),
        .I4(axi_araddr[4]),
        .I5(\axi_rdata[19]_i_3_n_0 ),
        .O(reg_data_out__0[19]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_rdata[19]_i_2 
       (.I0(\wr_slv_reg7_reg_n_0_[19] ),
        .I1(\wr_slv_reg6_reg_n_0_[19] ),
        .I2(axi_araddr[3]),
        .I3(\wr_slv_reg5_reg_n_0_[19] ),
        .I4(axi_araddr[2]),
        .I5(\wr_slv_reg4_reg_n_0_[19] ),
        .O(\axi_rdata[19]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \axi_rdata[19]_i_3 
       (.I0(\output_data_addr_reg_reg[31]_0 [19]),
        .I1(\input_data_addr_reg_reg[31]_0 [19]),
        .I2(axi_araddr[3]),
        .I3(Q[4]),
        .I4(axi_araddr[2]),
        .O(\axi_rdata[19]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8F808F8F8F808080)) 
    \axi_rdata[1]_i_1 
       (.I0(\axi_rdata[31]_i_3_n_0 ),
        .I1(\wr_slv_reg8_reg_n_0_[1] ),
        .I2(axi_araddr[5]),
        .I3(\axi_rdata[1]_i_2_n_0 ),
        .I4(axi_araddr[4]),
        .I5(\axi_rdata[1]_i_3_n_0 ),
        .O(reg_data_out__0[1]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_rdata[1]_i_2 
       (.I0(\wr_slv_reg7_reg_n_0_[1] ),
        .I1(\wr_slv_reg6_reg_n_0_[1] ),
        .I2(axi_araddr[3]),
        .I3(\wr_slv_reg5_reg_n_0_[1] ),
        .I4(axi_araddr[2]),
        .I5(\wr_slv_reg4_reg_n_0_[1] ),
        .O(\axi_rdata[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \axi_rdata[1]_i_3 
       (.I0(\output_data_addr_reg_reg[31]_0 [1]),
        .I1(\input_data_addr_reg_reg[31]_0 [1]),
        .I2(axi_araddr[3]),
        .I3(\wr_slv_reg0_reg_n_0_[1] ),
        .I4(axi_araddr[2]),
        .O(\axi_rdata[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8F808F8F8F808080)) 
    \axi_rdata[20]_i_1 
       (.I0(\axi_rdata[31]_i_3_n_0 ),
        .I1(\wr_slv_reg8_reg_n_0_[20] ),
        .I2(axi_araddr[5]),
        .I3(\axi_rdata[20]_i_2_n_0 ),
        .I4(axi_araddr[4]),
        .I5(\axi_rdata[20]_i_3_n_0 ),
        .O(reg_data_out__0[20]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_rdata[20]_i_2 
       (.I0(\wr_slv_reg7_reg_n_0_[20] ),
        .I1(\wr_slv_reg6_reg_n_0_[20] ),
        .I2(axi_araddr[3]),
        .I3(\wr_slv_reg5_reg_n_0_[20] ),
        .I4(axi_araddr[2]),
        .I5(\wr_slv_reg4_reg_n_0_[20] ),
        .O(\axi_rdata[20]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_rdata[20]_i_3 
       (.I0(\output_data_addr_reg_reg[31]_0 [20]),
        .I1(\input_data_addr_reg_reg[31]_0 [20]),
        .I2(axi_araddr[3]),
        .I3(ram_full_i_reg),
        .I4(axi_araddr[2]),
        .I5(Q[5]),
        .O(\axi_rdata[20]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8F808F8F8F808080)) 
    \axi_rdata[21]_i_1 
       (.I0(\axi_rdata[31]_i_3_n_0 ),
        .I1(\wr_slv_reg8_reg_n_0_[21] ),
        .I2(axi_araddr[5]),
        .I3(\axi_rdata[21]_i_2_n_0 ),
        .I4(axi_araddr[4]),
        .I5(\axi_rdata[21]_i_3_n_0 ),
        .O(reg_data_out__0[21]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_rdata[21]_i_2 
       (.I0(\wr_slv_reg7_reg_n_0_[21] ),
        .I1(\wr_slv_reg6_reg_n_0_[21] ),
        .I2(axi_araddr[3]),
        .I3(\wr_slv_reg5_reg_n_0_[21] ),
        .I4(axi_araddr[2]),
        .I5(\wr_slv_reg4_reg_n_0_[21] ),
        .O(\axi_rdata[21]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_rdata[21]_i_3 
       (.I0(\output_data_addr_reg_reg[31]_0 [21]),
        .I1(\input_data_addr_reg_reg[31]_0 [21]),
        .I2(axi_araddr[3]),
        .I3(ila_smax_inbuff_almost_full),
        .I4(axi_araddr[2]),
        .I5(Q[6]),
        .O(\axi_rdata[21]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8F808F8F8F808080)) 
    \axi_rdata[22]_i_1 
       (.I0(\axi_rdata[31]_i_3_n_0 ),
        .I1(\wr_slv_reg8_reg_n_0_[22] ),
        .I2(axi_araddr[5]),
        .I3(\axi_rdata[22]_i_2_n_0 ),
        .I4(axi_araddr[4]),
        .I5(\axi_rdata[22]_i_3_n_0 ),
        .O(reg_data_out__0[22]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_rdata[22]_i_2 
       (.I0(\wr_slv_reg7_reg_n_0_[22] ),
        .I1(\wr_slv_reg6_reg_n_0_[22] ),
        .I2(axi_araddr[3]),
        .I3(\wr_slv_reg5_reg_n_0_[22] ),
        .I4(axi_araddr[2]),
        .I5(\wr_slv_reg4_reg_n_0_[22] ),
        .O(\axi_rdata[22]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \axi_rdata[22]_i_3 
       (.I0(\output_data_addr_reg_reg[31]_0 [22]),
        .I1(\input_data_addr_reg_reg[31]_0 [22]),
        .I2(axi_araddr[3]),
        .I3(Q[7]),
        .I4(axi_araddr[2]),
        .O(\axi_rdata[22]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8F808F8F8F808080)) 
    \axi_rdata[23]_i_1 
       (.I0(\axi_rdata[31]_i_3_n_0 ),
        .I1(\wr_slv_reg8_reg_n_0_[23] ),
        .I2(axi_araddr[5]),
        .I3(\axi_rdata[23]_i_2_n_0 ),
        .I4(axi_araddr[4]),
        .I5(\axi_rdata[23]_i_3_n_0 ),
        .O(reg_data_out__0[23]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_rdata[23]_i_2 
       (.I0(\wr_slv_reg7_reg_n_0_[23] ),
        .I1(\wr_slv_reg6_reg_n_0_[23] ),
        .I2(axi_araddr[3]),
        .I3(\wr_slv_reg5_reg_n_0_[23] ),
        .I4(axi_araddr[2]),
        .I5(\wr_slv_reg4_reg_n_0_[23] ),
        .O(\axi_rdata[23]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \axi_rdata[23]_i_3 
       (.I0(\output_data_addr_reg_reg[31]_0 [23]),
        .I1(\input_data_addr_reg_reg[31]_0 [23]),
        .I2(axi_araddr[3]),
        .I3(Q[8]),
        .I4(axi_araddr[2]),
        .O(\axi_rdata[23]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8F808F8F8F808080)) 
    \axi_rdata[24]_i_1 
       (.I0(\axi_rdata[31]_i_3_n_0 ),
        .I1(\wr_slv_reg8_reg_n_0_[24] ),
        .I2(axi_araddr[5]),
        .I3(\axi_rdata[24]_i_2_n_0 ),
        .I4(axi_araddr[4]),
        .I5(\axi_rdata[24]_i_3_n_0 ),
        .O(reg_data_out__0[24]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_rdata[24]_i_2 
       (.I0(\wr_slv_reg7_reg_n_0_[24] ),
        .I1(\wr_slv_reg6_reg_n_0_[24] ),
        .I2(axi_araddr[3]),
        .I3(\wr_slv_reg5_reg_n_0_[24] ),
        .I4(axi_araddr[2]),
        .I5(\wr_slv_reg4_reg_n_0_[24] ),
        .O(\axi_rdata[24]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_rdata[24]_i_3 
       (.I0(\output_data_addr_reg_reg[31]_0 [24]),
        .I1(\input_data_addr_reg_reg[31]_0 [24]),
        .I2(axi_araddr[3]),
        .I3(empty),
        .I4(axi_araddr[2]),
        .I5(Q[9]),
        .O(\axi_rdata[24]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8F808F8F8F808080)) 
    \axi_rdata[25]_i_1 
       (.I0(\axi_rdata[31]_i_3_n_0 ),
        .I1(\wr_slv_reg8_reg_n_0_[25] ),
        .I2(axi_araddr[5]),
        .I3(\axi_rdata[25]_i_2_n_0 ),
        .I4(axi_araddr[4]),
        .I5(\axi_rdata[25]_i_3_n_0 ),
        .O(reg_data_out__0[25]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_rdata[25]_i_2 
       (.I0(\wr_slv_reg7_reg_n_0_[25] ),
        .I1(\wr_slv_reg6_reg_n_0_[25] ),
        .I2(axi_araddr[3]),
        .I3(\wr_slv_reg5_reg_n_0_[25] ),
        .I4(axi_araddr[2]),
        .I5(\wr_slv_reg4_reg_n_0_[25] ),
        .O(\axi_rdata[25]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_rdata[25]_i_3 
       (.I0(\output_data_addr_reg_reg[31]_0 [25]),
        .I1(\input_data_addr_reg_reg[31]_0 [25]),
        .I2(axi_araddr[3]),
        .I3(ila_smax_exp_fifo_almost_empty),
        .I4(axi_araddr[2]),
        .I5(Q[10]),
        .O(\axi_rdata[25]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8F808F8F8F808080)) 
    \axi_rdata[26]_i_1 
       (.I0(\axi_rdata[31]_i_3_n_0 ),
        .I1(\wr_slv_reg8_reg_n_0_[26] ),
        .I2(axi_araddr[5]),
        .I3(\axi_rdata[26]_i_2_n_0 ),
        .I4(axi_araddr[4]),
        .I5(\axi_rdata[26]_i_3_n_0 ),
        .O(reg_data_out__0[26]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_rdata[26]_i_2 
       (.I0(\wr_slv_reg7_reg_n_0_[26] ),
        .I1(\wr_slv_reg6_reg_n_0_[26] ),
        .I2(axi_araddr[3]),
        .I3(\wr_slv_reg5_reg_n_0_[26] ),
        .I4(axi_araddr[2]),
        .I5(\wr_slv_reg4_reg_n_0_[26] ),
        .O(\axi_rdata[26]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \axi_rdata[26]_i_3 
       (.I0(\output_data_addr_reg_reg[31]_0 [26]),
        .I1(\input_data_addr_reg_reg[31]_0 [26]),
        .I2(axi_araddr[3]),
        .I3(Q[11]),
        .I4(axi_araddr[2]),
        .O(\axi_rdata[26]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8F808F8F8F808080)) 
    \axi_rdata[27]_i_1 
       (.I0(\axi_rdata[31]_i_3_n_0 ),
        .I1(\wr_slv_reg8_reg_n_0_[27] ),
        .I2(axi_araddr[5]),
        .I3(\axi_rdata[27]_i_2_n_0 ),
        .I4(axi_araddr[4]),
        .I5(\axi_rdata[27]_i_3_n_0 ),
        .O(reg_data_out__0[27]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_rdata[27]_i_2 
       (.I0(\wr_slv_reg7_reg_n_0_[27] ),
        .I1(\wr_slv_reg6_reg_n_0_[27] ),
        .I2(axi_araddr[3]),
        .I3(\wr_slv_reg5_reg_n_0_[27] ),
        .I4(axi_araddr[2]),
        .I5(\wr_slv_reg4_reg_n_0_[27] ),
        .O(\axi_rdata[27]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \axi_rdata[27]_i_3 
       (.I0(\output_data_addr_reg_reg[31]_0 [27]),
        .I1(\input_data_addr_reg_reg[31]_0 [27]),
        .I2(axi_araddr[3]),
        .I3(Q[12]),
        .I4(axi_araddr[2]),
        .O(\axi_rdata[27]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8F808F8F8F808080)) 
    \axi_rdata[28]_i_1 
       (.I0(\axi_rdata[31]_i_3_n_0 ),
        .I1(\wr_slv_reg8_reg_n_0_[28] ),
        .I2(axi_araddr[5]),
        .I3(\axi_rdata[28]_i_2_n_0 ),
        .I4(axi_araddr[4]),
        .I5(\axi_rdata[28]_i_3_n_0 ),
        .O(reg_data_out__0[28]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_rdata[28]_i_2 
       (.I0(\wr_slv_reg7_reg_n_0_[28] ),
        .I1(\wr_slv_reg6_reg_n_0_[28] ),
        .I2(axi_araddr[3]),
        .I3(\wr_slv_reg5_reg_n_0_[28] ),
        .I4(axi_araddr[2]),
        .I5(\wr_slv_reg4_reg_n_0_[28] ),
        .O(\axi_rdata[28]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_rdata[28]_i_3 
       (.I0(\output_data_addr_reg_reg[31]_0 [28]),
        .I1(\input_data_addr_reg_reg[31]_0 [28]),
        .I2(axi_araddr[3]),
        .I3(full),
        .I4(axi_araddr[2]),
        .I5(Q[13]),
        .O(\axi_rdata[28]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8F808F8F8F808080)) 
    \axi_rdata[29]_i_1 
       (.I0(\axi_rdata[31]_i_3_n_0 ),
        .I1(\wr_slv_reg8_reg_n_0_[29] ),
        .I2(axi_araddr[5]),
        .I3(\axi_rdata[29]_i_2_n_0 ),
        .I4(axi_araddr[4]),
        .I5(\axi_rdata[29]_i_3_n_0 ),
        .O(reg_data_out__0[29]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_rdata[29]_i_2 
       (.I0(\wr_slv_reg7_reg_n_0_[29] ),
        .I1(\wr_slv_reg6_reg_n_0_[29] ),
        .I2(axi_araddr[3]),
        .I3(\wr_slv_reg5_reg_n_0_[29] ),
        .I4(axi_araddr[2]),
        .I5(\wr_slv_reg4_reg_n_0_[29] ),
        .O(\axi_rdata[29]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_rdata[29]_i_3 
       (.I0(\output_data_addr_reg_reg[31]_0 [29]),
        .I1(\input_data_addr_reg_reg[31]_0 [29]),
        .I2(axi_araddr[3]),
        .I3(almost_full),
        .I4(axi_araddr[2]),
        .I5(Q[14]),
        .O(\axi_rdata[29]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8F808F8F8F808080)) 
    \axi_rdata[2]_i_1 
       (.I0(\axi_rdata[31]_i_3_n_0 ),
        .I1(\wr_slv_reg8_reg_n_0_[2] ),
        .I2(axi_araddr[5]),
        .I3(\axi_rdata[2]_i_2_n_0 ),
        .I4(axi_araddr[4]),
        .I5(\axi_rdata[2]_i_3_n_0 ),
        .O(reg_data_out__0[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_rdata[2]_i_2 
       (.I0(\wr_slv_reg7_reg_n_0_[2] ),
        .I1(\wr_slv_reg6_reg_n_0_[2] ),
        .I2(axi_araddr[3]),
        .I3(\wr_slv_reg5_reg_n_0_[2] ),
        .I4(axi_araddr[2]),
        .I5(\wr_slv_reg4_reg_n_0_[2] ),
        .O(\axi_rdata[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \axi_rdata[2]_i_3 
       (.I0(\output_data_addr_reg_reg[31]_0 [2]),
        .I1(\input_data_addr_reg_reg[31]_0 [2]),
        .I2(axi_araddr[3]),
        .I3(\wr_slv_reg0_reg_n_0_[2] ),
        .I4(axi_araddr[2]),
        .O(\axi_rdata[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8F808F8F8F808080)) 
    \axi_rdata[30]_i_1 
       (.I0(\axi_rdata[31]_i_3_n_0 ),
        .I1(\wr_slv_reg8_reg_n_0_[30] ),
        .I2(axi_araddr[5]),
        .I3(\axi_rdata[30]_i_2_n_0 ),
        .I4(axi_araddr[4]),
        .I5(\axi_rdata[30]_i_3_n_0 ),
        .O(reg_data_out__0[30]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_rdata[30]_i_2 
       (.I0(\wr_slv_reg7_reg_n_0_[30] ),
        .I1(\wr_slv_reg6_reg_n_0_[30] ),
        .I2(axi_araddr[3]),
        .I3(\wr_slv_reg5_reg_n_0_[30] ),
        .I4(axi_araddr[2]),
        .I5(\wr_slv_reg4_reg_n_0_[30] ),
        .O(\axi_rdata[30]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \axi_rdata[30]_i_3 
       (.I0(\output_data_addr_reg_reg[31]_0 [30]),
        .I1(\input_data_addr_reg_reg[31]_0 [30]),
        .I2(axi_araddr[3]),
        .I3(Q[15]),
        .I4(axi_araddr[2]),
        .O(\axi_rdata[30]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'h08)) 
    \axi_rdata[31]_i_1 
       (.I0(s00_axi_arvalid),
        .I1(s00_axi_arready),
        .I2(s00_axi_rvalid),
        .O(\axi_rdata[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8F808F8F8F808080)) 
    \axi_rdata[31]_i_2 
       (.I0(\axi_rdata[31]_i_3_n_0 ),
        .I1(\wr_slv_reg8_reg_n_0_[31] ),
        .I2(axi_araddr[5]),
        .I3(\axi_rdata[31]_i_4_n_0 ),
        .I4(axi_araddr[4]),
        .I5(\axi_rdata[31]_i_5_n_0 ),
        .O(reg_data_out__0[31]));
  LUT3 #(
    .INIT(8'h01)) 
    \axi_rdata[31]_i_3 
       (.I0(axi_araddr[3]),
        .I1(axi_araddr[2]),
        .I2(axi_araddr[4]),
        .O(\axi_rdata[31]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_rdata[31]_i_4 
       (.I0(\wr_slv_reg7_reg_n_0_[31] ),
        .I1(\wr_slv_reg6_reg_n_0_[31] ),
        .I2(axi_araddr[3]),
        .I3(\wr_slv_reg5_reg_n_0_[31] ),
        .I4(axi_araddr[2]),
        .I5(\wr_slv_reg4_reg_n_0_[31] ),
        .O(\axi_rdata[31]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \axi_rdata[31]_i_5 
       (.I0(\output_data_addr_reg_reg[31]_0 [31]),
        .I1(\input_data_addr_reg_reg[31]_0 [31]),
        .I2(axi_araddr[3]),
        .I3(Q[16]),
        .I4(axi_araddr[2]),
        .O(\axi_rdata[31]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h8F808F8F8F808080)) 
    \axi_rdata[3]_i_1 
       (.I0(\axi_rdata[31]_i_3_n_0 ),
        .I1(\wr_slv_reg8_reg_n_0_[3] ),
        .I2(axi_araddr[5]),
        .I3(\axi_rdata[3]_i_2_n_0 ),
        .I4(axi_araddr[4]),
        .I5(\axi_rdata[3]_i_3_n_0 ),
        .O(reg_data_out__0[3]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_rdata[3]_i_2 
       (.I0(\wr_slv_reg7_reg_n_0_[3] ),
        .I1(\wr_slv_reg6_reg_n_0_[3] ),
        .I2(axi_araddr[3]),
        .I3(\wr_slv_reg5_reg_n_0_[3] ),
        .I4(axi_araddr[2]),
        .I5(\wr_slv_reg4_reg_n_0_[3] ),
        .O(\axi_rdata[3]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \axi_rdata[3]_i_3 
       (.I0(\output_data_addr_reg_reg[31]_0 [3]),
        .I1(\input_data_addr_reg_reg[31]_0 [3]),
        .I2(axi_araddr[3]),
        .I3(\wr_slv_reg0_reg_n_0_[3] ),
        .I4(axi_araddr[2]),
        .O(\axi_rdata[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8F808F8F8F808080)) 
    \axi_rdata[4]_i_1 
       (.I0(\axi_rdata[31]_i_3_n_0 ),
        .I1(\wr_slv_reg8_reg_n_0_[4] ),
        .I2(axi_araddr[5]),
        .I3(\axi_rdata[4]_i_2_n_0 ),
        .I4(axi_araddr[4]),
        .I5(\axi_rdata[4]_i_3_n_0 ),
        .O(reg_data_out__0[4]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_rdata[4]_i_2 
       (.I0(\wr_slv_reg7_reg_n_0_[4] ),
        .I1(\wr_slv_reg6_reg_n_0_[4] ),
        .I2(axi_araddr[3]),
        .I3(\wr_slv_reg5_reg_n_0_[4] ),
        .I4(axi_araddr[2]),
        .I5(\wr_slv_reg4_reg_n_0_[4] ),
        .O(\axi_rdata[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_rdata[4]_i_3 
       (.I0(\output_data_addr_reg_reg[31]_0 [4]),
        .I1(\input_data_addr_reg_reg[31]_0 [4]),
        .I2(axi_araddr[3]),
        .I3(\FSM_sequential_current_state_reg[1] ),
        .I4(axi_araddr[2]),
        .I5(\wr_slv_reg0_reg_n_0_[4] ),
        .O(\axi_rdata[4]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8F808F8F8F808080)) 
    \axi_rdata[5]_i_1 
       (.I0(\axi_rdata[31]_i_3_n_0 ),
        .I1(\wr_slv_reg8_reg_n_0_[5] ),
        .I2(axi_araddr[5]),
        .I3(\axi_rdata[5]_i_2_n_0 ),
        .I4(axi_araddr[4]),
        .I5(\axi_rdata[5]_i_3_n_0 ),
        .O(reg_data_out__0[5]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_rdata[5]_i_2 
       (.I0(\wr_slv_reg7_reg_n_0_[5] ),
        .I1(\wr_slv_reg6_reg_n_0_[5] ),
        .I2(axi_araddr[3]),
        .I3(\wr_slv_reg5_reg_n_0_[5] ),
        .I4(axi_araddr[2]),
        .I5(\wr_slv_reg4_reg_n_0_[5] ),
        .O(\axi_rdata[5]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \axi_rdata[5]_i_3 
       (.I0(\output_data_addr_reg_reg[31]_0 [5]),
        .I1(\input_data_addr_reg_reg[31]_0 [5]),
        .I2(axi_araddr[3]),
        .I3(\wr_slv_reg0_reg_n_0_[5] ),
        .I4(axi_araddr[2]),
        .O(\axi_rdata[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8F808F8F8F808080)) 
    \axi_rdata[6]_i_1 
       (.I0(\axi_rdata[31]_i_3_n_0 ),
        .I1(\wr_slv_reg8_reg_n_0_[6] ),
        .I2(axi_araddr[5]),
        .I3(\axi_rdata[6]_i_2_n_0 ),
        .I4(axi_araddr[4]),
        .I5(\axi_rdata[6]_i_3_n_0 ),
        .O(reg_data_out__0[6]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_rdata[6]_i_2 
       (.I0(\wr_slv_reg7_reg_n_0_[6] ),
        .I1(\wr_slv_reg6_reg_n_0_[6] ),
        .I2(axi_araddr[3]),
        .I3(\wr_slv_reg5_reg_n_0_[6] ),
        .I4(axi_araddr[2]),
        .I5(\wr_slv_reg4_reg_n_0_[6] ),
        .O(\axi_rdata[6]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \axi_rdata[6]_i_3 
       (.I0(\output_data_addr_reg_reg[31]_0 [6]),
        .I1(\input_data_addr_reg_reg[31]_0 [6]),
        .I2(axi_araddr[3]),
        .I3(\wr_slv_reg0_reg_n_0_[6] ),
        .I4(axi_araddr[2]),
        .O(\axi_rdata[6]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8F808F8F8F808080)) 
    \axi_rdata[7]_i_1 
       (.I0(\axi_rdata[31]_i_3_n_0 ),
        .I1(\wr_slv_reg8_reg_n_0_[7] ),
        .I2(axi_araddr[5]),
        .I3(\axi_rdata[7]_i_2_n_0 ),
        .I4(axi_araddr[4]),
        .I5(\axi_rdata[7]_i_3_n_0 ),
        .O(reg_data_out__0[7]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_rdata[7]_i_2 
       (.I0(\wr_slv_reg7_reg_n_0_[7] ),
        .I1(\wr_slv_reg6_reg_n_0_[7] ),
        .I2(axi_araddr[3]),
        .I3(\wr_slv_reg5_reg_n_0_[7] ),
        .I4(axi_araddr[2]),
        .I5(\wr_slv_reg4_reg_n_0_[7] ),
        .O(\axi_rdata[7]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \axi_rdata[7]_i_3 
       (.I0(\output_data_addr_reg_reg[31]_0 [7]),
        .I1(\input_data_addr_reg_reg[31]_0 [7]),
        .I2(axi_araddr[3]),
        .I3(\wr_slv_reg0_reg_n_0_[7] ),
        .I4(axi_araddr[2]),
        .O(\axi_rdata[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8F808F8F8F808080)) 
    \axi_rdata[8]_i_1 
       (.I0(\axi_rdata[31]_i_3_n_0 ),
        .I1(\wr_slv_reg8_reg_n_0_[8] ),
        .I2(axi_araddr[5]),
        .I3(\axi_rdata[8]_i_2_n_0 ),
        .I4(axi_araddr[4]),
        .I5(\axi_rdata[8]_i_3_n_0 ),
        .O(reg_data_out__0[8]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_rdata[8]_i_2 
       (.I0(\wr_slv_reg7_reg_n_0_[8] ),
        .I1(\wr_slv_reg6_reg_n_0_[8] ),
        .I2(axi_araddr[3]),
        .I3(\wr_slv_reg5_reg_n_0_[8] ),
        .I4(axi_araddr[2]),
        .I5(\wr_slv_reg4_reg_n_0_[8] ),
        .O(\axi_rdata[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_rdata[8]_i_3 
       (.I0(\output_data_addr_reg_reg[31]_0 [8]),
        .I1(\input_data_addr_reg_reg[31]_0 [8]),
        .I2(axi_araddr[3]),
        .I3(empty_fwft_i_reg_0),
        .I4(axi_araddr[2]),
        .I5(\wr_slv_reg0_reg_n_0_[8] ),
        .O(\axi_rdata[8]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8F808F8F8F808080)) 
    \axi_rdata[9]_i_1 
       (.I0(\axi_rdata[31]_i_3_n_0 ),
        .I1(\wr_slv_reg8_reg_n_0_[9] ),
        .I2(axi_araddr[5]),
        .I3(\axi_rdata[9]_i_2_n_0 ),
        .I4(axi_araddr[4]),
        .I5(\axi_rdata[9]_i_3_n_0 ),
        .O(reg_data_out__0[9]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_rdata[9]_i_2 
       (.I0(\wr_slv_reg7_reg_n_0_[9] ),
        .I1(\wr_slv_reg6_reg_n_0_[9] ),
        .I2(axi_araddr[3]),
        .I3(\wr_slv_reg5_reg_n_0_[9] ),
        .I4(axi_araddr[2]),
        .I5(\wr_slv_reg4_reg_n_0_[9] ),
        .O(\axi_rdata[9]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_rdata[9]_i_3 
       (.I0(\output_data_addr_reg_reg[31]_0 [9]),
        .I1(\input_data_addr_reg_reg[31]_0 [9]),
        .I2(axi_araddr[3]),
        .I3(ila_smax_outbuff_almost_empty),
        .I4(axi_araddr[2]),
        .I5(\wr_slv_reg0_reg_n_0_[9] ),
        .O(\axi_rdata[9]_i_3_n_0 ));
  FDRE \axi_rdata_reg[0] 
       (.C(s00_axi_aclk),
        .CE(\axi_rdata[31]_i_1_n_0 ),
        .D(reg_data_out__0[0]),
        .Q(s00_axi_rdata[0]),
        .R(p_0_in));
  FDRE \axi_rdata_reg[10] 
       (.C(s00_axi_aclk),
        .CE(\axi_rdata[31]_i_1_n_0 ),
        .D(reg_data_out__0[10]),
        .Q(s00_axi_rdata[10]),
        .R(p_0_in));
  FDRE \axi_rdata_reg[11] 
       (.C(s00_axi_aclk),
        .CE(\axi_rdata[31]_i_1_n_0 ),
        .D(reg_data_out__0[11]),
        .Q(s00_axi_rdata[11]),
        .R(p_0_in));
  FDRE \axi_rdata_reg[12] 
       (.C(s00_axi_aclk),
        .CE(\axi_rdata[31]_i_1_n_0 ),
        .D(reg_data_out__0[12]),
        .Q(s00_axi_rdata[12]),
        .R(p_0_in));
  FDRE \axi_rdata_reg[13] 
       (.C(s00_axi_aclk),
        .CE(\axi_rdata[31]_i_1_n_0 ),
        .D(reg_data_out__0[13]),
        .Q(s00_axi_rdata[13]),
        .R(p_0_in));
  FDRE \axi_rdata_reg[14] 
       (.C(s00_axi_aclk),
        .CE(\axi_rdata[31]_i_1_n_0 ),
        .D(reg_data_out__0[14]),
        .Q(s00_axi_rdata[14]),
        .R(p_0_in));
  FDRE \axi_rdata_reg[15] 
       (.C(s00_axi_aclk),
        .CE(\axi_rdata[31]_i_1_n_0 ),
        .D(reg_data_out__0[15]),
        .Q(s00_axi_rdata[15]),
        .R(p_0_in));
  FDRE \axi_rdata_reg[16] 
       (.C(s00_axi_aclk),
        .CE(\axi_rdata[31]_i_1_n_0 ),
        .D(reg_data_out__0[16]),
        .Q(s00_axi_rdata[16]),
        .R(p_0_in));
  FDRE \axi_rdata_reg[17] 
       (.C(s00_axi_aclk),
        .CE(\axi_rdata[31]_i_1_n_0 ),
        .D(reg_data_out__0[17]),
        .Q(s00_axi_rdata[17]),
        .R(p_0_in));
  FDRE \axi_rdata_reg[18] 
       (.C(s00_axi_aclk),
        .CE(\axi_rdata[31]_i_1_n_0 ),
        .D(reg_data_out__0[18]),
        .Q(s00_axi_rdata[18]),
        .R(p_0_in));
  FDRE \axi_rdata_reg[19] 
       (.C(s00_axi_aclk),
        .CE(\axi_rdata[31]_i_1_n_0 ),
        .D(reg_data_out__0[19]),
        .Q(s00_axi_rdata[19]),
        .R(p_0_in));
  FDRE \axi_rdata_reg[1] 
       (.C(s00_axi_aclk),
        .CE(\axi_rdata[31]_i_1_n_0 ),
        .D(reg_data_out__0[1]),
        .Q(s00_axi_rdata[1]),
        .R(p_0_in));
  FDRE \axi_rdata_reg[20] 
       (.C(s00_axi_aclk),
        .CE(\axi_rdata[31]_i_1_n_0 ),
        .D(reg_data_out__0[20]),
        .Q(s00_axi_rdata[20]),
        .R(p_0_in));
  FDRE \axi_rdata_reg[21] 
       (.C(s00_axi_aclk),
        .CE(\axi_rdata[31]_i_1_n_0 ),
        .D(reg_data_out__0[21]),
        .Q(s00_axi_rdata[21]),
        .R(p_0_in));
  FDRE \axi_rdata_reg[22] 
       (.C(s00_axi_aclk),
        .CE(\axi_rdata[31]_i_1_n_0 ),
        .D(reg_data_out__0[22]),
        .Q(s00_axi_rdata[22]),
        .R(p_0_in));
  FDRE \axi_rdata_reg[23] 
       (.C(s00_axi_aclk),
        .CE(\axi_rdata[31]_i_1_n_0 ),
        .D(reg_data_out__0[23]),
        .Q(s00_axi_rdata[23]),
        .R(p_0_in));
  FDRE \axi_rdata_reg[24] 
       (.C(s00_axi_aclk),
        .CE(\axi_rdata[31]_i_1_n_0 ),
        .D(reg_data_out__0[24]),
        .Q(s00_axi_rdata[24]),
        .R(p_0_in));
  FDRE \axi_rdata_reg[25] 
       (.C(s00_axi_aclk),
        .CE(\axi_rdata[31]_i_1_n_0 ),
        .D(reg_data_out__0[25]),
        .Q(s00_axi_rdata[25]),
        .R(p_0_in));
  FDRE \axi_rdata_reg[26] 
       (.C(s00_axi_aclk),
        .CE(\axi_rdata[31]_i_1_n_0 ),
        .D(reg_data_out__0[26]),
        .Q(s00_axi_rdata[26]),
        .R(p_0_in));
  FDRE \axi_rdata_reg[27] 
       (.C(s00_axi_aclk),
        .CE(\axi_rdata[31]_i_1_n_0 ),
        .D(reg_data_out__0[27]),
        .Q(s00_axi_rdata[27]),
        .R(p_0_in));
  FDRE \axi_rdata_reg[28] 
       (.C(s00_axi_aclk),
        .CE(\axi_rdata[31]_i_1_n_0 ),
        .D(reg_data_out__0[28]),
        .Q(s00_axi_rdata[28]),
        .R(p_0_in));
  FDRE \axi_rdata_reg[29] 
       (.C(s00_axi_aclk),
        .CE(\axi_rdata[31]_i_1_n_0 ),
        .D(reg_data_out__0[29]),
        .Q(s00_axi_rdata[29]),
        .R(p_0_in));
  FDRE \axi_rdata_reg[2] 
       (.C(s00_axi_aclk),
        .CE(\axi_rdata[31]_i_1_n_0 ),
        .D(reg_data_out__0[2]),
        .Q(s00_axi_rdata[2]),
        .R(p_0_in));
  FDRE \axi_rdata_reg[30] 
       (.C(s00_axi_aclk),
        .CE(\axi_rdata[31]_i_1_n_0 ),
        .D(reg_data_out__0[30]),
        .Q(s00_axi_rdata[30]),
        .R(p_0_in));
  FDRE \axi_rdata_reg[31] 
       (.C(s00_axi_aclk),
        .CE(\axi_rdata[31]_i_1_n_0 ),
        .D(reg_data_out__0[31]),
        .Q(s00_axi_rdata[31]),
        .R(p_0_in));
  FDRE \axi_rdata_reg[3] 
       (.C(s00_axi_aclk),
        .CE(\axi_rdata[31]_i_1_n_0 ),
        .D(reg_data_out__0[3]),
        .Q(s00_axi_rdata[3]),
        .R(p_0_in));
  FDRE \axi_rdata_reg[4] 
       (.C(s00_axi_aclk),
        .CE(\axi_rdata[31]_i_1_n_0 ),
        .D(reg_data_out__0[4]),
        .Q(s00_axi_rdata[4]),
        .R(p_0_in));
  FDRE \axi_rdata_reg[5] 
       (.C(s00_axi_aclk),
        .CE(\axi_rdata[31]_i_1_n_0 ),
        .D(reg_data_out__0[5]),
        .Q(s00_axi_rdata[5]),
        .R(p_0_in));
  FDRE \axi_rdata_reg[6] 
       (.C(s00_axi_aclk),
        .CE(\axi_rdata[31]_i_1_n_0 ),
        .D(reg_data_out__0[6]),
        .Q(s00_axi_rdata[6]),
        .R(p_0_in));
  FDRE \axi_rdata_reg[7] 
       (.C(s00_axi_aclk),
        .CE(\axi_rdata[31]_i_1_n_0 ),
        .D(reg_data_out__0[7]),
        .Q(s00_axi_rdata[7]),
        .R(p_0_in));
  FDRE \axi_rdata_reg[8] 
       (.C(s00_axi_aclk),
        .CE(\axi_rdata[31]_i_1_n_0 ),
        .D(reg_data_out__0[8]),
        .Q(s00_axi_rdata[8]),
        .R(p_0_in));
  FDRE \axi_rdata_reg[9] 
       (.C(s00_axi_aclk),
        .CE(\axi_rdata[31]_i_1_n_0 ),
        .D(reg_data_out__0[9]),
        .Q(s00_axi_rdata[9]),
        .R(p_0_in));
  FDRE axi_rvalid_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(axi_arready_reg_0),
        .Q(s00_axi_rvalid),
        .R(p_0_in));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT3 #(
    .INIT(8'h08)) 
    axi_wready_i_1
       (.I0(s00_axi_wvalid),
        .I1(s00_axi_awvalid),
        .I2(s00_axi_wready),
        .O(axi_wready0));
  FDRE axi_wready_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(axi_wready0),
        .Q(s00_axi_wready),
        .R(p_0_in));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    \int_slv_reg_wren[0]_i_1 
       (.I0(\int_slv_reg_wren[3]_i_2_n_0 ),
        .I1(sel0[1]),
        .I2(sel0[0]),
        .I3(sel0[2]),
        .I4(sel0[3]),
        .I5(\int_slv_reg_wren[3]_i_3_n_0 ),
        .O(\int_slv_reg_wren[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000020)) 
    \int_slv_reg_wren[2]_i_1 
       (.I0(\int_slv_reg_wren[3]_i_2_n_0 ),
        .I1(sel0[3]),
        .I2(sel0[1]),
        .I3(sel0[2]),
        .I4(sel0[0]),
        .I5(\int_slv_reg_wren[3]_i_3_n_0 ),
        .O(\int_slv_reg_wren[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000200000)) 
    \int_slv_reg_wren[3]_i_1 
       (.I0(\int_slv_reg_wren[3]_i_2_n_0 ),
        .I1(sel0[3]),
        .I2(sel0[1]),
        .I3(sel0[2]),
        .I4(sel0[0]),
        .I5(\int_slv_reg_wren[3]_i_3_n_0 ),
        .O(\int_slv_reg_wren[3]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \int_slv_reg_wren[3]_i_2 
       (.I0(s00_axi_wstrb[1]),
        .I1(s00_axi_wstrb[0]),
        .I2(s00_axi_wstrb[3]),
        .I3(s00_axi_wstrb[2]),
        .O(\int_slv_reg_wren[3]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \int_slv_reg_wren[3]_i_3 
       (.I0(s00_axi_awvalid),
        .I1(s00_axi_wvalid),
        .I2(s00_axi_wready),
        .I3(s00_axi_awready),
        .I4(s00_axi_aresetn),
        .O(\int_slv_reg_wren[3]_i_3_n_0 ));
  FDRE \int_slv_reg_wren_reg[0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\int_slv_reg_wren[0]_i_1_n_0 ),
        .Q(slv_reg_wren[0]),
        .R(1'b0));
  FDRE \int_slv_reg_wren_reg[2] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\int_slv_reg_wren[2]_i_1_n_0 ),
        .Q(slv_reg_wren[1]),
        .R(1'b0));
  FDRE \int_slv_reg_wren_reg[3] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\int_slv_reg_wren[3]_i_1_n_0 ),
        .Q(slv_reg_wren[2]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000000100000000)) 
    \wr_slv_reg0[15]_i_1 
       (.I0(sel0[0]),
        .I1(sel0[2]),
        .I2(sel0[3]),
        .I3(\wr_slv_reg0[31]_i_2_n_0 ),
        .I4(sel0[1]),
        .I5(s00_axi_wstrb[1]),
        .O(p_1_in[15]));
  LUT6 #(
    .INIT(64'h0000000100000000)) 
    \wr_slv_reg0[23]_i_1 
       (.I0(sel0[0]),
        .I1(sel0[2]),
        .I2(sel0[3]),
        .I3(\wr_slv_reg0[31]_i_2_n_0 ),
        .I4(sel0[1]),
        .I5(s00_axi_wstrb[2]),
        .O(p_1_in[23]));
  LUT6 #(
    .INIT(64'h0000000100000000)) 
    \wr_slv_reg0[31]_i_1 
       (.I0(sel0[0]),
        .I1(sel0[2]),
        .I2(sel0[3]),
        .I3(\wr_slv_reg0[31]_i_2_n_0 ),
        .I4(sel0[1]),
        .I5(s00_axi_wstrb[3]),
        .O(p_1_in[31]));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \wr_slv_reg0[31]_i_2 
       (.I0(s00_axi_awready),
        .I1(s00_axi_wready),
        .I2(s00_axi_wvalid),
        .I3(s00_axi_awvalid),
        .O(\wr_slv_reg0[31]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000100000000)) 
    \wr_slv_reg0[7]_i_1 
       (.I0(sel0[0]),
        .I1(sel0[2]),
        .I2(sel0[3]),
        .I3(\wr_slv_reg0[31]_i_2_n_0 ),
        .I4(sel0[1]),
        .I5(s00_axi_wstrb[0]),
        .O(p_1_in[7]));
  FDRE \wr_slv_reg0_reg[0] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[7]),
        .D(s00_axi_wdata[0]),
        .Q(Q[0]),
        .R(p_0_in));
  FDRE \wr_slv_reg0_reg[10] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[15]),
        .D(s00_axi_wdata[10]),
        .Q(\wr_slv_reg0_reg_n_0_[10] ),
        .R(p_0_in));
  FDRE \wr_slv_reg0_reg[11] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[15]),
        .D(s00_axi_wdata[11]),
        .Q(\wr_slv_reg0_reg_n_0_[11] ),
        .R(p_0_in));
  FDRE \wr_slv_reg0_reg[12] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[15]),
        .D(s00_axi_wdata[12]),
        .Q(\wr_slv_reg0_reg_n_0_[12] ),
        .R(p_0_in));
  FDRE \wr_slv_reg0_reg[13] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[15]),
        .D(s00_axi_wdata[13]),
        .Q(\wr_slv_reg0_reg_n_0_[13] ),
        .R(p_0_in));
  FDRE \wr_slv_reg0_reg[14] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[15]),
        .D(s00_axi_wdata[14]),
        .Q(\wr_slv_reg0_reg_n_0_[14] ),
        .R(p_0_in));
  FDRE \wr_slv_reg0_reg[15] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[15]),
        .D(s00_axi_wdata[15]),
        .Q(\wr_slv_reg0_reg_n_0_[15] ),
        .R(p_0_in));
  FDRE \wr_slv_reg0_reg[16] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[23]),
        .D(s00_axi_wdata[16]),
        .Q(Q[1]),
        .R(p_0_in));
  FDRE \wr_slv_reg0_reg[17] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[23]),
        .D(s00_axi_wdata[17]),
        .Q(Q[2]),
        .R(p_0_in));
  FDRE \wr_slv_reg0_reg[18] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[23]),
        .D(s00_axi_wdata[18]),
        .Q(Q[3]),
        .R(p_0_in));
  FDRE \wr_slv_reg0_reg[19] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[23]),
        .D(s00_axi_wdata[19]),
        .Q(Q[4]),
        .R(p_0_in));
  FDRE \wr_slv_reg0_reg[1] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[7]),
        .D(s00_axi_wdata[1]),
        .Q(\wr_slv_reg0_reg_n_0_[1] ),
        .R(p_0_in));
  FDRE \wr_slv_reg0_reg[20] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[23]),
        .D(s00_axi_wdata[20]),
        .Q(Q[5]),
        .R(p_0_in));
  FDRE \wr_slv_reg0_reg[21] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[23]),
        .D(s00_axi_wdata[21]),
        .Q(Q[6]),
        .R(p_0_in));
  FDRE \wr_slv_reg0_reg[22] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[23]),
        .D(s00_axi_wdata[22]),
        .Q(Q[7]),
        .R(p_0_in));
  FDRE \wr_slv_reg0_reg[23] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[23]),
        .D(s00_axi_wdata[23]),
        .Q(Q[8]),
        .R(p_0_in));
  FDRE \wr_slv_reg0_reg[24] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[31]),
        .D(s00_axi_wdata[24]),
        .Q(Q[9]),
        .R(p_0_in));
  FDRE \wr_slv_reg0_reg[25] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[31]),
        .D(s00_axi_wdata[25]),
        .Q(Q[10]),
        .R(p_0_in));
  FDRE \wr_slv_reg0_reg[26] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[31]),
        .D(s00_axi_wdata[26]),
        .Q(Q[11]),
        .R(p_0_in));
  FDRE \wr_slv_reg0_reg[27] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[31]),
        .D(s00_axi_wdata[27]),
        .Q(Q[12]),
        .R(p_0_in));
  FDRE \wr_slv_reg0_reg[28] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[31]),
        .D(s00_axi_wdata[28]),
        .Q(Q[13]),
        .R(p_0_in));
  FDRE \wr_slv_reg0_reg[29] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[31]),
        .D(s00_axi_wdata[29]),
        .Q(Q[14]),
        .R(p_0_in));
  FDRE \wr_slv_reg0_reg[2] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[7]),
        .D(s00_axi_wdata[2]),
        .Q(\wr_slv_reg0_reg_n_0_[2] ),
        .R(p_0_in));
  FDRE \wr_slv_reg0_reg[30] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[31]),
        .D(s00_axi_wdata[30]),
        .Q(Q[15]),
        .R(p_0_in));
  FDRE \wr_slv_reg0_reg[31] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[31]),
        .D(s00_axi_wdata[31]),
        .Q(Q[16]),
        .R(p_0_in));
  FDRE \wr_slv_reg0_reg[3] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[7]),
        .D(s00_axi_wdata[3]),
        .Q(\wr_slv_reg0_reg_n_0_[3] ),
        .R(p_0_in));
  FDRE \wr_slv_reg0_reg[4] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[7]),
        .D(s00_axi_wdata[4]),
        .Q(\wr_slv_reg0_reg_n_0_[4] ),
        .R(p_0_in));
  FDRE \wr_slv_reg0_reg[5] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[7]),
        .D(s00_axi_wdata[5]),
        .Q(\wr_slv_reg0_reg_n_0_[5] ),
        .R(p_0_in));
  FDRE \wr_slv_reg0_reg[6] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[7]),
        .D(s00_axi_wdata[6]),
        .Q(\wr_slv_reg0_reg_n_0_[6] ),
        .R(p_0_in));
  FDRE \wr_slv_reg0_reg[7] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[7]),
        .D(s00_axi_wdata[7]),
        .Q(\wr_slv_reg0_reg_n_0_[7] ),
        .R(p_0_in));
  FDRE \wr_slv_reg0_reg[8] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[15]),
        .D(s00_axi_wdata[8]),
        .Q(\wr_slv_reg0_reg_n_0_[8] ),
        .R(p_0_in));
  FDRE \wr_slv_reg0_reg[9] 
       (.C(s00_axi_aclk),
        .CE(p_1_in[15]),
        .D(s00_axi_wdata[9]),
        .Q(\wr_slv_reg0_reg_n_0_[9] ),
        .R(p_0_in));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    \wr_slv_reg2[15]_i_1 
       (.I0(sel0[0]),
        .I1(sel0[2]),
        .I2(sel0[3]),
        .I3(\wr_slv_reg0[31]_i_2_n_0 ),
        .I4(sel0[1]),
        .I5(s00_axi_wstrb[1]),
        .O(\wr_slv_reg2[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    \wr_slv_reg2[23]_i_1 
       (.I0(sel0[0]),
        .I1(sel0[2]),
        .I2(sel0[3]),
        .I3(\wr_slv_reg0[31]_i_2_n_0 ),
        .I4(sel0[1]),
        .I5(s00_axi_wstrb[2]),
        .O(\wr_slv_reg2[23]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    \wr_slv_reg2[31]_i_1 
       (.I0(sel0[0]),
        .I1(sel0[2]),
        .I2(sel0[3]),
        .I3(\wr_slv_reg0[31]_i_2_n_0 ),
        .I4(sel0[1]),
        .I5(s00_axi_wstrb[3]),
        .O(\wr_slv_reg2[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    \wr_slv_reg2[7]_i_1 
       (.I0(sel0[0]),
        .I1(sel0[2]),
        .I2(sel0[3]),
        .I3(\wr_slv_reg0[31]_i_2_n_0 ),
        .I4(sel0[1]),
        .I5(s00_axi_wstrb[0]),
        .O(\wr_slv_reg2[7]_i_1_n_0 ));
  FDRE \wr_slv_reg2_reg[0] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg2[7]_i_1_n_0 ),
        .D(s00_axi_wdata[0]),
        .Q(\input_data_addr_reg_reg[31] [0]),
        .R(p_0_in));
  FDRE \wr_slv_reg2_reg[10] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg2[15]_i_1_n_0 ),
        .D(s00_axi_wdata[10]),
        .Q(\input_data_addr_reg_reg[31] [10]),
        .R(p_0_in));
  FDRE \wr_slv_reg2_reg[11] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg2[15]_i_1_n_0 ),
        .D(s00_axi_wdata[11]),
        .Q(\input_data_addr_reg_reg[31] [11]),
        .R(p_0_in));
  FDRE \wr_slv_reg2_reg[12] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg2[15]_i_1_n_0 ),
        .D(s00_axi_wdata[12]),
        .Q(\input_data_addr_reg_reg[31] [12]),
        .R(p_0_in));
  FDRE \wr_slv_reg2_reg[13] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg2[15]_i_1_n_0 ),
        .D(s00_axi_wdata[13]),
        .Q(\input_data_addr_reg_reg[31] [13]),
        .R(p_0_in));
  FDRE \wr_slv_reg2_reg[14] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg2[15]_i_1_n_0 ),
        .D(s00_axi_wdata[14]),
        .Q(\input_data_addr_reg_reg[31] [14]),
        .R(p_0_in));
  FDRE \wr_slv_reg2_reg[15] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg2[15]_i_1_n_0 ),
        .D(s00_axi_wdata[15]),
        .Q(\input_data_addr_reg_reg[31] [15]),
        .R(p_0_in));
  FDRE \wr_slv_reg2_reg[16] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg2[23]_i_1_n_0 ),
        .D(s00_axi_wdata[16]),
        .Q(\input_data_addr_reg_reg[31] [16]),
        .R(p_0_in));
  FDRE \wr_slv_reg2_reg[17] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg2[23]_i_1_n_0 ),
        .D(s00_axi_wdata[17]),
        .Q(\input_data_addr_reg_reg[31] [17]),
        .R(p_0_in));
  FDRE \wr_slv_reg2_reg[18] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg2[23]_i_1_n_0 ),
        .D(s00_axi_wdata[18]),
        .Q(\input_data_addr_reg_reg[31] [18]),
        .R(p_0_in));
  FDRE \wr_slv_reg2_reg[19] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg2[23]_i_1_n_0 ),
        .D(s00_axi_wdata[19]),
        .Q(\input_data_addr_reg_reg[31] [19]),
        .R(p_0_in));
  FDRE \wr_slv_reg2_reg[1] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg2[7]_i_1_n_0 ),
        .D(s00_axi_wdata[1]),
        .Q(\input_data_addr_reg_reg[31] [1]),
        .R(p_0_in));
  FDRE \wr_slv_reg2_reg[20] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg2[23]_i_1_n_0 ),
        .D(s00_axi_wdata[20]),
        .Q(\input_data_addr_reg_reg[31] [20]),
        .R(p_0_in));
  FDRE \wr_slv_reg2_reg[21] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg2[23]_i_1_n_0 ),
        .D(s00_axi_wdata[21]),
        .Q(\input_data_addr_reg_reg[31] [21]),
        .R(p_0_in));
  FDRE \wr_slv_reg2_reg[22] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg2[23]_i_1_n_0 ),
        .D(s00_axi_wdata[22]),
        .Q(\input_data_addr_reg_reg[31] [22]),
        .R(p_0_in));
  FDRE \wr_slv_reg2_reg[23] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg2[23]_i_1_n_0 ),
        .D(s00_axi_wdata[23]),
        .Q(\input_data_addr_reg_reg[31] [23]),
        .R(p_0_in));
  FDRE \wr_slv_reg2_reg[24] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg2[31]_i_1_n_0 ),
        .D(s00_axi_wdata[24]),
        .Q(\input_data_addr_reg_reg[31] [24]),
        .R(p_0_in));
  FDRE \wr_slv_reg2_reg[25] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg2[31]_i_1_n_0 ),
        .D(s00_axi_wdata[25]),
        .Q(\input_data_addr_reg_reg[31] [25]),
        .R(p_0_in));
  FDRE \wr_slv_reg2_reg[26] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg2[31]_i_1_n_0 ),
        .D(s00_axi_wdata[26]),
        .Q(\input_data_addr_reg_reg[31] [26]),
        .R(p_0_in));
  FDRE \wr_slv_reg2_reg[27] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg2[31]_i_1_n_0 ),
        .D(s00_axi_wdata[27]),
        .Q(\input_data_addr_reg_reg[31] [27]),
        .R(p_0_in));
  FDRE \wr_slv_reg2_reg[28] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg2[31]_i_1_n_0 ),
        .D(s00_axi_wdata[28]),
        .Q(\input_data_addr_reg_reg[31] [28]),
        .R(p_0_in));
  FDRE \wr_slv_reg2_reg[29] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg2[31]_i_1_n_0 ),
        .D(s00_axi_wdata[29]),
        .Q(\input_data_addr_reg_reg[31] [29]),
        .R(p_0_in));
  FDRE \wr_slv_reg2_reg[2] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg2[7]_i_1_n_0 ),
        .D(s00_axi_wdata[2]),
        .Q(\input_data_addr_reg_reg[31] [2]),
        .R(p_0_in));
  FDRE \wr_slv_reg2_reg[30] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg2[31]_i_1_n_0 ),
        .D(s00_axi_wdata[30]),
        .Q(\input_data_addr_reg_reg[31] [30]),
        .R(p_0_in));
  FDRE \wr_slv_reg2_reg[31] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg2[31]_i_1_n_0 ),
        .D(s00_axi_wdata[31]),
        .Q(\input_data_addr_reg_reg[31] [31]),
        .R(p_0_in));
  FDRE \wr_slv_reg2_reg[3] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg2[7]_i_1_n_0 ),
        .D(s00_axi_wdata[3]),
        .Q(\input_data_addr_reg_reg[31] [3]),
        .R(p_0_in));
  FDRE \wr_slv_reg2_reg[4] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg2[7]_i_1_n_0 ),
        .D(s00_axi_wdata[4]),
        .Q(\input_data_addr_reg_reg[31] [4]),
        .R(p_0_in));
  FDRE \wr_slv_reg2_reg[5] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg2[7]_i_1_n_0 ),
        .D(s00_axi_wdata[5]),
        .Q(\input_data_addr_reg_reg[31] [5]),
        .R(p_0_in));
  FDRE \wr_slv_reg2_reg[6] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg2[7]_i_1_n_0 ),
        .D(s00_axi_wdata[6]),
        .Q(\input_data_addr_reg_reg[31] [6]),
        .R(p_0_in));
  FDRE \wr_slv_reg2_reg[7] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg2[7]_i_1_n_0 ),
        .D(s00_axi_wdata[7]),
        .Q(\input_data_addr_reg_reg[31] [7]),
        .R(p_0_in));
  FDRE \wr_slv_reg2_reg[8] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg2[15]_i_1_n_0 ),
        .D(s00_axi_wdata[8]),
        .Q(\input_data_addr_reg_reg[31] [8]),
        .R(p_0_in));
  FDRE \wr_slv_reg2_reg[9] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg2[15]_i_1_n_0 ),
        .D(s00_axi_wdata[9]),
        .Q(\input_data_addr_reg_reg[31] [9]),
        .R(p_0_in));
  LUT6 #(
    .INIT(64'h0000100000000000)) 
    \wr_slv_reg3[15]_i_1 
       (.I0(sel0[3]),
        .I1(\wr_slv_reg0[31]_i_2_n_0 ),
        .I2(sel0[1]),
        .I3(sel0[0]),
        .I4(sel0[2]),
        .I5(s00_axi_wstrb[1]),
        .O(\wr_slv_reg3[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000100000000000)) 
    \wr_slv_reg3[23]_i_1 
       (.I0(sel0[3]),
        .I1(\wr_slv_reg0[31]_i_2_n_0 ),
        .I2(sel0[1]),
        .I3(sel0[0]),
        .I4(sel0[2]),
        .I5(s00_axi_wstrb[2]),
        .O(\wr_slv_reg3[23]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000100000000000)) 
    \wr_slv_reg3[31]_i_1 
       (.I0(sel0[3]),
        .I1(\wr_slv_reg0[31]_i_2_n_0 ),
        .I2(sel0[1]),
        .I3(sel0[0]),
        .I4(sel0[2]),
        .I5(s00_axi_wstrb[3]),
        .O(\wr_slv_reg3[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000100000000000)) 
    \wr_slv_reg3[7]_i_1 
       (.I0(sel0[3]),
        .I1(\wr_slv_reg0[31]_i_2_n_0 ),
        .I2(sel0[1]),
        .I3(sel0[0]),
        .I4(sel0[2]),
        .I5(s00_axi_wstrb[0]),
        .O(\wr_slv_reg3[7]_i_1_n_0 ));
  FDRE \wr_slv_reg3_reg[0] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg3[7]_i_1_n_0 ),
        .D(s00_axi_wdata[0]),
        .Q(\output_data_addr_reg_reg[31] [0]),
        .R(p_0_in));
  FDRE \wr_slv_reg3_reg[10] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg3[15]_i_1_n_0 ),
        .D(s00_axi_wdata[10]),
        .Q(\output_data_addr_reg_reg[31] [10]),
        .R(p_0_in));
  FDRE \wr_slv_reg3_reg[11] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg3[15]_i_1_n_0 ),
        .D(s00_axi_wdata[11]),
        .Q(\output_data_addr_reg_reg[31] [11]),
        .R(p_0_in));
  FDRE \wr_slv_reg3_reg[12] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg3[15]_i_1_n_0 ),
        .D(s00_axi_wdata[12]),
        .Q(\output_data_addr_reg_reg[31] [12]),
        .R(p_0_in));
  FDRE \wr_slv_reg3_reg[13] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg3[15]_i_1_n_0 ),
        .D(s00_axi_wdata[13]),
        .Q(\output_data_addr_reg_reg[31] [13]),
        .R(p_0_in));
  FDRE \wr_slv_reg3_reg[14] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg3[15]_i_1_n_0 ),
        .D(s00_axi_wdata[14]),
        .Q(\output_data_addr_reg_reg[31] [14]),
        .R(p_0_in));
  FDRE \wr_slv_reg3_reg[15] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg3[15]_i_1_n_0 ),
        .D(s00_axi_wdata[15]),
        .Q(\output_data_addr_reg_reg[31] [15]),
        .R(p_0_in));
  FDRE \wr_slv_reg3_reg[16] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg3[23]_i_1_n_0 ),
        .D(s00_axi_wdata[16]),
        .Q(\output_data_addr_reg_reg[31] [16]),
        .R(p_0_in));
  FDRE \wr_slv_reg3_reg[17] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg3[23]_i_1_n_0 ),
        .D(s00_axi_wdata[17]),
        .Q(\output_data_addr_reg_reg[31] [17]),
        .R(p_0_in));
  FDRE \wr_slv_reg3_reg[18] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg3[23]_i_1_n_0 ),
        .D(s00_axi_wdata[18]),
        .Q(\output_data_addr_reg_reg[31] [18]),
        .R(p_0_in));
  FDRE \wr_slv_reg3_reg[19] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg3[23]_i_1_n_0 ),
        .D(s00_axi_wdata[19]),
        .Q(\output_data_addr_reg_reg[31] [19]),
        .R(p_0_in));
  FDRE \wr_slv_reg3_reg[1] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg3[7]_i_1_n_0 ),
        .D(s00_axi_wdata[1]),
        .Q(\output_data_addr_reg_reg[31] [1]),
        .R(p_0_in));
  FDRE \wr_slv_reg3_reg[20] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg3[23]_i_1_n_0 ),
        .D(s00_axi_wdata[20]),
        .Q(\output_data_addr_reg_reg[31] [20]),
        .R(p_0_in));
  FDRE \wr_slv_reg3_reg[21] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg3[23]_i_1_n_0 ),
        .D(s00_axi_wdata[21]),
        .Q(\output_data_addr_reg_reg[31] [21]),
        .R(p_0_in));
  FDRE \wr_slv_reg3_reg[22] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg3[23]_i_1_n_0 ),
        .D(s00_axi_wdata[22]),
        .Q(\output_data_addr_reg_reg[31] [22]),
        .R(p_0_in));
  FDRE \wr_slv_reg3_reg[23] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg3[23]_i_1_n_0 ),
        .D(s00_axi_wdata[23]),
        .Q(\output_data_addr_reg_reg[31] [23]),
        .R(p_0_in));
  FDRE \wr_slv_reg3_reg[24] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg3[31]_i_1_n_0 ),
        .D(s00_axi_wdata[24]),
        .Q(\output_data_addr_reg_reg[31] [24]),
        .R(p_0_in));
  FDRE \wr_slv_reg3_reg[25] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg3[31]_i_1_n_0 ),
        .D(s00_axi_wdata[25]),
        .Q(\output_data_addr_reg_reg[31] [25]),
        .R(p_0_in));
  FDRE \wr_slv_reg3_reg[26] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg3[31]_i_1_n_0 ),
        .D(s00_axi_wdata[26]),
        .Q(\output_data_addr_reg_reg[31] [26]),
        .R(p_0_in));
  FDRE \wr_slv_reg3_reg[27] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg3[31]_i_1_n_0 ),
        .D(s00_axi_wdata[27]),
        .Q(\output_data_addr_reg_reg[31] [27]),
        .R(p_0_in));
  FDRE \wr_slv_reg3_reg[28] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg3[31]_i_1_n_0 ),
        .D(s00_axi_wdata[28]),
        .Q(\output_data_addr_reg_reg[31] [28]),
        .R(p_0_in));
  FDRE \wr_slv_reg3_reg[29] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg3[31]_i_1_n_0 ),
        .D(s00_axi_wdata[29]),
        .Q(\output_data_addr_reg_reg[31] [29]),
        .R(p_0_in));
  FDRE \wr_slv_reg3_reg[2] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg3[7]_i_1_n_0 ),
        .D(s00_axi_wdata[2]),
        .Q(\output_data_addr_reg_reg[31] [2]),
        .R(p_0_in));
  FDRE \wr_slv_reg3_reg[30] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg3[31]_i_1_n_0 ),
        .D(s00_axi_wdata[30]),
        .Q(\output_data_addr_reg_reg[31] [30]),
        .R(p_0_in));
  FDRE \wr_slv_reg3_reg[31] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg3[31]_i_1_n_0 ),
        .D(s00_axi_wdata[31]),
        .Q(\output_data_addr_reg_reg[31] [31]),
        .R(p_0_in));
  FDRE \wr_slv_reg3_reg[3] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg3[7]_i_1_n_0 ),
        .D(s00_axi_wdata[3]),
        .Q(\output_data_addr_reg_reg[31] [3]),
        .R(p_0_in));
  FDRE \wr_slv_reg3_reg[4] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg3[7]_i_1_n_0 ),
        .D(s00_axi_wdata[4]),
        .Q(\output_data_addr_reg_reg[31] [4]),
        .R(p_0_in));
  FDRE \wr_slv_reg3_reg[5] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg3[7]_i_1_n_0 ),
        .D(s00_axi_wdata[5]),
        .Q(\output_data_addr_reg_reg[31] [5]),
        .R(p_0_in));
  FDRE \wr_slv_reg3_reg[6] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg3[7]_i_1_n_0 ),
        .D(s00_axi_wdata[6]),
        .Q(\output_data_addr_reg_reg[31] [6]),
        .R(p_0_in));
  FDRE \wr_slv_reg3_reg[7] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg3[7]_i_1_n_0 ),
        .D(s00_axi_wdata[7]),
        .Q(\output_data_addr_reg_reg[31] [7]),
        .R(p_0_in));
  FDRE \wr_slv_reg3_reg[8] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg3[15]_i_1_n_0 ),
        .D(s00_axi_wdata[8]),
        .Q(\output_data_addr_reg_reg[31] [8]),
        .R(p_0_in));
  FDRE \wr_slv_reg3_reg[9] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg3[15]_i_1_n_0 ),
        .D(s00_axi_wdata[9]),
        .Q(\output_data_addr_reg_reg[31] [9]),
        .R(p_0_in));
  LUT6 #(
    .INIT(64'h0000010000000000)) 
    \wr_slv_reg4[15]_i_1 
       (.I0(sel0[3]),
        .I1(\wr_slv_reg0[31]_i_2_n_0 ),
        .I2(sel0[1]),
        .I3(sel0[2]),
        .I4(sel0[0]),
        .I5(s00_axi_wstrb[1]),
        .O(\wr_slv_reg4[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000010000000000)) 
    \wr_slv_reg4[23]_i_1 
       (.I0(sel0[3]),
        .I1(\wr_slv_reg0[31]_i_2_n_0 ),
        .I2(sel0[1]),
        .I3(sel0[2]),
        .I4(sel0[0]),
        .I5(s00_axi_wstrb[2]),
        .O(\wr_slv_reg4[23]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000010000000000)) 
    \wr_slv_reg4[31]_i_1 
       (.I0(sel0[3]),
        .I1(\wr_slv_reg0[31]_i_2_n_0 ),
        .I2(sel0[1]),
        .I3(sel0[2]),
        .I4(sel0[0]),
        .I5(s00_axi_wstrb[3]),
        .O(\wr_slv_reg4[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000010000000000)) 
    \wr_slv_reg4[7]_i_1 
       (.I0(sel0[3]),
        .I1(\wr_slv_reg0[31]_i_2_n_0 ),
        .I2(sel0[1]),
        .I3(sel0[2]),
        .I4(sel0[0]),
        .I5(s00_axi_wstrb[0]),
        .O(\wr_slv_reg4[7]_i_1_n_0 ));
  FDRE \wr_slv_reg4_reg[0] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg4[7]_i_1_n_0 ),
        .D(s00_axi_wdata[0]),
        .Q(\wr_slv_reg4_reg_n_0_[0] ),
        .R(p_0_in));
  FDRE \wr_slv_reg4_reg[10] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg4[15]_i_1_n_0 ),
        .D(s00_axi_wdata[10]),
        .Q(\wr_slv_reg4_reg_n_0_[10] ),
        .R(p_0_in));
  FDRE \wr_slv_reg4_reg[11] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg4[15]_i_1_n_0 ),
        .D(s00_axi_wdata[11]),
        .Q(\wr_slv_reg4_reg_n_0_[11] ),
        .R(p_0_in));
  FDRE \wr_slv_reg4_reg[12] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg4[15]_i_1_n_0 ),
        .D(s00_axi_wdata[12]),
        .Q(\wr_slv_reg4_reg_n_0_[12] ),
        .R(p_0_in));
  FDRE \wr_slv_reg4_reg[13] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg4[15]_i_1_n_0 ),
        .D(s00_axi_wdata[13]),
        .Q(\wr_slv_reg4_reg_n_0_[13] ),
        .R(p_0_in));
  FDRE \wr_slv_reg4_reg[14] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg4[15]_i_1_n_0 ),
        .D(s00_axi_wdata[14]),
        .Q(\wr_slv_reg4_reg_n_0_[14] ),
        .R(p_0_in));
  FDRE \wr_slv_reg4_reg[15] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg4[15]_i_1_n_0 ),
        .D(s00_axi_wdata[15]),
        .Q(\wr_slv_reg4_reg_n_0_[15] ),
        .R(p_0_in));
  FDRE \wr_slv_reg4_reg[16] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg4[23]_i_1_n_0 ),
        .D(s00_axi_wdata[16]),
        .Q(\wr_slv_reg4_reg_n_0_[16] ),
        .R(p_0_in));
  FDRE \wr_slv_reg4_reg[17] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg4[23]_i_1_n_0 ),
        .D(s00_axi_wdata[17]),
        .Q(\wr_slv_reg4_reg_n_0_[17] ),
        .R(p_0_in));
  FDRE \wr_slv_reg4_reg[18] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg4[23]_i_1_n_0 ),
        .D(s00_axi_wdata[18]),
        .Q(\wr_slv_reg4_reg_n_0_[18] ),
        .R(p_0_in));
  FDRE \wr_slv_reg4_reg[19] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg4[23]_i_1_n_0 ),
        .D(s00_axi_wdata[19]),
        .Q(\wr_slv_reg4_reg_n_0_[19] ),
        .R(p_0_in));
  FDRE \wr_slv_reg4_reg[1] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg4[7]_i_1_n_0 ),
        .D(s00_axi_wdata[1]),
        .Q(\wr_slv_reg4_reg_n_0_[1] ),
        .R(p_0_in));
  FDRE \wr_slv_reg4_reg[20] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg4[23]_i_1_n_0 ),
        .D(s00_axi_wdata[20]),
        .Q(\wr_slv_reg4_reg_n_0_[20] ),
        .R(p_0_in));
  FDRE \wr_slv_reg4_reg[21] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg4[23]_i_1_n_0 ),
        .D(s00_axi_wdata[21]),
        .Q(\wr_slv_reg4_reg_n_0_[21] ),
        .R(p_0_in));
  FDRE \wr_slv_reg4_reg[22] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg4[23]_i_1_n_0 ),
        .D(s00_axi_wdata[22]),
        .Q(\wr_slv_reg4_reg_n_0_[22] ),
        .R(p_0_in));
  FDRE \wr_slv_reg4_reg[23] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg4[23]_i_1_n_0 ),
        .D(s00_axi_wdata[23]),
        .Q(\wr_slv_reg4_reg_n_0_[23] ),
        .R(p_0_in));
  FDRE \wr_slv_reg4_reg[24] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg4[31]_i_1_n_0 ),
        .D(s00_axi_wdata[24]),
        .Q(\wr_slv_reg4_reg_n_0_[24] ),
        .R(p_0_in));
  FDRE \wr_slv_reg4_reg[25] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg4[31]_i_1_n_0 ),
        .D(s00_axi_wdata[25]),
        .Q(\wr_slv_reg4_reg_n_0_[25] ),
        .R(p_0_in));
  FDRE \wr_slv_reg4_reg[26] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg4[31]_i_1_n_0 ),
        .D(s00_axi_wdata[26]),
        .Q(\wr_slv_reg4_reg_n_0_[26] ),
        .R(p_0_in));
  FDRE \wr_slv_reg4_reg[27] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg4[31]_i_1_n_0 ),
        .D(s00_axi_wdata[27]),
        .Q(\wr_slv_reg4_reg_n_0_[27] ),
        .R(p_0_in));
  FDRE \wr_slv_reg4_reg[28] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg4[31]_i_1_n_0 ),
        .D(s00_axi_wdata[28]),
        .Q(\wr_slv_reg4_reg_n_0_[28] ),
        .R(p_0_in));
  FDRE \wr_slv_reg4_reg[29] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg4[31]_i_1_n_0 ),
        .D(s00_axi_wdata[29]),
        .Q(\wr_slv_reg4_reg_n_0_[29] ),
        .R(p_0_in));
  FDRE \wr_slv_reg4_reg[2] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg4[7]_i_1_n_0 ),
        .D(s00_axi_wdata[2]),
        .Q(\wr_slv_reg4_reg_n_0_[2] ),
        .R(p_0_in));
  FDRE \wr_slv_reg4_reg[30] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg4[31]_i_1_n_0 ),
        .D(s00_axi_wdata[30]),
        .Q(\wr_slv_reg4_reg_n_0_[30] ),
        .R(p_0_in));
  FDRE \wr_slv_reg4_reg[31] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg4[31]_i_1_n_0 ),
        .D(s00_axi_wdata[31]),
        .Q(\wr_slv_reg4_reg_n_0_[31] ),
        .R(p_0_in));
  FDRE \wr_slv_reg4_reg[3] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg4[7]_i_1_n_0 ),
        .D(s00_axi_wdata[3]),
        .Q(\wr_slv_reg4_reg_n_0_[3] ),
        .R(p_0_in));
  FDRE \wr_slv_reg4_reg[4] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg4[7]_i_1_n_0 ),
        .D(s00_axi_wdata[4]),
        .Q(\wr_slv_reg4_reg_n_0_[4] ),
        .R(p_0_in));
  FDRE \wr_slv_reg4_reg[5] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg4[7]_i_1_n_0 ),
        .D(s00_axi_wdata[5]),
        .Q(\wr_slv_reg4_reg_n_0_[5] ),
        .R(p_0_in));
  FDRE \wr_slv_reg4_reg[6] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg4[7]_i_1_n_0 ),
        .D(s00_axi_wdata[6]),
        .Q(\wr_slv_reg4_reg_n_0_[6] ),
        .R(p_0_in));
  FDRE \wr_slv_reg4_reg[7] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg4[7]_i_1_n_0 ),
        .D(s00_axi_wdata[7]),
        .Q(\wr_slv_reg4_reg_n_0_[7] ),
        .R(p_0_in));
  FDRE \wr_slv_reg4_reg[8] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg4[15]_i_1_n_0 ),
        .D(s00_axi_wdata[8]),
        .Q(\wr_slv_reg4_reg_n_0_[8] ),
        .R(p_0_in));
  FDRE \wr_slv_reg4_reg[9] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg4[15]_i_1_n_0 ),
        .D(s00_axi_wdata[9]),
        .Q(\wr_slv_reg4_reg_n_0_[9] ),
        .R(p_0_in));
  LUT6 #(
    .INIT(64'h0100000000000000)) 
    \wr_slv_reg5[15]_i_1 
       (.I0(sel0[3]),
        .I1(\wr_slv_reg0[31]_i_2_n_0 ),
        .I2(sel0[1]),
        .I3(sel0[0]),
        .I4(sel0[2]),
        .I5(s00_axi_wstrb[1]),
        .O(\wr_slv_reg5[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0100000000000000)) 
    \wr_slv_reg5[23]_i_1 
       (.I0(sel0[3]),
        .I1(\wr_slv_reg0[31]_i_2_n_0 ),
        .I2(sel0[1]),
        .I3(sel0[0]),
        .I4(sel0[2]),
        .I5(s00_axi_wstrb[2]),
        .O(\wr_slv_reg5[23]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0100000000000000)) 
    \wr_slv_reg5[31]_i_1 
       (.I0(sel0[3]),
        .I1(\wr_slv_reg0[31]_i_2_n_0 ),
        .I2(sel0[1]),
        .I3(sel0[0]),
        .I4(sel0[2]),
        .I5(s00_axi_wstrb[3]),
        .O(\wr_slv_reg5[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0100000000000000)) 
    \wr_slv_reg5[7]_i_1 
       (.I0(sel0[3]),
        .I1(\wr_slv_reg0[31]_i_2_n_0 ),
        .I2(sel0[1]),
        .I3(sel0[0]),
        .I4(sel0[2]),
        .I5(s00_axi_wstrb[0]),
        .O(\wr_slv_reg5[7]_i_1_n_0 ));
  FDRE \wr_slv_reg5_reg[0] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg5[7]_i_1_n_0 ),
        .D(s00_axi_wdata[0]),
        .Q(\wr_slv_reg5_reg_n_0_[0] ),
        .R(p_0_in));
  FDRE \wr_slv_reg5_reg[10] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg5[15]_i_1_n_0 ),
        .D(s00_axi_wdata[10]),
        .Q(\wr_slv_reg5_reg_n_0_[10] ),
        .R(p_0_in));
  FDRE \wr_slv_reg5_reg[11] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg5[15]_i_1_n_0 ),
        .D(s00_axi_wdata[11]),
        .Q(\wr_slv_reg5_reg_n_0_[11] ),
        .R(p_0_in));
  FDRE \wr_slv_reg5_reg[12] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg5[15]_i_1_n_0 ),
        .D(s00_axi_wdata[12]),
        .Q(\wr_slv_reg5_reg_n_0_[12] ),
        .R(p_0_in));
  FDRE \wr_slv_reg5_reg[13] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg5[15]_i_1_n_0 ),
        .D(s00_axi_wdata[13]),
        .Q(\wr_slv_reg5_reg_n_0_[13] ),
        .R(p_0_in));
  FDRE \wr_slv_reg5_reg[14] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg5[15]_i_1_n_0 ),
        .D(s00_axi_wdata[14]),
        .Q(\wr_slv_reg5_reg_n_0_[14] ),
        .R(p_0_in));
  FDRE \wr_slv_reg5_reg[15] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg5[15]_i_1_n_0 ),
        .D(s00_axi_wdata[15]),
        .Q(\wr_slv_reg5_reg_n_0_[15] ),
        .R(p_0_in));
  FDRE \wr_slv_reg5_reg[16] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg5[23]_i_1_n_0 ),
        .D(s00_axi_wdata[16]),
        .Q(\wr_slv_reg5_reg_n_0_[16] ),
        .R(p_0_in));
  FDRE \wr_slv_reg5_reg[17] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg5[23]_i_1_n_0 ),
        .D(s00_axi_wdata[17]),
        .Q(\wr_slv_reg5_reg_n_0_[17] ),
        .R(p_0_in));
  FDRE \wr_slv_reg5_reg[18] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg5[23]_i_1_n_0 ),
        .D(s00_axi_wdata[18]),
        .Q(\wr_slv_reg5_reg_n_0_[18] ),
        .R(p_0_in));
  FDRE \wr_slv_reg5_reg[19] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg5[23]_i_1_n_0 ),
        .D(s00_axi_wdata[19]),
        .Q(\wr_slv_reg5_reg_n_0_[19] ),
        .R(p_0_in));
  FDRE \wr_slv_reg5_reg[1] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg5[7]_i_1_n_0 ),
        .D(s00_axi_wdata[1]),
        .Q(\wr_slv_reg5_reg_n_0_[1] ),
        .R(p_0_in));
  FDRE \wr_slv_reg5_reg[20] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg5[23]_i_1_n_0 ),
        .D(s00_axi_wdata[20]),
        .Q(\wr_slv_reg5_reg_n_0_[20] ),
        .R(p_0_in));
  FDRE \wr_slv_reg5_reg[21] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg5[23]_i_1_n_0 ),
        .D(s00_axi_wdata[21]),
        .Q(\wr_slv_reg5_reg_n_0_[21] ),
        .R(p_0_in));
  FDRE \wr_slv_reg5_reg[22] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg5[23]_i_1_n_0 ),
        .D(s00_axi_wdata[22]),
        .Q(\wr_slv_reg5_reg_n_0_[22] ),
        .R(p_0_in));
  FDRE \wr_slv_reg5_reg[23] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg5[23]_i_1_n_0 ),
        .D(s00_axi_wdata[23]),
        .Q(\wr_slv_reg5_reg_n_0_[23] ),
        .R(p_0_in));
  FDRE \wr_slv_reg5_reg[24] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg5[31]_i_1_n_0 ),
        .D(s00_axi_wdata[24]),
        .Q(\wr_slv_reg5_reg_n_0_[24] ),
        .R(p_0_in));
  FDRE \wr_slv_reg5_reg[25] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg5[31]_i_1_n_0 ),
        .D(s00_axi_wdata[25]),
        .Q(\wr_slv_reg5_reg_n_0_[25] ),
        .R(p_0_in));
  FDRE \wr_slv_reg5_reg[26] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg5[31]_i_1_n_0 ),
        .D(s00_axi_wdata[26]),
        .Q(\wr_slv_reg5_reg_n_0_[26] ),
        .R(p_0_in));
  FDRE \wr_slv_reg5_reg[27] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg5[31]_i_1_n_0 ),
        .D(s00_axi_wdata[27]),
        .Q(\wr_slv_reg5_reg_n_0_[27] ),
        .R(p_0_in));
  FDRE \wr_slv_reg5_reg[28] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg5[31]_i_1_n_0 ),
        .D(s00_axi_wdata[28]),
        .Q(\wr_slv_reg5_reg_n_0_[28] ),
        .R(p_0_in));
  FDRE \wr_slv_reg5_reg[29] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg5[31]_i_1_n_0 ),
        .D(s00_axi_wdata[29]),
        .Q(\wr_slv_reg5_reg_n_0_[29] ),
        .R(p_0_in));
  FDRE \wr_slv_reg5_reg[2] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg5[7]_i_1_n_0 ),
        .D(s00_axi_wdata[2]),
        .Q(\wr_slv_reg5_reg_n_0_[2] ),
        .R(p_0_in));
  FDRE \wr_slv_reg5_reg[30] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg5[31]_i_1_n_0 ),
        .D(s00_axi_wdata[30]),
        .Q(\wr_slv_reg5_reg_n_0_[30] ),
        .R(p_0_in));
  FDRE \wr_slv_reg5_reg[31] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg5[31]_i_1_n_0 ),
        .D(s00_axi_wdata[31]),
        .Q(\wr_slv_reg5_reg_n_0_[31] ),
        .R(p_0_in));
  FDRE \wr_slv_reg5_reg[3] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg5[7]_i_1_n_0 ),
        .D(s00_axi_wdata[3]),
        .Q(\wr_slv_reg5_reg_n_0_[3] ),
        .R(p_0_in));
  FDRE \wr_slv_reg5_reg[4] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg5[7]_i_1_n_0 ),
        .D(s00_axi_wdata[4]),
        .Q(\wr_slv_reg5_reg_n_0_[4] ),
        .R(p_0_in));
  FDRE \wr_slv_reg5_reg[5] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg5[7]_i_1_n_0 ),
        .D(s00_axi_wdata[5]),
        .Q(\wr_slv_reg5_reg_n_0_[5] ),
        .R(p_0_in));
  FDRE \wr_slv_reg5_reg[6] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg5[7]_i_1_n_0 ),
        .D(s00_axi_wdata[6]),
        .Q(\wr_slv_reg5_reg_n_0_[6] ),
        .R(p_0_in));
  FDRE \wr_slv_reg5_reg[7] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg5[7]_i_1_n_0 ),
        .D(s00_axi_wdata[7]),
        .Q(\wr_slv_reg5_reg_n_0_[7] ),
        .R(p_0_in));
  FDRE \wr_slv_reg5_reg[8] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg5[15]_i_1_n_0 ),
        .D(s00_axi_wdata[8]),
        .Q(\wr_slv_reg5_reg_n_0_[8] ),
        .R(p_0_in));
  FDRE \wr_slv_reg5_reg[9] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg5[15]_i_1_n_0 ),
        .D(s00_axi_wdata[9]),
        .Q(\wr_slv_reg5_reg_n_0_[9] ),
        .R(p_0_in));
  LUT6 #(
    .INIT(64'h0000100000000000)) 
    \wr_slv_reg6[15]_i_1 
       (.I0(sel0[3]),
        .I1(\wr_slv_reg0[31]_i_2_n_0 ),
        .I2(sel0[1]),
        .I3(sel0[2]),
        .I4(sel0[0]),
        .I5(s00_axi_wstrb[1]),
        .O(\wr_slv_reg6[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000100000000000)) 
    \wr_slv_reg6[23]_i_1 
       (.I0(sel0[3]),
        .I1(\wr_slv_reg0[31]_i_2_n_0 ),
        .I2(sel0[1]),
        .I3(sel0[2]),
        .I4(sel0[0]),
        .I5(s00_axi_wstrb[2]),
        .O(\wr_slv_reg6[23]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000100000000000)) 
    \wr_slv_reg6[31]_i_1 
       (.I0(sel0[3]),
        .I1(\wr_slv_reg0[31]_i_2_n_0 ),
        .I2(sel0[1]),
        .I3(sel0[2]),
        .I4(sel0[0]),
        .I5(s00_axi_wstrb[3]),
        .O(\wr_slv_reg6[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000100000000000)) 
    \wr_slv_reg6[7]_i_1 
       (.I0(sel0[3]),
        .I1(\wr_slv_reg0[31]_i_2_n_0 ),
        .I2(sel0[1]),
        .I3(sel0[2]),
        .I4(sel0[0]),
        .I5(s00_axi_wstrb[0]),
        .O(\wr_slv_reg6[7]_i_1_n_0 ));
  FDRE \wr_slv_reg6_reg[0] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg6[7]_i_1_n_0 ),
        .D(s00_axi_wdata[0]),
        .Q(\wr_slv_reg6_reg_n_0_[0] ),
        .R(p_0_in));
  FDRE \wr_slv_reg6_reg[10] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg6[15]_i_1_n_0 ),
        .D(s00_axi_wdata[10]),
        .Q(\wr_slv_reg6_reg_n_0_[10] ),
        .R(p_0_in));
  FDRE \wr_slv_reg6_reg[11] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg6[15]_i_1_n_0 ),
        .D(s00_axi_wdata[11]),
        .Q(\wr_slv_reg6_reg_n_0_[11] ),
        .R(p_0_in));
  FDRE \wr_slv_reg6_reg[12] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg6[15]_i_1_n_0 ),
        .D(s00_axi_wdata[12]),
        .Q(\wr_slv_reg6_reg_n_0_[12] ),
        .R(p_0_in));
  FDRE \wr_slv_reg6_reg[13] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg6[15]_i_1_n_0 ),
        .D(s00_axi_wdata[13]),
        .Q(\wr_slv_reg6_reg_n_0_[13] ),
        .R(p_0_in));
  FDRE \wr_slv_reg6_reg[14] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg6[15]_i_1_n_0 ),
        .D(s00_axi_wdata[14]),
        .Q(\wr_slv_reg6_reg_n_0_[14] ),
        .R(p_0_in));
  FDRE \wr_slv_reg6_reg[15] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg6[15]_i_1_n_0 ),
        .D(s00_axi_wdata[15]),
        .Q(\wr_slv_reg6_reg_n_0_[15] ),
        .R(p_0_in));
  FDRE \wr_slv_reg6_reg[16] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg6[23]_i_1_n_0 ),
        .D(s00_axi_wdata[16]),
        .Q(\wr_slv_reg6_reg_n_0_[16] ),
        .R(p_0_in));
  FDRE \wr_slv_reg6_reg[17] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg6[23]_i_1_n_0 ),
        .D(s00_axi_wdata[17]),
        .Q(\wr_slv_reg6_reg_n_0_[17] ),
        .R(p_0_in));
  FDRE \wr_slv_reg6_reg[18] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg6[23]_i_1_n_0 ),
        .D(s00_axi_wdata[18]),
        .Q(\wr_slv_reg6_reg_n_0_[18] ),
        .R(p_0_in));
  FDRE \wr_slv_reg6_reg[19] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg6[23]_i_1_n_0 ),
        .D(s00_axi_wdata[19]),
        .Q(\wr_slv_reg6_reg_n_0_[19] ),
        .R(p_0_in));
  FDRE \wr_slv_reg6_reg[1] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg6[7]_i_1_n_0 ),
        .D(s00_axi_wdata[1]),
        .Q(\wr_slv_reg6_reg_n_0_[1] ),
        .R(p_0_in));
  FDRE \wr_slv_reg6_reg[20] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg6[23]_i_1_n_0 ),
        .D(s00_axi_wdata[20]),
        .Q(\wr_slv_reg6_reg_n_0_[20] ),
        .R(p_0_in));
  FDRE \wr_slv_reg6_reg[21] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg6[23]_i_1_n_0 ),
        .D(s00_axi_wdata[21]),
        .Q(\wr_slv_reg6_reg_n_0_[21] ),
        .R(p_0_in));
  FDRE \wr_slv_reg6_reg[22] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg6[23]_i_1_n_0 ),
        .D(s00_axi_wdata[22]),
        .Q(\wr_slv_reg6_reg_n_0_[22] ),
        .R(p_0_in));
  FDRE \wr_slv_reg6_reg[23] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg6[23]_i_1_n_0 ),
        .D(s00_axi_wdata[23]),
        .Q(\wr_slv_reg6_reg_n_0_[23] ),
        .R(p_0_in));
  FDRE \wr_slv_reg6_reg[24] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg6[31]_i_1_n_0 ),
        .D(s00_axi_wdata[24]),
        .Q(\wr_slv_reg6_reg_n_0_[24] ),
        .R(p_0_in));
  FDRE \wr_slv_reg6_reg[25] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg6[31]_i_1_n_0 ),
        .D(s00_axi_wdata[25]),
        .Q(\wr_slv_reg6_reg_n_0_[25] ),
        .R(p_0_in));
  FDRE \wr_slv_reg6_reg[26] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg6[31]_i_1_n_0 ),
        .D(s00_axi_wdata[26]),
        .Q(\wr_slv_reg6_reg_n_0_[26] ),
        .R(p_0_in));
  FDRE \wr_slv_reg6_reg[27] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg6[31]_i_1_n_0 ),
        .D(s00_axi_wdata[27]),
        .Q(\wr_slv_reg6_reg_n_0_[27] ),
        .R(p_0_in));
  FDRE \wr_slv_reg6_reg[28] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg6[31]_i_1_n_0 ),
        .D(s00_axi_wdata[28]),
        .Q(\wr_slv_reg6_reg_n_0_[28] ),
        .R(p_0_in));
  FDRE \wr_slv_reg6_reg[29] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg6[31]_i_1_n_0 ),
        .D(s00_axi_wdata[29]),
        .Q(\wr_slv_reg6_reg_n_0_[29] ),
        .R(p_0_in));
  FDRE \wr_slv_reg6_reg[2] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg6[7]_i_1_n_0 ),
        .D(s00_axi_wdata[2]),
        .Q(\wr_slv_reg6_reg_n_0_[2] ),
        .R(p_0_in));
  FDRE \wr_slv_reg6_reg[30] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg6[31]_i_1_n_0 ),
        .D(s00_axi_wdata[30]),
        .Q(\wr_slv_reg6_reg_n_0_[30] ),
        .R(p_0_in));
  FDRE \wr_slv_reg6_reg[31] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg6[31]_i_1_n_0 ),
        .D(s00_axi_wdata[31]),
        .Q(\wr_slv_reg6_reg_n_0_[31] ),
        .R(p_0_in));
  FDRE \wr_slv_reg6_reg[3] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg6[7]_i_1_n_0 ),
        .D(s00_axi_wdata[3]),
        .Q(\wr_slv_reg6_reg_n_0_[3] ),
        .R(p_0_in));
  FDRE \wr_slv_reg6_reg[4] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg6[7]_i_1_n_0 ),
        .D(s00_axi_wdata[4]),
        .Q(\wr_slv_reg6_reg_n_0_[4] ),
        .R(p_0_in));
  FDRE \wr_slv_reg6_reg[5] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg6[7]_i_1_n_0 ),
        .D(s00_axi_wdata[5]),
        .Q(\wr_slv_reg6_reg_n_0_[5] ),
        .R(p_0_in));
  FDRE \wr_slv_reg6_reg[6] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg6[7]_i_1_n_0 ),
        .D(s00_axi_wdata[6]),
        .Q(\wr_slv_reg6_reg_n_0_[6] ),
        .R(p_0_in));
  FDRE \wr_slv_reg6_reg[7] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg6[7]_i_1_n_0 ),
        .D(s00_axi_wdata[7]),
        .Q(\wr_slv_reg6_reg_n_0_[7] ),
        .R(p_0_in));
  FDRE \wr_slv_reg6_reg[8] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg6[15]_i_1_n_0 ),
        .D(s00_axi_wdata[8]),
        .Q(\wr_slv_reg6_reg_n_0_[8] ),
        .R(p_0_in));
  FDRE \wr_slv_reg6_reg[9] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg6[15]_i_1_n_0 ),
        .D(s00_axi_wdata[9]),
        .Q(\wr_slv_reg6_reg_n_0_[9] ),
        .R(p_0_in));
  LUT6 #(
    .INIT(64'h1000000000000000)) 
    \wr_slv_reg7[15]_i_1 
       (.I0(sel0[3]),
        .I1(\wr_slv_reg0[31]_i_2_n_0 ),
        .I2(sel0[1]),
        .I3(sel0[0]),
        .I4(sel0[2]),
        .I5(s00_axi_wstrb[1]),
        .O(\wr_slv_reg7[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h1000000000000000)) 
    \wr_slv_reg7[23]_i_1 
       (.I0(sel0[3]),
        .I1(\wr_slv_reg0[31]_i_2_n_0 ),
        .I2(sel0[1]),
        .I3(sel0[0]),
        .I4(sel0[2]),
        .I5(s00_axi_wstrb[2]),
        .O(\wr_slv_reg7[23]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h1000000000000000)) 
    \wr_slv_reg7[31]_i_1 
       (.I0(sel0[3]),
        .I1(\wr_slv_reg0[31]_i_2_n_0 ),
        .I2(sel0[1]),
        .I3(sel0[0]),
        .I4(sel0[2]),
        .I5(s00_axi_wstrb[3]),
        .O(\wr_slv_reg7[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h1000000000000000)) 
    \wr_slv_reg7[7]_i_1 
       (.I0(sel0[3]),
        .I1(\wr_slv_reg0[31]_i_2_n_0 ),
        .I2(sel0[1]),
        .I3(sel0[0]),
        .I4(sel0[2]),
        .I5(s00_axi_wstrb[0]),
        .O(\wr_slv_reg7[7]_i_1_n_0 ));
  FDRE \wr_slv_reg7_reg[0] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg7[7]_i_1_n_0 ),
        .D(s00_axi_wdata[0]),
        .Q(\wr_slv_reg7_reg_n_0_[0] ),
        .R(p_0_in));
  FDRE \wr_slv_reg7_reg[10] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg7[15]_i_1_n_0 ),
        .D(s00_axi_wdata[10]),
        .Q(\wr_slv_reg7_reg_n_0_[10] ),
        .R(p_0_in));
  FDRE \wr_slv_reg7_reg[11] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg7[15]_i_1_n_0 ),
        .D(s00_axi_wdata[11]),
        .Q(\wr_slv_reg7_reg_n_0_[11] ),
        .R(p_0_in));
  FDRE \wr_slv_reg7_reg[12] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg7[15]_i_1_n_0 ),
        .D(s00_axi_wdata[12]),
        .Q(\wr_slv_reg7_reg_n_0_[12] ),
        .R(p_0_in));
  FDRE \wr_slv_reg7_reg[13] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg7[15]_i_1_n_0 ),
        .D(s00_axi_wdata[13]),
        .Q(\wr_slv_reg7_reg_n_0_[13] ),
        .R(p_0_in));
  FDRE \wr_slv_reg7_reg[14] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg7[15]_i_1_n_0 ),
        .D(s00_axi_wdata[14]),
        .Q(\wr_slv_reg7_reg_n_0_[14] ),
        .R(p_0_in));
  FDRE \wr_slv_reg7_reg[15] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg7[15]_i_1_n_0 ),
        .D(s00_axi_wdata[15]),
        .Q(\wr_slv_reg7_reg_n_0_[15] ),
        .R(p_0_in));
  FDRE \wr_slv_reg7_reg[16] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg7[23]_i_1_n_0 ),
        .D(s00_axi_wdata[16]),
        .Q(\wr_slv_reg7_reg_n_0_[16] ),
        .R(p_0_in));
  FDRE \wr_slv_reg7_reg[17] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg7[23]_i_1_n_0 ),
        .D(s00_axi_wdata[17]),
        .Q(\wr_slv_reg7_reg_n_0_[17] ),
        .R(p_0_in));
  FDRE \wr_slv_reg7_reg[18] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg7[23]_i_1_n_0 ),
        .D(s00_axi_wdata[18]),
        .Q(\wr_slv_reg7_reg_n_0_[18] ),
        .R(p_0_in));
  FDRE \wr_slv_reg7_reg[19] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg7[23]_i_1_n_0 ),
        .D(s00_axi_wdata[19]),
        .Q(\wr_slv_reg7_reg_n_0_[19] ),
        .R(p_0_in));
  FDRE \wr_slv_reg7_reg[1] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg7[7]_i_1_n_0 ),
        .D(s00_axi_wdata[1]),
        .Q(\wr_slv_reg7_reg_n_0_[1] ),
        .R(p_0_in));
  FDRE \wr_slv_reg7_reg[20] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg7[23]_i_1_n_0 ),
        .D(s00_axi_wdata[20]),
        .Q(\wr_slv_reg7_reg_n_0_[20] ),
        .R(p_0_in));
  FDRE \wr_slv_reg7_reg[21] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg7[23]_i_1_n_0 ),
        .D(s00_axi_wdata[21]),
        .Q(\wr_slv_reg7_reg_n_0_[21] ),
        .R(p_0_in));
  FDRE \wr_slv_reg7_reg[22] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg7[23]_i_1_n_0 ),
        .D(s00_axi_wdata[22]),
        .Q(\wr_slv_reg7_reg_n_0_[22] ),
        .R(p_0_in));
  FDRE \wr_slv_reg7_reg[23] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg7[23]_i_1_n_0 ),
        .D(s00_axi_wdata[23]),
        .Q(\wr_slv_reg7_reg_n_0_[23] ),
        .R(p_0_in));
  FDRE \wr_slv_reg7_reg[24] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg7[31]_i_1_n_0 ),
        .D(s00_axi_wdata[24]),
        .Q(\wr_slv_reg7_reg_n_0_[24] ),
        .R(p_0_in));
  FDRE \wr_slv_reg7_reg[25] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg7[31]_i_1_n_0 ),
        .D(s00_axi_wdata[25]),
        .Q(\wr_slv_reg7_reg_n_0_[25] ),
        .R(p_0_in));
  FDRE \wr_slv_reg7_reg[26] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg7[31]_i_1_n_0 ),
        .D(s00_axi_wdata[26]),
        .Q(\wr_slv_reg7_reg_n_0_[26] ),
        .R(p_0_in));
  FDRE \wr_slv_reg7_reg[27] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg7[31]_i_1_n_0 ),
        .D(s00_axi_wdata[27]),
        .Q(\wr_slv_reg7_reg_n_0_[27] ),
        .R(p_0_in));
  FDRE \wr_slv_reg7_reg[28] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg7[31]_i_1_n_0 ),
        .D(s00_axi_wdata[28]),
        .Q(\wr_slv_reg7_reg_n_0_[28] ),
        .R(p_0_in));
  FDRE \wr_slv_reg7_reg[29] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg7[31]_i_1_n_0 ),
        .D(s00_axi_wdata[29]),
        .Q(\wr_slv_reg7_reg_n_0_[29] ),
        .R(p_0_in));
  FDRE \wr_slv_reg7_reg[2] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg7[7]_i_1_n_0 ),
        .D(s00_axi_wdata[2]),
        .Q(\wr_slv_reg7_reg_n_0_[2] ),
        .R(p_0_in));
  FDRE \wr_slv_reg7_reg[30] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg7[31]_i_1_n_0 ),
        .D(s00_axi_wdata[30]),
        .Q(\wr_slv_reg7_reg_n_0_[30] ),
        .R(p_0_in));
  FDRE \wr_slv_reg7_reg[31] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg7[31]_i_1_n_0 ),
        .D(s00_axi_wdata[31]),
        .Q(\wr_slv_reg7_reg_n_0_[31] ),
        .R(p_0_in));
  FDRE \wr_slv_reg7_reg[3] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg7[7]_i_1_n_0 ),
        .D(s00_axi_wdata[3]),
        .Q(\wr_slv_reg7_reg_n_0_[3] ),
        .R(p_0_in));
  FDRE \wr_slv_reg7_reg[4] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg7[7]_i_1_n_0 ),
        .D(s00_axi_wdata[4]),
        .Q(\wr_slv_reg7_reg_n_0_[4] ),
        .R(p_0_in));
  FDRE \wr_slv_reg7_reg[5] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg7[7]_i_1_n_0 ),
        .D(s00_axi_wdata[5]),
        .Q(\wr_slv_reg7_reg_n_0_[5] ),
        .R(p_0_in));
  FDRE \wr_slv_reg7_reg[6] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg7[7]_i_1_n_0 ),
        .D(s00_axi_wdata[6]),
        .Q(\wr_slv_reg7_reg_n_0_[6] ),
        .R(p_0_in));
  FDRE \wr_slv_reg7_reg[7] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg7[7]_i_1_n_0 ),
        .D(s00_axi_wdata[7]),
        .Q(\wr_slv_reg7_reg_n_0_[7] ),
        .R(p_0_in));
  FDRE \wr_slv_reg7_reg[8] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg7[15]_i_1_n_0 ),
        .D(s00_axi_wdata[8]),
        .Q(\wr_slv_reg7_reg_n_0_[8] ),
        .R(p_0_in));
  FDRE \wr_slv_reg7_reg[9] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg7[15]_i_1_n_0 ),
        .D(s00_axi_wdata[9]),
        .Q(\wr_slv_reg7_reg_n_0_[9] ),
        .R(p_0_in));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    \wr_slv_reg8[15]_i_1 
       (.I0(\wr_slv_reg0[31]_i_2_n_0 ),
        .I1(sel0[1]),
        .I2(sel0[0]),
        .I3(sel0[2]),
        .I4(sel0[3]),
        .I5(s00_axi_wstrb[1]),
        .O(\wr_slv_reg8[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    \wr_slv_reg8[23]_i_1 
       (.I0(\wr_slv_reg0[31]_i_2_n_0 ),
        .I1(sel0[1]),
        .I2(sel0[0]),
        .I3(sel0[2]),
        .I4(sel0[3]),
        .I5(s00_axi_wstrb[2]),
        .O(\wr_slv_reg8[23]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    \wr_slv_reg8[31]_i_1 
       (.I0(\wr_slv_reg0[31]_i_2_n_0 ),
        .I1(sel0[1]),
        .I2(sel0[0]),
        .I3(sel0[2]),
        .I4(sel0[3]),
        .I5(s00_axi_wstrb[3]),
        .O(\wr_slv_reg8[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    \wr_slv_reg8[7]_i_1 
       (.I0(\wr_slv_reg0[31]_i_2_n_0 ),
        .I1(sel0[1]),
        .I2(sel0[0]),
        .I3(sel0[2]),
        .I4(sel0[3]),
        .I5(s00_axi_wstrb[0]),
        .O(\wr_slv_reg8[7]_i_1_n_0 ));
  FDRE \wr_slv_reg8_reg[0] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg8[7]_i_1_n_0 ),
        .D(s00_axi_wdata[0]),
        .Q(\wr_slv_reg8_reg_n_0_[0] ),
        .R(p_0_in));
  FDRE \wr_slv_reg8_reg[10] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg8[15]_i_1_n_0 ),
        .D(s00_axi_wdata[10]),
        .Q(\wr_slv_reg8_reg_n_0_[10] ),
        .R(p_0_in));
  FDRE \wr_slv_reg8_reg[11] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg8[15]_i_1_n_0 ),
        .D(s00_axi_wdata[11]),
        .Q(\wr_slv_reg8_reg_n_0_[11] ),
        .R(p_0_in));
  FDRE \wr_slv_reg8_reg[12] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg8[15]_i_1_n_0 ),
        .D(s00_axi_wdata[12]),
        .Q(\wr_slv_reg8_reg_n_0_[12] ),
        .R(p_0_in));
  FDRE \wr_slv_reg8_reg[13] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg8[15]_i_1_n_0 ),
        .D(s00_axi_wdata[13]),
        .Q(\wr_slv_reg8_reg_n_0_[13] ),
        .R(p_0_in));
  FDRE \wr_slv_reg8_reg[14] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg8[15]_i_1_n_0 ),
        .D(s00_axi_wdata[14]),
        .Q(\wr_slv_reg8_reg_n_0_[14] ),
        .R(p_0_in));
  FDRE \wr_slv_reg8_reg[15] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg8[15]_i_1_n_0 ),
        .D(s00_axi_wdata[15]),
        .Q(\wr_slv_reg8_reg_n_0_[15] ),
        .R(p_0_in));
  FDRE \wr_slv_reg8_reg[16] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg8[23]_i_1_n_0 ),
        .D(s00_axi_wdata[16]),
        .Q(\wr_slv_reg8_reg_n_0_[16] ),
        .R(p_0_in));
  FDRE \wr_slv_reg8_reg[17] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg8[23]_i_1_n_0 ),
        .D(s00_axi_wdata[17]),
        .Q(\wr_slv_reg8_reg_n_0_[17] ),
        .R(p_0_in));
  FDRE \wr_slv_reg8_reg[18] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg8[23]_i_1_n_0 ),
        .D(s00_axi_wdata[18]),
        .Q(\wr_slv_reg8_reg_n_0_[18] ),
        .R(p_0_in));
  FDRE \wr_slv_reg8_reg[19] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg8[23]_i_1_n_0 ),
        .D(s00_axi_wdata[19]),
        .Q(\wr_slv_reg8_reg_n_0_[19] ),
        .R(p_0_in));
  FDRE \wr_slv_reg8_reg[1] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg8[7]_i_1_n_0 ),
        .D(s00_axi_wdata[1]),
        .Q(\wr_slv_reg8_reg_n_0_[1] ),
        .R(p_0_in));
  FDRE \wr_slv_reg8_reg[20] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg8[23]_i_1_n_0 ),
        .D(s00_axi_wdata[20]),
        .Q(\wr_slv_reg8_reg_n_0_[20] ),
        .R(p_0_in));
  FDRE \wr_slv_reg8_reg[21] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg8[23]_i_1_n_0 ),
        .D(s00_axi_wdata[21]),
        .Q(\wr_slv_reg8_reg_n_0_[21] ),
        .R(p_0_in));
  FDRE \wr_slv_reg8_reg[22] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg8[23]_i_1_n_0 ),
        .D(s00_axi_wdata[22]),
        .Q(\wr_slv_reg8_reg_n_0_[22] ),
        .R(p_0_in));
  FDRE \wr_slv_reg8_reg[23] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg8[23]_i_1_n_0 ),
        .D(s00_axi_wdata[23]),
        .Q(\wr_slv_reg8_reg_n_0_[23] ),
        .R(p_0_in));
  FDRE \wr_slv_reg8_reg[24] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg8[31]_i_1_n_0 ),
        .D(s00_axi_wdata[24]),
        .Q(\wr_slv_reg8_reg_n_0_[24] ),
        .R(p_0_in));
  FDRE \wr_slv_reg8_reg[25] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg8[31]_i_1_n_0 ),
        .D(s00_axi_wdata[25]),
        .Q(\wr_slv_reg8_reg_n_0_[25] ),
        .R(p_0_in));
  FDRE \wr_slv_reg8_reg[26] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg8[31]_i_1_n_0 ),
        .D(s00_axi_wdata[26]),
        .Q(\wr_slv_reg8_reg_n_0_[26] ),
        .R(p_0_in));
  FDRE \wr_slv_reg8_reg[27] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg8[31]_i_1_n_0 ),
        .D(s00_axi_wdata[27]),
        .Q(\wr_slv_reg8_reg_n_0_[27] ),
        .R(p_0_in));
  FDRE \wr_slv_reg8_reg[28] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg8[31]_i_1_n_0 ),
        .D(s00_axi_wdata[28]),
        .Q(\wr_slv_reg8_reg_n_0_[28] ),
        .R(p_0_in));
  FDRE \wr_slv_reg8_reg[29] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg8[31]_i_1_n_0 ),
        .D(s00_axi_wdata[29]),
        .Q(\wr_slv_reg8_reg_n_0_[29] ),
        .R(p_0_in));
  FDRE \wr_slv_reg8_reg[2] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg8[7]_i_1_n_0 ),
        .D(s00_axi_wdata[2]),
        .Q(\wr_slv_reg8_reg_n_0_[2] ),
        .R(p_0_in));
  FDRE \wr_slv_reg8_reg[30] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg8[31]_i_1_n_0 ),
        .D(s00_axi_wdata[30]),
        .Q(\wr_slv_reg8_reg_n_0_[30] ),
        .R(p_0_in));
  FDRE \wr_slv_reg8_reg[31] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg8[31]_i_1_n_0 ),
        .D(s00_axi_wdata[31]),
        .Q(\wr_slv_reg8_reg_n_0_[31] ),
        .R(p_0_in));
  FDRE \wr_slv_reg8_reg[3] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg8[7]_i_1_n_0 ),
        .D(s00_axi_wdata[3]),
        .Q(\wr_slv_reg8_reg_n_0_[3] ),
        .R(p_0_in));
  FDRE \wr_slv_reg8_reg[4] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg8[7]_i_1_n_0 ),
        .D(s00_axi_wdata[4]),
        .Q(\wr_slv_reg8_reg_n_0_[4] ),
        .R(p_0_in));
  FDRE \wr_slv_reg8_reg[5] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg8[7]_i_1_n_0 ),
        .D(s00_axi_wdata[5]),
        .Q(\wr_slv_reg8_reg_n_0_[5] ),
        .R(p_0_in));
  FDRE \wr_slv_reg8_reg[6] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg8[7]_i_1_n_0 ),
        .D(s00_axi_wdata[6]),
        .Q(\wr_slv_reg8_reg_n_0_[6] ),
        .R(p_0_in));
  FDRE \wr_slv_reg8_reg[7] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg8[7]_i_1_n_0 ),
        .D(s00_axi_wdata[7]),
        .Q(\wr_slv_reg8_reg_n_0_[7] ),
        .R(p_0_in));
  FDRE \wr_slv_reg8_reg[8] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg8[15]_i_1_n_0 ),
        .D(s00_axi_wdata[8]),
        .Q(\wr_slv_reg8_reg_n_0_[8] ),
        .R(p_0_in));
  FDRE \wr_slv_reg8_reg[9] 
       (.C(s00_axi_aclk),
        .CE(\wr_slv_reg8[15]_i_1_n_0 ),
        .D(s00_axi_wdata[9]),
        .Q(\wr_slv_reg8_reg_n_0_[9] ),
        .R(p_0_in));
endmodule

(* ORIG_REF_NAME = "exponential_function" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_exponential_function
   (result,
    ila_smax_exp_multiplicand_a,
    ila_smax_exp_multiplicand_b,
    ila_smax_exp_sum,
    ila_smax_exp_augend,
    ila_smax_exp_addend,
    out,
    ila_smax_exp_fifo_wr_en,
    ila_smax_exp_exp_done,
    \step_counter_reg[3]_0 ,
    ila_smax_exp_function_ready,
    \step_counter_reg[0]_0 ,
    Q,
    \ila_smax_exp_data_reg[31] ,
    ila_smax_exp_mult_reg,
    \ila_smax_exp_hold_counter[3] ,
    \ila_smax_exp_sum_counter[4] ,
    \addend_reg[0]_0 ,
    \data_reg_reg[28]_0 ,
    \sum_counter_reg[0]_rep_0 ,
    \FSM_sequential_current_state_reg[0]_0 ,
    \ila_smax_exp_fsm_state[2] ,
    ila_smax_exp_fifo_data,
    ila_smax_exp_valid_result,
    m00_axi_aclk,
    m00_axi_aresetn_0,
    empty,
    full,
    almost_full,
    m00_axi_aresetn,
    start,
    \FSM_sequential_current_state_reg[1]_0 ,
    summing_complete_reg,
    next_state0,
    \current_state_reg[0]_0 ,
    D);
  output [31:0]result;
  output [31:0]ila_smax_exp_multiplicand_a;
  output [31:0]ila_smax_exp_multiplicand_b;
  output [31:0]ila_smax_exp_sum;
  output [31:0]ila_smax_exp_augend;
  output [31:0]ila_smax_exp_addend;
  output [0:0]out;
  output ila_smax_exp_fifo_wr_en;
  output ila_smax_exp_exp_done;
  output \step_counter_reg[3]_0 ;
  output ila_smax_exp_function_ready;
  output \step_counter_reg[0]_0 ;
  output [7:0]Q;
  output [31:0]\ila_smax_exp_data_reg[31] ;
  output [31:0]ila_smax_exp_mult_reg;
  output [3:0]\ila_smax_exp_hold_counter[3] ;
  output [4:0]\ila_smax_exp_sum_counter[4] ;
  output \addend_reg[0]_0 ;
  output \data_reg_reg[28]_0 ;
  output \sum_counter_reg[0]_rep_0 ;
  output \FSM_sequential_current_state_reg[0]_0 ;
  output [2:0]\ila_smax_exp_fsm_state[2] ;
  output [31:0]ila_smax_exp_fifo_data;
  output ila_smax_exp_valid_result;
  input m00_axi_aclk;
  input m00_axi_aresetn_0;
  input empty;
  input full;
  input almost_full;
  input m00_axi_aresetn;
  input start;
  input [1:0]\FSM_sequential_current_state_reg[1]_0 ;
  input summing_complete_reg;
  input next_state0;
  input \current_state_reg[0]_0 ;
  input [31:0]D;

  wire [31:0]D;
  wire \FSM_sequential_current_state[0]_i_1__1_n_0 ;
  wire \FSM_sequential_current_state[0]_i_2__1_n_0 ;
  wire \FSM_sequential_current_state[0]_i_3__1_n_0 ;
  wire \FSM_sequential_current_state[0]_i_4__0_n_0 ;
  wire \FSM_sequential_current_state[0]_i_4__1_n_0 ;
  wire \FSM_sequential_current_state[1]_i_1__1_n_0 ;
  wire \FSM_sequential_current_state[1]_i_2__0_n_0 ;
  wire \FSM_sequential_current_state[1]_i_3_n_0 ;
  wire \FSM_sequential_current_state[1]_i_4_n_0 ;
  wire \FSM_sequential_current_state[2]_i_1__1_n_0 ;
  wire \FSM_sequential_current_state[2]_i_2_n_0 ;
  wire \FSM_sequential_current_state_reg[0]_0 ;
  wire [1:0]\FSM_sequential_current_state_reg[1]_0 ;
  wire [7:0]Q;
  wire [31:0]addend;
  wire \addend_reg[0]_0 ;
  wire almost_full;
  wire [31:0]augend;
  wire \augend[0]_i_10_n_0 ;
  wire \augend[0]_i_5_n_0 ;
  wire \augend[0]_i_6_n_0 ;
  wire \augend[0]_i_7_n_0 ;
  wire \augend[0]_i_8_n_0 ;
  wire \augend[0]_i_9_n_0 ;
  wire \augend[10]_i_10_n_0 ;
  wire \augend[10]_i_5_n_0 ;
  wire \augend[10]_i_6_n_0 ;
  wire \augend[10]_i_7_n_0 ;
  wire \augend[10]_i_8_n_0 ;
  wire \augend[10]_i_9_n_0 ;
  wire \augend[11]_i_10_n_0 ;
  wire \augend[11]_i_5_n_0 ;
  wire \augend[11]_i_6_n_0 ;
  wire \augend[11]_i_7_n_0 ;
  wire \augend[11]_i_8_n_0 ;
  wire \augend[11]_i_9_n_0 ;
  wire \augend[12]_i_10_n_0 ;
  wire \augend[12]_i_5_n_0 ;
  wire \augend[12]_i_6_n_0 ;
  wire \augend[12]_i_7_n_0 ;
  wire \augend[12]_i_8_n_0 ;
  wire \augend[12]_i_9_n_0 ;
  wire \augend[13]_i_10_n_0 ;
  wire \augend[13]_i_5_n_0 ;
  wire \augend[13]_i_6_n_0 ;
  wire \augend[13]_i_7_n_0 ;
  wire \augend[13]_i_8_n_0 ;
  wire \augend[13]_i_9_n_0 ;
  wire \augend[14]_i_10_n_0 ;
  wire \augend[14]_i_5_n_0 ;
  wire \augend[14]_i_6_n_0 ;
  wire \augend[14]_i_7_n_0 ;
  wire \augend[14]_i_8_n_0 ;
  wire \augend[14]_i_9_n_0 ;
  wire \augend[15]_i_10_n_0 ;
  wire \augend[15]_i_5_n_0 ;
  wire \augend[15]_i_6_n_0 ;
  wire \augend[15]_i_7_n_0 ;
  wire \augend[15]_i_8_n_0 ;
  wire \augend[15]_i_9_n_0 ;
  wire \augend[16]_i_10_n_0 ;
  wire \augend[16]_i_5_n_0 ;
  wire \augend[16]_i_6_n_0 ;
  wire \augend[16]_i_7_n_0 ;
  wire \augend[16]_i_8_n_0 ;
  wire \augend[16]_i_9_n_0 ;
  wire \augend[17]_i_10_n_0 ;
  wire \augend[17]_i_5_n_0 ;
  wire \augend[17]_i_6_n_0 ;
  wire \augend[17]_i_7_n_0 ;
  wire \augend[17]_i_8_n_0 ;
  wire \augend[17]_i_9_n_0 ;
  wire \augend[18]_i_10_n_0 ;
  wire \augend[18]_i_5_n_0 ;
  wire \augend[18]_i_6_n_0 ;
  wire \augend[18]_i_7_n_0 ;
  wire \augend[18]_i_8_n_0 ;
  wire \augend[18]_i_9_n_0 ;
  wire \augend[19]_i_10_n_0 ;
  wire \augend[19]_i_5_n_0 ;
  wire \augend[19]_i_6_n_0 ;
  wire \augend[19]_i_7_n_0 ;
  wire \augend[19]_i_8_n_0 ;
  wire \augend[19]_i_9_n_0 ;
  wire \augend[1]_i_10_n_0 ;
  wire \augend[1]_i_5_n_0 ;
  wire \augend[1]_i_6_n_0 ;
  wire \augend[1]_i_7_n_0 ;
  wire \augend[1]_i_8_n_0 ;
  wire \augend[1]_i_9_n_0 ;
  wire \augend[20]_i_10_n_0 ;
  wire \augend[20]_i_5_n_0 ;
  wire \augend[20]_i_6_n_0 ;
  wire \augend[20]_i_7_n_0 ;
  wire \augend[20]_i_8_n_0 ;
  wire \augend[20]_i_9_n_0 ;
  wire \augend[21]_i_10_n_0 ;
  wire \augend[21]_i_5_n_0 ;
  wire \augend[21]_i_6_n_0 ;
  wire \augend[21]_i_7_n_0 ;
  wire \augend[21]_i_8_n_0 ;
  wire \augend[21]_i_9_n_0 ;
  wire \augend[22]_i_10_n_0 ;
  wire \augend[22]_i_5_n_0 ;
  wire \augend[22]_i_6_n_0 ;
  wire \augend[22]_i_7_n_0 ;
  wire \augend[22]_i_8_n_0 ;
  wire \augend[22]_i_9_n_0 ;
  wire \augend[23]_i_10_n_0 ;
  wire \augend[23]_i_5_n_0 ;
  wire \augend[23]_i_6_n_0 ;
  wire \augend[23]_i_7_n_0 ;
  wire \augend[23]_i_8_n_0 ;
  wire \augend[23]_i_9_n_0 ;
  wire \augend[24]_i_10_n_0 ;
  wire \augend[24]_i_5_n_0 ;
  wire \augend[24]_i_6_n_0 ;
  wire \augend[24]_i_7_n_0 ;
  wire \augend[24]_i_8_n_0 ;
  wire \augend[24]_i_9_n_0 ;
  wire \augend[25]_i_10_n_0 ;
  wire \augend[25]_i_5_n_0 ;
  wire \augend[25]_i_6_n_0 ;
  wire \augend[25]_i_7_n_0 ;
  wire \augend[25]_i_8_n_0 ;
  wire \augend[25]_i_9_n_0 ;
  wire \augend[26]_i_10_n_0 ;
  wire \augend[26]_i_5_n_0 ;
  wire \augend[26]_i_6_n_0 ;
  wire \augend[26]_i_7_n_0 ;
  wire \augend[26]_i_8_n_0 ;
  wire \augend[26]_i_9_n_0 ;
  wire \augend[27]_i_10_n_0 ;
  wire \augend[27]_i_5_n_0 ;
  wire \augend[27]_i_6_n_0 ;
  wire \augend[27]_i_7_n_0 ;
  wire \augend[27]_i_8_n_0 ;
  wire \augend[27]_i_9_n_0 ;
  wire \augend[28]_i_10_n_0 ;
  wire \augend[28]_i_5_n_0 ;
  wire \augend[28]_i_6_n_0 ;
  wire \augend[28]_i_7_n_0 ;
  wire \augend[28]_i_8_n_0 ;
  wire \augend[28]_i_9_n_0 ;
  wire \augend[29]_i_10_n_0 ;
  wire \augend[29]_i_5_n_0 ;
  wire \augend[29]_i_6_n_0 ;
  wire \augend[29]_i_7_n_0 ;
  wire \augend[29]_i_8_n_0 ;
  wire \augend[29]_i_9_n_0 ;
  wire \augend[2]_i_10_n_0 ;
  wire \augend[2]_i_5_n_0 ;
  wire \augend[2]_i_6_n_0 ;
  wire \augend[2]_i_7_n_0 ;
  wire \augend[2]_i_8_n_0 ;
  wire \augend[2]_i_9_n_0 ;
  wire \augend[30]_i_10_n_0 ;
  wire \augend[30]_i_5_n_0 ;
  wire \augend[30]_i_6_n_0 ;
  wire \augend[30]_i_7_n_0 ;
  wire \augend[30]_i_8_n_0 ;
  wire \augend[30]_i_9_n_0 ;
  wire \augend[31]_i_10_n_0 ;
  wire \augend[31]_i_11_n_0 ;
  wire \augend[31]_i_12_n_0 ;
  wire \augend[31]_i_13_n_0 ;
  wire \augend[31]_i_1_n_0 ;
  wire \augend[31]_i_3_n_0 ;
  wire \augend[31]_i_4_n_0 ;
  wire \augend[31]_i_8_n_0 ;
  wire \augend[31]_i_9_n_0 ;
  wire \augend[3]_i_10_n_0 ;
  wire \augend[3]_i_5_n_0 ;
  wire \augend[3]_i_6_n_0 ;
  wire \augend[3]_i_7_n_0 ;
  wire \augend[3]_i_8_n_0 ;
  wire \augend[3]_i_9_n_0 ;
  wire \augend[4]_i_10_n_0 ;
  wire \augend[4]_i_5_n_0 ;
  wire \augend[4]_i_6_n_0 ;
  wire \augend[4]_i_7_n_0 ;
  wire \augend[4]_i_8_n_0 ;
  wire \augend[4]_i_9_n_0 ;
  wire \augend[5]_i_10_n_0 ;
  wire \augend[5]_i_5_n_0 ;
  wire \augend[5]_i_6_n_0 ;
  wire \augend[5]_i_7_n_0 ;
  wire \augend[5]_i_8_n_0 ;
  wire \augend[5]_i_9_n_0 ;
  wire \augend[6]_i_10_n_0 ;
  wire \augend[6]_i_5_n_0 ;
  wire \augend[6]_i_6_n_0 ;
  wire \augend[6]_i_7_n_0 ;
  wire \augend[6]_i_8_n_0 ;
  wire \augend[6]_i_9_n_0 ;
  wire \augend[7]_i_10_n_0 ;
  wire \augend[7]_i_5_n_0 ;
  wire \augend[7]_i_6_n_0 ;
  wire \augend[7]_i_7_n_0 ;
  wire \augend[7]_i_8_n_0 ;
  wire \augend[7]_i_9_n_0 ;
  wire \augend[8]_i_10_n_0 ;
  wire \augend[8]_i_5_n_0 ;
  wire \augend[8]_i_6_n_0 ;
  wire \augend[8]_i_7_n_0 ;
  wire \augend[8]_i_8_n_0 ;
  wire \augend[8]_i_9_n_0 ;
  wire \augend[9]_i_10_n_0 ;
  wire \augend[9]_i_5_n_0 ;
  wire \augend[9]_i_6_n_0 ;
  wire \augend[9]_i_7_n_0 ;
  wire \augend[9]_i_8_n_0 ;
  wire \augend[9]_i_9_n_0 ;
  wire \augend_reg[0]_i_2_n_0 ;
  wire \augend_reg[0]_i_3_n_0 ;
  wire \augend_reg[0]_i_4_n_0 ;
  wire \augend_reg[10]_i_2_n_0 ;
  wire \augend_reg[10]_i_3_n_0 ;
  wire \augend_reg[10]_i_4_n_0 ;
  wire \augend_reg[11]_i_2_n_0 ;
  wire \augend_reg[11]_i_3_n_0 ;
  wire \augend_reg[11]_i_4_n_0 ;
  wire \augend_reg[12]_i_2_n_0 ;
  wire \augend_reg[12]_i_3_n_0 ;
  wire \augend_reg[12]_i_4_n_0 ;
  wire \augend_reg[13]_i_2_n_0 ;
  wire \augend_reg[13]_i_3_n_0 ;
  wire \augend_reg[13]_i_4_n_0 ;
  wire \augend_reg[14]_i_2_n_0 ;
  wire \augend_reg[14]_i_3_n_0 ;
  wire \augend_reg[14]_i_4_n_0 ;
  wire \augend_reg[15]_i_2_n_0 ;
  wire \augend_reg[15]_i_3_n_0 ;
  wire \augend_reg[15]_i_4_n_0 ;
  wire \augend_reg[16]_i_2_n_0 ;
  wire \augend_reg[16]_i_3_n_0 ;
  wire \augend_reg[16]_i_4_n_0 ;
  wire \augend_reg[17]_i_2_n_0 ;
  wire \augend_reg[17]_i_3_n_0 ;
  wire \augend_reg[17]_i_4_n_0 ;
  wire \augend_reg[18]_i_2_n_0 ;
  wire \augend_reg[18]_i_3_n_0 ;
  wire \augend_reg[18]_i_4_n_0 ;
  wire \augend_reg[19]_i_2_n_0 ;
  wire \augend_reg[19]_i_3_n_0 ;
  wire \augend_reg[19]_i_4_n_0 ;
  wire \augend_reg[1]_i_2_n_0 ;
  wire \augend_reg[1]_i_3_n_0 ;
  wire \augend_reg[1]_i_4_n_0 ;
  wire \augend_reg[20]_i_2_n_0 ;
  wire \augend_reg[20]_i_3_n_0 ;
  wire \augend_reg[20]_i_4_n_0 ;
  wire \augend_reg[21]_i_2_n_0 ;
  wire \augend_reg[21]_i_3_n_0 ;
  wire \augend_reg[21]_i_4_n_0 ;
  wire \augend_reg[22]_i_2_n_0 ;
  wire \augend_reg[22]_i_3_n_0 ;
  wire \augend_reg[22]_i_4_n_0 ;
  wire \augend_reg[23]_i_2_n_0 ;
  wire \augend_reg[23]_i_3_n_0 ;
  wire \augend_reg[23]_i_4_n_0 ;
  wire \augend_reg[24]_i_2_n_0 ;
  wire \augend_reg[24]_i_3_n_0 ;
  wire \augend_reg[24]_i_4_n_0 ;
  wire \augend_reg[25]_i_2_n_0 ;
  wire \augend_reg[25]_i_3_n_0 ;
  wire \augend_reg[25]_i_4_n_0 ;
  wire \augend_reg[26]_i_2_n_0 ;
  wire \augend_reg[26]_i_3_n_0 ;
  wire \augend_reg[26]_i_4_n_0 ;
  wire \augend_reg[27]_i_2_n_0 ;
  wire \augend_reg[27]_i_3_n_0 ;
  wire \augend_reg[27]_i_4_n_0 ;
  wire \augend_reg[28]_i_2_n_0 ;
  wire \augend_reg[28]_i_3_n_0 ;
  wire \augend_reg[28]_i_4_n_0 ;
  wire \augend_reg[29]_i_2_n_0 ;
  wire \augend_reg[29]_i_3_n_0 ;
  wire \augend_reg[29]_i_4_n_0 ;
  wire \augend_reg[2]_i_2_n_0 ;
  wire \augend_reg[2]_i_3_n_0 ;
  wire \augend_reg[2]_i_4_n_0 ;
  wire \augend_reg[30]_i_2_n_0 ;
  wire \augend_reg[30]_i_3_n_0 ;
  wire \augend_reg[30]_i_4_n_0 ;
  wire \augend_reg[31]_i_5_n_0 ;
  wire \augend_reg[31]_i_6_n_0 ;
  wire \augend_reg[31]_i_7_n_0 ;
  wire \augend_reg[3]_i_2_n_0 ;
  wire \augend_reg[3]_i_3_n_0 ;
  wire \augend_reg[3]_i_4_n_0 ;
  wire \augend_reg[4]_i_2_n_0 ;
  wire \augend_reg[4]_i_3_n_0 ;
  wire \augend_reg[4]_i_4_n_0 ;
  wire \augend_reg[5]_i_2_n_0 ;
  wire \augend_reg[5]_i_3_n_0 ;
  wire \augend_reg[5]_i_4_n_0 ;
  wire \augend_reg[6]_i_2_n_0 ;
  wire \augend_reg[6]_i_3_n_0 ;
  wire \augend_reg[6]_i_4_n_0 ;
  wire \augend_reg[7]_i_2_n_0 ;
  wire \augend_reg[7]_i_3_n_0 ;
  wire \augend_reg[7]_i_4_n_0 ;
  wire \augend_reg[8]_i_2_n_0 ;
  wire \augend_reg[8]_i_3_n_0 ;
  wire \augend_reg[8]_i_4_n_0 ;
  wire \augend_reg[9]_i_2_n_0 ;
  wire \augend_reg[9]_i_3_n_0 ;
  wire \augend_reg[9]_i_4_n_0 ;
  (* RTL_KEEP = "yes" *) wire [2:1]current_state;
  wire \current_state[1]_i_2_n_0 ;
  wire \current_state[2]_i_3_n_0 ;
  wire \current_state[2]_i_4_n_0 ;
  wire \current_state[2]_i_5_n_0 ;
  wire \current_state_reg[0]_0 ;
  wire \data_reg[31]_i_1_n_0 ;
  wire \data_reg_reg[28]_0 ;
  wire empty;
  wire [28:16]\factorials[23]_26 ;
  wire [31:0]fifo_data;
  wire \fifo_data[31]_i_1_n_0 ;
  wire fifo_wr_en_i_1_n_0;
  wire full;
  wire [3:0]hold_counter;
  wire \hold_counter[3]_i_1_n_0 ;
  wire [31:0]ila_smax_exp_addend;
  wire [31:0]ila_smax_exp_augend;
  wire [31:0]\ila_smax_exp_data_reg[31] ;
  wire ila_smax_exp_exp_done;
  wire [31:0]ila_smax_exp_fifo_data;
  wire ila_smax_exp_fifo_wr_en;
  wire [2:0]\ila_smax_exp_fsm_state[2] ;
  wire ila_smax_exp_function_ready;
  wire [3:0]\ila_smax_exp_hold_counter[3] ;
  wire [31:0]ila_smax_exp_mult_reg;
  wire [31:0]ila_smax_exp_multiplicand_a;
  wire [31:0]ila_smax_exp_multiplicand_b;
  wire [31:0]ila_smax_exp_sum;
  wire [4:0]\ila_smax_exp_sum_counter[4] ;
  wire ila_smax_exp_valid_result;
  wire m00_axi_aclk;
  wire m00_axi_aresetn;
  wire m00_axi_aresetn_0;
  wire [31:0]mult_reg;
  wire \mult_reg[31]_i_1_n_0 ;
  wire \mult_reg[31]_i_3_n_0 ;
  wire [31:30]multiplicand_a;
  wire \multiplicand_a[0]_i_1_n_0 ;
  wire \multiplicand_a[10]_i_1_n_0 ;
  wire \multiplicand_a[11]_i_1_n_0 ;
  wire \multiplicand_a[12]_i_1_n_0 ;
  wire \multiplicand_a[13]_i_1_n_0 ;
  wire \multiplicand_a[14]_i_1_n_0 ;
  wire \multiplicand_a[15]_i_1_n_0 ;
  wire \multiplicand_a[16]_i_1_n_0 ;
  wire \multiplicand_a[17]_i_1_n_0 ;
  wire \multiplicand_a[18]_i_1_n_0 ;
  wire \multiplicand_a[19]_i_1_n_0 ;
  wire \multiplicand_a[1]_i_1_n_0 ;
  wire \multiplicand_a[20]_i_1_n_0 ;
  wire \multiplicand_a[21]_i_1_n_0 ;
  wire \multiplicand_a[22]_i_1_n_0 ;
  wire \multiplicand_a[23]_i_1_n_0 ;
  wire \multiplicand_a[24]_i_1_n_0 ;
  wire \multiplicand_a[25]_i_1_n_0 ;
  wire \multiplicand_a[26]_i_1_n_0 ;
  wire \multiplicand_a[27]_i_1_n_0 ;
  wire \multiplicand_a[28]_i_1_n_0 ;
  wire \multiplicand_a[29]_i_1_n_0 ;
  wire \multiplicand_a[29]_i_2_n_0 ;
  wire \multiplicand_a[2]_i_1_n_0 ;
  wire \multiplicand_a[31]_i_1_n_0 ;
  wire \multiplicand_a[3]_i_1_n_0 ;
  wire \multiplicand_a[4]_i_1_n_0 ;
  wire \multiplicand_a[5]_i_1_n_0 ;
  wire \multiplicand_a[6]_i_1_n_0 ;
  wire \multiplicand_a[7]_i_1_n_0 ;
  wire \multiplicand_a[8]_i_1_n_0 ;
  wire \multiplicand_a[9]_i_1_n_0 ;
  wire \multiplicand_b[0]_i_1_n_0 ;
  wire \multiplicand_b[10]_i_1_n_0 ;
  wire \multiplicand_b[11]_i_1_n_0 ;
  wire \multiplicand_b[12]_i_1_n_0 ;
  wire \multiplicand_b[13]_i_1_n_0 ;
  wire \multiplicand_b[14]_i_1_n_0 ;
  wire \multiplicand_b[15]_i_1_n_0 ;
  wire \multiplicand_b[16]_i_1_n_0 ;
  wire \multiplicand_b[17]_i_1_n_0 ;
  wire \multiplicand_b[18]_i_1_n_0 ;
  wire \multiplicand_b[19]_i_1_n_0 ;
  wire \multiplicand_b[1]_i_1_n_0 ;
  wire \multiplicand_b[20]_i_1_n_0 ;
  wire \multiplicand_b[21]_i_1_n_0 ;
  wire \multiplicand_b[22]_i_1_n_0 ;
  wire \multiplicand_b[23]_i_1_n_0 ;
  wire \multiplicand_b[24]_i_1_n_0 ;
  wire \multiplicand_b[25]_i_1_n_0 ;
  wire \multiplicand_b[26]_i_1_n_0 ;
  wire \multiplicand_b[27]_i_1_n_0 ;
  wire \multiplicand_b[28]_i_1_n_0 ;
  wire \multiplicand_b[29]_i_1_n_0 ;
  wire \multiplicand_b[2]_i_1_n_0 ;
  wire \multiplicand_b[30]_i_1_n_0 ;
  wire \multiplicand_b[31]_i_1_n_0 ;
  wire \multiplicand_b[31]_i_2_n_0 ;
  wire \multiplicand_b[3]_i_1_n_0 ;
  wire \multiplicand_b[4]_i_1_n_0 ;
  wire \multiplicand_b[5]_i_1_n_0 ;
  wire \multiplicand_b[6]_i_1_n_0 ;
  wire \multiplicand_b[7]_i_1_n_0 ;
  wire \multiplicand_b[8]_i_1_n_0 ;
  wire \multiplicand_b[9]_i_1_n_0 ;
  wire [2:0]next_state;
  wire next_state0;
  (* RTL_KEEP = "yes" *) wire [0:0]out;
  wire [31:0]result;
  wire start;
  wire [7:1]step_counter;
  wire \step_counter[0]_i_1_n_0 ;
  wire \step_counter[6]_i_2_n_0 ;
  wire \step_counter[6]_i_3_n_0 ;
  wire \step_counter[7]_i_1_n_0 ;
  wire \step_counter[7]_i_3_n_0 ;
  wire \step_counter_reg[0]_0 ;
  wire \step_counter_reg[3]_0 ;
  wire \sum_array[0][31]_i_1_n_0 ;
  wire [31:0]\sum_array[0]_23 ;
  wire \sum_array[10]_13 ;
  wire \sum_array[11]_12 ;
  wire \sum_array[12]_11 ;
  wire \sum_array[13][31]_i_2_n_0 ;
  wire \sum_array[13]_10 ;
  wire \sum_array[14]_9 ;
  wire \sum_array[15][31]_i_2_n_0 ;
  wire \sum_array[15]_8 ;
  wire \sum_array[16]_7 ;
  wire \sum_array[17][31]_i_2_n_0 ;
  wire \sum_array[17][31]_i_3_n_0 ;
  wire \sum_array[17]_6 ;
  wire \sum_array[18][31]_i_2_n_0 ;
  wire \sum_array[18]_5 ;
  wire \sum_array[19]_4 ;
  wire \sum_array[1][13]_i_2_n_0 ;
  wire \sum_array[1][18]_i_2_n_0 ;
  wire \sum_array[1][23]_i_2_n_0 ;
  wire \sum_array[1][28]_i_2_n_0 ;
  wire \sum_array[1][31]_i_1_n_0 ;
  wire \sum_array[1][31]_i_3_n_0 ;
  wire \sum_array[1][31]_i_4_n_0 ;
  wire \sum_array[1][8]_i_2_n_0 ;
  wire [31:0]\sum_array[1]_22 ;
  wire \sum_array[20]_3 ;
  wire \sum_array[21][31]_i_2_n_0 ;
  wire \sum_array[21]_2 ;
  wire \sum_array[22][31]_i_2_n_0 ;
  wire \sum_array[22]_1 ;
  wire \sum_array[23][31]_i_2_n_0 ;
  wire \sum_array[23][31]_i_3_n_0 ;
  wire \sum_array[23][31]_i_4_n_0 ;
  wire \sum_array[23]_0 ;
  wire \sum_array[2]_21 ;
  wire \sum_array[3]_20 ;
  wire \sum_array[4]_19 ;
  wire \sum_array[5]_18 ;
  wire \sum_array[6]_17 ;
  wire \sum_array[7][31]_i_2_n_0 ;
  wire \sum_array[7]_16 ;
  wire \sum_array[8]_15 ;
  wire \sum_array[9]_14 ;
  wire [31:0]\sum_array_reg[0]_25 ;
  wire [31:0]\sum_array_reg[1]_24 ;
  wire \sum_array_reg_n_0_[10][0] ;
  wire \sum_array_reg_n_0_[10][10] ;
  wire \sum_array_reg_n_0_[10][11] ;
  wire \sum_array_reg_n_0_[10][12] ;
  wire \sum_array_reg_n_0_[10][13] ;
  wire \sum_array_reg_n_0_[10][14] ;
  wire \sum_array_reg_n_0_[10][15] ;
  wire \sum_array_reg_n_0_[10][16] ;
  wire \sum_array_reg_n_0_[10][17] ;
  wire \sum_array_reg_n_0_[10][18] ;
  wire \sum_array_reg_n_0_[10][19] ;
  wire \sum_array_reg_n_0_[10][1] ;
  wire \sum_array_reg_n_0_[10][20] ;
  wire \sum_array_reg_n_0_[10][21] ;
  wire \sum_array_reg_n_0_[10][22] ;
  wire \sum_array_reg_n_0_[10][23] ;
  wire \sum_array_reg_n_0_[10][24] ;
  wire \sum_array_reg_n_0_[10][25] ;
  wire \sum_array_reg_n_0_[10][26] ;
  wire \sum_array_reg_n_0_[10][27] ;
  wire \sum_array_reg_n_0_[10][28] ;
  wire \sum_array_reg_n_0_[10][29] ;
  wire \sum_array_reg_n_0_[10][2] ;
  wire \sum_array_reg_n_0_[10][30] ;
  wire \sum_array_reg_n_0_[10][31] ;
  wire \sum_array_reg_n_0_[10][3] ;
  wire \sum_array_reg_n_0_[10][4] ;
  wire \sum_array_reg_n_0_[10][5] ;
  wire \sum_array_reg_n_0_[10][6] ;
  wire \sum_array_reg_n_0_[10][7] ;
  wire \sum_array_reg_n_0_[10][8] ;
  wire \sum_array_reg_n_0_[10][9] ;
  wire \sum_array_reg_n_0_[11][0] ;
  wire \sum_array_reg_n_0_[11][10] ;
  wire \sum_array_reg_n_0_[11][11] ;
  wire \sum_array_reg_n_0_[11][12] ;
  wire \sum_array_reg_n_0_[11][13] ;
  wire \sum_array_reg_n_0_[11][14] ;
  wire \sum_array_reg_n_0_[11][15] ;
  wire \sum_array_reg_n_0_[11][16] ;
  wire \sum_array_reg_n_0_[11][17] ;
  wire \sum_array_reg_n_0_[11][18] ;
  wire \sum_array_reg_n_0_[11][19] ;
  wire \sum_array_reg_n_0_[11][1] ;
  wire \sum_array_reg_n_0_[11][20] ;
  wire \sum_array_reg_n_0_[11][21] ;
  wire \sum_array_reg_n_0_[11][22] ;
  wire \sum_array_reg_n_0_[11][23] ;
  wire \sum_array_reg_n_0_[11][24] ;
  wire \sum_array_reg_n_0_[11][25] ;
  wire \sum_array_reg_n_0_[11][26] ;
  wire \sum_array_reg_n_0_[11][27] ;
  wire \sum_array_reg_n_0_[11][28] ;
  wire \sum_array_reg_n_0_[11][29] ;
  wire \sum_array_reg_n_0_[11][2] ;
  wire \sum_array_reg_n_0_[11][30] ;
  wire \sum_array_reg_n_0_[11][31] ;
  wire \sum_array_reg_n_0_[11][3] ;
  wire \sum_array_reg_n_0_[11][4] ;
  wire \sum_array_reg_n_0_[11][5] ;
  wire \sum_array_reg_n_0_[11][6] ;
  wire \sum_array_reg_n_0_[11][7] ;
  wire \sum_array_reg_n_0_[11][8] ;
  wire \sum_array_reg_n_0_[11][9] ;
  wire \sum_array_reg_n_0_[12][0] ;
  wire \sum_array_reg_n_0_[12][10] ;
  wire \sum_array_reg_n_0_[12][11] ;
  wire \sum_array_reg_n_0_[12][12] ;
  wire \sum_array_reg_n_0_[12][13] ;
  wire \sum_array_reg_n_0_[12][14] ;
  wire \sum_array_reg_n_0_[12][15] ;
  wire \sum_array_reg_n_0_[12][16] ;
  wire \sum_array_reg_n_0_[12][17] ;
  wire \sum_array_reg_n_0_[12][18] ;
  wire \sum_array_reg_n_0_[12][19] ;
  wire \sum_array_reg_n_0_[12][1] ;
  wire \sum_array_reg_n_0_[12][20] ;
  wire \sum_array_reg_n_0_[12][21] ;
  wire \sum_array_reg_n_0_[12][22] ;
  wire \sum_array_reg_n_0_[12][23] ;
  wire \sum_array_reg_n_0_[12][24] ;
  wire \sum_array_reg_n_0_[12][25] ;
  wire \sum_array_reg_n_0_[12][26] ;
  wire \sum_array_reg_n_0_[12][27] ;
  wire \sum_array_reg_n_0_[12][28] ;
  wire \sum_array_reg_n_0_[12][29] ;
  wire \sum_array_reg_n_0_[12][2] ;
  wire \sum_array_reg_n_0_[12][30] ;
  wire \sum_array_reg_n_0_[12][31] ;
  wire \sum_array_reg_n_0_[12][3] ;
  wire \sum_array_reg_n_0_[12][4] ;
  wire \sum_array_reg_n_0_[12][5] ;
  wire \sum_array_reg_n_0_[12][6] ;
  wire \sum_array_reg_n_0_[12][7] ;
  wire \sum_array_reg_n_0_[12][8] ;
  wire \sum_array_reg_n_0_[12][9] ;
  wire \sum_array_reg_n_0_[13][0] ;
  wire \sum_array_reg_n_0_[13][10] ;
  wire \sum_array_reg_n_0_[13][11] ;
  wire \sum_array_reg_n_0_[13][12] ;
  wire \sum_array_reg_n_0_[13][13] ;
  wire \sum_array_reg_n_0_[13][14] ;
  wire \sum_array_reg_n_0_[13][15] ;
  wire \sum_array_reg_n_0_[13][16] ;
  wire \sum_array_reg_n_0_[13][17] ;
  wire \sum_array_reg_n_0_[13][18] ;
  wire \sum_array_reg_n_0_[13][19] ;
  wire \sum_array_reg_n_0_[13][1] ;
  wire \sum_array_reg_n_0_[13][20] ;
  wire \sum_array_reg_n_0_[13][21] ;
  wire \sum_array_reg_n_0_[13][22] ;
  wire \sum_array_reg_n_0_[13][23] ;
  wire \sum_array_reg_n_0_[13][24] ;
  wire \sum_array_reg_n_0_[13][25] ;
  wire \sum_array_reg_n_0_[13][26] ;
  wire \sum_array_reg_n_0_[13][27] ;
  wire \sum_array_reg_n_0_[13][28] ;
  wire \sum_array_reg_n_0_[13][29] ;
  wire \sum_array_reg_n_0_[13][2] ;
  wire \sum_array_reg_n_0_[13][30] ;
  wire \sum_array_reg_n_0_[13][31] ;
  wire \sum_array_reg_n_0_[13][3] ;
  wire \sum_array_reg_n_0_[13][4] ;
  wire \sum_array_reg_n_0_[13][5] ;
  wire \sum_array_reg_n_0_[13][6] ;
  wire \sum_array_reg_n_0_[13][7] ;
  wire \sum_array_reg_n_0_[13][8] ;
  wire \sum_array_reg_n_0_[13][9] ;
  wire \sum_array_reg_n_0_[14][0] ;
  wire \sum_array_reg_n_0_[14][10] ;
  wire \sum_array_reg_n_0_[14][11] ;
  wire \sum_array_reg_n_0_[14][12] ;
  wire \sum_array_reg_n_0_[14][13] ;
  wire \sum_array_reg_n_0_[14][14] ;
  wire \sum_array_reg_n_0_[14][15] ;
  wire \sum_array_reg_n_0_[14][16] ;
  wire \sum_array_reg_n_0_[14][17] ;
  wire \sum_array_reg_n_0_[14][18] ;
  wire \sum_array_reg_n_0_[14][19] ;
  wire \sum_array_reg_n_0_[14][1] ;
  wire \sum_array_reg_n_0_[14][20] ;
  wire \sum_array_reg_n_0_[14][21] ;
  wire \sum_array_reg_n_0_[14][22] ;
  wire \sum_array_reg_n_0_[14][23] ;
  wire \sum_array_reg_n_0_[14][24] ;
  wire \sum_array_reg_n_0_[14][25] ;
  wire \sum_array_reg_n_0_[14][26] ;
  wire \sum_array_reg_n_0_[14][27] ;
  wire \sum_array_reg_n_0_[14][28] ;
  wire \sum_array_reg_n_0_[14][29] ;
  wire \sum_array_reg_n_0_[14][2] ;
  wire \sum_array_reg_n_0_[14][30] ;
  wire \sum_array_reg_n_0_[14][31] ;
  wire \sum_array_reg_n_0_[14][3] ;
  wire \sum_array_reg_n_0_[14][4] ;
  wire \sum_array_reg_n_0_[14][5] ;
  wire \sum_array_reg_n_0_[14][6] ;
  wire \sum_array_reg_n_0_[14][7] ;
  wire \sum_array_reg_n_0_[14][8] ;
  wire \sum_array_reg_n_0_[14][9] ;
  wire \sum_array_reg_n_0_[15][0] ;
  wire \sum_array_reg_n_0_[15][10] ;
  wire \sum_array_reg_n_0_[15][11] ;
  wire \sum_array_reg_n_0_[15][12] ;
  wire \sum_array_reg_n_0_[15][13] ;
  wire \sum_array_reg_n_0_[15][14] ;
  wire \sum_array_reg_n_0_[15][15] ;
  wire \sum_array_reg_n_0_[15][16] ;
  wire \sum_array_reg_n_0_[15][17] ;
  wire \sum_array_reg_n_0_[15][18] ;
  wire \sum_array_reg_n_0_[15][19] ;
  wire \sum_array_reg_n_0_[15][1] ;
  wire \sum_array_reg_n_0_[15][20] ;
  wire \sum_array_reg_n_0_[15][21] ;
  wire \sum_array_reg_n_0_[15][22] ;
  wire \sum_array_reg_n_0_[15][23] ;
  wire \sum_array_reg_n_0_[15][24] ;
  wire \sum_array_reg_n_0_[15][25] ;
  wire \sum_array_reg_n_0_[15][26] ;
  wire \sum_array_reg_n_0_[15][27] ;
  wire \sum_array_reg_n_0_[15][28] ;
  wire \sum_array_reg_n_0_[15][29] ;
  wire \sum_array_reg_n_0_[15][2] ;
  wire \sum_array_reg_n_0_[15][30] ;
  wire \sum_array_reg_n_0_[15][31] ;
  wire \sum_array_reg_n_0_[15][3] ;
  wire \sum_array_reg_n_0_[15][4] ;
  wire \sum_array_reg_n_0_[15][5] ;
  wire \sum_array_reg_n_0_[15][6] ;
  wire \sum_array_reg_n_0_[15][7] ;
  wire \sum_array_reg_n_0_[15][8] ;
  wire \sum_array_reg_n_0_[15][9] ;
  wire \sum_array_reg_n_0_[16][0] ;
  wire \sum_array_reg_n_0_[16][10] ;
  wire \sum_array_reg_n_0_[16][11] ;
  wire \sum_array_reg_n_0_[16][12] ;
  wire \sum_array_reg_n_0_[16][13] ;
  wire \sum_array_reg_n_0_[16][14] ;
  wire \sum_array_reg_n_0_[16][15] ;
  wire \sum_array_reg_n_0_[16][16] ;
  wire \sum_array_reg_n_0_[16][17] ;
  wire \sum_array_reg_n_0_[16][18] ;
  wire \sum_array_reg_n_0_[16][19] ;
  wire \sum_array_reg_n_0_[16][1] ;
  wire \sum_array_reg_n_0_[16][20] ;
  wire \sum_array_reg_n_0_[16][21] ;
  wire \sum_array_reg_n_0_[16][22] ;
  wire \sum_array_reg_n_0_[16][23] ;
  wire \sum_array_reg_n_0_[16][24] ;
  wire \sum_array_reg_n_0_[16][25] ;
  wire \sum_array_reg_n_0_[16][26] ;
  wire \sum_array_reg_n_0_[16][27] ;
  wire \sum_array_reg_n_0_[16][28] ;
  wire \sum_array_reg_n_0_[16][29] ;
  wire \sum_array_reg_n_0_[16][2] ;
  wire \sum_array_reg_n_0_[16][30] ;
  wire \sum_array_reg_n_0_[16][31] ;
  wire \sum_array_reg_n_0_[16][3] ;
  wire \sum_array_reg_n_0_[16][4] ;
  wire \sum_array_reg_n_0_[16][5] ;
  wire \sum_array_reg_n_0_[16][6] ;
  wire \sum_array_reg_n_0_[16][7] ;
  wire \sum_array_reg_n_0_[16][8] ;
  wire \sum_array_reg_n_0_[16][9] ;
  wire \sum_array_reg_n_0_[17][0] ;
  wire \sum_array_reg_n_0_[17][10] ;
  wire \sum_array_reg_n_0_[17][11] ;
  wire \sum_array_reg_n_0_[17][12] ;
  wire \sum_array_reg_n_0_[17][13] ;
  wire \sum_array_reg_n_0_[17][14] ;
  wire \sum_array_reg_n_0_[17][15] ;
  wire \sum_array_reg_n_0_[17][16] ;
  wire \sum_array_reg_n_0_[17][17] ;
  wire \sum_array_reg_n_0_[17][18] ;
  wire \sum_array_reg_n_0_[17][19] ;
  wire \sum_array_reg_n_0_[17][1] ;
  wire \sum_array_reg_n_0_[17][20] ;
  wire \sum_array_reg_n_0_[17][21] ;
  wire \sum_array_reg_n_0_[17][22] ;
  wire \sum_array_reg_n_0_[17][23] ;
  wire \sum_array_reg_n_0_[17][24] ;
  wire \sum_array_reg_n_0_[17][25] ;
  wire \sum_array_reg_n_0_[17][26] ;
  wire \sum_array_reg_n_0_[17][27] ;
  wire \sum_array_reg_n_0_[17][28] ;
  wire \sum_array_reg_n_0_[17][29] ;
  wire \sum_array_reg_n_0_[17][2] ;
  wire \sum_array_reg_n_0_[17][30] ;
  wire \sum_array_reg_n_0_[17][31] ;
  wire \sum_array_reg_n_0_[17][3] ;
  wire \sum_array_reg_n_0_[17][4] ;
  wire \sum_array_reg_n_0_[17][5] ;
  wire \sum_array_reg_n_0_[17][6] ;
  wire \sum_array_reg_n_0_[17][7] ;
  wire \sum_array_reg_n_0_[17][8] ;
  wire \sum_array_reg_n_0_[17][9] ;
  wire \sum_array_reg_n_0_[18][0] ;
  wire \sum_array_reg_n_0_[18][10] ;
  wire \sum_array_reg_n_0_[18][11] ;
  wire \sum_array_reg_n_0_[18][12] ;
  wire \sum_array_reg_n_0_[18][13] ;
  wire \sum_array_reg_n_0_[18][14] ;
  wire \sum_array_reg_n_0_[18][15] ;
  wire \sum_array_reg_n_0_[18][16] ;
  wire \sum_array_reg_n_0_[18][17] ;
  wire \sum_array_reg_n_0_[18][18] ;
  wire \sum_array_reg_n_0_[18][19] ;
  wire \sum_array_reg_n_0_[18][1] ;
  wire \sum_array_reg_n_0_[18][20] ;
  wire \sum_array_reg_n_0_[18][21] ;
  wire \sum_array_reg_n_0_[18][22] ;
  wire \sum_array_reg_n_0_[18][23] ;
  wire \sum_array_reg_n_0_[18][24] ;
  wire \sum_array_reg_n_0_[18][25] ;
  wire \sum_array_reg_n_0_[18][26] ;
  wire \sum_array_reg_n_0_[18][27] ;
  wire \sum_array_reg_n_0_[18][28] ;
  wire \sum_array_reg_n_0_[18][29] ;
  wire \sum_array_reg_n_0_[18][2] ;
  wire \sum_array_reg_n_0_[18][30] ;
  wire \sum_array_reg_n_0_[18][31] ;
  wire \sum_array_reg_n_0_[18][3] ;
  wire \sum_array_reg_n_0_[18][4] ;
  wire \sum_array_reg_n_0_[18][5] ;
  wire \sum_array_reg_n_0_[18][6] ;
  wire \sum_array_reg_n_0_[18][7] ;
  wire \sum_array_reg_n_0_[18][8] ;
  wire \sum_array_reg_n_0_[18][9] ;
  wire \sum_array_reg_n_0_[19][0] ;
  wire \sum_array_reg_n_0_[19][10] ;
  wire \sum_array_reg_n_0_[19][11] ;
  wire \sum_array_reg_n_0_[19][12] ;
  wire \sum_array_reg_n_0_[19][13] ;
  wire \sum_array_reg_n_0_[19][14] ;
  wire \sum_array_reg_n_0_[19][15] ;
  wire \sum_array_reg_n_0_[19][16] ;
  wire \sum_array_reg_n_0_[19][17] ;
  wire \sum_array_reg_n_0_[19][18] ;
  wire \sum_array_reg_n_0_[19][19] ;
  wire \sum_array_reg_n_0_[19][1] ;
  wire \sum_array_reg_n_0_[19][20] ;
  wire \sum_array_reg_n_0_[19][21] ;
  wire \sum_array_reg_n_0_[19][22] ;
  wire \sum_array_reg_n_0_[19][23] ;
  wire \sum_array_reg_n_0_[19][24] ;
  wire \sum_array_reg_n_0_[19][25] ;
  wire \sum_array_reg_n_0_[19][26] ;
  wire \sum_array_reg_n_0_[19][27] ;
  wire \sum_array_reg_n_0_[19][28] ;
  wire \sum_array_reg_n_0_[19][29] ;
  wire \sum_array_reg_n_0_[19][2] ;
  wire \sum_array_reg_n_0_[19][30] ;
  wire \sum_array_reg_n_0_[19][31] ;
  wire \sum_array_reg_n_0_[19][3] ;
  wire \sum_array_reg_n_0_[19][4] ;
  wire \sum_array_reg_n_0_[19][5] ;
  wire \sum_array_reg_n_0_[19][6] ;
  wire \sum_array_reg_n_0_[19][7] ;
  wire \sum_array_reg_n_0_[19][8] ;
  wire \sum_array_reg_n_0_[19][9] ;
  wire \sum_array_reg_n_0_[20][0] ;
  wire \sum_array_reg_n_0_[20][10] ;
  wire \sum_array_reg_n_0_[20][11] ;
  wire \sum_array_reg_n_0_[20][12] ;
  wire \sum_array_reg_n_0_[20][13] ;
  wire \sum_array_reg_n_0_[20][14] ;
  wire \sum_array_reg_n_0_[20][15] ;
  wire \sum_array_reg_n_0_[20][16] ;
  wire \sum_array_reg_n_0_[20][17] ;
  wire \sum_array_reg_n_0_[20][18] ;
  wire \sum_array_reg_n_0_[20][19] ;
  wire \sum_array_reg_n_0_[20][1] ;
  wire \sum_array_reg_n_0_[20][20] ;
  wire \sum_array_reg_n_0_[20][21] ;
  wire \sum_array_reg_n_0_[20][22] ;
  wire \sum_array_reg_n_0_[20][23] ;
  wire \sum_array_reg_n_0_[20][24] ;
  wire \sum_array_reg_n_0_[20][25] ;
  wire \sum_array_reg_n_0_[20][26] ;
  wire \sum_array_reg_n_0_[20][27] ;
  wire \sum_array_reg_n_0_[20][28] ;
  wire \sum_array_reg_n_0_[20][29] ;
  wire \sum_array_reg_n_0_[20][2] ;
  wire \sum_array_reg_n_0_[20][30] ;
  wire \sum_array_reg_n_0_[20][31] ;
  wire \sum_array_reg_n_0_[20][3] ;
  wire \sum_array_reg_n_0_[20][4] ;
  wire \sum_array_reg_n_0_[20][5] ;
  wire \sum_array_reg_n_0_[20][6] ;
  wire \sum_array_reg_n_0_[20][7] ;
  wire \sum_array_reg_n_0_[20][8] ;
  wire \sum_array_reg_n_0_[20][9] ;
  wire \sum_array_reg_n_0_[21][0] ;
  wire \sum_array_reg_n_0_[21][10] ;
  wire \sum_array_reg_n_0_[21][11] ;
  wire \sum_array_reg_n_0_[21][12] ;
  wire \sum_array_reg_n_0_[21][13] ;
  wire \sum_array_reg_n_0_[21][14] ;
  wire \sum_array_reg_n_0_[21][15] ;
  wire \sum_array_reg_n_0_[21][16] ;
  wire \sum_array_reg_n_0_[21][17] ;
  wire \sum_array_reg_n_0_[21][18] ;
  wire \sum_array_reg_n_0_[21][19] ;
  wire \sum_array_reg_n_0_[21][1] ;
  wire \sum_array_reg_n_0_[21][20] ;
  wire \sum_array_reg_n_0_[21][21] ;
  wire \sum_array_reg_n_0_[21][22] ;
  wire \sum_array_reg_n_0_[21][23] ;
  wire \sum_array_reg_n_0_[21][24] ;
  wire \sum_array_reg_n_0_[21][25] ;
  wire \sum_array_reg_n_0_[21][26] ;
  wire \sum_array_reg_n_0_[21][27] ;
  wire \sum_array_reg_n_0_[21][28] ;
  wire \sum_array_reg_n_0_[21][29] ;
  wire \sum_array_reg_n_0_[21][2] ;
  wire \sum_array_reg_n_0_[21][30] ;
  wire \sum_array_reg_n_0_[21][31] ;
  wire \sum_array_reg_n_0_[21][3] ;
  wire \sum_array_reg_n_0_[21][4] ;
  wire \sum_array_reg_n_0_[21][5] ;
  wire \sum_array_reg_n_0_[21][6] ;
  wire \sum_array_reg_n_0_[21][7] ;
  wire \sum_array_reg_n_0_[21][8] ;
  wire \sum_array_reg_n_0_[21][9] ;
  wire \sum_array_reg_n_0_[22][0] ;
  wire \sum_array_reg_n_0_[22][10] ;
  wire \sum_array_reg_n_0_[22][11] ;
  wire \sum_array_reg_n_0_[22][12] ;
  wire \sum_array_reg_n_0_[22][13] ;
  wire \sum_array_reg_n_0_[22][14] ;
  wire \sum_array_reg_n_0_[22][15] ;
  wire \sum_array_reg_n_0_[22][16] ;
  wire \sum_array_reg_n_0_[22][17] ;
  wire \sum_array_reg_n_0_[22][18] ;
  wire \sum_array_reg_n_0_[22][19] ;
  wire \sum_array_reg_n_0_[22][1] ;
  wire \sum_array_reg_n_0_[22][20] ;
  wire \sum_array_reg_n_0_[22][21] ;
  wire \sum_array_reg_n_0_[22][22] ;
  wire \sum_array_reg_n_0_[22][23] ;
  wire \sum_array_reg_n_0_[22][24] ;
  wire \sum_array_reg_n_0_[22][25] ;
  wire \sum_array_reg_n_0_[22][26] ;
  wire \sum_array_reg_n_0_[22][27] ;
  wire \sum_array_reg_n_0_[22][28] ;
  wire \sum_array_reg_n_0_[22][29] ;
  wire \sum_array_reg_n_0_[22][2] ;
  wire \sum_array_reg_n_0_[22][30] ;
  wire \sum_array_reg_n_0_[22][31] ;
  wire \sum_array_reg_n_0_[22][3] ;
  wire \sum_array_reg_n_0_[22][4] ;
  wire \sum_array_reg_n_0_[22][5] ;
  wire \sum_array_reg_n_0_[22][6] ;
  wire \sum_array_reg_n_0_[22][7] ;
  wire \sum_array_reg_n_0_[22][8] ;
  wire \sum_array_reg_n_0_[22][9] ;
  wire \sum_array_reg_n_0_[23][0] ;
  wire \sum_array_reg_n_0_[23][10] ;
  wire \sum_array_reg_n_0_[23][11] ;
  wire \sum_array_reg_n_0_[23][12] ;
  wire \sum_array_reg_n_0_[23][13] ;
  wire \sum_array_reg_n_0_[23][14] ;
  wire \sum_array_reg_n_0_[23][15] ;
  wire \sum_array_reg_n_0_[23][16] ;
  wire \sum_array_reg_n_0_[23][17] ;
  wire \sum_array_reg_n_0_[23][18] ;
  wire \sum_array_reg_n_0_[23][19] ;
  wire \sum_array_reg_n_0_[23][1] ;
  wire \sum_array_reg_n_0_[23][20] ;
  wire \sum_array_reg_n_0_[23][21] ;
  wire \sum_array_reg_n_0_[23][22] ;
  wire \sum_array_reg_n_0_[23][23] ;
  wire \sum_array_reg_n_0_[23][24] ;
  wire \sum_array_reg_n_0_[23][25] ;
  wire \sum_array_reg_n_0_[23][26] ;
  wire \sum_array_reg_n_0_[23][27] ;
  wire \sum_array_reg_n_0_[23][28] ;
  wire \sum_array_reg_n_0_[23][29] ;
  wire \sum_array_reg_n_0_[23][2] ;
  wire \sum_array_reg_n_0_[23][30] ;
  wire \sum_array_reg_n_0_[23][31] ;
  wire \sum_array_reg_n_0_[23][3] ;
  wire \sum_array_reg_n_0_[23][4] ;
  wire \sum_array_reg_n_0_[23][5] ;
  wire \sum_array_reg_n_0_[23][6] ;
  wire \sum_array_reg_n_0_[23][7] ;
  wire \sum_array_reg_n_0_[23][8] ;
  wire \sum_array_reg_n_0_[23][9] ;
  wire \sum_array_reg_n_0_[2][0] ;
  wire \sum_array_reg_n_0_[2][10] ;
  wire \sum_array_reg_n_0_[2][11] ;
  wire \sum_array_reg_n_0_[2][12] ;
  wire \sum_array_reg_n_0_[2][13] ;
  wire \sum_array_reg_n_0_[2][14] ;
  wire \sum_array_reg_n_0_[2][15] ;
  wire \sum_array_reg_n_0_[2][16] ;
  wire \sum_array_reg_n_0_[2][17] ;
  wire \sum_array_reg_n_0_[2][18] ;
  wire \sum_array_reg_n_0_[2][19] ;
  wire \sum_array_reg_n_0_[2][1] ;
  wire \sum_array_reg_n_0_[2][20] ;
  wire \sum_array_reg_n_0_[2][21] ;
  wire \sum_array_reg_n_0_[2][22] ;
  wire \sum_array_reg_n_0_[2][23] ;
  wire \sum_array_reg_n_0_[2][24] ;
  wire \sum_array_reg_n_0_[2][25] ;
  wire \sum_array_reg_n_0_[2][26] ;
  wire \sum_array_reg_n_0_[2][27] ;
  wire \sum_array_reg_n_0_[2][28] ;
  wire \sum_array_reg_n_0_[2][29] ;
  wire \sum_array_reg_n_0_[2][2] ;
  wire \sum_array_reg_n_0_[2][30] ;
  wire \sum_array_reg_n_0_[2][31] ;
  wire \sum_array_reg_n_0_[2][3] ;
  wire \sum_array_reg_n_0_[2][4] ;
  wire \sum_array_reg_n_0_[2][5] ;
  wire \sum_array_reg_n_0_[2][6] ;
  wire \sum_array_reg_n_0_[2][7] ;
  wire \sum_array_reg_n_0_[2][8] ;
  wire \sum_array_reg_n_0_[2][9] ;
  wire \sum_array_reg_n_0_[3][0] ;
  wire \sum_array_reg_n_0_[3][10] ;
  wire \sum_array_reg_n_0_[3][11] ;
  wire \sum_array_reg_n_0_[3][12] ;
  wire \sum_array_reg_n_0_[3][13] ;
  wire \sum_array_reg_n_0_[3][14] ;
  wire \sum_array_reg_n_0_[3][15] ;
  wire \sum_array_reg_n_0_[3][16] ;
  wire \sum_array_reg_n_0_[3][17] ;
  wire \sum_array_reg_n_0_[3][18] ;
  wire \sum_array_reg_n_0_[3][19] ;
  wire \sum_array_reg_n_0_[3][1] ;
  wire \sum_array_reg_n_0_[3][20] ;
  wire \sum_array_reg_n_0_[3][21] ;
  wire \sum_array_reg_n_0_[3][22] ;
  wire \sum_array_reg_n_0_[3][23] ;
  wire \sum_array_reg_n_0_[3][24] ;
  wire \sum_array_reg_n_0_[3][25] ;
  wire \sum_array_reg_n_0_[3][26] ;
  wire \sum_array_reg_n_0_[3][27] ;
  wire \sum_array_reg_n_0_[3][28] ;
  wire \sum_array_reg_n_0_[3][29] ;
  wire \sum_array_reg_n_0_[3][2] ;
  wire \sum_array_reg_n_0_[3][30] ;
  wire \sum_array_reg_n_0_[3][31] ;
  wire \sum_array_reg_n_0_[3][3] ;
  wire \sum_array_reg_n_0_[3][4] ;
  wire \sum_array_reg_n_0_[3][5] ;
  wire \sum_array_reg_n_0_[3][6] ;
  wire \sum_array_reg_n_0_[3][7] ;
  wire \sum_array_reg_n_0_[3][8] ;
  wire \sum_array_reg_n_0_[3][9] ;
  wire \sum_array_reg_n_0_[4][0] ;
  wire \sum_array_reg_n_0_[4][10] ;
  wire \sum_array_reg_n_0_[4][11] ;
  wire \sum_array_reg_n_0_[4][12] ;
  wire \sum_array_reg_n_0_[4][13] ;
  wire \sum_array_reg_n_0_[4][14] ;
  wire \sum_array_reg_n_0_[4][15] ;
  wire \sum_array_reg_n_0_[4][16] ;
  wire \sum_array_reg_n_0_[4][17] ;
  wire \sum_array_reg_n_0_[4][18] ;
  wire \sum_array_reg_n_0_[4][19] ;
  wire \sum_array_reg_n_0_[4][1] ;
  wire \sum_array_reg_n_0_[4][20] ;
  wire \sum_array_reg_n_0_[4][21] ;
  wire \sum_array_reg_n_0_[4][22] ;
  wire \sum_array_reg_n_0_[4][23] ;
  wire \sum_array_reg_n_0_[4][24] ;
  wire \sum_array_reg_n_0_[4][25] ;
  wire \sum_array_reg_n_0_[4][26] ;
  wire \sum_array_reg_n_0_[4][27] ;
  wire \sum_array_reg_n_0_[4][28] ;
  wire \sum_array_reg_n_0_[4][29] ;
  wire \sum_array_reg_n_0_[4][2] ;
  wire \sum_array_reg_n_0_[4][30] ;
  wire \sum_array_reg_n_0_[4][31] ;
  wire \sum_array_reg_n_0_[4][3] ;
  wire \sum_array_reg_n_0_[4][4] ;
  wire \sum_array_reg_n_0_[4][5] ;
  wire \sum_array_reg_n_0_[4][6] ;
  wire \sum_array_reg_n_0_[4][7] ;
  wire \sum_array_reg_n_0_[4][8] ;
  wire \sum_array_reg_n_0_[4][9] ;
  wire \sum_array_reg_n_0_[5][0] ;
  wire \sum_array_reg_n_0_[5][10] ;
  wire \sum_array_reg_n_0_[5][11] ;
  wire \sum_array_reg_n_0_[5][12] ;
  wire \sum_array_reg_n_0_[5][13] ;
  wire \sum_array_reg_n_0_[5][14] ;
  wire \sum_array_reg_n_0_[5][15] ;
  wire \sum_array_reg_n_0_[5][16] ;
  wire \sum_array_reg_n_0_[5][17] ;
  wire \sum_array_reg_n_0_[5][18] ;
  wire \sum_array_reg_n_0_[5][19] ;
  wire \sum_array_reg_n_0_[5][1] ;
  wire \sum_array_reg_n_0_[5][20] ;
  wire \sum_array_reg_n_0_[5][21] ;
  wire \sum_array_reg_n_0_[5][22] ;
  wire \sum_array_reg_n_0_[5][23] ;
  wire \sum_array_reg_n_0_[5][24] ;
  wire \sum_array_reg_n_0_[5][25] ;
  wire \sum_array_reg_n_0_[5][26] ;
  wire \sum_array_reg_n_0_[5][27] ;
  wire \sum_array_reg_n_0_[5][28] ;
  wire \sum_array_reg_n_0_[5][29] ;
  wire \sum_array_reg_n_0_[5][2] ;
  wire \sum_array_reg_n_0_[5][30] ;
  wire \sum_array_reg_n_0_[5][31] ;
  wire \sum_array_reg_n_0_[5][3] ;
  wire \sum_array_reg_n_0_[5][4] ;
  wire \sum_array_reg_n_0_[5][5] ;
  wire \sum_array_reg_n_0_[5][6] ;
  wire \sum_array_reg_n_0_[5][7] ;
  wire \sum_array_reg_n_0_[5][8] ;
  wire \sum_array_reg_n_0_[5][9] ;
  wire \sum_array_reg_n_0_[6][0] ;
  wire \sum_array_reg_n_0_[6][10] ;
  wire \sum_array_reg_n_0_[6][11] ;
  wire \sum_array_reg_n_0_[6][12] ;
  wire \sum_array_reg_n_0_[6][13] ;
  wire \sum_array_reg_n_0_[6][14] ;
  wire \sum_array_reg_n_0_[6][15] ;
  wire \sum_array_reg_n_0_[6][16] ;
  wire \sum_array_reg_n_0_[6][17] ;
  wire \sum_array_reg_n_0_[6][18] ;
  wire \sum_array_reg_n_0_[6][19] ;
  wire \sum_array_reg_n_0_[6][1] ;
  wire \sum_array_reg_n_0_[6][20] ;
  wire \sum_array_reg_n_0_[6][21] ;
  wire \sum_array_reg_n_0_[6][22] ;
  wire \sum_array_reg_n_0_[6][23] ;
  wire \sum_array_reg_n_0_[6][24] ;
  wire \sum_array_reg_n_0_[6][25] ;
  wire \sum_array_reg_n_0_[6][26] ;
  wire \sum_array_reg_n_0_[6][27] ;
  wire \sum_array_reg_n_0_[6][28] ;
  wire \sum_array_reg_n_0_[6][29] ;
  wire \sum_array_reg_n_0_[6][2] ;
  wire \sum_array_reg_n_0_[6][30] ;
  wire \sum_array_reg_n_0_[6][31] ;
  wire \sum_array_reg_n_0_[6][3] ;
  wire \sum_array_reg_n_0_[6][4] ;
  wire \sum_array_reg_n_0_[6][5] ;
  wire \sum_array_reg_n_0_[6][6] ;
  wire \sum_array_reg_n_0_[6][7] ;
  wire \sum_array_reg_n_0_[6][8] ;
  wire \sum_array_reg_n_0_[6][9] ;
  wire \sum_array_reg_n_0_[7][0] ;
  wire \sum_array_reg_n_0_[7][10] ;
  wire \sum_array_reg_n_0_[7][11] ;
  wire \sum_array_reg_n_0_[7][12] ;
  wire \sum_array_reg_n_0_[7][13] ;
  wire \sum_array_reg_n_0_[7][14] ;
  wire \sum_array_reg_n_0_[7][15] ;
  wire \sum_array_reg_n_0_[7][16] ;
  wire \sum_array_reg_n_0_[7][17] ;
  wire \sum_array_reg_n_0_[7][18] ;
  wire \sum_array_reg_n_0_[7][19] ;
  wire \sum_array_reg_n_0_[7][1] ;
  wire \sum_array_reg_n_0_[7][20] ;
  wire \sum_array_reg_n_0_[7][21] ;
  wire \sum_array_reg_n_0_[7][22] ;
  wire \sum_array_reg_n_0_[7][23] ;
  wire \sum_array_reg_n_0_[7][24] ;
  wire \sum_array_reg_n_0_[7][25] ;
  wire \sum_array_reg_n_0_[7][26] ;
  wire \sum_array_reg_n_0_[7][27] ;
  wire \sum_array_reg_n_0_[7][28] ;
  wire \sum_array_reg_n_0_[7][29] ;
  wire \sum_array_reg_n_0_[7][2] ;
  wire \sum_array_reg_n_0_[7][30] ;
  wire \sum_array_reg_n_0_[7][31] ;
  wire \sum_array_reg_n_0_[7][3] ;
  wire \sum_array_reg_n_0_[7][4] ;
  wire \sum_array_reg_n_0_[7][5] ;
  wire \sum_array_reg_n_0_[7][6] ;
  wire \sum_array_reg_n_0_[7][7] ;
  wire \sum_array_reg_n_0_[7][8] ;
  wire \sum_array_reg_n_0_[7][9] ;
  wire \sum_array_reg_n_0_[8][0] ;
  wire \sum_array_reg_n_0_[8][10] ;
  wire \sum_array_reg_n_0_[8][11] ;
  wire \sum_array_reg_n_0_[8][12] ;
  wire \sum_array_reg_n_0_[8][13] ;
  wire \sum_array_reg_n_0_[8][14] ;
  wire \sum_array_reg_n_0_[8][15] ;
  wire \sum_array_reg_n_0_[8][16] ;
  wire \sum_array_reg_n_0_[8][17] ;
  wire \sum_array_reg_n_0_[8][18] ;
  wire \sum_array_reg_n_0_[8][19] ;
  wire \sum_array_reg_n_0_[8][1] ;
  wire \sum_array_reg_n_0_[8][20] ;
  wire \sum_array_reg_n_0_[8][21] ;
  wire \sum_array_reg_n_0_[8][22] ;
  wire \sum_array_reg_n_0_[8][23] ;
  wire \sum_array_reg_n_0_[8][24] ;
  wire \sum_array_reg_n_0_[8][25] ;
  wire \sum_array_reg_n_0_[8][26] ;
  wire \sum_array_reg_n_0_[8][27] ;
  wire \sum_array_reg_n_0_[8][28] ;
  wire \sum_array_reg_n_0_[8][29] ;
  wire \sum_array_reg_n_0_[8][2] ;
  wire \sum_array_reg_n_0_[8][30] ;
  wire \sum_array_reg_n_0_[8][31] ;
  wire \sum_array_reg_n_0_[8][3] ;
  wire \sum_array_reg_n_0_[8][4] ;
  wire \sum_array_reg_n_0_[8][5] ;
  wire \sum_array_reg_n_0_[8][6] ;
  wire \sum_array_reg_n_0_[8][7] ;
  wire \sum_array_reg_n_0_[8][8] ;
  wire \sum_array_reg_n_0_[8][9] ;
  wire \sum_array_reg_n_0_[9][0] ;
  wire \sum_array_reg_n_0_[9][10] ;
  wire \sum_array_reg_n_0_[9][11] ;
  wire \sum_array_reg_n_0_[9][12] ;
  wire \sum_array_reg_n_0_[9][13] ;
  wire \sum_array_reg_n_0_[9][14] ;
  wire \sum_array_reg_n_0_[9][15] ;
  wire \sum_array_reg_n_0_[9][16] ;
  wire \sum_array_reg_n_0_[9][17] ;
  wire \sum_array_reg_n_0_[9][18] ;
  wire \sum_array_reg_n_0_[9][19] ;
  wire \sum_array_reg_n_0_[9][1] ;
  wire \sum_array_reg_n_0_[9][20] ;
  wire \sum_array_reg_n_0_[9][21] ;
  wire \sum_array_reg_n_0_[9][22] ;
  wire \sum_array_reg_n_0_[9][23] ;
  wire \sum_array_reg_n_0_[9][24] ;
  wire \sum_array_reg_n_0_[9][25] ;
  wire \sum_array_reg_n_0_[9][26] ;
  wire \sum_array_reg_n_0_[9][27] ;
  wire \sum_array_reg_n_0_[9][28] ;
  wire \sum_array_reg_n_0_[9][29] ;
  wire \sum_array_reg_n_0_[9][2] ;
  wire \sum_array_reg_n_0_[9][30] ;
  wire \sum_array_reg_n_0_[9][31] ;
  wire \sum_array_reg_n_0_[9][3] ;
  wire \sum_array_reg_n_0_[9][4] ;
  wire \sum_array_reg_n_0_[9][5] ;
  wire \sum_array_reg_n_0_[9][6] ;
  wire \sum_array_reg_n_0_[9][7] ;
  wire \sum_array_reg_n_0_[9][8] ;
  wire \sum_array_reg_n_0_[9][9] ;
  wire [4:0]sum_counter;
  wire \sum_counter[0]_rep_i_1_n_0 ;
  wire \sum_counter[1]_rep__0_i_1_n_0 ;
  wire \sum_counter[1]_rep_i_1_n_0 ;
  wire \sum_counter[4]_i_1__0_n_0 ;
  wire \sum_counter_reg[0]_rep_0 ;
  wire \sum_counter_reg[0]_rep_n_0 ;
  wire \sum_counter_reg[1]_rep__0_n_0 ;
  wire \sum_counter_reg[1]_rep_n_0 ;
  wire summing_complete_reg;
  wire valid_result_i_1_n_0;
  wire valid_result_i_2_n_0;

  LUT6 #(
    .INIT(64'hF4F4F4F4FFFFFFF4)) 
    \FSM_sequential_current_state[0]_i_1__1 
       (.I0(\FSM_sequential_current_state[1]_i_2__0_n_0 ),
        .I1(out),
        .I2(\FSM_sequential_current_state[0]_i_2__1_n_0 ),
        .I3(\FSM_sequential_current_state[0]_i_3__1_n_0 ),
        .I4(next_state0),
        .I5(\FSM_sequential_current_state[0]_i_4__0_n_0 ),
        .O(\FSM_sequential_current_state[0]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'hE0000000)) 
    \FSM_sequential_current_state[0]_i_2__1 
       (.I0(full),
        .I1(almost_full),
        .I2(current_state[1]),
        .I3(out),
        .I4(current_state[2]),
        .O(\FSM_sequential_current_state[0]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h0FFFF8F800F0F8F8)) 
    \FSM_sequential_current_state[0]_i_3__0 
       (.I0(\FSM_sequential_current_state[0]_i_4__1_n_0 ),
        .I1(start),
        .I2(\FSM_sequential_current_state_reg[1]_0 [0]),
        .I3(summing_complete_reg),
        .I4(\FSM_sequential_current_state_reg[1]_0 [1]),
        .I5(ila_smax_exp_exp_done),
        .O(\FSM_sequential_current_state_reg[0]_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \FSM_sequential_current_state[0]_i_3__1 
       (.I0(current_state[2]),
        .I1(current_state[1]),
        .O(\FSM_sequential_current_state[0]_i_3__1_n_0 ));
  LUT4 #(
    .INIT(16'hF0FE)) 
    \FSM_sequential_current_state[0]_i_4__0 
       (.I0(current_state[1]),
        .I1(current_state[2]),
        .I2(out),
        .I3(\ila_smax_exp_hold_counter[3] [3]),
        .O(\FSM_sequential_current_state[0]_i_4__0_n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \FSM_sequential_current_state[0]_i_4__1 
       (.I0(out),
        .I1(current_state[1]),
        .I2(current_state[2]),
        .I3(empty),
        .O(\FSM_sequential_current_state[0]_i_4__1_n_0 ));
  LUT6 #(
    .INIT(64'h2222222220222222)) 
    \FSM_sequential_current_state[1]_i_1__1 
       (.I0(\FSM_sequential_current_state[1]_i_2__0_n_0 ),
        .I1(\FSM_sequential_current_state[1]_i_3_n_0 ),
        .I2(out),
        .I3(\ila_smax_exp_hold_counter[3] [3]),
        .I4(current_state[2]),
        .I5(valid_result_i_2_n_0),
        .O(\FSM_sequential_current_state[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \FSM_sequential_current_state[1]_i_2__0 
       (.I0(Q[5]),
        .I1(Q[6]),
        .I2(Q[4]),
        .I3(\FSM_sequential_current_state[1]_i_4_n_0 ),
        .O(\FSM_sequential_current_state[1]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'h19191999)) 
    \FSM_sequential_current_state[1]_i_3 
       (.I0(current_state[1]),
        .I1(out),
        .I2(current_state[2]),
        .I3(almost_full),
        .I4(full),
        .O(\FSM_sequential_current_state[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \FSM_sequential_current_state[1]_i_4 
       (.I0(current_state[1]),
        .I1(current_state[2]),
        .I2(Q[7]),
        .I3(Q[3]),
        .I4(Q[1]),
        .I5(Q[2]),
        .O(\FSM_sequential_current_state[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFF00FF0F700F700)) 
    \FSM_sequential_current_state[2]_i_1__1 
       (.I0(\ila_smax_exp_hold_counter[3] [3]),
        .I1(\current_state[2]_i_4_n_0 ),
        .I2(out),
        .I3(current_state[2]),
        .I4(\current_state[2]_i_3_n_0 ),
        .I5(current_state[1]),
        .O(\FSM_sequential_current_state[2]_i_1__1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_sequential_current_state[2]_i_2 
       (.I0(m00_axi_aresetn),
        .O(\FSM_sequential_current_state[2]_i_2_n_0 ));
  (* KEEP = "yes" *) 
  FDCE \FSM_sequential_current_state_reg[0] 
       (.C(m00_axi_aclk),
        .CE(1'b1),
        .CLR(\data_reg_reg[28]_0 ),
        .D(\FSM_sequential_current_state[0]_i_1__1_n_0 ),
        .Q(out));
  (* KEEP = "yes" *) 
  FDCE \FSM_sequential_current_state_reg[1] 
       (.C(m00_axi_aclk),
        .CE(1'b1),
        .CLR(\data_reg_reg[28]_0 ),
        .D(\FSM_sequential_current_state[1]_i_1__1_n_0 ),
        .Q(current_state[1]));
  (* KEEP = "yes" *) 
  FDCE \FSM_sequential_current_state_reg[2] 
       (.C(m00_axi_aclk),
        .CE(1'b1),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(\FSM_sequential_current_state[2]_i_1__1_n_0 ),
        .Q(current_state[2]));
  LUT4 #(
    .INIT(16'hA808)) 
    \addend[0]_i_1 
       (.I0(current_state[2]),
        .I1(\sum_array_reg[1]_24 [0]),
        .I2(\augend[31]_i_4_n_0 ),
        .I3(ila_smax_exp_sum[0]),
        .O(addend[0]));
  LUT4 #(
    .INIT(16'hA808)) 
    \addend[10]_i_1 
       (.I0(current_state[2]),
        .I1(\sum_array_reg[1]_24 [10]),
        .I2(\augend[31]_i_4_n_0 ),
        .I3(ila_smax_exp_sum[10]),
        .O(addend[10]));
  LUT4 #(
    .INIT(16'hA808)) 
    \addend[11]_i_1 
       (.I0(current_state[2]),
        .I1(\sum_array_reg[1]_24 [11]),
        .I2(\augend[31]_i_4_n_0 ),
        .I3(ila_smax_exp_sum[11]),
        .O(addend[11]));
  LUT4 #(
    .INIT(16'hA808)) 
    \addend[12]_i_1 
       (.I0(current_state[2]),
        .I1(\sum_array_reg[1]_24 [12]),
        .I2(\augend[31]_i_4_n_0 ),
        .I3(ila_smax_exp_sum[12]),
        .O(addend[12]));
  LUT4 #(
    .INIT(16'hA808)) 
    \addend[13]_i_1 
       (.I0(current_state[2]),
        .I1(\sum_array_reg[1]_24 [13]),
        .I2(\augend[31]_i_4_n_0 ),
        .I3(ila_smax_exp_sum[13]),
        .O(addend[13]));
  LUT4 #(
    .INIT(16'hA808)) 
    \addend[14]_i_1 
       (.I0(current_state[2]),
        .I1(\sum_array_reg[1]_24 [14]),
        .I2(\augend[31]_i_4_n_0 ),
        .I3(ila_smax_exp_sum[14]),
        .O(addend[14]));
  LUT4 #(
    .INIT(16'hA808)) 
    \addend[15]_i_1 
       (.I0(current_state[2]),
        .I1(\sum_array_reg[1]_24 [15]),
        .I2(\augend[31]_i_4_n_0 ),
        .I3(ila_smax_exp_sum[15]),
        .O(addend[15]));
  LUT4 #(
    .INIT(16'hA808)) 
    \addend[16]_i_1 
       (.I0(current_state[2]),
        .I1(\sum_array_reg[1]_24 [16]),
        .I2(\augend[31]_i_4_n_0 ),
        .I3(ila_smax_exp_sum[16]),
        .O(addend[16]));
  LUT4 #(
    .INIT(16'hA808)) 
    \addend[17]_i_1 
       (.I0(current_state[2]),
        .I1(\sum_array_reg[1]_24 [17]),
        .I2(\augend[31]_i_4_n_0 ),
        .I3(ila_smax_exp_sum[17]),
        .O(addend[17]));
  LUT4 #(
    .INIT(16'hA808)) 
    \addend[18]_i_1 
       (.I0(current_state[2]),
        .I1(\sum_array_reg[1]_24 [18]),
        .I2(\augend[31]_i_4_n_0 ),
        .I3(ila_smax_exp_sum[18]),
        .O(addend[18]));
  LUT4 #(
    .INIT(16'hA808)) 
    \addend[19]_i_1 
       (.I0(current_state[2]),
        .I1(\sum_array_reg[1]_24 [19]),
        .I2(\augend[31]_i_4_n_0 ),
        .I3(ila_smax_exp_sum[19]),
        .O(addend[19]));
  LUT4 #(
    .INIT(16'hA808)) 
    \addend[1]_i_1 
       (.I0(current_state[2]),
        .I1(\sum_array_reg[1]_24 [1]),
        .I2(\augend[31]_i_4_n_0 ),
        .I3(ila_smax_exp_sum[1]),
        .O(addend[1]));
  LUT4 #(
    .INIT(16'hA808)) 
    \addend[20]_i_1 
       (.I0(current_state[2]),
        .I1(\sum_array_reg[1]_24 [20]),
        .I2(\augend[31]_i_4_n_0 ),
        .I3(ila_smax_exp_sum[20]),
        .O(addend[20]));
  LUT4 #(
    .INIT(16'hA808)) 
    \addend[21]_i_1 
       (.I0(current_state[2]),
        .I1(\sum_array_reg[1]_24 [21]),
        .I2(\augend[31]_i_4_n_0 ),
        .I3(ila_smax_exp_sum[21]),
        .O(addend[21]));
  LUT4 #(
    .INIT(16'hA808)) 
    \addend[22]_i_1 
       (.I0(current_state[2]),
        .I1(\sum_array_reg[1]_24 [22]),
        .I2(\augend[31]_i_4_n_0 ),
        .I3(ila_smax_exp_sum[22]),
        .O(addend[22]));
  LUT4 #(
    .INIT(16'hA808)) 
    \addend[23]_i_1 
       (.I0(current_state[2]),
        .I1(\sum_array_reg[1]_24 [23]),
        .I2(\augend[31]_i_4_n_0 ),
        .I3(ila_smax_exp_sum[23]),
        .O(addend[23]));
  LUT4 #(
    .INIT(16'hA808)) 
    \addend[24]_i_1 
       (.I0(current_state[2]),
        .I1(\sum_array_reg[1]_24 [24]),
        .I2(\augend[31]_i_4_n_0 ),
        .I3(ila_smax_exp_sum[24]),
        .O(addend[24]));
  LUT4 #(
    .INIT(16'hA808)) 
    \addend[25]_i_1 
       (.I0(current_state[2]),
        .I1(\sum_array_reg[1]_24 [25]),
        .I2(\augend[31]_i_4_n_0 ),
        .I3(ila_smax_exp_sum[25]),
        .O(addend[25]));
  LUT4 #(
    .INIT(16'hA808)) 
    \addend[26]_i_1 
       (.I0(current_state[2]),
        .I1(\sum_array_reg[1]_24 [26]),
        .I2(\augend[31]_i_4_n_0 ),
        .I3(ila_smax_exp_sum[26]),
        .O(addend[26]));
  LUT4 #(
    .INIT(16'hA808)) 
    \addend[27]_i_1 
       (.I0(current_state[2]),
        .I1(\sum_array_reg[1]_24 [27]),
        .I2(\augend[31]_i_4_n_0 ),
        .I3(ila_smax_exp_sum[27]),
        .O(addend[27]));
  LUT4 #(
    .INIT(16'hA808)) 
    \addend[28]_i_1 
       (.I0(current_state[2]),
        .I1(\sum_array_reg[1]_24 [28]),
        .I2(\augend[31]_i_4_n_0 ),
        .I3(ila_smax_exp_sum[28]),
        .O(addend[28]));
  LUT4 #(
    .INIT(16'hA808)) 
    \addend[29]_i_1 
       (.I0(current_state[2]),
        .I1(\sum_array_reg[1]_24 [29]),
        .I2(\augend[31]_i_4_n_0 ),
        .I3(ila_smax_exp_sum[29]),
        .O(addend[29]));
  LUT4 #(
    .INIT(16'hA808)) 
    \addend[2]_i_1 
       (.I0(current_state[2]),
        .I1(\sum_array_reg[1]_24 [2]),
        .I2(\augend[31]_i_4_n_0 ),
        .I3(ila_smax_exp_sum[2]),
        .O(addend[2]));
  LUT4 #(
    .INIT(16'hA808)) 
    \addend[30]_i_1 
       (.I0(current_state[2]),
        .I1(\sum_array_reg[1]_24 [30]),
        .I2(\augend[31]_i_4_n_0 ),
        .I3(ila_smax_exp_sum[30]),
        .O(addend[30]));
  LUT4 #(
    .INIT(16'hA808)) 
    \addend[31]_i_1 
       (.I0(current_state[2]),
        .I1(\sum_array_reg[1]_24 [31]),
        .I2(\augend[31]_i_4_n_0 ),
        .I3(ila_smax_exp_sum[31]),
        .O(addend[31]));
  LUT4 #(
    .INIT(16'hA808)) 
    \addend[3]_i_1 
       (.I0(current_state[2]),
        .I1(\sum_array_reg[1]_24 [3]),
        .I2(\augend[31]_i_4_n_0 ),
        .I3(ila_smax_exp_sum[3]),
        .O(addend[3]));
  LUT4 #(
    .INIT(16'hA808)) 
    \addend[4]_i_1 
       (.I0(current_state[2]),
        .I1(\sum_array_reg[1]_24 [4]),
        .I2(\augend[31]_i_4_n_0 ),
        .I3(ila_smax_exp_sum[4]),
        .O(addend[4]));
  LUT4 #(
    .INIT(16'hA808)) 
    \addend[5]_i_1 
       (.I0(current_state[2]),
        .I1(\sum_array_reg[1]_24 [5]),
        .I2(\augend[31]_i_4_n_0 ),
        .I3(ila_smax_exp_sum[5]),
        .O(addend[5]));
  LUT4 #(
    .INIT(16'hA808)) 
    \addend[6]_i_1 
       (.I0(current_state[2]),
        .I1(\sum_array_reg[1]_24 [6]),
        .I2(\augend[31]_i_4_n_0 ),
        .I3(ila_smax_exp_sum[6]),
        .O(addend[6]));
  LUT4 #(
    .INIT(16'hA808)) 
    \addend[7]_i_1 
       (.I0(current_state[2]),
        .I1(\sum_array_reg[1]_24 [7]),
        .I2(\augend[31]_i_4_n_0 ),
        .I3(ila_smax_exp_sum[7]),
        .O(addend[7]));
  LUT4 #(
    .INIT(16'hA808)) 
    \addend[8]_i_1 
       (.I0(current_state[2]),
        .I1(\sum_array_reg[1]_24 [8]),
        .I2(\augend[31]_i_4_n_0 ),
        .I3(ila_smax_exp_sum[8]),
        .O(addend[8]));
  LUT4 #(
    .INIT(16'hA808)) 
    \addend[9]_i_1 
       (.I0(current_state[2]),
        .I1(\sum_array_reg[1]_24 [9]),
        .I2(\augend[31]_i_4_n_0 ),
        .I3(ila_smax_exp_sum[9]),
        .O(addend[9]));
  FDCE \addend_reg[0] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(addend[0]),
        .Q(ila_smax_exp_addend[0]));
  FDCE \addend_reg[10] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(addend[10]),
        .Q(ila_smax_exp_addend[10]));
  FDCE \addend_reg[11] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(addend[11]),
        .Q(ila_smax_exp_addend[11]));
  FDCE \addend_reg[12] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(addend[12]),
        .Q(ila_smax_exp_addend[12]));
  FDCE \addend_reg[13] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(addend[13]),
        .Q(ila_smax_exp_addend[13]));
  FDCE \addend_reg[14] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(addend[14]),
        .Q(ila_smax_exp_addend[14]));
  FDCE \addend_reg[15] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(addend[15]),
        .Q(ila_smax_exp_addend[15]));
  FDCE \addend_reg[16] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(addend[16]),
        .Q(ila_smax_exp_addend[16]));
  FDCE \addend_reg[17] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(addend[17]),
        .Q(ila_smax_exp_addend[17]));
  FDCE \addend_reg[18] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(addend[18]),
        .Q(ila_smax_exp_addend[18]));
  FDCE \addend_reg[19] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(addend[19]),
        .Q(ila_smax_exp_addend[19]));
  FDCE \addend_reg[1] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(addend[1]),
        .Q(ila_smax_exp_addend[1]));
  FDCE \addend_reg[20] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(addend[20]),
        .Q(ila_smax_exp_addend[20]));
  FDCE \addend_reg[21] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(addend[21]),
        .Q(ila_smax_exp_addend[21]));
  FDCE \addend_reg[22] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(addend[22]),
        .Q(ila_smax_exp_addend[22]));
  FDCE \addend_reg[23] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(addend[23]),
        .Q(ila_smax_exp_addend[23]));
  FDCE \addend_reg[24] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(addend[24]),
        .Q(ila_smax_exp_addend[24]));
  FDCE \addend_reg[25] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(addend[25]),
        .Q(ila_smax_exp_addend[25]));
  FDCE \addend_reg[26] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(addend[26]),
        .Q(ila_smax_exp_addend[26]));
  FDCE \addend_reg[27] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(addend[27]),
        .Q(ila_smax_exp_addend[27]));
  FDCE \addend_reg[28] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(addend[28]),
        .Q(ila_smax_exp_addend[28]));
  FDCE \addend_reg[29] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(addend[29]),
        .Q(ila_smax_exp_addend[29]));
  FDCE \addend_reg[2] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(addend[2]),
        .Q(ila_smax_exp_addend[2]));
  FDCE \addend_reg[30] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(addend[30]),
        .Q(ila_smax_exp_addend[30]));
  FDCE \addend_reg[31] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(addend[31]),
        .Q(ila_smax_exp_addend[31]));
  FDCE \addend_reg[3] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(addend[3]),
        .Q(ila_smax_exp_addend[3]));
  FDCE \addend_reg[4] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(addend[4]),
        .Q(ila_smax_exp_addend[4]));
  FDCE \addend_reg[5] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(addend[5]),
        .Q(ila_smax_exp_addend[5]));
  FDCE \addend_reg[6] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(addend[6]),
        .Q(ila_smax_exp_addend[6]));
  FDCE \addend_reg[7] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(addend[7]),
        .Q(ila_smax_exp_addend[7]));
  FDCE \addend_reg[8] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(addend[8]),
        .Q(ila_smax_exp_addend[8]));
  FDCE \addend_reg[9] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(addend[9]),
        .Q(ila_smax_exp_addend[9]));
  final_accelerator_Softmax_Layer_32bit_0_0_softmax_adder_32bit_HD89 adder
       (.a(ila_smax_exp_augend),
        .b(ila_smax_exp_addend),
        .clk(m00_axi_aclk),
        .result(ila_smax_exp_sum));
  LUT6 #(
    .INIT(64'hAAAAA8080000A808)) 
    \augend[0]_i_1 
       (.I0(current_state[2]),
        .I1(\augend_reg[0]_i_2_n_0 ),
        .I2(\ila_smax_exp_sum_counter[4] [3]),
        .I3(\augend_reg[0]_i_3_n_0 ),
        .I4(\ila_smax_exp_sum_counter[4] [4]),
        .I5(\augend_reg[0]_i_4_n_0 ),
        .O(augend[0]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[0]_i_10 
       (.I0(\sum_array_reg_n_0_[23][0] ),
        .I1(\sum_array_reg_n_0_[22][0] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[21][0] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[20][0] ),
        .O(\augend[0]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[0]_i_5 
       (.I0(\sum_array_reg_n_0_[3][0] ),
        .I1(\sum_array_reg_n_0_[2][0] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg[1]_24 [0]),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg[0]_25 [0]),
        .O(\augend[0]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[0]_i_6 
       (.I0(\sum_array_reg_n_0_[7][0] ),
        .I1(\sum_array_reg_n_0_[6][0] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[5][0] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[4][0] ),
        .O(\augend[0]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[0]_i_7 
       (.I0(\sum_array_reg_n_0_[11][0] ),
        .I1(\sum_array_reg_n_0_[10][0] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[9][0] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[8][0] ),
        .O(\augend[0]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[0]_i_8 
       (.I0(\sum_array_reg_n_0_[15][0] ),
        .I1(\sum_array_reg_n_0_[14][0] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[13][0] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[12][0] ),
        .O(\augend[0]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[0]_i_9 
       (.I0(\sum_array_reg_n_0_[19][0] ),
        .I1(\sum_array_reg_n_0_[18][0] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[17][0] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[16][0] ),
        .O(\augend[0]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAA8080000A808)) 
    \augend[10]_i_1 
       (.I0(current_state[2]),
        .I1(\augend_reg[10]_i_2_n_0 ),
        .I2(\ila_smax_exp_sum_counter[4] [3]),
        .I3(\augend_reg[10]_i_3_n_0 ),
        .I4(\ila_smax_exp_sum_counter[4] [4]),
        .I5(\augend_reg[10]_i_4_n_0 ),
        .O(augend[10]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[10]_i_10 
       (.I0(\sum_array_reg_n_0_[23][10] ),
        .I1(\sum_array_reg_n_0_[22][10] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[21][10] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[20][10] ),
        .O(\augend[10]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[10]_i_5 
       (.I0(\sum_array_reg_n_0_[3][10] ),
        .I1(\sum_array_reg_n_0_[2][10] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg[1]_24 [10]),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg[0]_25 [10]),
        .O(\augend[10]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[10]_i_6 
       (.I0(\sum_array_reg_n_0_[7][10] ),
        .I1(\sum_array_reg_n_0_[6][10] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[5][10] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[4][10] ),
        .O(\augend[10]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[10]_i_7 
       (.I0(\sum_array_reg_n_0_[11][10] ),
        .I1(\sum_array_reg_n_0_[10][10] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[9][10] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[8][10] ),
        .O(\augend[10]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[10]_i_8 
       (.I0(\sum_array_reg_n_0_[15][10] ),
        .I1(\sum_array_reg_n_0_[14][10] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[13][10] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[12][10] ),
        .O(\augend[10]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[10]_i_9 
       (.I0(\sum_array_reg_n_0_[19][10] ),
        .I1(\sum_array_reg_n_0_[18][10] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[17][10] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[16][10] ),
        .O(\augend[10]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAA8080000A808)) 
    \augend[11]_i_1 
       (.I0(current_state[2]),
        .I1(\augend_reg[11]_i_2_n_0 ),
        .I2(\ila_smax_exp_sum_counter[4] [3]),
        .I3(\augend_reg[11]_i_3_n_0 ),
        .I4(\ila_smax_exp_sum_counter[4] [4]),
        .I5(\augend_reg[11]_i_4_n_0 ),
        .O(augend[11]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[11]_i_10 
       (.I0(\sum_array_reg_n_0_[23][11] ),
        .I1(\sum_array_reg_n_0_[22][11] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[21][11] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[20][11] ),
        .O(\augend[11]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[11]_i_5 
       (.I0(\sum_array_reg_n_0_[3][11] ),
        .I1(\sum_array_reg_n_0_[2][11] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg[1]_24 [11]),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg[0]_25 [11]),
        .O(\augend[11]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[11]_i_6 
       (.I0(\sum_array_reg_n_0_[7][11] ),
        .I1(\sum_array_reg_n_0_[6][11] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[5][11] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[4][11] ),
        .O(\augend[11]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[11]_i_7 
       (.I0(\sum_array_reg_n_0_[11][11] ),
        .I1(\sum_array_reg_n_0_[10][11] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[9][11] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[8][11] ),
        .O(\augend[11]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[11]_i_8 
       (.I0(\sum_array_reg_n_0_[15][11] ),
        .I1(\sum_array_reg_n_0_[14][11] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[13][11] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[12][11] ),
        .O(\augend[11]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[11]_i_9 
       (.I0(\sum_array_reg_n_0_[19][11] ),
        .I1(\sum_array_reg_n_0_[18][11] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[17][11] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[16][11] ),
        .O(\augend[11]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAA8080000A808)) 
    \augend[12]_i_1 
       (.I0(current_state[2]),
        .I1(\augend_reg[12]_i_2_n_0 ),
        .I2(\ila_smax_exp_sum_counter[4] [3]),
        .I3(\augend_reg[12]_i_3_n_0 ),
        .I4(\ila_smax_exp_sum_counter[4] [4]),
        .I5(\augend_reg[12]_i_4_n_0 ),
        .O(augend[12]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[12]_i_10 
       (.I0(\sum_array_reg_n_0_[23][12] ),
        .I1(\sum_array_reg_n_0_[22][12] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[21][12] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[20][12] ),
        .O(\augend[12]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[12]_i_5 
       (.I0(\sum_array_reg_n_0_[3][12] ),
        .I1(\sum_array_reg_n_0_[2][12] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg[1]_24 [12]),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg[0]_25 [12]),
        .O(\augend[12]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[12]_i_6 
       (.I0(\sum_array_reg_n_0_[7][12] ),
        .I1(\sum_array_reg_n_0_[6][12] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[5][12] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[4][12] ),
        .O(\augend[12]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[12]_i_7 
       (.I0(\sum_array_reg_n_0_[11][12] ),
        .I1(\sum_array_reg_n_0_[10][12] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[9][12] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[8][12] ),
        .O(\augend[12]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[12]_i_8 
       (.I0(\sum_array_reg_n_0_[15][12] ),
        .I1(\sum_array_reg_n_0_[14][12] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[13][12] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[12][12] ),
        .O(\augend[12]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[12]_i_9 
       (.I0(\sum_array_reg_n_0_[19][12] ),
        .I1(\sum_array_reg_n_0_[18][12] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[17][12] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[16][12] ),
        .O(\augend[12]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAA8080000A808)) 
    \augend[13]_i_1 
       (.I0(current_state[2]),
        .I1(\augend_reg[13]_i_2_n_0 ),
        .I2(\ila_smax_exp_sum_counter[4] [3]),
        .I3(\augend_reg[13]_i_3_n_0 ),
        .I4(\ila_smax_exp_sum_counter[4] [4]),
        .I5(\augend_reg[13]_i_4_n_0 ),
        .O(augend[13]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[13]_i_10 
       (.I0(\sum_array_reg_n_0_[23][13] ),
        .I1(\sum_array_reg_n_0_[22][13] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[21][13] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[20][13] ),
        .O(\augend[13]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[13]_i_5 
       (.I0(\sum_array_reg_n_0_[3][13] ),
        .I1(\sum_array_reg_n_0_[2][13] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg[1]_24 [13]),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg[0]_25 [13]),
        .O(\augend[13]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[13]_i_6 
       (.I0(\sum_array_reg_n_0_[7][13] ),
        .I1(\sum_array_reg_n_0_[6][13] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[5][13] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[4][13] ),
        .O(\augend[13]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[13]_i_7 
       (.I0(\sum_array_reg_n_0_[11][13] ),
        .I1(\sum_array_reg_n_0_[10][13] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[9][13] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[8][13] ),
        .O(\augend[13]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[13]_i_8 
       (.I0(\sum_array_reg_n_0_[15][13] ),
        .I1(\sum_array_reg_n_0_[14][13] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[13][13] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[12][13] ),
        .O(\augend[13]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[13]_i_9 
       (.I0(\sum_array_reg_n_0_[19][13] ),
        .I1(\sum_array_reg_n_0_[18][13] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[17][13] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[16][13] ),
        .O(\augend[13]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAA8080000A808)) 
    \augend[14]_i_1 
       (.I0(current_state[2]),
        .I1(\augend_reg[14]_i_2_n_0 ),
        .I2(\ila_smax_exp_sum_counter[4] [3]),
        .I3(\augend_reg[14]_i_3_n_0 ),
        .I4(\ila_smax_exp_sum_counter[4] [4]),
        .I5(\augend_reg[14]_i_4_n_0 ),
        .O(augend[14]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[14]_i_10 
       (.I0(\sum_array_reg_n_0_[23][14] ),
        .I1(\sum_array_reg_n_0_[22][14] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[21][14] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[20][14] ),
        .O(\augend[14]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[14]_i_5 
       (.I0(\sum_array_reg_n_0_[3][14] ),
        .I1(\sum_array_reg_n_0_[2][14] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg[1]_24 [14]),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg[0]_25 [14]),
        .O(\augend[14]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[14]_i_6 
       (.I0(\sum_array_reg_n_0_[7][14] ),
        .I1(\sum_array_reg_n_0_[6][14] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[5][14] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[4][14] ),
        .O(\augend[14]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[14]_i_7 
       (.I0(\sum_array_reg_n_0_[11][14] ),
        .I1(\sum_array_reg_n_0_[10][14] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[9][14] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[8][14] ),
        .O(\augend[14]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[14]_i_8 
       (.I0(\sum_array_reg_n_0_[15][14] ),
        .I1(\sum_array_reg_n_0_[14][14] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[13][14] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[12][14] ),
        .O(\augend[14]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[14]_i_9 
       (.I0(\sum_array_reg_n_0_[19][14] ),
        .I1(\sum_array_reg_n_0_[18][14] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[17][14] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[16][14] ),
        .O(\augend[14]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAA8080000A808)) 
    \augend[15]_i_1 
       (.I0(current_state[2]),
        .I1(\augend_reg[15]_i_2_n_0 ),
        .I2(\ila_smax_exp_sum_counter[4] [3]),
        .I3(\augend_reg[15]_i_3_n_0 ),
        .I4(\ila_smax_exp_sum_counter[4] [4]),
        .I5(\augend_reg[15]_i_4_n_0 ),
        .O(augend[15]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[15]_i_10 
       (.I0(\sum_array_reg_n_0_[23][15] ),
        .I1(\sum_array_reg_n_0_[22][15] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[21][15] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[20][15] ),
        .O(\augend[15]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[15]_i_5 
       (.I0(\sum_array_reg_n_0_[3][15] ),
        .I1(\sum_array_reg_n_0_[2][15] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg[1]_24 [15]),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg[0]_25 [15]),
        .O(\augend[15]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[15]_i_6 
       (.I0(\sum_array_reg_n_0_[7][15] ),
        .I1(\sum_array_reg_n_0_[6][15] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[5][15] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[4][15] ),
        .O(\augend[15]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[15]_i_7 
       (.I0(\sum_array_reg_n_0_[11][15] ),
        .I1(\sum_array_reg_n_0_[10][15] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[9][15] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[8][15] ),
        .O(\augend[15]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[15]_i_8 
       (.I0(\sum_array_reg_n_0_[15][15] ),
        .I1(\sum_array_reg_n_0_[14][15] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[13][15] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[12][15] ),
        .O(\augend[15]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[15]_i_9 
       (.I0(\sum_array_reg_n_0_[19][15] ),
        .I1(\sum_array_reg_n_0_[18][15] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[17][15] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[16][15] ),
        .O(\augend[15]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAA8080000A808)) 
    \augend[16]_i_1 
       (.I0(current_state[2]),
        .I1(\augend_reg[16]_i_2_n_0 ),
        .I2(\ila_smax_exp_sum_counter[4] [3]),
        .I3(\augend_reg[16]_i_3_n_0 ),
        .I4(\ila_smax_exp_sum_counter[4] [4]),
        .I5(\augend_reg[16]_i_4_n_0 ),
        .O(augend[16]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[16]_i_10 
       (.I0(\sum_array_reg_n_0_[23][16] ),
        .I1(\sum_array_reg_n_0_[22][16] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[21][16] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[20][16] ),
        .O(\augend[16]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[16]_i_5 
       (.I0(\sum_array_reg_n_0_[3][16] ),
        .I1(\sum_array_reg_n_0_[2][16] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg[1]_24 [16]),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg[0]_25 [16]),
        .O(\augend[16]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[16]_i_6 
       (.I0(\sum_array_reg_n_0_[7][16] ),
        .I1(\sum_array_reg_n_0_[6][16] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[5][16] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[4][16] ),
        .O(\augend[16]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[16]_i_7 
       (.I0(\sum_array_reg_n_0_[11][16] ),
        .I1(\sum_array_reg_n_0_[10][16] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[9][16] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[8][16] ),
        .O(\augend[16]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[16]_i_8 
       (.I0(\sum_array_reg_n_0_[15][16] ),
        .I1(\sum_array_reg_n_0_[14][16] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[13][16] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[12][16] ),
        .O(\augend[16]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[16]_i_9 
       (.I0(\sum_array_reg_n_0_[19][16] ),
        .I1(\sum_array_reg_n_0_[18][16] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[17][16] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[16][16] ),
        .O(\augend[16]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAA8080000A808)) 
    \augend[17]_i_1 
       (.I0(current_state[2]),
        .I1(\augend_reg[17]_i_2_n_0 ),
        .I2(\ila_smax_exp_sum_counter[4] [3]),
        .I3(\augend_reg[17]_i_3_n_0 ),
        .I4(\ila_smax_exp_sum_counter[4] [4]),
        .I5(\augend_reg[17]_i_4_n_0 ),
        .O(augend[17]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[17]_i_10 
       (.I0(\sum_array_reg_n_0_[23][17] ),
        .I1(\sum_array_reg_n_0_[22][17] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[21][17] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[20][17] ),
        .O(\augend[17]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[17]_i_5 
       (.I0(\sum_array_reg_n_0_[3][17] ),
        .I1(\sum_array_reg_n_0_[2][17] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg[1]_24 [17]),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg[0]_25 [17]),
        .O(\augend[17]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[17]_i_6 
       (.I0(\sum_array_reg_n_0_[7][17] ),
        .I1(\sum_array_reg_n_0_[6][17] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[5][17] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[4][17] ),
        .O(\augend[17]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[17]_i_7 
       (.I0(\sum_array_reg_n_0_[11][17] ),
        .I1(\sum_array_reg_n_0_[10][17] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[9][17] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[8][17] ),
        .O(\augend[17]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[17]_i_8 
       (.I0(\sum_array_reg_n_0_[15][17] ),
        .I1(\sum_array_reg_n_0_[14][17] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[13][17] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[12][17] ),
        .O(\augend[17]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[17]_i_9 
       (.I0(\sum_array_reg_n_0_[19][17] ),
        .I1(\sum_array_reg_n_0_[18][17] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[17][17] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[16][17] ),
        .O(\augend[17]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAA8080000A808)) 
    \augend[18]_i_1 
       (.I0(current_state[2]),
        .I1(\augend_reg[18]_i_2_n_0 ),
        .I2(\ila_smax_exp_sum_counter[4] [3]),
        .I3(\augend_reg[18]_i_3_n_0 ),
        .I4(\ila_smax_exp_sum_counter[4] [4]),
        .I5(\augend_reg[18]_i_4_n_0 ),
        .O(augend[18]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[18]_i_10 
       (.I0(\sum_array_reg_n_0_[23][18] ),
        .I1(\sum_array_reg_n_0_[22][18] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[21][18] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[20][18] ),
        .O(\augend[18]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[18]_i_5 
       (.I0(\sum_array_reg_n_0_[3][18] ),
        .I1(\sum_array_reg_n_0_[2][18] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg[1]_24 [18]),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg[0]_25 [18]),
        .O(\augend[18]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[18]_i_6 
       (.I0(\sum_array_reg_n_0_[7][18] ),
        .I1(\sum_array_reg_n_0_[6][18] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[5][18] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[4][18] ),
        .O(\augend[18]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[18]_i_7 
       (.I0(\sum_array_reg_n_0_[11][18] ),
        .I1(\sum_array_reg_n_0_[10][18] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[9][18] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[8][18] ),
        .O(\augend[18]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[18]_i_8 
       (.I0(\sum_array_reg_n_0_[15][18] ),
        .I1(\sum_array_reg_n_0_[14][18] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[13][18] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[12][18] ),
        .O(\augend[18]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[18]_i_9 
       (.I0(\sum_array_reg_n_0_[19][18] ),
        .I1(\sum_array_reg_n_0_[18][18] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[17][18] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[16][18] ),
        .O(\augend[18]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAA8080000A808)) 
    \augend[19]_i_1 
       (.I0(current_state[2]),
        .I1(\augend_reg[19]_i_2_n_0 ),
        .I2(\ila_smax_exp_sum_counter[4] [3]),
        .I3(\augend_reg[19]_i_3_n_0 ),
        .I4(\ila_smax_exp_sum_counter[4] [4]),
        .I5(\augend_reg[19]_i_4_n_0 ),
        .O(augend[19]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[19]_i_10 
       (.I0(\sum_array_reg_n_0_[23][19] ),
        .I1(\sum_array_reg_n_0_[22][19] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[21][19] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[20][19] ),
        .O(\augend[19]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[19]_i_5 
       (.I0(\sum_array_reg_n_0_[3][19] ),
        .I1(\sum_array_reg_n_0_[2][19] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg[1]_24 [19]),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg[0]_25 [19]),
        .O(\augend[19]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[19]_i_6 
       (.I0(\sum_array_reg_n_0_[7][19] ),
        .I1(\sum_array_reg_n_0_[6][19] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[5][19] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[4][19] ),
        .O(\augend[19]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[19]_i_7 
       (.I0(\sum_array_reg_n_0_[11][19] ),
        .I1(\sum_array_reg_n_0_[10][19] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[9][19] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[8][19] ),
        .O(\augend[19]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[19]_i_8 
       (.I0(\sum_array_reg_n_0_[15][19] ),
        .I1(\sum_array_reg_n_0_[14][19] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[13][19] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[12][19] ),
        .O(\augend[19]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[19]_i_9 
       (.I0(\sum_array_reg_n_0_[19][19] ),
        .I1(\sum_array_reg_n_0_[18][19] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[17][19] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[16][19] ),
        .O(\augend[19]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAA8080000A808)) 
    \augend[1]_i_1 
       (.I0(current_state[2]),
        .I1(\augend_reg[1]_i_2_n_0 ),
        .I2(\ila_smax_exp_sum_counter[4] [3]),
        .I3(\augend_reg[1]_i_3_n_0 ),
        .I4(\ila_smax_exp_sum_counter[4] [4]),
        .I5(\augend_reg[1]_i_4_n_0 ),
        .O(augend[1]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[1]_i_10 
       (.I0(\sum_array_reg_n_0_[23][1] ),
        .I1(\sum_array_reg_n_0_[22][1] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[21][1] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[20][1] ),
        .O(\augend[1]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[1]_i_5 
       (.I0(\sum_array_reg_n_0_[3][1] ),
        .I1(\sum_array_reg_n_0_[2][1] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg[1]_24 [1]),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg[0]_25 [1]),
        .O(\augend[1]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[1]_i_6 
       (.I0(\sum_array_reg_n_0_[7][1] ),
        .I1(\sum_array_reg_n_0_[6][1] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[5][1] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[4][1] ),
        .O(\augend[1]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[1]_i_7 
       (.I0(\sum_array_reg_n_0_[11][1] ),
        .I1(\sum_array_reg_n_0_[10][1] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[9][1] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[8][1] ),
        .O(\augend[1]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[1]_i_8 
       (.I0(\sum_array_reg_n_0_[15][1] ),
        .I1(\sum_array_reg_n_0_[14][1] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[13][1] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[12][1] ),
        .O(\augend[1]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[1]_i_9 
       (.I0(\sum_array_reg_n_0_[19][1] ),
        .I1(\sum_array_reg_n_0_[18][1] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[17][1] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[16][1] ),
        .O(\augend[1]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAA8080000A808)) 
    \augend[20]_i_1 
       (.I0(current_state[2]),
        .I1(\augend_reg[20]_i_2_n_0 ),
        .I2(\ila_smax_exp_sum_counter[4] [3]),
        .I3(\augend_reg[20]_i_3_n_0 ),
        .I4(\ila_smax_exp_sum_counter[4] [4]),
        .I5(\augend_reg[20]_i_4_n_0 ),
        .O(augend[20]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[20]_i_10 
       (.I0(\sum_array_reg_n_0_[23][20] ),
        .I1(\sum_array_reg_n_0_[22][20] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[21][20] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[20][20] ),
        .O(\augend[20]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[20]_i_5 
       (.I0(\sum_array_reg_n_0_[3][20] ),
        .I1(\sum_array_reg_n_0_[2][20] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg[1]_24 [20]),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg[0]_25 [20]),
        .O(\augend[20]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[20]_i_6 
       (.I0(\sum_array_reg_n_0_[7][20] ),
        .I1(\sum_array_reg_n_0_[6][20] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[5][20] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[4][20] ),
        .O(\augend[20]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[20]_i_7 
       (.I0(\sum_array_reg_n_0_[11][20] ),
        .I1(\sum_array_reg_n_0_[10][20] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[9][20] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[8][20] ),
        .O(\augend[20]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[20]_i_8 
       (.I0(\sum_array_reg_n_0_[15][20] ),
        .I1(\sum_array_reg_n_0_[14][20] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[13][20] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[12][20] ),
        .O(\augend[20]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[20]_i_9 
       (.I0(\sum_array_reg_n_0_[19][20] ),
        .I1(\sum_array_reg_n_0_[18][20] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[17][20] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[16][20] ),
        .O(\augend[20]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAA8080000A808)) 
    \augend[21]_i_1 
       (.I0(current_state[2]),
        .I1(\augend_reg[21]_i_2_n_0 ),
        .I2(\ila_smax_exp_sum_counter[4] [3]),
        .I3(\augend_reg[21]_i_3_n_0 ),
        .I4(\ila_smax_exp_sum_counter[4] [4]),
        .I5(\augend_reg[21]_i_4_n_0 ),
        .O(augend[21]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[21]_i_10 
       (.I0(\sum_array_reg_n_0_[23][21] ),
        .I1(\sum_array_reg_n_0_[22][21] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[21][21] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[20][21] ),
        .O(\augend[21]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[21]_i_5 
       (.I0(\sum_array_reg_n_0_[3][21] ),
        .I1(\sum_array_reg_n_0_[2][21] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg[1]_24 [21]),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg[0]_25 [21]),
        .O(\augend[21]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[21]_i_6 
       (.I0(\sum_array_reg_n_0_[7][21] ),
        .I1(\sum_array_reg_n_0_[6][21] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[5][21] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[4][21] ),
        .O(\augend[21]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[21]_i_7 
       (.I0(\sum_array_reg_n_0_[11][21] ),
        .I1(\sum_array_reg_n_0_[10][21] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[9][21] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[8][21] ),
        .O(\augend[21]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[21]_i_8 
       (.I0(\sum_array_reg_n_0_[15][21] ),
        .I1(\sum_array_reg_n_0_[14][21] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[13][21] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[12][21] ),
        .O(\augend[21]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[21]_i_9 
       (.I0(\sum_array_reg_n_0_[19][21] ),
        .I1(\sum_array_reg_n_0_[18][21] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[17][21] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[16][21] ),
        .O(\augend[21]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAA8080000A808)) 
    \augend[22]_i_1 
       (.I0(current_state[2]),
        .I1(\augend_reg[22]_i_2_n_0 ),
        .I2(\ila_smax_exp_sum_counter[4] [3]),
        .I3(\augend_reg[22]_i_3_n_0 ),
        .I4(\ila_smax_exp_sum_counter[4] [4]),
        .I5(\augend_reg[22]_i_4_n_0 ),
        .O(augend[22]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[22]_i_10 
       (.I0(\sum_array_reg_n_0_[23][22] ),
        .I1(\sum_array_reg_n_0_[22][22] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[21][22] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[20][22] ),
        .O(\augend[22]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[22]_i_5 
       (.I0(\sum_array_reg_n_0_[3][22] ),
        .I1(\sum_array_reg_n_0_[2][22] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg[1]_24 [22]),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg[0]_25 [22]),
        .O(\augend[22]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[22]_i_6 
       (.I0(\sum_array_reg_n_0_[7][22] ),
        .I1(\sum_array_reg_n_0_[6][22] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[5][22] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[4][22] ),
        .O(\augend[22]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[22]_i_7 
       (.I0(\sum_array_reg_n_0_[11][22] ),
        .I1(\sum_array_reg_n_0_[10][22] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[9][22] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[8][22] ),
        .O(\augend[22]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[22]_i_8 
       (.I0(\sum_array_reg_n_0_[15][22] ),
        .I1(\sum_array_reg_n_0_[14][22] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[13][22] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[12][22] ),
        .O(\augend[22]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[22]_i_9 
       (.I0(\sum_array_reg_n_0_[19][22] ),
        .I1(\sum_array_reg_n_0_[18][22] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[17][22] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[16][22] ),
        .O(\augend[22]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAA8080000A808)) 
    \augend[23]_i_1 
       (.I0(current_state[2]),
        .I1(\augend_reg[23]_i_2_n_0 ),
        .I2(\ila_smax_exp_sum_counter[4] [3]),
        .I3(\augend_reg[23]_i_3_n_0 ),
        .I4(\ila_smax_exp_sum_counter[4] [4]),
        .I5(\augend_reg[23]_i_4_n_0 ),
        .O(augend[23]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[23]_i_10 
       (.I0(\sum_array_reg_n_0_[23][23] ),
        .I1(\sum_array_reg_n_0_[22][23] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[21][23] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[20][23] ),
        .O(\augend[23]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[23]_i_5 
       (.I0(\sum_array_reg_n_0_[3][23] ),
        .I1(\sum_array_reg_n_0_[2][23] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg[1]_24 [23]),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg[0]_25 [23]),
        .O(\augend[23]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[23]_i_6 
       (.I0(\sum_array_reg_n_0_[7][23] ),
        .I1(\sum_array_reg_n_0_[6][23] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[5][23] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[4][23] ),
        .O(\augend[23]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[23]_i_7 
       (.I0(\sum_array_reg_n_0_[11][23] ),
        .I1(\sum_array_reg_n_0_[10][23] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[9][23] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[8][23] ),
        .O(\augend[23]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[23]_i_8 
       (.I0(\sum_array_reg_n_0_[15][23] ),
        .I1(\sum_array_reg_n_0_[14][23] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[13][23] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[12][23] ),
        .O(\augend[23]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[23]_i_9 
       (.I0(\sum_array_reg_n_0_[19][23] ),
        .I1(\sum_array_reg_n_0_[18][23] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[17][23] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[16][23] ),
        .O(\augend[23]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAA8080000A808)) 
    \augend[24]_i_1 
       (.I0(current_state[2]),
        .I1(\augend_reg[24]_i_2_n_0 ),
        .I2(\ila_smax_exp_sum_counter[4] [3]),
        .I3(\augend_reg[24]_i_3_n_0 ),
        .I4(\ila_smax_exp_sum_counter[4] [4]),
        .I5(\augend_reg[24]_i_4_n_0 ),
        .O(augend[24]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[24]_i_10 
       (.I0(\sum_array_reg_n_0_[23][24] ),
        .I1(\sum_array_reg_n_0_[22][24] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[21][24] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[20][24] ),
        .O(\augend[24]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[24]_i_5 
       (.I0(\sum_array_reg_n_0_[3][24] ),
        .I1(\sum_array_reg_n_0_[2][24] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg[1]_24 [24]),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg[0]_25 [24]),
        .O(\augend[24]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[24]_i_6 
       (.I0(\sum_array_reg_n_0_[7][24] ),
        .I1(\sum_array_reg_n_0_[6][24] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[5][24] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[4][24] ),
        .O(\augend[24]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[24]_i_7 
       (.I0(\sum_array_reg_n_0_[11][24] ),
        .I1(\sum_array_reg_n_0_[10][24] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[9][24] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[8][24] ),
        .O(\augend[24]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[24]_i_8 
       (.I0(\sum_array_reg_n_0_[15][24] ),
        .I1(\sum_array_reg_n_0_[14][24] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[13][24] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[12][24] ),
        .O(\augend[24]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[24]_i_9 
       (.I0(\sum_array_reg_n_0_[19][24] ),
        .I1(\sum_array_reg_n_0_[18][24] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[17][24] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[16][24] ),
        .O(\augend[24]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAA8080000A808)) 
    \augend[25]_i_1 
       (.I0(current_state[2]),
        .I1(\augend_reg[25]_i_2_n_0 ),
        .I2(\ila_smax_exp_sum_counter[4] [3]),
        .I3(\augend_reg[25]_i_3_n_0 ),
        .I4(\ila_smax_exp_sum_counter[4] [4]),
        .I5(\augend_reg[25]_i_4_n_0 ),
        .O(augend[25]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[25]_i_10 
       (.I0(\sum_array_reg_n_0_[23][25] ),
        .I1(\sum_array_reg_n_0_[22][25] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[21][25] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[20][25] ),
        .O(\augend[25]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[25]_i_5 
       (.I0(\sum_array_reg_n_0_[3][25] ),
        .I1(\sum_array_reg_n_0_[2][25] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg[1]_24 [25]),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg[0]_25 [25]),
        .O(\augend[25]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[25]_i_6 
       (.I0(\sum_array_reg_n_0_[7][25] ),
        .I1(\sum_array_reg_n_0_[6][25] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[5][25] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[4][25] ),
        .O(\augend[25]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[25]_i_7 
       (.I0(\sum_array_reg_n_0_[11][25] ),
        .I1(\sum_array_reg_n_0_[10][25] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[9][25] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[8][25] ),
        .O(\augend[25]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[25]_i_8 
       (.I0(\sum_array_reg_n_0_[15][25] ),
        .I1(\sum_array_reg_n_0_[14][25] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[13][25] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[12][25] ),
        .O(\augend[25]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[25]_i_9 
       (.I0(\sum_array_reg_n_0_[19][25] ),
        .I1(\sum_array_reg_n_0_[18][25] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[17][25] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[16][25] ),
        .O(\augend[25]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAA8080000A808)) 
    \augend[26]_i_1 
       (.I0(current_state[2]),
        .I1(\augend_reg[26]_i_2_n_0 ),
        .I2(\ila_smax_exp_sum_counter[4] [3]),
        .I3(\augend_reg[26]_i_3_n_0 ),
        .I4(\ila_smax_exp_sum_counter[4] [4]),
        .I5(\augend_reg[26]_i_4_n_0 ),
        .O(augend[26]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[26]_i_10 
       (.I0(\sum_array_reg_n_0_[23][26] ),
        .I1(\sum_array_reg_n_0_[22][26] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[21][26] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[20][26] ),
        .O(\augend[26]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[26]_i_5 
       (.I0(\sum_array_reg_n_0_[3][26] ),
        .I1(\sum_array_reg_n_0_[2][26] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg[1]_24 [26]),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg[0]_25 [26]),
        .O(\augend[26]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[26]_i_6 
       (.I0(\sum_array_reg_n_0_[7][26] ),
        .I1(\sum_array_reg_n_0_[6][26] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[5][26] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[4][26] ),
        .O(\augend[26]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[26]_i_7 
       (.I0(\sum_array_reg_n_0_[11][26] ),
        .I1(\sum_array_reg_n_0_[10][26] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[9][26] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[8][26] ),
        .O(\augend[26]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[26]_i_8 
       (.I0(\sum_array_reg_n_0_[15][26] ),
        .I1(\sum_array_reg_n_0_[14][26] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[13][26] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[12][26] ),
        .O(\augend[26]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[26]_i_9 
       (.I0(\sum_array_reg_n_0_[19][26] ),
        .I1(\sum_array_reg_n_0_[18][26] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[17][26] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[16][26] ),
        .O(\augend[26]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAA8080000A808)) 
    \augend[27]_i_1 
       (.I0(current_state[2]),
        .I1(\augend_reg[27]_i_2_n_0 ),
        .I2(\ila_smax_exp_sum_counter[4] [3]),
        .I3(\augend_reg[27]_i_3_n_0 ),
        .I4(\ila_smax_exp_sum_counter[4] [4]),
        .I5(\augend_reg[27]_i_4_n_0 ),
        .O(augend[27]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[27]_i_10 
       (.I0(\sum_array_reg_n_0_[23][27] ),
        .I1(\sum_array_reg_n_0_[22][27] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[21][27] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[20][27] ),
        .O(\augend[27]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[27]_i_5 
       (.I0(\sum_array_reg_n_0_[3][27] ),
        .I1(\sum_array_reg_n_0_[2][27] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg[1]_24 [27]),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg[0]_25 [27]),
        .O(\augend[27]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[27]_i_6 
       (.I0(\sum_array_reg_n_0_[7][27] ),
        .I1(\sum_array_reg_n_0_[6][27] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[5][27] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[4][27] ),
        .O(\augend[27]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[27]_i_7 
       (.I0(\sum_array_reg_n_0_[11][27] ),
        .I1(\sum_array_reg_n_0_[10][27] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[9][27] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[8][27] ),
        .O(\augend[27]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[27]_i_8 
       (.I0(\sum_array_reg_n_0_[15][27] ),
        .I1(\sum_array_reg_n_0_[14][27] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[13][27] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[12][27] ),
        .O(\augend[27]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[27]_i_9 
       (.I0(\sum_array_reg_n_0_[19][27] ),
        .I1(\sum_array_reg_n_0_[18][27] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[17][27] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[16][27] ),
        .O(\augend[27]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAA8080000A808)) 
    \augend[28]_i_1 
       (.I0(current_state[2]),
        .I1(\augend_reg[28]_i_2_n_0 ),
        .I2(\ila_smax_exp_sum_counter[4] [3]),
        .I3(\augend_reg[28]_i_3_n_0 ),
        .I4(\ila_smax_exp_sum_counter[4] [4]),
        .I5(\augend_reg[28]_i_4_n_0 ),
        .O(augend[28]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[28]_i_10 
       (.I0(\sum_array_reg_n_0_[23][28] ),
        .I1(\sum_array_reg_n_0_[22][28] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[21][28] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[20][28] ),
        .O(\augend[28]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[28]_i_5 
       (.I0(\sum_array_reg_n_0_[3][28] ),
        .I1(\sum_array_reg_n_0_[2][28] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg[1]_24 [28]),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg[0]_25 [28]),
        .O(\augend[28]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[28]_i_6 
       (.I0(\sum_array_reg_n_0_[7][28] ),
        .I1(\sum_array_reg_n_0_[6][28] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[5][28] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[4][28] ),
        .O(\augend[28]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[28]_i_7 
       (.I0(\sum_array_reg_n_0_[11][28] ),
        .I1(\sum_array_reg_n_0_[10][28] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[9][28] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[8][28] ),
        .O(\augend[28]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[28]_i_8 
       (.I0(\sum_array_reg_n_0_[15][28] ),
        .I1(\sum_array_reg_n_0_[14][28] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[13][28] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[12][28] ),
        .O(\augend[28]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[28]_i_9 
       (.I0(\sum_array_reg_n_0_[19][28] ),
        .I1(\sum_array_reg_n_0_[18][28] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[17][28] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[16][28] ),
        .O(\augend[28]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAA8080000A808)) 
    \augend[29]_i_1 
       (.I0(current_state[2]),
        .I1(\augend_reg[29]_i_2_n_0 ),
        .I2(\ila_smax_exp_sum_counter[4] [3]),
        .I3(\augend_reg[29]_i_3_n_0 ),
        .I4(\ila_smax_exp_sum_counter[4] [4]),
        .I5(\augend_reg[29]_i_4_n_0 ),
        .O(augend[29]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[29]_i_10 
       (.I0(\sum_array_reg_n_0_[23][29] ),
        .I1(\sum_array_reg_n_0_[22][29] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[21][29] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[20][29] ),
        .O(\augend[29]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[29]_i_5 
       (.I0(\sum_array_reg_n_0_[3][29] ),
        .I1(\sum_array_reg_n_0_[2][29] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg[1]_24 [29]),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg[0]_25 [29]),
        .O(\augend[29]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[29]_i_6 
       (.I0(\sum_array_reg_n_0_[7][29] ),
        .I1(\sum_array_reg_n_0_[6][29] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[5][29] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[4][29] ),
        .O(\augend[29]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[29]_i_7 
       (.I0(\sum_array_reg_n_0_[11][29] ),
        .I1(\sum_array_reg_n_0_[10][29] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[9][29] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[8][29] ),
        .O(\augend[29]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[29]_i_8 
       (.I0(\sum_array_reg_n_0_[15][29] ),
        .I1(\sum_array_reg_n_0_[14][29] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[13][29] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[12][29] ),
        .O(\augend[29]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[29]_i_9 
       (.I0(\sum_array_reg_n_0_[19][29] ),
        .I1(\sum_array_reg_n_0_[18][29] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[17][29] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[16][29] ),
        .O(\augend[29]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAA8080000A808)) 
    \augend[2]_i_1 
       (.I0(current_state[2]),
        .I1(\augend_reg[2]_i_2_n_0 ),
        .I2(\ila_smax_exp_sum_counter[4] [3]),
        .I3(\augend_reg[2]_i_3_n_0 ),
        .I4(\ila_smax_exp_sum_counter[4] [4]),
        .I5(\augend_reg[2]_i_4_n_0 ),
        .O(augend[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[2]_i_10 
       (.I0(\sum_array_reg_n_0_[23][2] ),
        .I1(\sum_array_reg_n_0_[22][2] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[21][2] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[20][2] ),
        .O(\augend[2]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[2]_i_5 
       (.I0(\sum_array_reg_n_0_[3][2] ),
        .I1(\sum_array_reg_n_0_[2][2] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg[1]_24 [2]),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg[0]_25 [2]),
        .O(\augend[2]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[2]_i_6 
       (.I0(\sum_array_reg_n_0_[7][2] ),
        .I1(\sum_array_reg_n_0_[6][2] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[5][2] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[4][2] ),
        .O(\augend[2]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[2]_i_7 
       (.I0(\sum_array_reg_n_0_[11][2] ),
        .I1(\sum_array_reg_n_0_[10][2] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[9][2] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[8][2] ),
        .O(\augend[2]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[2]_i_8 
       (.I0(\sum_array_reg_n_0_[15][2] ),
        .I1(\sum_array_reg_n_0_[14][2] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[13][2] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[12][2] ),
        .O(\augend[2]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[2]_i_9 
       (.I0(\sum_array_reg_n_0_[19][2] ),
        .I1(\sum_array_reg_n_0_[18][2] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[17][2] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[16][2] ),
        .O(\augend[2]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAA8080000A808)) 
    \augend[30]_i_1 
       (.I0(current_state[2]),
        .I1(\augend_reg[30]_i_2_n_0 ),
        .I2(\ila_smax_exp_sum_counter[4] [3]),
        .I3(\augend_reg[30]_i_3_n_0 ),
        .I4(\ila_smax_exp_sum_counter[4] [4]),
        .I5(\augend_reg[30]_i_4_n_0 ),
        .O(augend[30]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[30]_i_10 
       (.I0(\sum_array_reg_n_0_[23][30] ),
        .I1(\sum_array_reg_n_0_[22][30] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[21][30] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[20][30] ),
        .O(\augend[30]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[30]_i_5 
       (.I0(\sum_array_reg_n_0_[3][30] ),
        .I1(\sum_array_reg_n_0_[2][30] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg[1]_24 [30]),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg[0]_25 [30]),
        .O(\augend[30]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[30]_i_6 
       (.I0(\sum_array_reg_n_0_[7][30] ),
        .I1(\sum_array_reg_n_0_[6][30] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[5][30] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[4][30] ),
        .O(\augend[30]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[30]_i_7 
       (.I0(\sum_array_reg_n_0_[11][30] ),
        .I1(\sum_array_reg_n_0_[10][30] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[9][30] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[8][30] ),
        .O(\augend[30]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[30]_i_8 
       (.I0(\sum_array_reg_n_0_[15][30] ),
        .I1(\sum_array_reg_n_0_[14][30] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[13][30] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[12][30] ),
        .O(\augend[30]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[30]_i_9 
       (.I0(\sum_array_reg_n_0_[19][30] ),
        .I1(\sum_array_reg_n_0_[18][30] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[17][30] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[16][30] ),
        .O(\augend[30]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'h20221111)) 
    \augend[31]_i_1 
       (.I0(out),
        .I1(current_state[1]),
        .I2(\augend[31]_i_3_n_0 ),
        .I3(\augend[31]_i_4_n_0 ),
        .I4(current_state[2]),
        .O(\augend[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[31]_i_10 
       (.I0(\sum_array_reg_n_0_[11][31] ),
        .I1(\sum_array_reg_n_0_[10][31] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[9][31] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[8][31] ),
        .O(\augend[31]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[31]_i_11 
       (.I0(\sum_array_reg_n_0_[15][31] ),
        .I1(\sum_array_reg_n_0_[14][31] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[13][31] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[12][31] ),
        .O(\augend[31]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[31]_i_12 
       (.I0(\sum_array_reg_n_0_[19][31] ),
        .I1(\sum_array_reg_n_0_[18][31] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[17][31] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[16][31] ),
        .O(\augend[31]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[31]_i_13 
       (.I0(\sum_array_reg_n_0_[23][31] ),
        .I1(\sum_array_reg_n_0_[22][31] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[21][31] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[20][31] ),
        .O(\augend[31]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAA8080000A808)) 
    \augend[31]_i_2 
       (.I0(current_state[2]),
        .I1(\augend_reg[31]_i_5_n_0 ),
        .I2(\ila_smax_exp_sum_counter[4] [3]),
        .I3(\augend_reg[31]_i_6_n_0 ),
        .I4(\ila_smax_exp_sum_counter[4] [4]),
        .I5(\augend_reg[31]_i_7_n_0 ),
        .O(augend[31]));
  LUT5 #(
    .INIT(32'h373F3F3C)) 
    \augend[31]_i_3 
       (.I0(\sum_counter_reg[0]_rep_n_0 ),
        .I1(\ila_smax_exp_sum_counter[4] [4]),
        .I2(\ila_smax_exp_sum_counter[4] [3]),
        .I3(\ila_smax_exp_sum_counter[4] [2]),
        .I4(\sum_counter_reg[1]_rep__0_n_0 ),
        .O(\augend[31]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \augend[31]_i_4 
       (.I0(\sum_counter_reg[0]_rep_n_0 ),
        .I1(\ila_smax_exp_sum_counter[4] [4]),
        .I2(\ila_smax_exp_sum_counter[4] [3]),
        .I3(\ila_smax_exp_sum_counter[4] [2]),
        .I4(\ila_smax_exp_sum_counter[4] [1]),
        .O(\augend[31]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[31]_i_8 
       (.I0(\sum_array_reg_n_0_[3][31] ),
        .I1(\sum_array_reg_n_0_[2][31] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg[1]_24 [31]),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg[0]_25 [31]),
        .O(\augend[31]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[31]_i_9 
       (.I0(\sum_array_reg_n_0_[7][31] ),
        .I1(\sum_array_reg_n_0_[6][31] ),
        .I2(\sum_counter_reg[1]_rep_n_0 ),
        .I3(\sum_array_reg_n_0_[5][31] ),
        .I4(\ila_smax_exp_sum_counter[4] [0]),
        .I5(\sum_array_reg_n_0_[4][31] ),
        .O(\augend[31]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAA8080000A808)) 
    \augend[3]_i_1 
       (.I0(current_state[2]),
        .I1(\augend_reg[3]_i_2_n_0 ),
        .I2(\ila_smax_exp_sum_counter[4] [3]),
        .I3(\augend_reg[3]_i_3_n_0 ),
        .I4(\ila_smax_exp_sum_counter[4] [4]),
        .I5(\augend_reg[3]_i_4_n_0 ),
        .O(augend[3]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[3]_i_10 
       (.I0(\sum_array_reg_n_0_[23][3] ),
        .I1(\sum_array_reg_n_0_[22][3] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[21][3] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[20][3] ),
        .O(\augend[3]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[3]_i_5 
       (.I0(\sum_array_reg_n_0_[3][3] ),
        .I1(\sum_array_reg_n_0_[2][3] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg[1]_24 [3]),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg[0]_25 [3]),
        .O(\augend[3]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[3]_i_6 
       (.I0(\sum_array_reg_n_0_[7][3] ),
        .I1(\sum_array_reg_n_0_[6][3] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[5][3] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[4][3] ),
        .O(\augend[3]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[3]_i_7 
       (.I0(\sum_array_reg_n_0_[11][3] ),
        .I1(\sum_array_reg_n_0_[10][3] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[9][3] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[8][3] ),
        .O(\augend[3]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[3]_i_8 
       (.I0(\sum_array_reg_n_0_[15][3] ),
        .I1(\sum_array_reg_n_0_[14][3] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[13][3] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[12][3] ),
        .O(\augend[3]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[3]_i_9 
       (.I0(\sum_array_reg_n_0_[19][3] ),
        .I1(\sum_array_reg_n_0_[18][3] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[17][3] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[16][3] ),
        .O(\augend[3]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAA8080000A808)) 
    \augend[4]_i_1 
       (.I0(current_state[2]),
        .I1(\augend_reg[4]_i_2_n_0 ),
        .I2(\ila_smax_exp_sum_counter[4] [3]),
        .I3(\augend_reg[4]_i_3_n_0 ),
        .I4(\ila_smax_exp_sum_counter[4] [4]),
        .I5(\augend_reg[4]_i_4_n_0 ),
        .O(augend[4]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[4]_i_10 
       (.I0(\sum_array_reg_n_0_[23][4] ),
        .I1(\sum_array_reg_n_0_[22][4] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[21][4] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[20][4] ),
        .O(\augend[4]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[4]_i_5 
       (.I0(\sum_array_reg_n_0_[3][4] ),
        .I1(\sum_array_reg_n_0_[2][4] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg[1]_24 [4]),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg[0]_25 [4]),
        .O(\augend[4]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[4]_i_6 
       (.I0(\sum_array_reg_n_0_[7][4] ),
        .I1(\sum_array_reg_n_0_[6][4] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[5][4] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[4][4] ),
        .O(\augend[4]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[4]_i_7 
       (.I0(\sum_array_reg_n_0_[11][4] ),
        .I1(\sum_array_reg_n_0_[10][4] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[9][4] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[8][4] ),
        .O(\augend[4]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[4]_i_8 
       (.I0(\sum_array_reg_n_0_[15][4] ),
        .I1(\sum_array_reg_n_0_[14][4] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[13][4] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[12][4] ),
        .O(\augend[4]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[4]_i_9 
       (.I0(\sum_array_reg_n_0_[19][4] ),
        .I1(\sum_array_reg_n_0_[18][4] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[17][4] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[16][4] ),
        .O(\augend[4]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAA8080000A808)) 
    \augend[5]_i_1 
       (.I0(current_state[2]),
        .I1(\augend_reg[5]_i_2_n_0 ),
        .I2(\ila_smax_exp_sum_counter[4] [3]),
        .I3(\augend_reg[5]_i_3_n_0 ),
        .I4(\ila_smax_exp_sum_counter[4] [4]),
        .I5(\augend_reg[5]_i_4_n_0 ),
        .O(augend[5]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[5]_i_10 
       (.I0(\sum_array_reg_n_0_[23][5] ),
        .I1(\sum_array_reg_n_0_[22][5] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[21][5] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[20][5] ),
        .O(\augend[5]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[5]_i_5 
       (.I0(\sum_array_reg_n_0_[3][5] ),
        .I1(\sum_array_reg_n_0_[2][5] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg[1]_24 [5]),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg[0]_25 [5]),
        .O(\augend[5]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[5]_i_6 
       (.I0(\sum_array_reg_n_0_[7][5] ),
        .I1(\sum_array_reg_n_0_[6][5] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[5][5] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[4][5] ),
        .O(\augend[5]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[5]_i_7 
       (.I0(\sum_array_reg_n_0_[11][5] ),
        .I1(\sum_array_reg_n_0_[10][5] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[9][5] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[8][5] ),
        .O(\augend[5]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[5]_i_8 
       (.I0(\sum_array_reg_n_0_[15][5] ),
        .I1(\sum_array_reg_n_0_[14][5] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[13][5] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[12][5] ),
        .O(\augend[5]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[5]_i_9 
       (.I0(\sum_array_reg_n_0_[19][5] ),
        .I1(\sum_array_reg_n_0_[18][5] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[17][5] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[16][5] ),
        .O(\augend[5]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAA8080000A808)) 
    \augend[6]_i_1 
       (.I0(current_state[2]),
        .I1(\augend_reg[6]_i_2_n_0 ),
        .I2(\ila_smax_exp_sum_counter[4] [3]),
        .I3(\augend_reg[6]_i_3_n_0 ),
        .I4(\ila_smax_exp_sum_counter[4] [4]),
        .I5(\augend_reg[6]_i_4_n_0 ),
        .O(augend[6]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[6]_i_10 
       (.I0(\sum_array_reg_n_0_[23][6] ),
        .I1(\sum_array_reg_n_0_[22][6] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[21][6] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[20][6] ),
        .O(\augend[6]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[6]_i_5 
       (.I0(\sum_array_reg_n_0_[3][6] ),
        .I1(\sum_array_reg_n_0_[2][6] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg[1]_24 [6]),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg[0]_25 [6]),
        .O(\augend[6]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[6]_i_6 
       (.I0(\sum_array_reg_n_0_[7][6] ),
        .I1(\sum_array_reg_n_0_[6][6] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[5][6] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[4][6] ),
        .O(\augend[6]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[6]_i_7 
       (.I0(\sum_array_reg_n_0_[11][6] ),
        .I1(\sum_array_reg_n_0_[10][6] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[9][6] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[8][6] ),
        .O(\augend[6]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[6]_i_8 
       (.I0(\sum_array_reg_n_0_[15][6] ),
        .I1(\sum_array_reg_n_0_[14][6] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[13][6] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[12][6] ),
        .O(\augend[6]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[6]_i_9 
       (.I0(\sum_array_reg_n_0_[19][6] ),
        .I1(\sum_array_reg_n_0_[18][6] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[17][6] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[16][6] ),
        .O(\augend[6]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAA8080000A808)) 
    \augend[7]_i_1 
       (.I0(current_state[2]),
        .I1(\augend_reg[7]_i_2_n_0 ),
        .I2(\ila_smax_exp_sum_counter[4] [3]),
        .I3(\augend_reg[7]_i_3_n_0 ),
        .I4(\ila_smax_exp_sum_counter[4] [4]),
        .I5(\augend_reg[7]_i_4_n_0 ),
        .O(augend[7]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[7]_i_10 
       (.I0(\sum_array_reg_n_0_[23][7] ),
        .I1(\sum_array_reg_n_0_[22][7] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[21][7] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[20][7] ),
        .O(\augend[7]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[7]_i_5 
       (.I0(\sum_array_reg_n_0_[3][7] ),
        .I1(\sum_array_reg_n_0_[2][7] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg[1]_24 [7]),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg[0]_25 [7]),
        .O(\augend[7]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[7]_i_6 
       (.I0(\sum_array_reg_n_0_[7][7] ),
        .I1(\sum_array_reg_n_0_[6][7] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[5][7] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[4][7] ),
        .O(\augend[7]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[7]_i_7 
       (.I0(\sum_array_reg_n_0_[11][7] ),
        .I1(\sum_array_reg_n_0_[10][7] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[9][7] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[8][7] ),
        .O(\augend[7]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[7]_i_8 
       (.I0(\sum_array_reg_n_0_[15][7] ),
        .I1(\sum_array_reg_n_0_[14][7] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[13][7] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[12][7] ),
        .O(\augend[7]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[7]_i_9 
       (.I0(\sum_array_reg_n_0_[19][7] ),
        .I1(\sum_array_reg_n_0_[18][7] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[17][7] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[16][7] ),
        .O(\augend[7]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAA8080000A808)) 
    \augend[8]_i_1 
       (.I0(current_state[2]),
        .I1(\augend_reg[8]_i_2_n_0 ),
        .I2(\ila_smax_exp_sum_counter[4] [3]),
        .I3(\augend_reg[8]_i_3_n_0 ),
        .I4(\ila_smax_exp_sum_counter[4] [4]),
        .I5(\augend_reg[8]_i_4_n_0 ),
        .O(augend[8]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[8]_i_10 
       (.I0(\sum_array_reg_n_0_[23][8] ),
        .I1(\sum_array_reg_n_0_[22][8] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[21][8] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[20][8] ),
        .O(\augend[8]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[8]_i_5 
       (.I0(\sum_array_reg_n_0_[3][8] ),
        .I1(\sum_array_reg_n_0_[2][8] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg[1]_24 [8]),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg[0]_25 [8]),
        .O(\augend[8]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[8]_i_6 
       (.I0(\sum_array_reg_n_0_[7][8] ),
        .I1(\sum_array_reg_n_0_[6][8] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[5][8] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[4][8] ),
        .O(\augend[8]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[8]_i_7 
       (.I0(\sum_array_reg_n_0_[11][8] ),
        .I1(\sum_array_reg_n_0_[10][8] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[9][8] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[8][8] ),
        .O(\augend[8]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[8]_i_8 
       (.I0(\sum_array_reg_n_0_[15][8] ),
        .I1(\sum_array_reg_n_0_[14][8] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[13][8] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[12][8] ),
        .O(\augend[8]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[8]_i_9 
       (.I0(\sum_array_reg_n_0_[19][8] ),
        .I1(\sum_array_reg_n_0_[18][8] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[17][8] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[16][8] ),
        .O(\augend[8]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAA8080000A808)) 
    \augend[9]_i_1 
       (.I0(current_state[2]),
        .I1(\augend_reg[9]_i_2_n_0 ),
        .I2(\ila_smax_exp_sum_counter[4] [3]),
        .I3(\augend_reg[9]_i_3_n_0 ),
        .I4(\ila_smax_exp_sum_counter[4] [4]),
        .I5(\augend_reg[9]_i_4_n_0 ),
        .O(augend[9]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[9]_i_10 
       (.I0(\sum_array_reg_n_0_[23][9] ),
        .I1(\sum_array_reg_n_0_[22][9] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[21][9] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[20][9] ),
        .O(\augend[9]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[9]_i_5 
       (.I0(\sum_array_reg_n_0_[3][9] ),
        .I1(\sum_array_reg_n_0_[2][9] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg[1]_24 [9]),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg[0]_25 [9]),
        .O(\augend[9]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[9]_i_6 
       (.I0(\sum_array_reg_n_0_[7][9] ),
        .I1(\sum_array_reg_n_0_[6][9] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[5][9] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[4][9] ),
        .O(\augend[9]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[9]_i_7 
       (.I0(\sum_array_reg_n_0_[11][9] ),
        .I1(\sum_array_reg_n_0_[10][9] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[9][9] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[8][9] ),
        .O(\augend[9]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[9]_i_8 
       (.I0(\sum_array_reg_n_0_[15][9] ),
        .I1(\sum_array_reg_n_0_[14][9] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[13][9] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[12][9] ),
        .O(\augend[9]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \augend[9]_i_9 
       (.I0(\sum_array_reg_n_0_[19][9] ),
        .I1(\sum_array_reg_n_0_[18][9] ),
        .I2(\sum_counter_reg[1]_rep__0_n_0 ),
        .I3(\sum_array_reg_n_0_[17][9] ),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\sum_array_reg_n_0_[16][9] ),
        .O(\augend[9]_i_9_n_0 ));
  FDCE \augend_reg[0] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(augend[0]),
        .Q(ila_smax_exp_augend[0]));
  MUXF7 \augend_reg[0]_i_2 
       (.I0(\augend[0]_i_5_n_0 ),
        .I1(\augend[0]_i_6_n_0 ),
        .O(\augend_reg[0]_i_2_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[0]_i_3 
       (.I0(\augend[0]_i_7_n_0 ),
        .I1(\augend[0]_i_8_n_0 ),
        .O(\augend_reg[0]_i_3_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[0]_i_4 
       (.I0(\augend[0]_i_9_n_0 ),
        .I1(\augend[0]_i_10_n_0 ),
        .O(\augend_reg[0]_i_4_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  FDCE \augend_reg[10] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(augend[10]),
        .Q(ila_smax_exp_augend[10]));
  MUXF7 \augend_reg[10]_i_2 
       (.I0(\augend[10]_i_5_n_0 ),
        .I1(\augend[10]_i_6_n_0 ),
        .O(\augend_reg[10]_i_2_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[10]_i_3 
       (.I0(\augend[10]_i_7_n_0 ),
        .I1(\augend[10]_i_8_n_0 ),
        .O(\augend_reg[10]_i_3_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[10]_i_4 
       (.I0(\augend[10]_i_9_n_0 ),
        .I1(\augend[10]_i_10_n_0 ),
        .O(\augend_reg[10]_i_4_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  FDCE \augend_reg[11] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(augend[11]),
        .Q(ila_smax_exp_augend[11]));
  MUXF7 \augend_reg[11]_i_2 
       (.I0(\augend[11]_i_5_n_0 ),
        .I1(\augend[11]_i_6_n_0 ),
        .O(\augend_reg[11]_i_2_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[11]_i_3 
       (.I0(\augend[11]_i_7_n_0 ),
        .I1(\augend[11]_i_8_n_0 ),
        .O(\augend_reg[11]_i_3_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[11]_i_4 
       (.I0(\augend[11]_i_9_n_0 ),
        .I1(\augend[11]_i_10_n_0 ),
        .O(\augend_reg[11]_i_4_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  FDCE \augend_reg[12] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(augend[12]),
        .Q(ila_smax_exp_augend[12]));
  MUXF7 \augend_reg[12]_i_2 
       (.I0(\augend[12]_i_5_n_0 ),
        .I1(\augend[12]_i_6_n_0 ),
        .O(\augend_reg[12]_i_2_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[12]_i_3 
       (.I0(\augend[12]_i_7_n_0 ),
        .I1(\augend[12]_i_8_n_0 ),
        .O(\augend_reg[12]_i_3_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[12]_i_4 
       (.I0(\augend[12]_i_9_n_0 ),
        .I1(\augend[12]_i_10_n_0 ),
        .O(\augend_reg[12]_i_4_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  FDCE \augend_reg[13] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(augend[13]),
        .Q(ila_smax_exp_augend[13]));
  MUXF7 \augend_reg[13]_i_2 
       (.I0(\augend[13]_i_5_n_0 ),
        .I1(\augend[13]_i_6_n_0 ),
        .O(\augend_reg[13]_i_2_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[13]_i_3 
       (.I0(\augend[13]_i_7_n_0 ),
        .I1(\augend[13]_i_8_n_0 ),
        .O(\augend_reg[13]_i_3_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[13]_i_4 
       (.I0(\augend[13]_i_9_n_0 ),
        .I1(\augend[13]_i_10_n_0 ),
        .O(\augend_reg[13]_i_4_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  FDCE \augend_reg[14] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(augend[14]),
        .Q(ila_smax_exp_augend[14]));
  MUXF7 \augend_reg[14]_i_2 
       (.I0(\augend[14]_i_5_n_0 ),
        .I1(\augend[14]_i_6_n_0 ),
        .O(\augend_reg[14]_i_2_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[14]_i_3 
       (.I0(\augend[14]_i_7_n_0 ),
        .I1(\augend[14]_i_8_n_0 ),
        .O(\augend_reg[14]_i_3_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[14]_i_4 
       (.I0(\augend[14]_i_9_n_0 ),
        .I1(\augend[14]_i_10_n_0 ),
        .O(\augend_reg[14]_i_4_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  FDCE \augend_reg[15] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(augend[15]),
        .Q(ila_smax_exp_augend[15]));
  MUXF7 \augend_reg[15]_i_2 
       (.I0(\augend[15]_i_5_n_0 ),
        .I1(\augend[15]_i_6_n_0 ),
        .O(\augend_reg[15]_i_2_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[15]_i_3 
       (.I0(\augend[15]_i_7_n_0 ),
        .I1(\augend[15]_i_8_n_0 ),
        .O(\augend_reg[15]_i_3_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[15]_i_4 
       (.I0(\augend[15]_i_9_n_0 ),
        .I1(\augend[15]_i_10_n_0 ),
        .O(\augend_reg[15]_i_4_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  FDCE \augend_reg[16] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(augend[16]),
        .Q(ila_smax_exp_augend[16]));
  MUXF7 \augend_reg[16]_i_2 
       (.I0(\augend[16]_i_5_n_0 ),
        .I1(\augend[16]_i_6_n_0 ),
        .O(\augend_reg[16]_i_2_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[16]_i_3 
       (.I0(\augend[16]_i_7_n_0 ),
        .I1(\augend[16]_i_8_n_0 ),
        .O(\augend_reg[16]_i_3_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[16]_i_4 
       (.I0(\augend[16]_i_9_n_0 ),
        .I1(\augend[16]_i_10_n_0 ),
        .O(\augend_reg[16]_i_4_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  FDCE \augend_reg[17] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(augend[17]),
        .Q(ila_smax_exp_augend[17]));
  MUXF7 \augend_reg[17]_i_2 
       (.I0(\augend[17]_i_5_n_0 ),
        .I1(\augend[17]_i_6_n_0 ),
        .O(\augend_reg[17]_i_2_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[17]_i_3 
       (.I0(\augend[17]_i_7_n_0 ),
        .I1(\augend[17]_i_8_n_0 ),
        .O(\augend_reg[17]_i_3_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[17]_i_4 
       (.I0(\augend[17]_i_9_n_0 ),
        .I1(\augend[17]_i_10_n_0 ),
        .O(\augend_reg[17]_i_4_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  FDCE \augend_reg[18] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(augend[18]),
        .Q(ila_smax_exp_augend[18]));
  MUXF7 \augend_reg[18]_i_2 
       (.I0(\augend[18]_i_5_n_0 ),
        .I1(\augend[18]_i_6_n_0 ),
        .O(\augend_reg[18]_i_2_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[18]_i_3 
       (.I0(\augend[18]_i_7_n_0 ),
        .I1(\augend[18]_i_8_n_0 ),
        .O(\augend_reg[18]_i_3_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[18]_i_4 
       (.I0(\augend[18]_i_9_n_0 ),
        .I1(\augend[18]_i_10_n_0 ),
        .O(\augend_reg[18]_i_4_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  FDCE \augend_reg[19] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(augend[19]),
        .Q(ila_smax_exp_augend[19]));
  MUXF7 \augend_reg[19]_i_2 
       (.I0(\augend[19]_i_5_n_0 ),
        .I1(\augend[19]_i_6_n_0 ),
        .O(\augend_reg[19]_i_2_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[19]_i_3 
       (.I0(\augend[19]_i_7_n_0 ),
        .I1(\augend[19]_i_8_n_0 ),
        .O(\augend_reg[19]_i_3_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[19]_i_4 
       (.I0(\augend[19]_i_9_n_0 ),
        .I1(\augend[19]_i_10_n_0 ),
        .O(\augend_reg[19]_i_4_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  FDCE \augend_reg[1] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(augend[1]),
        .Q(ila_smax_exp_augend[1]));
  MUXF7 \augend_reg[1]_i_2 
       (.I0(\augend[1]_i_5_n_0 ),
        .I1(\augend[1]_i_6_n_0 ),
        .O(\augend_reg[1]_i_2_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[1]_i_3 
       (.I0(\augend[1]_i_7_n_0 ),
        .I1(\augend[1]_i_8_n_0 ),
        .O(\augend_reg[1]_i_3_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[1]_i_4 
       (.I0(\augend[1]_i_9_n_0 ),
        .I1(\augend[1]_i_10_n_0 ),
        .O(\augend_reg[1]_i_4_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  FDCE \augend_reg[20] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(augend[20]),
        .Q(ila_smax_exp_augend[20]));
  MUXF7 \augend_reg[20]_i_2 
       (.I0(\augend[20]_i_5_n_0 ),
        .I1(\augend[20]_i_6_n_0 ),
        .O(\augend_reg[20]_i_2_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[20]_i_3 
       (.I0(\augend[20]_i_7_n_0 ),
        .I1(\augend[20]_i_8_n_0 ),
        .O(\augend_reg[20]_i_3_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[20]_i_4 
       (.I0(\augend[20]_i_9_n_0 ),
        .I1(\augend[20]_i_10_n_0 ),
        .O(\augend_reg[20]_i_4_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  FDCE \augend_reg[21] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(augend[21]),
        .Q(ila_smax_exp_augend[21]));
  MUXF7 \augend_reg[21]_i_2 
       (.I0(\augend[21]_i_5_n_0 ),
        .I1(\augend[21]_i_6_n_0 ),
        .O(\augend_reg[21]_i_2_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[21]_i_3 
       (.I0(\augend[21]_i_7_n_0 ),
        .I1(\augend[21]_i_8_n_0 ),
        .O(\augend_reg[21]_i_3_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[21]_i_4 
       (.I0(\augend[21]_i_9_n_0 ),
        .I1(\augend[21]_i_10_n_0 ),
        .O(\augend_reg[21]_i_4_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  FDCE \augend_reg[22] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(augend[22]),
        .Q(ila_smax_exp_augend[22]));
  MUXF7 \augend_reg[22]_i_2 
       (.I0(\augend[22]_i_5_n_0 ),
        .I1(\augend[22]_i_6_n_0 ),
        .O(\augend_reg[22]_i_2_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[22]_i_3 
       (.I0(\augend[22]_i_7_n_0 ),
        .I1(\augend[22]_i_8_n_0 ),
        .O(\augend_reg[22]_i_3_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[22]_i_4 
       (.I0(\augend[22]_i_9_n_0 ),
        .I1(\augend[22]_i_10_n_0 ),
        .O(\augend_reg[22]_i_4_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  FDCE \augend_reg[23] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(augend[23]),
        .Q(ila_smax_exp_augend[23]));
  MUXF7 \augend_reg[23]_i_2 
       (.I0(\augend[23]_i_5_n_0 ),
        .I1(\augend[23]_i_6_n_0 ),
        .O(\augend_reg[23]_i_2_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[23]_i_3 
       (.I0(\augend[23]_i_7_n_0 ),
        .I1(\augend[23]_i_8_n_0 ),
        .O(\augend_reg[23]_i_3_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[23]_i_4 
       (.I0(\augend[23]_i_9_n_0 ),
        .I1(\augend[23]_i_10_n_0 ),
        .O(\augend_reg[23]_i_4_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  FDCE \augend_reg[24] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(augend[24]),
        .Q(ila_smax_exp_augend[24]));
  MUXF7 \augend_reg[24]_i_2 
       (.I0(\augend[24]_i_5_n_0 ),
        .I1(\augend[24]_i_6_n_0 ),
        .O(\augend_reg[24]_i_2_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[24]_i_3 
       (.I0(\augend[24]_i_7_n_0 ),
        .I1(\augend[24]_i_8_n_0 ),
        .O(\augend_reg[24]_i_3_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[24]_i_4 
       (.I0(\augend[24]_i_9_n_0 ),
        .I1(\augend[24]_i_10_n_0 ),
        .O(\augend_reg[24]_i_4_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  FDCE \augend_reg[25] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(augend[25]),
        .Q(ila_smax_exp_augend[25]));
  MUXF7 \augend_reg[25]_i_2 
       (.I0(\augend[25]_i_5_n_0 ),
        .I1(\augend[25]_i_6_n_0 ),
        .O(\augend_reg[25]_i_2_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[25]_i_3 
       (.I0(\augend[25]_i_7_n_0 ),
        .I1(\augend[25]_i_8_n_0 ),
        .O(\augend_reg[25]_i_3_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[25]_i_4 
       (.I0(\augend[25]_i_9_n_0 ),
        .I1(\augend[25]_i_10_n_0 ),
        .O(\augend_reg[25]_i_4_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  FDCE \augend_reg[26] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(augend[26]),
        .Q(ila_smax_exp_augend[26]));
  MUXF7 \augend_reg[26]_i_2 
       (.I0(\augend[26]_i_5_n_0 ),
        .I1(\augend[26]_i_6_n_0 ),
        .O(\augend_reg[26]_i_2_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[26]_i_3 
       (.I0(\augend[26]_i_7_n_0 ),
        .I1(\augend[26]_i_8_n_0 ),
        .O(\augend_reg[26]_i_3_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[26]_i_4 
       (.I0(\augend[26]_i_9_n_0 ),
        .I1(\augend[26]_i_10_n_0 ),
        .O(\augend_reg[26]_i_4_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  FDCE \augend_reg[27] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(augend[27]),
        .Q(ila_smax_exp_augend[27]));
  MUXF7 \augend_reg[27]_i_2 
       (.I0(\augend[27]_i_5_n_0 ),
        .I1(\augend[27]_i_6_n_0 ),
        .O(\augend_reg[27]_i_2_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[27]_i_3 
       (.I0(\augend[27]_i_7_n_0 ),
        .I1(\augend[27]_i_8_n_0 ),
        .O(\augend_reg[27]_i_3_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[27]_i_4 
       (.I0(\augend[27]_i_9_n_0 ),
        .I1(\augend[27]_i_10_n_0 ),
        .O(\augend_reg[27]_i_4_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  FDCE \augend_reg[28] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(augend[28]),
        .Q(ila_smax_exp_augend[28]));
  MUXF7 \augend_reg[28]_i_2 
       (.I0(\augend[28]_i_5_n_0 ),
        .I1(\augend[28]_i_6_n_0 ),
        .O(\augend_reg[28]_i_2_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[28]_i_3 
       (.I0(\augend[28]_i_7_n_0 ),
        .I1(\augend[28]_i_8_n_0 ),
        .O(\augend_reg[28]_i_3_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[28]_i_4 
       (.I0(\augend[28]_i_9_n_0 ),
        .I1(\augend[28]_i_10_n_0 ),
        .O(\augend_reg[28]_i_4_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  FDCE \augend_reg[29] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(augend[29]),
        .Q(ila_smax_exp_augend[29]));
  MUXF7 \augend_reg[29]_i_2 
       (.I0(\augend[29]_i_5_n_0 ),
        .I1(\augend[29]_i_6_n_0 ),
        .O(\augend_reg[29]_i_2_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[29]_i_3 
       (.I0(\augend[29]_i_7_n_0 ),
        .I1(\augend[29]_i_8_n_0 ),
        .O(\augend_reg[29]_i_3_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[29]_i_4 
       (.I0(\augend[29]_i_9_n_0 ),
        .I1(\augend[29]_i_10_n_0 ),
        .O(\augend_reg[29]_i_4_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  FDCE \augend_reg[2] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(augend[2]),
        .Q(ila_smax_exp_augend[2]));
  MUXF7 \augend_reg[2]_i_2 
       (.I0(\augend[2]_i_5_n_0 ),
        .I1(\augend[2]_i_6_n_0 ),
        .O(\augend_reg[2]_i_2_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[2]_i_3 
       (.I0(\augend[2]_i_7_n_0 ),
        .I1(\augend[2]_i_8_n_0 ),
        .O(\augend_reg[2]_i_3_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[2]_i_4 
       (.I0(\augend[2]_i_9_n_0 ),
        .I1(\augend[2]_i_10_n_0 ),
        .O(\augend_reg[2]_i_4_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  FDCE \augend_reg[30] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(augend[30]),
        .Q(ila_smax_exp_augend[30]));
  MUXF7 \augend_reg[30]_i_2 
       (.I0(\augend[30]_i_5_n_0 ),
        .I1(\augend[30]_i_6_n_0 ),
        .O(\augend_reg[30]_i_2_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[30]_i_3 
       (.I0(\augend[30]_i_7_n_0 ),
        .I1(\augend[30]_i_8_n_0 ),
        .O(\augend_reg[30]_i_3_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[30]_i_4 
       (.I0(\augend[30]_i_9_n_0 ),
        .I1(\augend[30]_i_10_n_0 ),
        .O(\augend_reg[30]_i_4_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  FDCE \augend_reg[31] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(augend[31]),
        .Q(ila_smax_exp_augend[31]));
  MUXF7 \augend_reg[31]_i_5 
       (.I0(\augend[31]_i_8_n_0 ),
        .I1(\augend[31]_i_9_n_0 ),
        .O(\augend_reg[31]_i_5_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[31]_i_6 
       (.I0(\augend[31]_i_10_n_0 ),
        .I1(\augend[31]_i_11_n_0 ),
        .O(\augend_reg[31]_i_6_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[31]_i_7 
       (.I0(\augend[31]_i_12_n_0 ),
        .I1(\augend[31]_i_13_n_0 ),
        .O(\augend_reg[31]_i_7_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  FDCE \augend_reg[3] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(augend[3]),
        .Q(ila_smax_exp_augend[3]));
  MUXF7 \augend_reg[3]_i_2 
       (.I0(\augend[3]_i_5_n_0 ),
        .I1(\augend[3]_i_6_n_0 ),
        .O(\augend_reg[3]_i_2_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[3]_i_3 
       (.I0(\augend[3]_i_7_n_0 ),
        .I1(\augend[3]_i_8_n_0 ),
        .O(\augend_reg[3]_i_3_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[3]_i_4 
       (.I0(\augend[3]_i_9_n_0 ),
        .I1(\augend[3]_i_10_n_0 ),
        .O(\augend_reg[3]_i_4_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  FDCE \augend_reg[4] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(augend[4]),
        .Q(ila_smax_exp_augend[4]));
  MUXF7 \augend_reg[4]_i_2 
       (.I0(\augend[4]_i_5_n_0 ),
        .I1(\augend[4]_i_6_n_0 ),
        .O(\augend_reg[4]_i_2_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[4]_i_3 
       (.I0(\augend[4]_i_7_n_0 ),
        .I1(\augend[4]_i_8_n_0 ),
        .O(\augend_reg[4]_i_3_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[4]_i_4 
       (.I0(\augend[4]_i_9_n_0 ),
        .I1(\augend[4]_i_10_n_0 ),
        .O(\augend_reg[4]_i_4_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  FDCE \augend_reg[5] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(augend[5]),
        .Q(ila_smax_exp_augend[5]));
  MUXF7 \augend_reg[5]_i_2 
       (.I0(\augend[5]_i_5_n_0 ),
        .I1(\augend[5]_i_6_n_0 ),
        .O(\augend_reg[5]_i_2_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[5]_i_3 
       (.I0(\augend[5]_i_7_n_0 ),
        .I1(\augend[5]_i_8_n_0 ),
        .O(\augend_reg[5]_i_3_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[5]_i_4 
       (.I0(\augend[5]_i_9_n_0 ),
        .I1(\augend[5]_i_10_n_0 ),
        .O(\augend_reg[5]_i_4_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  FDCE \augend_reg[6] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(augend[6]),
        .Q(ila_smax_exp_augend[6]));
  MUXF7 \augend_reg[6]_i_2 
       (.I0(\augend[6]_i_5_n_0 ),
        .I1(\augend[6]_i_6_n_0 ),
        .O(\augend_reg[6]_i_2_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[6]_i_3 
       (.I0(\augend[6]_i_7_n_0 ),
        .I1(\augend[6]_i_8_n_0 ),
        .O(\augend_reg[6]_i_3_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[6]_i_4 
       (.I0(\augend[6]_i_9_n_0 ),
        .I1(\augend[6]_i_10_n_0 ),
        .O(\augend_reg[6]_i_4_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  FDCE \augend_reg[7] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(augend[7]),
        .Q(ila_smax_exp_augend[7]));
  MUXF7 \augend_reg[7]_i_2 
       (.I0(\augend[7]_i_5_n_0 ),
        .I1(\augend[7]_i_6_n_0 ),
        .O(\augend_reg[7]_i_2_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[7]_i_3 
       (.I0(\augend[7]_i_7_n_0 ),
        .I1(\augend[7]_i_8_n_0 ),
        .O(\augend_reg[7]_i_3_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[7]_i_4 
       (.I0(\augend[7]_i_9_n_0 ),
        .I1(\augend[7]_i_10_n_0 ),
        .O(\augend_reg[7]_i_4_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  FDCE \augend_reg[8] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(augend[8]),
        .Q(ila_smax_exp_augend[8]));
  MUXF7 \augend_reg[8]_i_2 
       (.I0(\augend[8]_i_5_n_0 ),
        .I1(\augend[8]_i_6_n_0 ),
        .O(\augend_reg[8]_i_2_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[8]_i_3 
       (.I0(\augend[8]_i_7_n_0 ),
        .I1(\augend[8]_i_8_n_0 ),
        .O(\augend_reg[8]_i_3_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[8]_i_4 
       (.I0(\augend[8]_i_9_n_0 ),
        .I1(\augend[8]_i_10_n_0 ),
        .O(\augend_reg[8]_i_4_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  FDCE \augend_reg[9] 
       (.C(m00_axi_aclk),
        .CE(\augend[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(augend[9]),
        .Q(ila_smax_exp_augend[9]));
  MUXF7 \augend_reg[9]_i_2 
       (.I0(\augend[9]_i_5_n_0 ),
        .I1(\augend[9]_i_6_n_0 ),
        .O(\augend_reg[9]_i_2_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[9]_i_3 
       (.I0(\augend[9]_i_7_n_0 ),
        .I1(\augend[9]_i_8_n_0 ),
        .O(\augend_reg[9]_i_3_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  MUXF7 \augend_reg[9]_i_4 
       (.I0(\augend[9]_i_9_n_0 ),
        .I1(\augend[9]_i_10_n_0 ),
        .O(\augend_reg[9]_i_4_n_0 ),
        .S(\ila_smax_exp_sum_counter[4] [2]));
  LUT6 #(
    .INIT(64'h88F033F388F000C0)) 
    \current_state[0]_i_1 
       (.I0(\current_state[2]_i_3_n_0 ),
        .I1(\ila_smax_exp_fsm_state[2] [2]),
        .I2(\ila_smax_exp_hold_counter[3] [3]),
        .I3(\ila_smax_exp_fsm_state[2] [0]),
        .I4(\ila_smax_exp_fsm_state[2] [1]),
        .I5(\current_state_reg[0]_0 ),
        .O(next_state[0]));
  LUT5 #(
    .INIT(32'h88B88BB8)) 
    \current_state[1]_i_1 
       (.I0(\current_state[1]_i_2_n_0 ),
        .I1(\ila_smax_exp_fsm_state[2] [2]),
        .I2(\ila_smax_exp_fsm_state[2] [1]),
        .I3(\ila_smax_exp_fsm_state[2] [0]),
        .I4(\step_counter_reg[0]_0 ),
        .O(next_state[1]));
  LUT6 #(
    .INIT(64'hFBAAFBAAFBAA51AA)) 
    \current_state[1]_i_2 
       (.I0(\ila_smax_exp_fsm_state[2] [0]),
        .I1(\ila_smax_exp_hold_counter[3] [3]),
        .I2(valid_result_i_2_n_0),
        .I3(\ila_smax_exp_fsm_state[2] [1]),
        .I4(almost_full),
        .I5(full),
        .O(\current_state[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT5 #(
    .INIT(32'h00000001)) 
    \current_state[1]_i_3 
       (.I0(\current_state[2]_i_5_n_0 ),
        .I1(Q[4]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[2]),
        .O(\step_counter_reg[0]_0 ));
  LUT6 #(
    .INIT(64'hDAA0DFA0DFA0DFA0)) 
    \current_state[2]_i_1 
       (.I0(\ila_smax_exp_fsm_state[2] [0]),
        .I1(\current_state[2]_i_3_n_0 ),
        .I2(\ila_smax_exp_fsm_state[2] [1]),
        .I3(\ila_smax_exp_fsm_state[2] [2]),
        .I4(\ila_smax_exp_hold_counter[3] [3]),
        .I5(\current_state[2]_i_4_n_0 ),
        .O(next_state[2]));
  LUT2 #(
    .INIT(4'hE)) 
    \current_state[2]_i_3 
       (.I0(almost_full),
        .I1(full),
        .O(\current_state[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000FF7FFF)) 
    \current_state[2]_i_4 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[3]),
        .I5(\current_state[2]_i_5_n_0 ),
        .O(\current_state[2]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \current_state[2]_i_5 
       (.I0(Q[5]),
        .I1(Q[6]),
        .I2(Q[7]),
        .O(\current_state[2]_i_5_n_0 ));
  FDCE \current_state_reg[0] 
       (.C(m00_axi_aclk),
        .CE(1'b1),
        .CLR(m00_axi_aresetn_0),
        .D(next_state[0]),
        .Q(\ila_smax_exp_fsm_state[2] [0]));
  FDCE \current_state_reg[1] 
       (.C(m00_axi_aclk),
        .CE(1'b1),
        .CLR(m00_axi_aresetn_0),
        .D(next_state[1]),
        .Q(\ila_smax_exp_fsm_state[2] [1]));
  FDCE \current_state_reg[2] 
       (.C(m00_axi_aclk),
        .CE(1'b1),
        .CLR(m00_axi_aresetn_0),
        .D(next_state[2]),
        .Q(\ila_smax_exp_fsm_state[2] [2]));
  LUT1 #(
    .INIT(2'h1)) 
    \data_reg[28]_i_2 
       (.I0(m00_axi_aresetn),
        .O(\data_reg_reg[28]_0 ));
  LUT5 #(
    .INIT(32'h1000000F)) 
    \data_reg[31]_i_1 
       (.I0(almost_full),
        .I1(full),
        .I2(out),
        .I3(current_state[1]),
        .I4(current_state[2]),
        .O(\data_reg[31]_i_1_n_0 ));
  FDCE \data_reg_reg[0] 
       (.C(m00_axi_aclk),
        .CE(\data_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(D[0]),
        .Q(\ila_smax_exp_data_reg[31] [0]));
  FDCE \data_reg_reg[10] 
       (.C(m00_axi_aclk),
        .CE(\data_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(D[10]),
        .Q(\ila_smax_exp_data_reg[31] [10]));
  FDCE \data_reg_reg[11] 
       (.C(m00_axi_aclk),
        .CE(\data_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(D[11]),
        .Q(\ila_smax_exp_data_reg[31] [11]));
  FDCE \data_reg_reg[12] 
       (.C(m00_axi_aclk),
        .CE(\data_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(D[12]),
        .Q(\ila_smax_exp_data_reg[31] [12]));
  FDCE \data_reg_reg[13] 
       (.C(m00_axi_aclk),
        .CE(\data_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(D[13]),
        .Q(\ila_smax_exp_data_reg[31] [13]));
  FDCE \data_reg_reg[14] 
       (.C(m00_axi_aclk),
        .CE(\data_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(D[14]),
        .Q(\ila_smax_exp_data_reg[31] [14]));
  FDCE \data_reg_reg[15] 
       (.C(m00_axi_aclk),
        .CE(\data_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(D[15]),
        .Q(\ila_smax_exp_data_reg[31] [15]));
  FDCE \data_reg_reg[16] 
       (.C(m00_axi_aclk),
        .CE(\data_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(D[16]),
        .Q(\ila_smax_exp_data_reg[31] [16]));
  FDCE \data_reg_reg[17] 
       (.C(m00_axi_aclk),
        .CE(\data_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(D[17]),
        .Q(\ila_smax_exp_data_reg[31] [17]));
  FDCE \data_reg_reg[18] 
       (.C(m00_axi_aclk),
        .CE(\data_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(D[18]),
        .Q(\ila_smax_exp_data_reg[31] [18]));
  FDCE \data_reg_reg[19] 
       (.C(m00_axi_aclk),
        .CE(\data_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(D[19]),
        .Q(\ila_smax_exp_data_reg[31] [19]));
  FDCE \data_reg_reg[1] 
       (.C(m00_axi_aclk),
        .CE(\data_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(D[1]),
        .Q(\ila_smax_exp_data_reg[31] [1]));
  FDCE \data_reg_reg[20] 
       (.C(m00_axi_aclk),
        .CE(\data_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(D[20]),
        .Q(\ila_smax_exp_data_reg[31] [20]));
  FDCE \data_reg_reg[21] 
       (.C(m00_axi_aclk),
        .CE(\data_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(D[21]),
        .Q(\ila_smax_exp_data_reg[31] [21]));
  FDCE \data_reg_reg[22] 
       (.C(m00_axi_aclk),
        .CE(\data_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(D[22]),
        .Q(\ila_smax_exp_data_reg[31] [22]));
  FDCE \data_reg_reg[23] 
       (.C(m00_axi_aclk),
        .CE(\data_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(D[23]),
        .Q(\ila_smax_exp_data_reg[31] [23]));
  FDCE \data_reg_reg[24] 
       (.C(m00_axi_aclk),
        .CE(\data_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(D[24]),
        .Q(\ila_smax_exp_data_reg[31] [24]));
  FDCE \data_reg_reg[25] 
       (.C(m00_axi_aclk),
        .CE(\data_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(D[25]),
        .Q(\ila_smax_exp_data_reg[31] [25]));
  FDCE \data_reg_reg[26] 
       (.C(m00_axi_aclk),
        .CE(\data_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(D[26]),
        .Q(\ila_smax_exp_data_reg[31] [26]));
  FDCE \data_reg_reg[27] 
       (.C(m00_axi_aclk),
        .CE(\data_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(D[27]),
        .Q(\ila_smax_exp_data_reg[31] [27]));
  FDCE \data_reg_reg[28] 
       (.C(m00_axi_aclk),
        .CE(\data_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(D[28]),
        .Q(\ila_smax_exp_data_reg[31] [28]));
  FDCE \data_reg_reg[29] 
       (.C(m00_axi_aclk),
        .CE(\data_reg[31]_i_1_n_0 ),
        .CLR(\step_counter_reg[3]_0 ),
        .D(D[29]),
        .Q(\ila_smax_exp_data_reg[31] [29]));
  FDCE \data_reg_reg[2] 
       (.C(m00_axi_aclk),
        .CE(\data_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(D[2]),
        .Q(\ila_smax_exp_data_reg[31] [2]));
  FDCE \data_reg_reg[30] 
       (.C(m00_axi_aclk),
        .CE(\data_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_0),
        .D(D[30]),
        .Q(\ila_smax_exp_data_reg[31] [30]));
  FDCE \data_reg_reg[31] 
       (.C(m00_axi_aclk),
        .CE(\data_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_0),
        .D(D[31]),
        .Q(\ila_smax_exp_data_reg[31] [31]));
  FDCE \data_reg_reg[3] 
       (.C(m00_axi_aclk),
        .CE(\data_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(D[3]),
        .Q(\ila_smax_exp_data_reg[31] [3]));
  FDCE \data_reg_reg[4] 
       (.C(m00_axi_aclk),
        .CE(\data_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(D[4]),
        .Q(\ila_smax_exp_data_reg[31] [4]));
  FDCE \data_reg_reg[5] 
       (.C(m00_axi_aclk),
        .CE(\data_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(D[5]),
        .Q(\ila_smax_exp_data_reg[31] [5]));
  FDCE \data_reg_reg[6] 
       (.C(m00_axi_aclk),
        .CE(\data_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(D[6]),
        .Q(\ila_smax_exp_data_reg[31] [6]));
  FDCE \data_reg_reg[7] 
       (.C(m00_axi_aclk),
        .CE(\data_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(D[7]),
        .Q(\ila_smax_exp_data_reg[31] [7]));
  FDCE \data_reg_reg[8] 
       (.C(m00_axi_aclk),
        .CE(\data_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(D[8]),
        .Q(\ila_smax_exp_data_reg[31] [8]));
  FDCE \data_reg_reg[9] 
       (.C(m00_axi_aclk),
        .CE(\data_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(D[9]),
        .Q(\ila_smax_exp_data_reg[31] [9]));
  FDCE exp_done_reg
       (.C(m00_axi_aclk),
        .CE(\data_reg[31]_i_1_n_0 ),
        .CLR(\step_counter_reg[3]_0 ),
        .D(fifo_wr_en_i_1_n_0),
        .Q(ila_smax_exp_exp_done));
  LUT4 #(
    .INIT(16'h0200)) 
    \fifo_data[0]_i_1 
       (.I0(current_state[2]),
        .I1(almost_full),
        .I2(full),
        .I3(ila_smax_exp_sum[0]),
        .O(fifo_data[0]));
  LUT4 #(
    .INIT(16'h0200)) 
    \fifo_data[10]_i_1 
       (.I0(current_state[2]),
        .I1(almost_full),
        .I2(full),
        .I3(ila_smax_exp_sum[10]),
        .O(fifo_data[10]));
  LUT4 #(
    .INIT(16'h0200)) 
    \fifo_data[11]_i_1 
       (.I0(current_state[2]),
        .I1(almost_full),
        .I2(full),
        .I3(ila_smax_exp_sum[11]),
        .O(fifo_data[11]));
  LUT4 #(
    .INIT(16'h0200)) 
    \fifo_data[12]_i_1 
       (.I0(current_state[2]),
        .I1(almost_full),
        .I2(full),
        .I3(ila_smax_exp_sum[12]),
        .O(fifo_data[12]));
  LUT4 #(
    .INIT(16'h0200)) 
    \fifo_data[13]_i_1 
       (.I0(current_state[2]),
        .I1(almost_full),
        .I2(full),
        .I3(ila_smax_exp_sum[13]),
        .O(fifo_data[13]));
  LUT4 #(
    .INIT(16'h0200)) 
    \fifo_data[14]_i_1 
       (.I0(current_state[2]),
        .I1(almost_full),
        .I2(full),
        .I3(ila_smax_exp_sum[14]),
        .O(fifo_data[14]));
  LUT4 #(
    .INIT(16'h0200)) 
    \fifo_data[15]_i_1 
       (.I0(current_state[2]),
        .I1(almost_full),
        .I2(full),
        .I3(ila_smax_exp_sum[15]),
        .O(fifo_data[15]));
  LUT4 #(
    .INIT(16'h0200)) 
    \fifo_data[16]_i_1 
       (.I0(current_state[2]),
        .I1(almost_full),
        .I2(full),
        .I3(ila_smax_exp_sum[16]),
        .O(fifo_data[16]));
  LUT4 #(
    .INIT(16'h0200)) 
    \fifo_data[17]_i_1 
       (.I0(current_state[2]),
        .I1(almost_full),
        .I2(full),
        .I3(ila_smax_exp_sum[17]),
        .O(fifo_data[17]));
  LUT4 #(
    .INIT(16'h0200)) 
    \fifo_data[18]_i_1 
       (.I0(current_state[2]),
        .I1(almost_full),
        .I2(full),
        .I3(ila_smax_exp_sum[18]),
        .O(fifo_data[18]));
  LUT4 #(
    .INIT(16'h0200)) 
    \fifo_data[19]_i_1 
       (.I0(current_state[2]),
        .I1(almost_full),
        .I2(full),
        .I3(ila_smax_exp_sum[19]),
        .O(fifo_data[19]));
  LUT4 #(
    .INIT(16'h0200)) 
    \fifo_data[1]_i_1 
       (.I0(current_state[2]),
        .I1(almost_full),
        .I2(full),
        .I3(ila_smax_exp_sum[1]),
        .O(fifo_data[1]));
  LUT4 #(
    .INIT(16'h0200)) 
    \fifo_data[20]_i_1 
       (.I0(current_state[2]),
        .I1(almost_full),
        .I2(full),
        .I3(ila_smax_exp_sum[20]),
        .O(fifo_data[20]));
  LUT4 #(
    .INIT(16'h0200)) 
    \fifo_data[21]_i_1 
       (.I0(current_state[2]),
        .I1(almost_full),
        .I2(full),
        .I3(ila_smax_exp_sum[21]),
        .O(fifo_data[21]));
  LUT4 #(
    .INIT(16'h0200)) 
    \fifo_data[22]_i_1 
       (.I0(current_state[2]),
        .I1(almost_full),
        .I2(full),
        .I3(ila_smax_exp_sum[22]),
        .O(fifo_data[22]));
  LUT4 #(
    .INIT(16'h0200)) 
    \fifo_data[23]_i_1 
       (.I0(current_state[2]),
        .I1(almost_full),
        .I2(full),
        .I3(ila_smax_exp_sum[23]),
        .O(fifo_data[23]));
  LUT4 #(
    .INIT(16'h0200)) 
    \fifo_data[24]_i_1 
       (.I0(current_state[2]),
        .I1(almost_full),
        .I2(full),
        .I3(ila_smax_exp_sum[24]),
        .O(fifo_data[24]));
  LUT4 #(
    .INIT(16'h0200)) 
    \fifo_data[25]_i_1 
       (.I0(current_state[2]),
        .I1(almost_full),
        .I2(full),
        .I3(ila_smax_exp_sum[25]),
        .O(fifo_data[25]));
  LUT4 #(
    .INIT(16'h0200)) 
    \fifo_data[26]_i_1 
       (.I0(current_state[2]),
        .I1(almost_full),
        .I2(full),
        .I3(ila_smax_exp_sum[26]),
        .O(fifo_data[26]));
  LUT4 #(
    .INIT(16'h0200)) 
    \fifo_data[27]_i_1 
       (.I0(current_state[2]),
        .I1(almost_full),
        .I2(full),
        .I3(ila_smax_exp_sum[27]),
        .O(fifo_data[27]));
  LUT4 #(
    .INIT(16'h0200)) 
    \fifo_data[28]_i_1 
       (.I0(current_state[2]),
        .I1(almost_full),
        .I2(full),
        .I3(ila_smax_exp_sum[28]),
        .O(fifo_data[28]));
  LUT4 #(
    .INIT(16'h0200)) 
    \fifo_data[29]_i_1 
       (.I0(current_state[2]),
        .I1(almost_full),
        .I2(full),
        .I3(ila_smax_exp_sum[29]),
        .O(fifo_data[29]));
  LUT4 #(
    .INIT(16'h0200)) 
    \fifo_data[2]_i_1 
       (.I0(current_state[2]),
        .I1(almost_full),
        .I2(full),
        .I3(ila_smax_exp_sum[2]),
        .O(fifo_data[2]));
  LUT4 #(
    .INIT(16'h0200)) 
    \fifo_data[30]_i_1 
       (.I0(current_state[2]),
        .I1(almost_full),
        .I2(full),
        .I3(ila_smax_exp_sum[30]),
        .O(fifo_data[30]));
  LUT3 #(
    .INIT(8'h81)) 
    \fifo_data[31]_i_1 
       (.I0(current_state[1]),
        .I1(out),
        .I2(current_state[2]),
        .O(\fifo_data[31]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0200)) 
    \fifo_data[31]_i_2 
       (.I0(current_state[2]),
        .I1(almost_full),
        .I2(full),
        .I3(ila_smax_exp_sum[31]),
        .O(fifo_data[31]));
  LUT4 #(
    .INIT(16'h0200)) 
    \fifo_data[3]_i_1 
       (.I0(current_state[2]),
        .I1(almost_full),
        .I2(full),
        .I3(ila_smax_exp_sum[3]),
        .O(fifo_data[3]));
  LUT4 #(
    .INIT(16'h0200)) 
    \fifo_data[4]_i_1 
       (.I0(current_state[2]),
        .I1(almost_full),
        .I2(full),
        .I3(ila_smax_exp_sum[4]),
        .O(fifo_data[4]));
  LUT4 #(
    .INIT(16'h0200)) 
    \fifo_data[5]_i_1 
       (.I0(current_state[2]),
        .I1(almost_full),
        .I2(full),
        .I3(ila_smax_exp_sum[5]),
        .O(fifo_data[5]));
  LUT4 #(
    .INIT(16'h0200)) 
    \fifo_data[6]_i_1 
       (.I0(current_state[2]),
        .I1(almost_full),
        .I2(full),
        .I3(ila_smax_exp_sum[6]),
        .O(fifo_data[6]));
  LUT4 #(
    .INIT(16'h0200)) 
    \fifo_data[7]_i_1 
       (.I0(current_state[2]),
        .I1(almost_full),
        .I2(full),
        .I3(ila_smax_exp_sum[7]),
        .O(fifo_data[7]));
  LUT4 #(
    .INIT(16'h0200)) 
    \fifo_data[8]_i_1 
       (.I0(current_state[2]),
        .I1(almost_full),
        .I2(full),
        .I3(ila_smax_exp_sum[8]),
        .O(fifo_data[8]));
  LUT4 #(
    .INIT(16'h0200)) 
    \fifo_data[9]_i_1 
       (.I0(current_state[2]),
        .I1(almost_full),
        .I2(full),
        .I3(ila_smax_exp_sum[9]),
        .O(fifo_data[9]));
  FDCE \fifo_data_reg[0] 
       (.C(m00_axi_aclk),
        .CE(\fifo_data[31]_i_1_n_0 ),
        .CLR(\step_counter_reg[3]_0 ),
        .D(fifo_data[0]),
        .Q(ila_smax_exp_fifo_data[0]));
  FDCE \fifo_data_reg[10] 
       (.C(m00_axi_aclk),
        .CE(\fifo_data[31]_i_1_n_0 ),
        .CLR(\step_counter_reg[3]_0 ),
        .D(fifo_data[10]),
        .Q(ila_smax_exp_fifo_data[10]));
  FDCE \fifo_data_reg[11] 
       (.C(m00_axi_aclk),
        .CE(\fifo_data[31]_i_1_n_0 ),
        .CLR(\step_counter_reg[3]_0 ),
        .D(fifo_data[11]),
        .Q(ila_smax_exp_fifo_data[11]));
  FDCE \fifo_data_reg[12] 
       (.C(m00_axi_aclk),
        .CE(\fifo_data[31]_i_1_n_0 ),
        .CLR(\step_counter_reg[3]_0 ),
        .D(fifo_data[12]),
        .Q(ila_smax_exp_fifo_data[12]));
  FDCE \fifo_data_reg[13] 
       (.C(m00_axi_aclk),
        .CE(\fifo_data[31]_i_1_n_0 ),
        .CLR(\step_counter_reg[3]_0 ),
        .D(fifo_data[13]),
        .Q(ila_smax_exp_fifo_data[13]));
  FDCE \fifo_data_reg[14] 
       (.C(m00_axi_aclk),
        .CE(\fifo_data[31]_i_1_n_0 ),
        .CLR(\step_counter_reg[3]_0 ),
        .D(fifo_data[14]),
        .Q(ila_smax_exp_fifo_data[14]));
  FDCE \fifo_data_reg[15] 
       (.C(m00_axi_aclk),
        .CE(\fifo_data[31]_i_1_n_0 ),
        .CLR(\step_counter_reg[3]_0 ),
        .D(fifo_data[15]),
        .Q(ila_smax_exp_fifo_data[15]));
  FDCE \fifo_data_reg[16] 
       (.C(m00_axi_aclk),
        .CE(\fifo_data[31]_i_1_n_0 ),
        .CLR(\step_counter_reg[3]_0 ),
        .D(fifo_data[16]),
        .Q(ila_smax_exp_fifo_data[16]));
  FDCE \fifo_data_reg[17] 
       (.C(m00_axi_aclk),
        .CE(\fifo_data[31]_i_1_n_0 ),
        .CLR(\step_counter_reg[3]_0 ),
        .D(fifo_data[17]),
        .Q(ila_smax_exp_fifo_data[17]));
  FDCE \fifo_data_reg[18] 
       (.C(m00_axi_aclk),
        .CE(\fifo_data[31]_i_1_n_0 ),
        .CLR(\step_counter_reg[3]_0 ),
        .D(fifo_data[18]),
        .Q(ila_smax_exp_fifo_data[18]));
  FDCE \fifo_data_reg[19] 
       (.C(m00_axi_aclk),
        .CE(\fifo_data[31]_i_1_n_0 ),
        .CLR(\step_counter_reg[3]_0 ),
        .D(fifo_data[19]),
        .Q(ila_smax_exp_fifo_data[19]));
  FDCE \fifo_data_reg[1] 
       (.C(m00_axi_aclk),
        .CE(\fifo_data[31]_i_1_n_0 ),
        .CLR(\step_counter_reg[3]_0 ),
        .D(fifo_data[1]),
        .Q(ila_smax_exp_fifo_data[1]));
  FDCE \fifo_data_reg[20] 
       (.C(m00_axi_aclk),
        .CE(\fifo_data[31]_i_1_n_0 ),
        .CLR(\step_counter_reg[3]_0 ),
        .D(fifo_data[20]),
        .Q(ila_smax_exp_fifo_data[20]));
  FDCE \fifo_data_reg[21] 
       (.C(m00_axi_aclk),
        .CE(\fifo_data[31]_i_1_n_0 ),
        .CLR(\step_counter_reg[3]_0 ),
        .D(fifo_data[21]),
        .Q(ila_smax_exp_fifo_data[21]));
  FDCE \fifo_data_reg[22] 
       (.C(m00_axi_aclk),
        .CE(\fifo_data[31]_i_1_n_0 ),
        .CLR(\step_counter_reg[3]_0 ),
        .D(fifo_data[22]),
        .Q(ila_smax_exp_fifo_data[22]));
  FDCE \fifo_data_reg[23] 
       (.C(m00_axi_aclk),
        .CE(\fifo_data[31]_i_1_n_0 ),
        .CLR(\step_counter_reg[3]_0 ),
        .D(fifo_data[23]),
        .Q(ila_smax_exp_fifo_data[23]));
  FDCE \fifo_data_reg[24] 
       (.C(m00_axi_aclk),
        .CE(\fifo_data[31]_i_1_n_0 ),
        .CLR(\step_counter_reg[3]_0 ),
        .D(fifo_data[24]),
        .Q(ila_smax_exp_fifo_data[24]));
  FDCE \fifo_data_reg[25] 
       (.C(m00_axi_aclk),
        .CE(\fifo_data[31]_i_1_n_0 ),
        .CLR(\step_counter_reg[3]_0 ),
        .D(fifo_data[25]),
        .Q(ila_smax_exp_fifo_data[25]));
  FDCE \fifo_data_reg[26] 
       (.C(m00_axi_aclk),
        .CE(\fifo_data[31]_i_1_n_0 ),
        .CLR(\step_counter_reg[3]_0 ),
        .D(fifo_data[26]),
        .Q(ila_smax_exp_fifo_data[26]));
  FDCE \fifo_data_reg[27] 
       (.C(m00_axi_aclk),
        .CE(\fifo_data[31]_i_1_n_0 ),
        .CLR(\step_counter_reg[3]_0 ),
        .D(fifo_data[27]),
        .Q(ila_smax_exp_fifo_data[27]));
  FDCE \fifo_data_reg[28] 
       (.C(m00_axi_aclk),
        .CE(\fifo_data[31]_i_1_n_0 ),
        .CLR(\step_counter_reg[3]_0 ),
        .D(fifo_data[28]),
        .Q(ila_smax_exp_fifo_data[28]));
  FDCE \fifo_data_reg[29] 
       (.C(m00_axi_aclk),
        .CE(\fifo_data[31]_i_1_n_0 ),
        .CLR(\step_counter_reg[3]_0 ),
        .D(fifo_data[29]),
        .Q(ila_smax_exp_fifo_data[29]));
  FDCE \fifo_data_reg[2] 
       (.C(m00_axi_aclk),
        .CE(\fifo_data[31]_i_1_n_0 ),
        .CLR(\step_counter_reg[3]_0 ),
        .D(fifo_data[2]),
        .Q(ila_smax_exp_fifo_data[2]));
  FDCE \fifo_data_reg[30] 
       (.C(m00_axi_aclk),
        .CE(\fifo_data[31]_i_1_n_0 ),
        .CLR(\step_counter_reg[3]_0 ),
        .D(fifo_data[30]),
        .Q(ila_smax_exp_fifo_data[30]));
  FDCE \fifo_data_reg[31] 
       (.C(m00_axi_aclk),
        .CE(\fifo_data[31]_i_1_n_0 ),
        .CLR(\step_counter_reg[3]_0 ),
        .D(fifo_data[31]),
        .Q(ila_smax_exp_fifo_data[31]));
  FDCE \fifo_data_reg[3] 
       (.C(m00_axi_aclk),
        .CE(\fifo_data[31]_i_1_n_0 ),
        .CLR(\step_counter_reg[3]_0 ),
        .D(fifo_data[3]),
        .Q(ila_smax_exp_fifo_data[3]));
  FDCE \fifo_data_reg[4] 
       (.C(m00_axi_aclk),
        .CE(\fifo_data[31]_i_1_n_0 ),
        .CLR(\step_counter_reg[3]_0 ),
        .D(fifo_data[4]),
        .Q(ila_smax_exp_fifo_data[4]));
  FDCE \fifo_data_reg[5] 
       (.C(m00_axi_aclk),
        .CE(\fifo_data[31]_i_1_n_0 ),
        .CLR(\step_counter_reg[3]_0 ),
        .D(fifo_data[5]),
        .Q(ila_smax_exp_fifo_data[5]));
  FDCE \fifo_data_reg[6] 
       (.C(m00_axi_aclk),
        .CE(\fifo_data[31]_i_1_n_0 ),
        .CLR(\step_counter_reg[3]_0 ),
        .D(fifo_data[6]),
        .Q(ila_smax_exp_fifo_data[6]));
  FDCE \fifo_data_reg[7] 
       (.C(m00_axi_aclk),
        .CE(\fifo_data[31]_i_1_n_0 ),
        .CLR(\step_counter_reg[3]_0 ),
        .D(fifo_data[7]),
        .Q(ila_smax_exp_fifo_data[7]));
  FDCE \fifo_data_reg[8] 
       (.C(m00_axi_aclk),
        .CE(\fifo_data[31]_i_1_n_0 ),
        .CLR(\step_counter_reg[3]_0 ),
        .D(fifo_data[8]),
        .Q(ila_smax_exp_fifo_data[8]));
  FDCE \fifo_data_reg[9] 
       (.C(m00_axi_aclk),
        .CE(\fifo_data[31]_i_1_n_0 ),
        .CLR(\step_counter_reg[3]_0 ),
        .D(fifo_data[9]),
        .Q(ila_smax_exp_fifo_data[9]));
  LUT3 #(
    .INIT(8'h02)) 
    fifo_wr_en_i_1
       (.I0(current_state[2]),
        .I1(full),
        .I2(almost_full),
        .O(fifo_wr_en_i_1_n_0));
  FDCE fifo_wr_en_reg
       (.C(m00_axi_aclk),
        .CE(\fifo_data[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_0),
        .D(fifo_wr_en_i_1_n_0),
        .Q(ila_smax_exp_fifo_wr_en));
  LUT4 #(
    .INIT(16'h1110)) 
    \hold_counter[0]_i_1 
       (.I0(\ila_smax_exp_hold_counter[3] [0]),
        .I1(\ila_smax_exp_hold_counter[3] [3]),
        .I2(current_state[1]),
        .I3(current_state[2]),
        .O(hold_counter[0]));
  LUT5 #(
    .INIT(32'h06060600)) 
    \hold_counter[1]_i_1 
       (.I0(\ila_smax_exp_hold_counter[3] [0]),
        .I1(\ila_smax_exp_hold_counter[3] [1]),
        .I2(\ila_smax_exp_hold_counter[3] [3]),
        .I3(current_state[1]),
        .I4(current_state[2]),
        .O(hold_counter[1]));
  LUT6 #(
    .INIT(64'h1444144414440000)) 
    \hold_counter[2]_i_1 
       (.I0(\ila_smax_exp_hold_counter[3] [3]),
        .I1(\ila_smax_exp_hold_counter[3] [2]),
        .I2(\ila_smax_exp_hold_counter[3] [1]),
        .I3(\ila_smax_exp_hold_counter[3] [0]),
        .I4(current_state[1]),
        .I5(current_state[2]),
        .O(hold_counter[2]));
  LUT1 #(
    .INIT(2'h1)) 
    \hold_counter[3]_i_1 
       (.I0(out),
        .O(\hold_counter[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0080008000800000)) 
    \hold_counter[3]_i_2 
       (.I0(\ila_smax_exp_hold_counter[3] [2]),
        .I1(\ila_smax_exp_hold_counter[3] [1]),
        .I2(\ila_smax_exp_hold_counter[3] [0]),
        .I3(\ila_smax_exp_hold_counter[3] [3]),
        .I4(current_state[1]),
        .I5(current_state[2]),
        .O(hold_counter[3]));
  FDCE \hold_counter_reg[0] 
       (.C(m00_axi_aclk),
        .CE(\hold_counter[3]_i_1_n_0 ),
        .CLR(\step_counter_reg[3]_0 ),
        .D(hold_counter[0]),
        .Q(\ila_smax_exp_hold_counter[3] [0]));
  FDCE \hold_counter_reg[1] 
       (.C(m00_axi_aclk),
        .CE(\hold_counter[3]_i_1_n_0 ),
        .CLR(\step_counter_reg[3]_0 ),
        .D(hold_counter[1]),
        .Q(\ila_smax_exp_hold_counter[3] [1]));
  FDCE \hold_counter_reg[2] 
       (.C(m00_axi_aclk),
        .CE(\hold_counter[3]_i_1_n_0 ),
        .CLR(\step_counter_reg[3]_0 ),
        .D(hold_counter[2]),
        .Q(\ila_smax_exp_hold_counter[3] [2]));
  FDCE \hold_counter_reg[3] 
       (.C(m00_axi_aclk),
        .CE(\hold_counter[3]_i_1_n_0 ),
        .CLR(\step_counter_reg[3]_0 ),
        .D(hold_counter[3]),
        .Q(\ila_smax_exp_hold_counter[3] [3]));
  LUT3 #(
    .INIT(8'h01)) 
    ila_smax_exp_function_ready_INST_0
       (.I0(current_state[2]),
        .I1(current_state[1]),
        .I2(out),
        .O(ila_smax_exp_function_ready));
  LUT5 #(
    .INIT(32'h88F88888)) 
    \mult_reg[0]_i_1 
       (.I0(result[0]),
        .I1(current_state[1]),
        .I2(\ila_smax_exp_data_reg[31] [0]),
        .I3(\mult_reg[31]_i_3_n_0 ),
        .I4(out),
        .O(mult_reg[0]));
  LUT5 #(
    .INIT(32'h88F88888)) 
    \mult_reg[10]_i_1 
       (.I0(result[10]),
        .I1(current_state[1]),
        .I2(\ila_smax_exp_data_reg[31] [10]),
        .I3(\mult_reg[31]_i_3_n_0 ),
        .I4(out),
        .O(mult_reg[10]));
  LUT5 #(
    .INIT(32'h88F88888)) 
    \mult_reg[11]_i_1 
       (.I0(result[11]),
        .I1(current_state[1]),
        .I2(\ila_smax_exp_data_reg[31] [11]),
        .I3(\mult_reg[31]_i_3_n_0 ),
        .I4(out),
        .O(mult_reg[11]));
  LUT5 #(
    .INIT(32'h88F88888)) 
    \mult_reg[12]_i_1 
       (.I0(result[12]),
        .I1(current_state[1]),
        .I2(\ila_smax_exp_data_reg[31] [12]),
        .I3(\mult_reg[31]_i_3_n_0 ),
        .I4(out),
        .O(mult_reg[12]));
  LUT5 #(
    .INIT(32'h88F88888)) 
    \mult_reg[13]_i_1 
       (.I0(result[13]),
        .I1(current_state[1]),
        .I2(\ila_smax_exp_data_reg[31] [13]),
        .I3(\mult_reg[31]_i_3_n_0 ),
        .I4(out),
        .O(mult_reg[13]));
  LUT5 #(
    .INIT(32'h88F88888)) 
    \mult_reg[14]_i_1 
       (.I0(result[14]),
        .I1(current_state[1]),
        .I2(\ila_smax_exp_data_reg[31] [14]),
        .I3(\mult_reg[31]_i_3_n_0 ),
        .I4(out),
        .O(mult_reg[14]));
  LUT5 #(
    .INIT(32'h88F88888)) 
    \mult_reg[15]_i_1 
       (.I0(result[15]),
        .I1(current_state[1]),
        .I2(\ila_smax_exp_data_reg[31] [15]),
        .I3(\mult_reg[31]_i_3_n_0 ),
        .I4(out),
        .O(mult_reg[15]));
  LUT5 #(
    .INIT(32'h88F88888)) 
    \mult_reg[16]_i_1 
       (.I0(result[16]),
        .I1(current_state[1]),
        .I2(\ila_smax_exp_data_reg[31] [16]),
        .I3(\mult_reg[31]_i_3_n_0 ),
        .I4(out),
        .O(mult_reg[16]));
  LUT5 #(
    .INIT(32'h88F88888)) 
    \mult_reg[17]_i_1 
       (.I0(result[17]),
        .I1(current_state[1]),
        .I2(\ila_smax_exp_data_reg[31] [17]),
        .I3(\mult_reg[31]_i_3_n_0 ),
        .I4(out),
        .O(mult_reg[17]));
  LUT5 #(
    .INIT(32'h88F88888)) 
    \mult_reg[18]_i_1 
       (.I0(result[18]),
        .I1(current_state[1]),
        .I2(\ila_smax_exp_data_reg[31] [18]),
        .I3(\mult_reg[31]_i_3_n_0 ),
        .I4(out),
        .O(mult_reg[18]));
  LUT5 #(
    .INIT(32'h88F88888)) 
    \mult_reg[19]_i_1 
       (.I0(result[19]),
        .I1(current_state[1]),
        .I2(\ila_smax_exp_data_reg[31] [19]),
        .I3(\mult_reg[31]_i_3_n_0 ),
        .I4(out),
        .O(mult_reg[19]));
  LUT5 #(
    .INIT(32'h88F88888)) 
    \mult_reg[1]_i_1 
       (.I0(result[1]),
        .I1(current_state[1]),
        .I2(\ila_smax_exp_data_reg[31] [1]),
        .I3(\mult_reg[31]_i_3_n_0 ),
        .I4(out),
        .O(mult_reg[1]));
  LUT5 #(
    .INIT(32'h88F88888)) 
    \mult_reg[20]_i_1 
       (.I0(result[20]),
        .I1(current_state[1]),
        .I2(\ila_smax_exp_data_reg[31] [20]),
        .I3(\mult_reg[31]_i_3_n_0 ),
        .I4(out),
        .O(mult_reg[20]));
  LUT5 #(
    .INIT(32'h88F88888)) 
    \mult_reg[21]_i_1 
       (.I0(result[21]),
        .I1(current_state[1]),
        .I2(\ila_smax_exp_data_reg[31] [21]),
        .I3(\mult_reg[31]_i_3_n_0 ),
        .I4(out),
        .O(mult_reg[21]));
  LUT5 #(
    .INIT(32'h88F88888)) 
    \mult_reg[22]_i_1 
       (.I0(result[22]),
        .I1(current_state[1]),
        .I2(\ila_smax_exp_data_reg[31] [22]),
        .I3(\mult_reg[31]_i_3_n_0 ),
        .I4(out),
        .O(mult_reg[22]));
  LUT5 #(
    .INIT(32'hFFF88888)) 
    \mult_reg[23]_i_1 
       (.I0(result[23]),
        .I1(current_state[1]),
        .I2(\ila_smax_exp_data_reg[31] [23]),
        .I3(\mult_reg[31]_i_3_n_0 ),
        .I4(out),
        .O(mult_reg[23]));
  LUT5 #(
    .INIT(32'hFFF88888)) 
    \mult_reg[24]_i_1 
       (.I0(result[24]),
        .I1(current_state[1]),
        .I2(\ila_smax_exp_data_reg[31] [24]),
        .I3(\mult_reg[31]_i_3_n_0 ),
        .I4(out),
        .O(mult_reg[24]));
  LUT5 #(
    .INIT(32'hFFF88888)) 
    \mult_reg[25]_i_1 
       (.I0(result[25]),
        .I1(current_state[1]),
        .I2(\ila_smax_exp_data_reg[31] [25]),
        .I3(\mult_reg[31]_i_3_n_0 ),
        .I4(out),
        .O(mult_reg[25]));
  LUT5 #(
    .INIT(32'hFFF88888)) 
    \mult_reg[26]_i_1 
       (.I0(result[26]),
        .I1(current_state[1]),
        .I2(\ila_smax_exp_data_reg[31] [26]),
        .I3(\mult_reg[31]_i_3_n_0 ),
        .I4(out),
        .O(mult_reg[26]));
  LUT5 #(
    .INIT(32'hFFF88888)) 
    \mult_reg[27]_i_1 
       (.I0(result[27]),
        .I1(current_state[1]),
        .I2(\ila_smax_exp_data_reg[31] [27]),
        .I3(\mult_reg[31]_i_3_n_0 ),
        .I4(out),
        .O(mult_reg[27]));
  LUT5 #(
    .INIT(32'hFFF88888)) 
    \mult_reg[28]_i_1 
       (.I0(result[28]),
        .I1(current_state[1]),
        .I2(\ila_smax_exp_data_reg[31] [28]),
        .I3(\mult_reg[31]_i_3_n_0 ),
        .I4(out),
        .O(mult_reg[28]));
  LUT5 #(
    .INIT(32'hFFF88888)) 
    \mult_reg[29]_i_1 
       (.I0(result[29]),
        .I1(current_state[1]),
        .I2(\ila_smax_exp_data_reg[31] [29]),
        .I3(\mult_reg[31]_i_3_n_0 ),
        .I4(out),
        .O(mult_reg[29]));
  LUT5 #(
    .INIT(32'h88F88888)) 
    \mult_reg[2]_i_1 
       (.I0(result[2]),
        .I1(current_state[1]),
        .I2(\ila_smax_exp_data_reg[31] [2]),
        .I3(\mult_reg[31]_i_3_n_0 ),
        .I4(out),
        .O(mult_reg[2]));
  LUT5 #(
    .INIT(32'h88F88888)) 
    \mult_reg[30]_i_1 
       (.I0(result[30]),
        .I1(current_state[1]),
        .I2(\ila_smax_exp_data_reg[31] [30]),
        .I3(\mult_reg[31]_i_3_n_0 ),
        .I4(out),
        .O(mult_reg[30]));
  LUT5 #(
    .INIT(32'h00004F45)) 
    \mult_reg[31]_i_1 
       (.I0(current_state[1]),
        .I1(\step_counter_reg[0]_0 ),
        .I2(out),
        .I3(\ila_smax_exp_hold_counter[3] [3]),
        .I4(current_state[2]),
        .O(\mult_reg[31]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h88F88888)) 
    \mult_reg[31]_i_2 
       (.I0(result[31]),
        .I1(current_state[1]),
        .I2(\ila_smax_exp_data_reg[31] [31]),
        .I3(\mult_reg[31]_i_3_n_0 ),
        .I4(out),
        .O(mult_reg[31]));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \mult_reg[31]_i_3 
       (.I0(Q[2]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[4]),
        .I4(\current_state[2]_i_5_n_0 ),
        .I5(Q[0]),
        .O(\mult_reg[31]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h88F88888)) 
    \mult_reg[3]_i_1 
       (.I0(result[3]),
        .I1(current_state[1]),
        .I2(\ila_smax_exp_data_reg[31] [3]),
        .I3(\mult_reg[31]_i_3_n_0 ),
        .I4(out),
        .O(mult_reg[3]));
  LUT5 #(
    .INIT(32'h88F88888)) 
    \mult_reg[4]_i_1 
       (.I0(result[4]),
        .I1(current_state[1]),
        .I2(\ila_smax_exp_data_reg[31] [4]),
        .I3(\mult_reg[31]_i_3_n_0 ),
        .I4(out),
        .O(mult_reg[4]));
  LUT5 #(
    .INIT(32'h88F88888)) 
    \mult_reg[5]_i_1 
       (.I0(result[5]),
        .I1(current_state[1]),
        .I2(\ila_smax_exp_data_reg[31] [5]),
        .I3(\mult_reg[31]_i_3_n_0 ),
        .I4(out),
        .O(mult_reg[5]));
  LUT5 #(
    .INIT(32'h88F88888)) 
    \mult_reg[6]_i_1 
       (.I0(result[6]),
        .I1(current_state[1]),
        .I2(\ila_smax_exp_data_reg[31] [6]),
        .I3(\mult_reg[31]_i_3_n_0 ),
        .I4(out),
        .O(mult_reg[6]));
  LUT5 #(
    .INIT(32'h88F88888)) 
    \mult_reg[7]_i_1 
       (.I0(result[7]),
        .I1(current_state[1]),
        .I2(\ila_smax_exp_data_reg[31] [7]),
        .I3(\mult_reg[31]_i_3_n_0 ),
        .I4(out),
        .O(mult_reg[7]));
  LUT5 #(
    .INIT(32'h88F88888)) 
    \mult_reg[8]_i_1 
       (.I0(result[8]),
        .I1(current_state[1]),
        .I2(\ila_smax_exp_data_reg[31] [8]),
        .I3(\mult_reg[31]_i_3_n_0 ),
        .I4(out),
        .O(mult_reg[8]));
  LUT5 #(
    .INIT(32'h88F88888)) 
    \mult_reg[9]_i_1 
       (.I0(result[9]),
        .I1(current_state[1]),
        .I2(\ila_smax_exp_data_reg[31] [9]),
        .I3(\mult_reg[31]_i_3_n_0 ),
        .I4(out),
        .O(mult_reg[9]));
  FDCE \mult_reg_reg[0] 
       (.C(m00_axi_aclk),
        .CE(\mult_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(mult_reg[0]),
        .Q(ila_smax_exp_mult_reg[0]));
  FDCE \mult_reg_reg[10] 
       (.C(m00_axi_aclk),
        .CE(\mult_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(mult_reg[10]),
        .Q(ila_smax_exp_mult_reg[10]));
  FDCE \mult_reg_reg[11] 
       (.C(m00_axi_aclk),
        .CE(\mult_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(mult_reg[11]),
        .Q(ila_smax_exp_mult_reg[11]));
  FDCE \mult_reg_reg[12] 
       (.C(m00_axi_aclk),
        .CE(\mult_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(mult_reg[12]),
        .Q(ila_smax_exp_mult_reg[12]));
  FDCE \mult_reg_reg[13] 
       (.C(m00_axi_aclk),
        .CE(\mult_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(mult_reg[13]),
        .Q(ila_smax_exp_mult_reg[13]));
  FDCE \mult_reg_reg[14] 
       (.C(m00_axi_aclk),
        .CE(\mult_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(mult_reg[14]),
        .Q(ila_smax_exp_mult_reg[14]));
  FDCE \mult_reg_reg[15] 
       (.C(m00_axi_aclk),
        .CE(\mult_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(mult_reg[15]),
        .Q(ila_smax_exp_mult_reg[15]));
  FDCE \mult_reg_reg[16] 
       (.C(m00_axi_aclk),
        .CE(\mult_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(mult_reg[16]),
        .Q(ila_smax_exp_mult_reg[16]));
  FDCE \mult_reg_reg[17] 
       (.C(m00_axi_aclk),
        .CE(\mult_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(mult_reg[17]),
        .Q(ila_smax_exp_mult_reg[17]));
  FDCE \mult_reg_reg[18] 
       (.C(m00_axi_aclk),
        .CE(\mult_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(mult_reg[18]),
        .Q(ila_smax_exp_mult_reg[18]));
  FDCE \mult_reg_reg[19] 
       (.C(m00_axi_aclk),
        .CE(\mult_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(mult_reg[19]),
        .Q(ila_smax_exp_mult_reg[19]));
  FDCE \mult_reg_reg[1] 
       (.C(m00_axi_aclk),
        .CE(\mult_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(mult_reg[1]),
        .Q(ila_smax_exp_mult_reg[1]));
  FDCE \mult_reg_reg[20] 
       (.C(m00_axi_aclk),
        .CE(\mult_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(mult_reg[20]),
        .Q(ila_smax_exp_mult_reg[20]));
  FDCE \mult_reg_reg[21] 
       (.C(m00_axi_aclk),
        .CE(\mult_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(mult_reg[21]),
        .Q(ila_smax_exp_mult_reg[21]));
  FDCE \mult_reg_reg[22] 
       (.C(m00_axi_aclk),
        .CE(\mult_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(mult_reg[22]),
        .Q(ila_smax_exp_mult_reg[22]));
  FDCE \mult_reg_reg[23] 
       (.C(m00_axi_aclk),
        .CE(\mult_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(mult_reg[23]),
        .Q(ila_smax_exp_mult_reg[23]));
  FDCE \mult_reg_reg[24] 
       (.C(m00_axi_aclk),
        .CE(\mult_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(mult_reg[24]),
        .Q(ila_smax_exp_mult_reg[24]));
  FDCE \mult_reg_reg[25] 
       (.C(m00_axi_aclk),
        .CE(\mult_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(mult_reg[25]),
        .Q(ila_smax_exp_mult_reg[25]));
  FDCE \mult_reg_reg[26] 
       (.C(m00_axi_aclk),
        .CE(\mult_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(mult_reg[26]),
        .Q(ila_smax_exp_mult_reg[26]));
  FDCE \mult_reg_reg[27] 
       (.C(m00_axi_aclk),
        .CE(\mult_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(mult_reg[27]),
        .Q(ila_smax_exp_mult_reg[27]));
  FDCE \mult_reg_reg[28] 
       (.C(m00_axi_aclk),
        .CE(\mult_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(mult_reg[28]),
        .Q(ila_smax_exp_mult_reg[28]));
  FDCE \mult_reg_reg[29] 
       (.C(m00_axi_aclk),
        .CE(\mult_reg[31]_i_1_n_0 ),
        .CLR(\step_counter_reg[3]_0 ),
        .D(mult_reg[29]),
        .Q(ila_smax_exp_mult_reg[29]));
  FDCE \mult_reg_reg[2] 
       (.C(m00_axi_aclk),
        .CE(\mult_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(mult_reg[2]),
        .Q(ila_smax_exp_mult_reg[2]));
  FDCE \mult_reg_reg[30] 
       (.C(m00_axi_aclk),
        .CE(\mult_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_0),
        .D(mult_reg[30]),
        .Q(ila_smax_exp_mult_reg[30]));
  FDCE \mult_reg_reg[31] 
       (.C(m00_axi_aclk),
        .CE(\mult_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_0),
        .D(mult_reg[31]),
        .Q(ila_smax_exp_mult_reg[31]));
  FDCE \mult_reg_reg[3] 
       (.C(m00_axi_aclk),
        .CE(\mult_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(mult_reg[3]),
        .Q(ila_smax_exp_mult_reg[3]));
  FDCE \mult_reg_reg[4] 
       (.C(m00_axi_aclk),
        .CE(\mult_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(mult_reg[4]),
        .Q(ila_smax_exp_mult_reg[4]));
  FDCE \mult_reg_reg[5] 
       (.C(m00_axi_aclk),
        .CE(\mult_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(mult_reg[5]),
        .Q(ila_smax_exp_mult_reg[5]));
  FDCE \mult_reg_reg[6] 
       (.C(m00_axi_aclk),
        .CE(\mult_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(mult_reg[6]),
        .Q(ila_smax_exp_mult_reg[6]));
  FDCE \mult_reg_reg[7] 
       (.C(m00_axi_aclk),
        .CE(\mult_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(mult_reg[7]),
        .Q(ila_smax_exp_mult_reg[7]));
  FDCE \mult_reg_reg[8] 
       (.C(m00_axi_aclk),
        .CE(\mult_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(mult_reg[8]),
        .Q(ila_smax_exp_mult_reg[8]));
  FDCE \mult_reg_reg[9] 
       (.C(m00_axi_aclk),
        .CE(\mult_reg[31]_i_1_n_0 ),
        .CLR(\data_reg_reg[28]_0 ),
        .D(mult_reg[9]),
        .Q(ila_smax_exp_mult_reg[9]));
  LUT3 #(
    .INIT(8'h40)) 
    \multiplicand_a[0]_i_1 
       (.I0(current_state[1]),
        .I1(\ila_smax_exp_data_reg[31] [0]),
        .I2(out),
        .O(\multiplicand_a[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \multiplicand_a[10]_i_1 
       (.I0(current_state[1]),
        .I1(\ila_smax_exp_data_reg[31] [10]),
        .I2(out),
        .O(\multiplicand_a[10]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \multiplicand_a[11]_i_1 
       (.I0(current_state[1]),
        .I1(\ila_smax_exp_data_reg[31] [11]),
        .I2(out),
        .O(\multiplicand_a[11]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \multiplicand_a[12]_i_1 
       (.I0(current_state[1]),
        .I1(\ila_smax_exp_data_reg[31] [12]),
        .I2(out),
        .O(\multiplicand_a[12]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \multiplicand_a[13]_i_1 
       (.I0(current_state[1]),
        .I1(\ila_smax_exp_data_reg[31] [13]),
        .I2(out),
        .O(\multiplicand_a[13]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \multiplicand_a[14]_i_1 
       (.I0(current_state[1]),
        .I1(\ila_smax_exp_data_reg[31] [14]),
        .I2(out),
        .O(\multiplicand_a[14]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \multiplicand_a[15]_i_1 
       (.I0(current_state[1]),
        .I1(\ila_smax_exp_data_reg[31] [15]),
        .I2(out),
        .O(\multiplicand_a[15]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hE200)) 
    \multiplicand_a[16]_i_1 
       (.I0(\ila_smax_exp_data_reg[31] [16]),
        .I1(current_state[1]),
        .I2(\factorials[23]_26 [16]),
        .I3(out),
        .O(\multiplicand_a[16]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair208" *) 
  LUT5 #(
    .INIT(32'hACAC0450)) 
    \multiplicand_a[16]_i_2 
       (.I0(Q[0]),
        .I1(Q[3]),
        .I2(Q[4]),
        .I3(Q[2]),
        .I4(Q[1]),
        .O(\factorials[23]_26 [16]));
  LUT4 #(
    .INIT(16'hE200)) 
    \multiplicand_a[17]_i_1 
       (.I0(\ila_smax_exp_data_reg[31] [17]),
        .I1(current_state[1]),
        .I2(\factorials[23]_26 [17]),
        .I3(out),
        .O(\multiplicand_a[17]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT5 #(
    .INIT(32'hE3DAB3CA)) 
    \multiplicand_a[17]_i_2 
       (.I0(Q[4]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[3]),
        .O(\factorials[23]_26 [17]));
  LUT4 #(
    .INIT(16'hE200)) 
    \multiplicand_a[18]_i_1 
       (.I0(\ila_smax_exp_data_reg[31] [18]),
        .I1(current_state[1]),
        .I2(\factorials[23]_26 [18]),
        .I3(out),
        .O(\multiplicand_a[18]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT5 #(
    .INIT(32'h7200AE62)) 
    \multiplicand_a[18]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[3]),
        .I3(Q[1]),
        .I4(Q[0]),
        .O(\factorials[23]_26 [18]));
  LUT4 #(
    .INIT(16'hE200)) 
    \multiplicand_a[19]_i_1 
       (.I0(\ila_smax_exp_data_reg[31] [19]),
        .I1(current_state[1]),
        .I2(\factorials[23]_26 [19]),
        .I3(out),
        .O(\multiplicand_a[19]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT5 #(
    .INIT(32'h8940BE44)) 
    \multiplicand_a[19]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[3]),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\factorials[23]_26 [19]));
  LUT3 #(
    .INIT(8'h40)) 
    \multiplicand_a[1]_i_1 
       (.I0(current_state[1]),
        .I1(\ila_smax_exp_data_reg[31] [1]),
        .I2(out),
        .O(\multiplicand_a[1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hE200)) 
    \multiplicand_a[20]_i_1 
       (.I0(\ila_smax_exp_data_reg[31] [20]),
        .I1(current_state[1]),
        .I2(\factorials[23]_26 [20]),
        .I3(out),
        .O(\multiplicand_a[20]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT5 #(
    .INIT(32'hFDE82F6A)) 
    \multiplicand_a[20]_i_2 
       (.I0(Q[4]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(Q[0]),
        .O(\factorials[23]_26 [20]));
  LUT4 #(
    .INIT(16'hE200)) 
    \multiplicand_a[21]_i_1 
       (.I0(\ila_smax_exp_data_reg[31] [21]),
        .I1(current_state[1]),
        .I2(\factorials[23]_26 [21]),
        .I3(out),
        .O(\multiplicand_a[21]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT5 #(
    .INIT(32'h8926EB40)) 
    \multiplicand_a[21]_i_2 
       (.I0(Q[4]),
        .I1(Q[0]),
        .I2(Q[3]),
        .I3(Q[2]),
        .I4(Q[1]),
        .O(\factorials[23]_26 [21]));
  LUT4 #(
    .INIT(16'hE200)) 
    \multiplicand_a[22]_i_1 
       (.I0(\ila_smax_exp_data_reg[31] [22]),
        .I1(current_state[1]),
        .I2(\factorials[23]_26 [22]),
        .I3(out),
        .O(\multiplicand_a[22]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT5 #(
    .INIT(32'h542240BA)) 
    \multiplicand_a[22]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[3]),
        .I3(Q[1]),
        .I4(Q[0]),
        .O(\factorials[23]_26 [22]));
  LUT4 #(
    .INIT(16'hE200)) 
    \multiplicand_a[23]_i_1 
       (.I0(\ila_smax_exp_data_reg[31] [23]),
        .I1(current_state[1]),
        .I2(\factorials[23]_26 [23]),
        .I3(out),
        .O(\multiplicand_a[23]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT5 #(
    .INIT(32'h10899C99)) 
    \multiplicand_a[23]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[3]),
        .I3(Q[1]),
        .I4(Q[0]),
        .O(\factorials[23]_26 [23]));
  LUT4 #(
    .INIT(16'hE200)) 
    \multiplicand_a[24]_i_1 
       (.I0(\ila_smax_exp_data_reg[31] [24]),
        .I1(current_state[1]),
        .I2(\factorials[23]_26 [24]),
        .I3(out),
        .O(\multiplicand_a[24]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT5 #(
    .INIT(32'h5555A99F)) 
    \multiplicand_a[24]_i_2 
       (.I0(Q[2]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(Q[4]),
        .O(\factorials[23]_26 [24]));
  LUT4 #(
    .INIT(16'hE200)) 
    \multiplicand_a[25]_i_1 
       (.I0(\ila_smax_exp_data_reg[31] [25]),
        .I1(current_state[1]),
        .I2(\factorials[23]_26 [25]),
        .I3(out),
        .O(\multiplicand_a[25]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT5 #(
    .INIT(32'hAAA4AABF)) 
    \multiplicand_a[25]_i_2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[3]),
        .I3(Q[4]),
        .I4(Q[2]),
        .O(\factorials[23]_26 [25]));
  LUT4 #(
    .INIT(16'hE200)) 
    \multiplicand_a[26]_i_1 
       (.I0(\ila_smax_exp_data_reg[31] [26]),
        .I1(current_state[1]),
        .I2(\factorials[23]_26 [26]),
        .I3(out),
        .O(\multiplicand_a[26]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT5 #(
    .INIT(32'h3C3D397D)) 
    \multiplicand_a[26]_i_2 
       (.I0(Q[4]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(Q[3]),
        .O(\factorials[23]_26 [26]));
  LUT4 #(
    .INIT(16'hE200)) 
    \multiplicand_a[27]_i_1 
       (.I0(\ila_smax_exp_data_reg[31] [27]),
        .I1(current_state[1]),
        .I2(\factorials[23]_26 [27]),
        .I3(out),
        .O(\multiplicand_a[27]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT5 #(
    .INIT(32'hE1E0E1FF)) 
    \multiplicand_a[27]_i_2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[3]),
        .O(\factorials[23]_26 [27]));
  LUT4 #(
    .INIT(16'hE200)) 
    \multiplicand_a[28]_i_1 
       (.I0(\ila_smax_exp_data_reg[31] [28]),
        .I1(current_state[1]),
        .I2(\factorials[23]_26 [28]),
        .I3(out),
        .O(\multiplicand_a[28]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT5 #(
    .INIT(32'hCCC0777F)) 
    \multiplicand_a[28]_i_2 
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(Q[4]),
        .O(\factorials[23]_26 [28]));
  LUT6 #(
    .INIT(64'hE2EEEEEE00000000)) 
    \multiplicand_a[29]_i_1 
       (.I0(\ila_smax_exp_data_reg[31] [29]),
        .I1(current_state[1]),
        .I2(\multiplicand_a[29]_i_2_n_0 ),
        .I3(Q[2]),
        .I4(Q[4]),
        .I5(out),
        .O(\multiplicand_a[29]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \multiplicand_a[29]_i_2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\multiplicand_a[29]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \multiplicand_a[2]_i_1 
       (.I0(current_state[1]),
        .I1(\ila_smax_exp_data_reg[31] [2]),
        .I2(out),
        .O(\multiplicand_a[2]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h08)) 
    \multiplicand_a[30]_i_1 
       (.I0(\ila_smax_exp_data_reg[31] [30]),
        .I1(out),
        .I2(current_state[1]),
        .O(multiplicand_a[30]));
  LUT4 #(
    .INIT(16'h4145)) 
    \multiplicand_a[31]_i_1 
       (.I0(current_state[2]),
        .I1(out),
        .I2(current_state[1]),
        .I3(\step_counter_reg[0]_0 ),
        .O(\multiplicand_a[31]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h08)) 
    \multiplicand_a[31]_i_2 
       (.I0(\ila_smax_exp_data_reg[31] [31]),
        .I1(out),
        .I2(current_state[1]),
        .O(multiplicand_a[31]));
  LUT1 #(
    .INIT(2'h1)) 
    \multiplicand_a[31]_i_3 
       (.I0(m00_axi_aresetn),
        .O(\addend_reg[0]_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \multiplicand_a[3]_i_1 
       (.I0(current_state[1]),
        .I1(\ila_smax_exp_data_reg[31] [3]),
        .I2(out),
        .O(\multiplicand_a[3]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \multiplicand_a[4]_i_1 
       (.I0(current_state[1]),
        .I1(\ila_smax_exp_data_reg[31] [4]),
        .I2(out),
        .O(\multiplicand_a[4]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \multiplicand_a[5]_i_1 
       (.I0(current_state[1]),
        .I1(\ila_smax_exp_data_reg[31] [5]),
        .I2(out),
        .O(\multiplicand_a[5]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \multiplicand_a[6]_i_1 
       (.I0(current_state[1]),
        .I1(\ila_smax_exp_data_reg[31] [6]),
        .I2(out),
        .O(\multiplicand_a[6]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \multiplicand_a[7]_i_1 
       (.I0(current_state[1]),
        .I1(\ila_smax_exp_data_reg[31] [7]),
        .I2(out),
        .O(\multiplicand_a[7]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \multiplicand_a[8]_i_1 
       (.I0(current_state[1]),
        .I1(\ila_smax_exp_data_reg[31] [8]),
        .I2(out),
        .O(\multiplicand_a[8]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \multiplicand_a[9]_i_1 
       (.I0(current_state[1]),
        .I1(\ila_smax_exp_data_reg[31] [9]),
        .I2(out),
        .O(\multiplicand_a[9]_i_1_n_0 ));
  FDCE \multiplicand_a_reg[0] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_a[0]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_a[0]));
  FDCE \multiplicand_a_reg[10] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_a[10]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_a[10]));
  FDCE \multiplicand_a_reg[11] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_a[11]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_a[11]));
  FDCE \multiplicand_a_reg[12] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_a[12]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_a[12]));
  FDCE \multiplicand_a_reg[13] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_a[13]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_a[13]));
  FDCE \multiplicand_a_reg[14] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_a[14]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_a[14]));
  FDCE \multiplicand_a_reg[15] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_a[15]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_a[15]));
  FDCE \multiplicand_a_reg[16] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_a[16]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_a[16]));
  FDCE \multiplicand_a_reg[17] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_a[17]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_a[17]));
  FDCE \multiplicand_a_reg[18] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_a[18]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_a[18]));
  FDCE \multiplicand_a_reg[19] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_a[19]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_a[19]));
  FDCE \multiplicand_a_reg[1] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_a[1]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_a[1]));
  FDCE \multiplicand_a_reg[20] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_a[20]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_a[20]));
  FDCE \multiplicand_a_reg[21] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_a[21]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_a[21]));
  FDCE \multiplicand_a_reg[22] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_a[22]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_a[22]));
  FDCE \multiplicand_a_reg[23] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_a[23]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_a[23]));
  FDCE \multiplicand_a_reg[24] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_a[24]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_a[24]));
  FDCE \multiplicand_a_reg[25] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_a[25]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_a[25]));
  FDCE \multiplicand_a_reg[26] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_a[26]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_a[26]));
  FDCE \multiplicand_a_reg[27] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_a[27]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_a[27]));
  FDCE \multiplicand_a_reg[28] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_a[28]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_a[28]));
  FDCE \multiplicand_a_reg[29] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_a[29]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_a[29]));
  FDCE \multiplicand_a_reg[2] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_a[2]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_a[2]));
  FDCE \multiplicand_a_reg[30] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(multiplicand_a[30]),
        .Q(ila_smax_exp_multiplicand_a[30]));
  FDCE \multiplicand_a_reg[31] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(multiplicand_a[31]),
        .Q(ila_smax_exp_multiplicand_a[31]));
  FDCE \multiplicand_a_reg[3] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_a[3]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_a[3]));
  FDCE \multiplicand_a_reg[4] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_a[4]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_a[4]));
  FDCE \multiplicand_a_reg[5] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_a[5]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_a[5]));
  FDCE \multiplicand_a_reg[6] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_a[6]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_a[6]));
  FDCE \multiplicand_a_reg[7] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_a[7]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_a[7]));
  FDCE \multiplicand_a_reg[8] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_a[8]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_a[8]));
  FDCE \multiplicand_a_reg[9] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_a[9]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_a[9]));
  LUT6 #(
    .INIT(64'hFFE200E200000000)) 
    \multiplicand_b[0]_i_1 
       (.I0(ila_smax_exp_mult_reg[0]),
        .I1(\multiplicand_b[31]_i_2_n_0 ),
        .I2(\ila_smax_exp_data_reg[31] [0]),
        .I3(current_state[1]),
        .I4(result[0]),
        .I5(out),
        .O(\multiplicand_b[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFE200E200000000)) 
    \multiplicand_b[10]_i_1 
       (.I0(ila_smax_exp_mult_reg[10]),
        .I1(\multiplicand_b[31]_i_2_n_0 ),
        .I2(\ila_smax_exp_data_reg[31] [10]),
        .I3(current_state[1]),
        .I4(result[10]),
        .I5(out),
        .O(\multiplicand_b[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFE200E200000000)) 
    \multiplicand_b[11]_i_1 
       (.I0(ila_smax_exp_mult_reg[11]),
        .I1(\multiplicand_b[31]_i_2_n_0 ),
        .I2(\ila_smax_exp_data_reg[31] [11]),
        .I3(current_state[1]),
        .I4(result[11]),
        .I5(out),
        .O(\multiplicand_b[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFE200E200000000)) 
    \multiplicand_b[12]_i_1 
       (.I0(ila_smax_exp_mult_reg[12]),
        .I1(\multiplicand_b[31]_i_2_n_0 ),
        .I2(\ila_smax_exp_data_reg[31] [12]),
        .I3(current_state[1]),
        .I4(result[12]),
        .I5(out),
        .O(\multiplicand_b[12]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFE200E200000000)) 
    \multiplicand_b[13]_i_1 
       (.I0(ila_smax_exp_mult_reg[13]),
        .I1(\multiplicand_b[31]_i_2_n_0 ),
        .I2(\ila_smax_exp_data_reg[31] [13]),
        .I3(current_state[1]),
        .I4(result[13]),
        .I5(out),
        .O(\multiplicand_b[13]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFE200E200000000)) 
    \multiplicand_b[14]_i_1 
       (.I0(ila_smax_exp_mult_reg[14]),
        .I1(\multiplicand_b[31]_i_2_n_0 ),
        .I2(\ila_smax_exp_data_reg[31] [14]),
        .I3(current_state[1]),
        .I4(result[14]),
        .I5(out),
        .O(\multiplicand_b[14]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFE200E200000000)) 
    \multiplicand_b[15]_i_1 
       (.I0(ila_smax_exp_mult_reg[15]),
        .I1(\multiplicand_b[31]_i_2_n_0 ),
        .I2(\ila_smax_exp_data_reg[31] [15]),
        .I3(current_state[1]),
        .I4(result[15]),
        .I5(out),
        .O(\multiplicand_b[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFE200E200000000)) 
    \multiplicand_b[16]_i_1 
       (.I0(ila_smax_exp_mult_reg[16]),
        .I1(\multiplicand_b[31]_i_2_n_0 ),
        .I2(\ila_smax_exp_data_reg[31] [16]),
        .I3(current_state[1]),
        .I4(result[16]),
        .I5(out),
        .O(\multiplicand_b[16]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFE200E200000000)) 
    \multiplicand_b[17]_i_1 
       (.I0(ila_smax_exp_mult_reg[17]),
        .I1(\multiplicand_b[31]_i_2_n_0 ),
        .I2(\ila_smax_exp_data_reg[31] [17]),
        .I3(current_state[1]),
        .I4(result[17]),
        .I5(out),
        .O(\multiplicand_b[17]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFE200E200000000)) 
    \multiplicand_b[18]_i_1 
       (.I0(ila_smax_exp_mult_reg[18]),
        .I1(\multiplicand_b[31]_i_2_n_0 ),
        .I2(\ila_smax_exp_data_reg[31] [18]),
        .I3(current_state[1]),
        .I4(result[18]),
        .I5(out),
        .O(\multiplicand_b[18]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFE200E200000000)) 
    \multiplicand_b[19]_i_1 
       (.I0(ila_smax_exp_mult_reg[19]),
        .I1(\multiplicand_b[31]_i_2_n_0 ),
        .I2(\ila_smax_exp_data_reg[31] [19]),
        .I3(current_state[1]),
        .I4(result[19]),
        .I5(out),
        .O(\multiplicand_b[19]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFE200E200000000)) 
    \multiplicand_b[1]_i_1 
       (.I0(ila_smax_exp_mult_reg[1]),
        .I1(\multiplicand_b[31]_i_2_n_0 ),
        .I2(\ila_smax_exp_data_reg[31] [1]),
        .I3(current_state[1]),
        .I4(result[1]),
        .I5(out),
        .O(\multiplicand_b[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFE200E200000000)) 
    \multiplicand_b[20]_i_1 
       (.I0(ila_smax_exp_mult_reg[20]),
        .I1(\multiplicand_b[31]_i_2_n_0 ),
        .I2(\ila_smax_exp_data_reg[31] [20]),
        .I3(current_state[1]),
        .I4(result[20]),
        .I5(out),
        .O(\multiplicand_b[20]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFE200E200000000)) 
    \multiplicand_b[21]_i_1 
       (.I0(ila_smax_exp_mult_reg[21]),
        .I1(\multiplicand_b[31]_i_2_n_0 ),
        .I2(\ila_smax_exp_data_reg[31] [21]),
        .I3(current_state[1]),
        .I4(result[21]),
        .I5(out),
        .O(\multiplicand_b[21]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFE200E200000000)) 
    \multiplicand_b[22]_i_1 
       (.I0(ila_smax_exp_mult_reg[22]),
        .I1(\multiplicand_b[31]_i_2_n_0 ),
        .I2(\ila_smax_exp_data_reg[31] [22]),
        .I3(current_state[1]),
        .I4(result[22]),
        .I5(out),
        .O(\multiplicand_b[22]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFE200E200000000)) 
    \multiplicand_b[23]_i_1 
       (.I0(ila_smax_exp_mult_reg[23]),
        .I1(\multiplicand_b[31]_i_2_n_0 ),
        .I2(\ila_smax_exp_data_reg[31] [23]),
        .I3(current_state[1]),
        .I4(result[23]),
        .I5(out),
        .O(\multiplicand_b[23]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFE200E200000000)) 
    \multiplicand_b[24]_i_1 
       (.I0(ila_smax_exp_mult_reg[24]),
        .I1(\multiplicand_b[31]_i_2_n_0 ),
        .I2(\ila_smax_exp_data_reg[31] [24]),
        .I3(current_state[1]),
        .I4(result[24]),
        .I5(out),
        .O(\multiplicand_b[24]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFE200E200000000)) 
    \multiplicand_b[25]_i_1 
       (.I0(ila_smax_exp_mult_reg[25]),
        .I1(\multiplicand_b[31]_i_2_n_0 ),
        .I2(\ila_smax_exp_data_reg[31] [25]),
        .I3(current_state[1]),
        .I4(result[25]),
        .I5(out),
        .O(\multiplicand_b[25]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFE200E200000000)) 
    \multiplicand_b[26]_i_1 
       (.I0(ila_smax_exp_mult_reg[26]),
        .I1(\multiplicand_b[31]_i_2_n_0 ),
        .I2(\ila_smax_exp_data_reg[31] [26]),
        .I3(current_state[1]),
        .I4(result[26]),
        .I5(out),
        .O(\multiplicand_b[26]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFE200E200000000)) 
    \multiplicand_b[27]_i_1 
       (.I0(ila_smax_exp_mult_reg[27]),
        .I1(\multiplicand_b[31]_i_2_n_0 ),
        .I2(\ila_smax_exp_data_reg[31] [27]),
        .I3(current_state[1]),
        .I4(result[27]),
        .I5(out),
        .O(\multiplicand_b[27]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFE200E200000000)) 
    \multiplicand_b[28]_i_1 
       (.I0(ila_smax_exp_mult_reg[28]),
        .I1(\multiplicand_b[31]_i_2_n_0 ),
        .I2(\ila_smax_exp_data_reg[31] [28]),
        .I3(current_state[1]),
        .I4(result[28]),
        .I5(out),
        .O(\multiplicand_b[28]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFE200E200000000)) 
    \multiplicand_b[29]_i_1 
       (.I0(ila_smax_exp_mult_reg[29]),
        .I1(\multiplicand_b[31]_i_2_n_0 ),
        .I2(\ila_smax_exp_data_reg[31] [29]),
        .I3(current_state[1]),
        .I4(result[29]),
        .I5(out),
        .O(\multiplicand_b[29]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFE200E200000000)) 
    \multiplicand_b[2]_i_1 
       (.I0(ila_smax_exp_mult_reg[2]),
        .I1(\multiplicand_b[31]_i_2_n_0 ),
        .I2(\ila_smax_exp_data_reg[31] [2]),
        .I3(current_state[1]),
        .I4(result[2]),
        .I5(out),
        .O(\multiplicand_b[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFE200E200000000)) 
    \multiplicand_b[30]_i_1 
       (.I0(ila_smax_exp_mult_reg[30]),
        .I1(\multiplicand_b[31]_i_2_n_0 ),
        .I2(\ila_smax_exp_data_reg[31] [30]),
        .I3(current_state[1]),
        .I4(result[30]),
        .I5(out),
        .O(\multiplicand_b[30]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFE200E200000000)) 
    \multiplicand_b[31]_i_1 
       (.I0(ila_smax_exp_mult_reg[31]),
        .I1(\multiplicand_b[31]_i_2_n_0 ),
        .I2(\ila_smax_exp_data_reg[31] [31]),
        .I3(current_state[1]),
        .I4(result[31]),
        .I5(out),
        .O(\multiplicand_b[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000004)) 
    \multiplicand_b[31]_i_2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[4]),
        .I3(\current_state[2]_i_5_n_0 ),
        .I4(Q[2]),
        .I5(Q[3]),
        .O(\multiplicand_b[31]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFE200E200000000)) 
    \multiplicand_b[3]_i_1 
       (.I0(ila_smax_exp_mult_reg[3]),
        .I1(\multiplicand_b[31]_i_2_n_0 ),
        .I2(\ila_smax_exp_data_reg[31] [3]),
        .I3(current_state[1]),
        .I4(result[3]),
        .I5(out),
        .O(\multiplicand_b[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFE200E200000000)) 
    \multiplicand_b[4]_i_1 
       (.I0(ila_smax_exp_mult_reg[4]),
        .I1(\multiplicand_b[31]_i_2_n_0 ),
        .I2(\ila_smax_exp_data_reg[31] [4]),
        .I3(current_state[1]),
        .I4(result[4]),
        .I5(out),
        .O(\multiplicand_b[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFE200E200000000)) 
    \multiplicand_b[5]_i_1 
       (.I0(ila_smax_exp_mult_reg[5]),
        .I1(\multiplicand_b[31]_i_2_n_0 ),
        .I2(\ila_smax_exp_data_reg[31] [5]),
        .I3(current_state[1]),
        .I4(result[5]),
        .I5(out),
        .O(\multiplicand_b[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFE200E200000000)) 
    \multiplicand_b[6]_i_1 
       (.I0(ila_smax_exp_mult_reg[6]),
        .I1(\multiplicand_b[31]_i_2_n_0 ),
        .I2(\ila_smax_exp_data_reg[31] [6]),
        .I3(current_state[1]),
        .I4(result[6]),
        .I5(out),
        .O(\multiplicand_b[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFE200E200000000)) 
    \multiplicand_b[7]_i_1 
       (.I0(ila_smax_exp_mult_reg[7]),
        .I1(\multiplicand_b[31]_i_2_n_0 ),
        .I2(\ila_smax_exp_data_reg[31] [7]),
        .I3(current_state[1]),
        .I4(result[7]),
        .I5(out),
        .O(\multiplicand_b[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFE200E200000000)) 
    \multiplicand_b[8]_i_1 
       (.I0(ila_smax_exp_mult_reg[8]),
        .I1(\multiplicand_b[31]_i_2_n_0 ),
        .I2(\ila_smax_exp_data_reg[31] [8]),
        .I3(current_state[1]),
        .I4(result[8]),
        .I5(out),
        .O(\multiplicand_b[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFE200E200000000)) 
    \multiplicand_b[9]_i_1 
       (.I0(ila_smax_exp_mult_reg[9]),
        .I1(\multiplicand_b[31]_i_2_n_0 ),
        .I2(\ila_smax_exp_data_reg[31] [9]),
        .I3(current_state[1]),
        .I4(result[9]),
        .I5(out),
        .O(\multiplicand_b[9]_i_1_n_0 ));
  FDCE \multiplicand_b_reg[0] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_b[0]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_b[0]));
  FDCE \multiplicand_b_reg[10] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_b[10]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_b[10]));
  FDCE \multiplicand_b_reg[11] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_b[11]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_b[11]));
  FDCE \multiplicand_b_reg[12] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_b[12]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_b[12]));
  FDCE \multiplicand_b_reg[13] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_b[13]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_b[13]));
  FDCE \multiplicand_b_reg[14] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_b[14]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_b[14]));
  FDCE \multiplicand_b_reg[15] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_b[15]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_b[15]));
  FDCE \multiplicand_b_reg[16] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_b[16]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_b[16]));
  FDCE \multiplicand_b_reg[17] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_b[17]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_b[17]));
  FDCE \multiplicand_b_reg[18] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_b[18]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_b[18]));
  FDCE \multiplicand_b_reg[19] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_b[19]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_b[19]));
  FDCE \multiplicand_b_reg[1] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_b[1]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_b[1]));
  FDCE \multiplicand_b_reg[20] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_b[20]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_b[20]));
  FDCE \multiplicand_b_reg[21] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_b[21]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_b[21]));
  FDCE \multiplicand_b_reg[22] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_b[22]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_b[22]));
  FDCE \multiplicand_b_reg[23] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_b[23]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_b[23]));
  FDCE \multiplicand_b_reg[24] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_b[24]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_b[24]));
  FDCE \multiplicand_b_reg[25] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_b[25]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_b[25]));
  FDCE \multiplicand_b_reg[26] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_b[26]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_b[26]));
  FDCE \multiplicand_b_reg[27] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_b[27]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_b[27]));
  FDCE \multiplicand_b_reg[28] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_b[28]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_b[28]));
  FDCE \multiplicand_b_reg[29] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_b[29]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_b[29]));
  FDCE \multiplicand_b_reg[2] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_b[2]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_b[2]));
  FDCE \multiplicand_b_reg[30] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_b[30]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_b[30]));
  FDCE \multiplicand_b_reg[31] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_b[31]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_b[31]));
  FDCE \multiplicand_b_reg[3] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_b[3]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_b[3]));
  FDCE \multiplicand_b_reg[4] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_b[4]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_b[4]));
  FDCE \multiplicand_b_reg[5] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_b[5]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_b[5]));
  FDCE \multiplicand_b_reg[6] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_b[6]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_b[6]));
  FDCE \multiplicand_b_reg[7] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_b[7]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_b[7]));
  FDCE \multiplicand_b_reg[8] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_b[8]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_b[8]));
  FDCE \multiplicand_b_reg[9] 
       (.C(m00_axi_aclk),
        .CE(\multiplicand_a[31]_i_1_n_0 ),
        .CLR(\addend_reg[0]_0 ),
        .D(\multiplicand_b[9]_i_1_n_0 ),
        .Q(ila_smax_exp_multiplicand_b[9]));
  final_accelerator_Softmax_Layer_32bit_0_0_softmax_multiply_32bit multiplier
       (.a(ila_smax_exp_multiplicand_a),
        .b(ila_smax_exp_multiplicand_b),
        .clk(m00_axi_aclk),
        .result(result));
  LUT3 #(
    .INIT(8'h54)) 
    \step_counter[0]_i_1 
       (.I0(Q[0]),
        .I1(current_state[2]),
        .I2(out),
        .O(\step_counter[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h6660)) 
    \step_counter[1]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(current_state[2]),
        .I3(out),
        .O(step_counter[1]));
  LUT5 #(
    .INIT(32'h78787800)) 
    \step_counter[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(current_state[2]),
        .I4(out),
        .O(step_counter[2]));
  LUT6 #(
    .INIT(64'h7F807F807F800000)) 
    \step_counter[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[3]),
        .I4(current_state[2]),
        .I5(out),
        .O(step_counter[3]));
  LUT1 #(
    .INIT(2'h1)) 
    \step_counter[3]_i_2 
       (.I0(m00_axi_aresetn),
        .O(\step_counter_reg[3]_0 ));
  LUT6 #(
    .INIT(64'h000000007FFF8000)) 
    \step_counter[4]_i_1 
       (.I0(Q[3]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(Q[4]),
        .I5(\step_counter[6]_i_3_n_0 ),
        .O(step_counter[4]));
  LUT6 #(
    .INIT(64'h6AAA6AAA6AAA0000)) 
    \step_counter[5]_i_1 
       (.I0(Q[5]),
        .I1(Q[4]),
        .I2(Q[3]),
        .I3(\step_counter[6]_i_2_n_0 ),
        .I4(current_state[2]),
        .I5(out),
        .O(step_counter[5]));
  LUT6 #(
    .INIT(64'h000000007FFF8000)) 
    \step_counter[6]_i_1 
       (.I0(Q[5]),
        .I1(Q[4]),
        .I2(Q[3]),
        .I3(\step_counter[6]_i_2_n_0 ),
        .I4(Q[6]),
        .I5(\step_counter[6]_i_3_n_0 ),
        .O(step_counter[6]));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \step_counter[6]_i_2 
       (.I0(Q[1]),
        .I1(Q[2]),
        .I2(Q[0]),
        .O(\step_counter[6]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \step_counter[6]_i_3 
       (.I0(out),
        .I1(current_state[2]),
        .O(\step_counter[6]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h00004F45)) 
    \step_counter[7]_i_1 
       (.I0(current_state[2]),
        .I1(\step_counter_reg[0]_0 ),
        .I2(out),
        .I3(\ila_smax_exp_hold_counter[3] [3]),
        .I4(current_state[1]),
        .O(\step_counter[7]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h78787800)) 
    \step_counter[7]_i_2 
       (.I0(Q[6]),
        .I1(\step_counter[7]_i_3_n_0 ),
        .I2(Q[7]),
        .I3(current_state[2]),
        .I4(out),
        .O(step_counter[7]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \step_counter[7]_i_3 
       (.I0(Q[5]),
        .I1(Q[4]),
        .I2(Q[3]),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(Q[0]),
        .O(\step_counter[7]_i_3_n_0 ));
  FDCE \step_counter_reg[0] 
       (.C(m00_axi_aclk),
        .CE(\step_counter[7]_i_1_n_0 ),
        .CLR(\step_counter_reg[3]_0 ),
        .D(\step_counter[0]_i_1_n_0 ),
        .Q(Q[0]));
  FDCE \step_counter_reg[1] 
       (.C(m00_axi_aclk),
        .CE(\step_counter[7]_i_1_n_0 ),
        .CLR(\step_counter_reg[3]_0 ),
        .D(step_counter[1]),
        .Q(Q[1]));
  FDCE \step_counter_reg[2] 
       (.C(m00_axi_aclk),
        .CE(\step_counter[7]_i_1_n_0 ),
        .CLR(\step_counter_reg[3]_0 ),
        .D(step_counter[2]),
        .Q(Q[2]));
  FDCE \step_counter_reg[3] 
       (.C(m00_axi_aclk),
        .CE(\step_counter[7]_i_1_n_0 ),
        .CLR(\step_counter_reg[3]_0 ),
        .D(step_counter[3]),
        .Q(Q[3]));
  FDCE \step_counter_reg[4] 
       (.C(m00_axi_aclk),
        .CE(\step_counter[7]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_0),
        .D(step_counter[4]),
        .Q(Q[4]));
  FDCE \step_counter_reg[5] 
       (.C(m00_axi_aclk),
        .CE(\step_counter[7]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_0),
        .D(step_counter[5]),
        .Q(Q[5]));
  FDCE \step_counter_reg[6] 
       (.C(m00_axi_aclk),
        .CE(\step_counter[7]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_0),
        .D(step_counter[6]),
        .Q(Q[6]));
  FDCE \step_counter_reg[7] 
       (.C(m00_axi_aclk),
        .CE(\step_counter[7]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_0),
        .D(step_counter[7]),
        .Q(Q[7]));
  LUT2 #(
    .INIT(4'h8)) 
    \sum_array[0][0]_i_1 
       (.I0(current_state[2]),
        .I1(result[0]),
        .O(\sum_array[0]_23 [0]));
  LUT2 #(
    .INIT(4'h8)) 
    \sum_array[0][10]_i_1 
       (.I0(current_state[2]),
        .I1(result[10]),
        .O(\sum_array[0]_23 [10]));
  LUT2 #(
    .INIT(4'h8)) 
    \sum_array[0][11]_i_1 
       (.I0(current_state[2]),
        .I1(result[11]),
        .O(\sum_array[0]_23 [11]));
  LUT2 #(
    .INIT(4'h8)) 
    \sum_array[0][12]_i_1 
       (.I0(current_state[2]),
        .I1(result[12]),
        .O(\sum_array[0]_23 [12]));
  LUT2 #(
    .INIT(4'h8)) 
    \sum_array[0][13]_i_1 
       (.I0(current_state[2]),
        .I1(result[13]),
        .O(\sum_array[0]_23 [13]));
  LUT2 #(
    .INIT(4'h8)) 
    \sum_array[0][14]_i_1 
       (.I0(current_state[2]),
        .I1(result[14]),
        .O(\sum_array[0]_23 [14]));
  LUT2 #(
    .INIT(4'h8)) 
    \sum_array[0][15]_i_1 
       (.I0(current_state[2]),
        .I1(result[15]),
        .O(\sum_array[0]_23 [15]));
  LUT2 #(
    .INIT(4'h8)) 
    \sum_array[0][16]_i_1 
       (.I0(current_state[2]),
        .I1(result[16]),
        .O(\sum_array[0]_23 [16]));
  LUT2 #(
    .INIT(4'h8)) 
    \sum_array[0][17]_i_1 
       (.I0(current_state[2]),
        .I1(result[17]),
        .O(\sum_array[0]_23 [17]));
  LUT2 #(
    .INIT(4'h8)) 
    \sum_array[0][18]_i_1 
       (.I0(current_state[2]),
        .I1(result[18]),
        .O(\sum_array[0]_23 [18]));
  LUT2 #(
    .INIT(4'h8)) 
    \sum_array[0][19]_i_1 
       (.I0(current_state[2]),
        .I1(result[19]),
        .O(\sum_array[0]_23 [19]));
  LUT2 #(
    .INIT(4'h8)) 
    \sum_array[0][1]_i_1 
       (.I0(current_state[2]),
        .I1(result[1]),
        .O(\sum_array[0]_23 [1]));
  LUT2 #(
    .INIT(4'h8)) 
    \sum_array[0][20]_i_1 
       (.I0(current_state[2]),
        .I1(result[20]),
        .O(\sum_array[0]_23 [20]));
  LUT2 #(
    .INIT(4'h8)) 
    \sum_array[0][21]_i_1 
       (.I0(current_state[2]),
        .I1(result[21]),
        .O(\sum_array[0]_23 [21]));
  LUT2 #(
    .INIT(4'h8)) 
    \sum_array[0][22]_i_1 
       (.I0(current_state[2]),
        .I1(result[22]),
        .O(\sum_array[0]_23 [22]));
  LUT2 #(
    .INIT(4'hE)) 
    \sum_array[0][23]_i_1 
       (.I0(out),
        .I1(result[23]),
        .O(\sum_array[0]_23 [23]));
  LUT2 #(
    .INIT(4'hE)) 
    \sum_array[0][24]_i_1 
       (.I0(out),
        .I1(result[24]),
        .O(\sum_array[0]_23 [24]));
  LUT2 #(
    .INIT(4'hE)) 
    \sum_array[0][25]_i_1 
       (.I0(out),
        .I1(result[25]),
        .O(\sum_array[0]_23 [25]));
  LUT2 #(
    .INIT(4'hE)) 
    \sum_array[0][26]_i_1 
       (.I0(out),
        .I1(result[26]),
        .O(\sum_array[0]_23 [26]));
  LUT2 #(
    .INIT(4'hE)) 
    \sum_array[0][27]_i_1 
       (.I0(out),
        .I1(result[27]),
        .O(\sum_array[0]_23 [27]));
  LUT2 #(
    .INIT(4'hE)) 
    \sum_array[0][28]_i_1 
       (.I0(out),
        .I1(result[28]),
        .O(\sum_array[0]_23 [28]));
  LUT2 #(
    .INIT(4'hE)) 
    \sum_array[0][29]_i_1 
       (.I0(out),
        .I1(result[29]),
        .O(\sum_array[0]_23 [29]));
  LUT2 #(
    .INIT(4'h8)) 
    \sum_array[0][2]_i_1 
       (.I0(current_state[2]),
        .I1(result[2]),
        .O(\sum_array[0]_23 [2]));
  LUT2 #(
    .INIT(4'h8)) 
    \sum_array[0][30]_i_1 
       (.I0(current_state[2]),
        .I1(result[30]),
        .O(\sum_array[0]_23 [30]));
  LUT5 #(
    .INIT(32'h02003000)) 
    \sum_array[0][31]_i_1 
       (.I0(\ila_smax_exp_hold_counter[3] [3]),
        .I1(current_state[1]),
        .I2(out),
        .I3(\mult_reg[31]_i_3_n_0 ),
        .I4(current_state[2]),
        .O(\sum_array[0][31]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \sum_array[0][31]_i_2 
       (.I0(current_state[2]),
        .I1(result[31]),
        .O(\sum_array[0]_23 [31]));
  LUT2 #(
    .INIT(4'h8)) 
    \sum_array[0][3]_i_1 
       (.I0(current_state[2]),
        .I1(result[3]),
        .O(\sum_array[0]_23 [3]));
  LUT2 #(
    .INIT(4'h8)) 
    \sum_array[0][4]_i_1 
       (.I0(current_state[2]),
        .I1(result[4]),
        .O(\sum_array[0]_23 [4]));
  LUT2 #(
    .INIT(4'h8)) 
    \sum_array[0][5]_i_1 
       (.I0(current_state[2]),
        .I1(result[5]),
        .O(\sum_array[0]_23 [5]));
  LUT2 #(
    .INIT(4'h8)) 
    \sum_array[0][6]_i_1 
       (.I0(current_state[2]),
        .I1(result[6]),
        .O(\sum_array[0]_23 [6]));
  LUT2 #(
    .INIT(4'h8)) 
    \sum_array[0][7]_i_1 
       (.I0(current_state[2]),
        .I1(result[7]),
        .O(\sum_array[0]_23 [7]));
  LUT2 #(
    .INIT(4'h8)) 
    \sum_array[0][8]_i_1 
       (.I0(current_state[2]),
        .I1(result[8]),
        .O(\sum_array[0]_23 [8]));
  LUT2 #(
    .INIT(4'h8)) 
    \sum_array[0][9]_i_1 
       (.I0(current_state[2]),
        .I1(result[9]),
        .O(\sum_array[0]_23 [9]));
  LUT5 #(
    .INIT(32'h00000200)) 
    \sum_array[10][31]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(\sum_array[15][31]_i_2_n_0 ),
        .I4(\sum_array[23][31]_i_4_n_0 ),
        .O(\sum_array[10]_13 ));
  LUT6 #(
    .INIT(64'h0000000002000000)) 
    \sum_array[11][31]_i_1 
       (.I0(Q[3]),
        .I1(Q[4]),
        .I2(Q[2]),
        .I3(\sum_array[23][31]_i_3_n_0 ),
        .I4(\sum_array[23][31]_i_2_n_0 ),
        .I5(\sum_array[23][31]_i_4_n_0 ),
        .O(\sum_array[11]_12 ));
  LUT6 #(
    .INIT(64'h0000000000000400)) 
    \sum_array[12][31]_i_1 
       (.I0(Q[0]),
        .I1(Q[2]),
        .I2(\sum_array[13][31]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(Q[1]),
        .I5(\sum_array[23][31]_i_4_n_0 ),
        .O(\sum_array[12]_11 ));
  LUT6 #(
    .INIT(64'h0000000000000800)) 
    \sum_array[13][31]_i_1 
       (.I0(Q[0]),
        .I1(Q[2]),
        .I2(\sum_array[13][31]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(Q[1]),
        .I5(\sum_array[23][31]_i_4_n_0 ),
        .O(\sum_array[13]_10 ));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT5 #(
    .INIT(32'hFFFEFFFF)) 
    \sum_array[13][31]_i_2 
       (.I0(Q[5]),
        .I1(Q[6]),
        .I2(Q[7]),
        .I3(Q[4]),
        .I4(\ila_smax_exp_hold_counter[3] [3]),
        .O(\sum_array[13][31]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00002000)) 
    \sum_array[14][31]_i_1 
       (.I0(\sum_array[15][31]_i_2_n_0 ),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(\sum_array[23][31]_i_4_n_0 ),
        .O(\sum_array[14]_9 ));
  LUT5 #(
    .INIT(32'h00008000)) 
    \sum_array[15][31]_i_1 
       (.I0(\sum_array[15][31]_i_2_n_0 ),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(\sum_array[23][31]_i_4_n_0 ),
        .O(\sum_array[15]_8 ));
  LUT6 #(
    .INIT(64'h0000000000000008)) 
    \sum_array[15][31]_i_2 
       (.I0(Q[3]),
        .I1(\ila_smax_exp_hold_counter[3] [3]),
        .I2(Q[4]),
        .I3(Q[7]),
        .I4(Q[6]),
        .I5(Q[5]),
        .O(\sum_array[15][31]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000004000)) 
    \sum_array[16][31]_i_1 
       (.I0(Q[1]),
        .I1(Q[4]),
        .I2(\sum_array[18][31]_i_2_n_0 ),
        .I3(\sum_array[23][31]_i_2_n_0 ),
        .I4(Q[3]),
        .I5(\sum_array[23][31]_i_4_n_0 ),
        .O(\sum_array[16]_7 ));
  LUT6 #(
    .INIT(64'h0000000010000000)) 
    \sum_array[17][31]_i_1 
       (.I0(\sum_array[17][31]_i_2_n_0 ),
        .I1(\sum_array[17][31]_i_3_n_0 ),
        .I2(Q[4]),
        .I3(Q[0]),
        .I4(\ila_smax_exp_hold_counter[3] [3]),
        .I5(\sum_array[23][31]_i_4_n_0 ),
        .O(\sum_array[17]_6 ));
  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \sum_array[17][31]_i_2 
       (.I0(Q[1]),
        .I1(Q[7]),
        .I2(Q[6]),
        .I3(Q[5]),
        .O(\sum_array[17][31]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \sum_array[17][31]_i_3 
       (.I0(Q[2]),
        .I1(Q[3]),
        .O(\sum_array[17][31]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000008000)) 
    \sum_array[18][31]_i_1 
       (.I0(Q[4]),
        .I1(Q[1]),
        .I2(\sum_array[18][31]_i_2_n_0 ),
        .I3(\sum_array[23][31]_i_2_n_0 ),
        .I4(Q[3]),
        .I5(\sum_array[23][31]_i_4_n_0 ),
        .O(\sum_array[18]_5 ));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \sum_array[18][31]_i_2 
       (.I0(Q[2]),
        .I1(Q[0]),
        .O(\sum_array[18][31]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000004000000)) 
    \sum_array[19][31]_i_1 
       (.I0(Q[2]),
        .I1(Q[4]),
        .I2(Q[3]),
        .I3(\sum_array[23][31]_i_3_n_0 ),
        .I4(\sum_array[23][31]_i_2_n_0 ),
        .I5(\sum_array[23][31]_i_4_n_0 ),
        .O(\sum_array[19]_4 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \sum_array[1][0]_i_1 
       (.I0(\ila_smax_exp_data_reg[31] [0]),
        .I1(out),
        .I2(result[0]),
        .O(\sum_array[1]_22 [0]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sum_array[1][10]_i_1 
       (.I0(\ila_smax_exp_data_reg[31] [10]),
        .I1(out),
        .I2(result[10]),
        .O(\sum_array[1]_22 [10]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sum_array[1][11]_i_1 
       (.I0(\ila_smax_exp_data_reg[31] [11]),
        .I1(out),
        .I2(result[11]),
        .O(\sum_array[1]_22 [11]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sum_array[1][12]_i_1 
       (.I0(\ila_smax_exp_data_reg[31] [12]),
        .I1(out),
        .I2(result[12]),
        .O(\sum_array[1]_22 [12]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sum_array[1][13]_i_1 
       (.I0(\ila_smax_exp_data_reg[31] [13]),
        .I1(out),
        .I2(result[13]),
        .O(\sum_array[1]_22 [13]));
  LUT1 #(
    .INIT(2'h1)) 
    \sum_array[1][13]_i_2 
       (.I0(m00_axi_aresetn),
        .O(\sum_array[1][13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \sum_array[1][14]_i_1 
       (.I0(\ila_smax_exp_data_reg[31] [14]),
        .I1(out),
        .I2(result[14]),
        .O(\sum_array[1]_22 [14]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sum_array[1][15]_i_1 
       (.I0(\ila_smax_exp_data_reg[31] [15]),
        .I1(out),
        .I2(result[15]),
        .O(\sum_array[1]_22 [15]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sum_array[1][16]_i_1 
       (.I0(\ila_smax_exp_data_reg[31] [16]),
        .I1(out),
        .I2(result[16]),
        .O(\sum_array[1]_22 [16]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sum_array[1][17]_i_1 
       (.I0(\ila_smax_exp_data_reg[31] [17]),
        .I1(out),
        .I2(result[17]),
        .O(\sum_array[1]_22 [17]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sum_array[1][18]_i_1 
       (.I0(\ila_smax_exp_data_reg[31] [18]),
        .I1(out),
        .I2(result[18]),
        .O(\sum_array[1]_22 [18]));
  LUT1 #(
    .INIT(2'h1)) 
    \sum_array[1][18]_i_2 
       (.I0(m00_axi_aresetn),
        .O(\sum_array[1][18]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \sum_array[1][19]_i_1 
       (.I0(\ila_smax_exp_data_reg[31] [19]),
        .I1(out),
        .I2(result[19]),
        .O(\sum_array[1]_22 [19]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sum_array[1][1]_i_1 
       (.I0(\ila_smax_exp_data_reg[31] [1]),
        .I1(out),
        .I2(result[1]),
        .O(\sum_array[1]_22 [1]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sum_array[1][20]_i_1 
       (.I0(\ila_smax_exp_data_reg[31] [20]),
        .I1(out),
        .I2(result[20]),
        .O(\sum_array[1]_22 [20]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sum_array[1][21]_i_1 
       (.I0(\ila_smax_exp_data_reg[31] [21]),
        .I1(out),
        .I2(result[21]),
        .O(\sum_array[1]_22 [21]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sum_array[1][22]_i_1 
       (.I0(\ila_smax_exp_data_reg[31] [22]),
        .I1(out),
        .I2(result[22]),
        .O(\sum_array[1]_22 [22]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sum_array[1][23]_i_1 
       (.I0(\ila_smax_exp_data_reg[31] [23]),
        .I1(out),
        .I2(result[23]),
        .O(\sum_array[1]_22 [23]));
  LUT1 #(
    .INIT(2'h1)) 
    \sum_array[1][23]_i_2 
       (.I0(m00_axi_aresetn),
        .O(\sum_array[1][23]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \sum_array[1][24]_i_1 
       (.I0(\ila_smax_exp_data_reg[31] [24]),
        .I1(out),
        .I2(result[24]),
        .O(\sum_array[1]_22 [24]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sum_array[1][25]_i_1 
       (.I0(\ila_smax_exp_data_reg[31] [25]),
        .I1(out),
        .I2(result[25]),
        .O(\sum_array[1]_22 [25]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sum_array[1][26]_i_1 
       (.I0(\ila_smax_exp_data_reg[31] [26]),
        .I1(out),
        .I2(result[26]),
        .O(\sum_array[1]_22 [26]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sum_array[1][27]_i_1 
       (.I0(\ila_smax_exp_data_reg[31] [27]),
        .I1(out),
        .I2(result[27]),
        .O(\sum_array[1]_22 [27]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sum_array[1][28]_i_1 
       (.I0(\ila_smax_exp_data_reg[31] [28]),
        .I1(out),
        .I2(result[28]),
        .O(\sum_array[1]_22 [28]));
  LUT1 #(
    .INIT(2'h1)) 
    \sum_array[1][28]_i_2 
       (.I0(m00_axi_aresetn),
        .O(\sum_array[1][28]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \sum_array[1][29]_i_1 
       (.I0(\ila_smax_exp_data_reg[31] [29]),
        .I1(out),
        .I2(result[29]),
        .O(\sum_array[1]_22 [29]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sum_array[1][2]_i_1 
       (.I0(\ila_smax_exp_data_reg[31] [2]),
        .I1(out),
        .I2(result[2]),
        .O(\sum_array[1]_22 [2]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sum_array[1][30]_i_1 
       (.I0(\ila_smax_exp_data_reg[31] [30]),
        .I1(out),
        .I2(result[30]),
        .O(\sum_array[1]_22 [30]));
  LUT6 #(
    .INIT(64'h0002000000300000)) 
    \sum_array[1][31]_i_1 
       (.I0(\ila_smax_exp_hold_counter[3] [3]),
        .I1(current_state[1]),
        .I2(out),
        .I3(\sum_array[1][31]_i_3_n_0 ),
        .I4(\sum_array[1][31]_i_4_n_0 ),
        .I5(current_state[2]),
        .O(\sum_array[1][31]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \sum_array[1][31]_i_2 
       (.I0(\ila_smax_exp_data_reg[31] [31]),
        .I1(out),
        .I2(result[31]),
        .O(\sum_array[1]_22 [31]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \sum_array[1][31]_i_3 
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(Q[5]),
        .I3(Q[6]),
        .I4(Q[7]),
        .I5(Q[4]),
        .O(\sum_array[1][31]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \sum_array[1][31]_i_4 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\sum_array[1][31]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \sum_array[1][3]_i_1 
       (.I0(\ila_smax_exp_data_reg[31] [3]),
        .I1(out),
        .I2(result[3]),
        .O(\sum_array[1]_22 [3]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sum_array[1][4]_i_1 
       (.I0(\ila_smax_exp_data_reg[31] [4]),
        .I1(out),
        .I2(result[4]),
        .O(\sum_array[1]_22 [4]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sum_array[1][5]_i_1 
       (.I0(\ila_smax_exp_data_reg[31] [5]),
        .I1(out),
        .I2(result[5]),
        .O(\sum_array[1]_22 [5]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sum_array[1][6]_i_1 
       (.I0(\ila_smax_exp_data_reg[31] [6]),
        .I1(out),
        .I2(result[6]),
        .O(\sum_array[1]_22 [6]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sum_array[1][7]_i_1 
       (.I0(\ila_smax_exp_data_reg[31] [7]),
        .I1(out),
        .I2(result[7]),
        .O(\sum_array[1]_22 [7]));
  LUT3 #(
    .INIT(8'hB8)) 
    \sum_array[1][8]_i_1 
       (.I0(\ila_smax_exp_data_reg[31] [8]),
        .I1(out),
        .I2(result[8]),
        .O(\sum_array[1]_22 [8]));
  LUT1 #(
    .INIT(2'h1)) 
    \sum_array[1][8]_i_2 
       (.I0(m00_axi_aresetn),
        .O(\sum_array[1][8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \sum_array[1][9]_i_1 
       (.I0(\ila_smax_exp_data_reg[31] [9]),
        .I1(out),
        .I2(result[9]),
        .O(\sum_array[1]_22 [9]));
  LUT6 #(
    .INIT(64'h0000000000000400)) 
    \sum_array[20][31]_i_1 
       (.I0(\sum_array[21][31]_i_2_n_0 ),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(current_state[2]),
        .I4(out),
        .I5(current_state[1]),
        .O(\sum_array[20]_3 ));
  LUT6 #(
    .INIT(64'h0000000000004000)) 
    \sum_array[21][31]_i_1 
       (.I0(\sum_array[21][31]_i_2_n_0 ),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(current_state[2]),
        .I4(out),
        .I5(current_state[1]),
        .O(\sum_array[21]_2 ));
  LUT5 #(
    .INIT(32'hFFFDFFFF)) 
    \sum_array[21][31]_i_2 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(\current_state[2]_i_5_n_0 ),
        .I4(\ila_smax_exp_hold_counter[3] [3]),
        .O(\sum_array[21][31]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00002000)) 
    \sum_array[22][31]_i_1 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(\sum_array[23][31]_i_2_n_0 ),
        .I3(\sum_array[22][31]_i_2_n_0 ),
        .I4(\sum_array[23][31]_i_4_n_0 ),
        .O(\sum_array[22]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair208" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \sum_array[22][31]_i_2 
       (.I0(Q[0]),
        .I1(Q[2]),
        .I2(Q[1]),
        .O(\sum_array[22][31]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000040000000)) 
    \sum_array[23][31]_i_1 
       (.I0(Q[3]),
        .I1(\sum_array[23][31]_i_2_n_0 ),
        .I2(Q[4]),
        .I3(Q[2]),
        .I4(\sum_array[23][31]_i_3_n_0 ),
        .I5(\sum_array[23][31]_i_4_n_0 ),
        .O(\sum_array[23]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT4 #(
    .INIT(16'h0002)) 
    \sum_array[23][31]_i_2 
       (.I0(\ila_smax_exp_hold_counter[3] [3]),
        .I1(Q[7]),
        .I2(Q[6]),
        .I3(Q[5]),
        .O(\sum_array[23][31]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sum_array[23][31]_i_3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\sum_array[23][31]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hEF)) 
    \sum_array[23][31]_i_4 
       (.I0(current_state[1]),
        .I1(out),
        .I2(current_state[2]),
        .O(\sum_array[23][31]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h00000080)) 
    \sum_array[2][31]_i_1 
       (.I0(\ila_smax_exp_hold_counter[3] [3]),
        .I1(\multiplicand_b[31]_i_2_n_0 ),
        .I2(current_state[2]),
        .I3(out),
        .I4(current_state[1]),
        .O(\sum_array[2]_21 ));
  LUT5 #(
    .INIT(32'h00004000)) 
    \sum_array[3][31]_i_1 
       (.I0(\sum_array[1][31]_i_3_n_0 ),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\ila_smax_exp_hold_counter[3] [3]),
        .I4(\sum_array[23][31]_i_4_n_0 ),
        .O(\sum_array[3]_20 ));
  LUT6 #(
    .INIT(64'h0000000000000100)) 
    \sum_array[4][31]_i_1 
       (.I0(Q[1]),
        .I1(Q[3]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(\sum_array[13][31]_i_2_n_0 ),
        .I5(\sum_array[23][31]_i_4_n_0 ),
        .O(\sum_array[4]_19 ));
  LUT6 #(
    .INIT(64'h0000000000001000)) 
    \sum_array[5][31]_i_1 
       (.I0(Q[1]),
        .I1(Q[3]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(\sum_array[13][31]_i_2_n_0 ),
        .I5(\sum_array[23][31]_i_4_n_0 ),
        .O(\sum_array[5]_18 ));
  LUT5 #(
    .INIT(32'h00001000)) 
    \sum_array[6][31]_i_1 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(\sum_array[23][31]_i_2_n_0 ),
        .I3(\sum_array[22][31]_i_2_n_0 ),
        .I4(\sum_array[23][31]_i_4_n_0 ),
        .O(\sum_array[6]_17 ));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \sum_array[7][31]_i_1 
       (.I0(Q[0]),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(\sum_array[7][31]_i_2_n_0 ),
        .I4(\sum_array[23][31]_i_2_n_0 ),
        .I5(\sum_array[23][31]_i_4_n_0 ),
        .O(\sum_array[7]_16 ));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT3 #(
    .INIT(8'h47)) 
    \sum_array[7][31]_i_2 
       (.I0(Q[2]),
        .I1(Q[4]),
        .I2(Q[3]),
        .O(\sum_array[7][31]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00000100)) 
    \sum_array[8][31]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(\sum_array[15][31]_i_2_n_0 ),
        .I4(\sum_array[23][31]_i_4_n_0 ),
        .O(\sum_array[8]_15 ));
  LUT6 #(
    .INIT(64'h0000000002000000)) 
    \sum_array[9][31]_i_1 
       (.I0(Q[3]),
        .I1(Q[4]),
        .I2(Q[2]),
        .I3(\sum_array[1][31]_i_4_n_0 ),
        .I4(\sum_array[23][31]_i_2_n_0 ),
        .I5(\sum_array[23][31]_i_4_n_0 ),
        .O(\sum_array[9]_14 ));
  FDCE \sum_array_reg[0][0] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[0][31]_i_1_n_0 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(\sum_array[0]_23 [0]),
        .Q(\sum_array_reg[0]_25 [0]));
  FDCE \sum_array_reg[0][10] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[0][31]_i_1_n_0 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(\sum_array[0]_23 [10]),
        .Q(\sum_array_reg[0]_25 [10]));
  FDCE \sum_array_reg[0][11] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[0][31]_i_1_n_0 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(\sum_array[0]_23 [11]),
        .Q(\sum_array_reg[0]_25 [11]));
  FDCE \sum_array_reg[0][12] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[0][31]_i_1_n_0 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(\sum_array[0]_23 [12]),
        .Q(\sum_array_reg[0]_25 [12]));
  FDCE \sum_array_reg[0][13] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[0][31]_i_1_n_0 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(\sum_array[0]_23 [13]),
        .Q(\sum_array_reg[0]_25 [13]));
  FDCE \sum_array_reg[0][14] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[0][31]_i_1_n_0 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(\sum_array[0]_23 [14]),
        .Q(\sum_array_reg[0]_25 [14]));
  FDCE \sum_array_reg[0][15] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[0][31]_i_1_n_0 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(\sum_array[0]_23 [15]),
        .Q(\sum_array_reg[0]_25 [15]));
  FDCE \sum_array_reg[0][16] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[0][31]_i_1_n_0 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(\sum_array[0]_23 [16]),
        .Q(\sum_array_reg[0]_25 [16]));
  FDCE \sum_array_reg[0][17] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[0][31]_i_1_n_0 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(\sum_array[0]_23 [17]),
        .Q(\sum_array_reg[0]_25 [17]));
  FDCE \sum_array_reg[0][18] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[0][31]_i_1_n_0 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(\sum_array[0]_23 [18]),
        .Q(\sum_array_reg[0]_25 [18]));
  FDCE \sum_array_reg[0][19] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[0][31]_i_1_n_0 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(\sum_array[0]_23 [19]),
        .Q(\sum_array_reg[0]_25 [19]));
  FDCE \sum_array_reg[0][1] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[0][31]_i_1_n_0 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(\sum_array[0]_23 [1]),
        .Q(\sum_array_reg[0]_25 [1]));
  FDCE \sum_array_reg[0][20] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[0][31]_i_1_n_0 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(\sum_array[0]_23 [20]),
        .Q(\sum_array_reg[0]_25 [20]));
  FDCE \sum_array_reg[0][21] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[0][31]_i_1_n_0 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(\sum_array[0]_23 [21]),
        .Q(\sum_array_reg[0]_25 [21]));
  FDCE \sum_array_reg[0][22] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[0][31]_i_1_n_0 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(\sum_array[0]_23 [22]),
        .Q(\sum_array_reg[0]_25 [22]));
  FDCE \sum_array_reg[0][23] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[0][31]_i_1_n_0 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(\sum_array[0]_23 [23]),
        .Q(\sum_array_reg[0]_25 [23]));
  FDCE \sum_array_reg[0][24] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[0][31]_i_1_n_0 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(\sum_array[0]_23 [24]),
        .Q(\sum_array_reg[0]_25 [24]));
  FDCE \sum_array_reg[0][25] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[0][31]_i_1_n_0 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(\sum_array[0]_23 [25]),
        .Q(\sum_array_reg[0]_25 [25]));
  FDCE \sum_array_reg[0][26] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[0][31]_i_1_n_0 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(\sum_array[0]_23 [26]),
        .Q(\sum_array_reg[0]_25 [26]));
  FDCE \sum_array_reg[0][27] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[0][31]_i_1_n_0 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(\sum_array[0]_23 [27]),
        .Q(\sum_array_reg[0]_25 [27]));
  FDCE \sum_array_reg[0][28] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[0][31]_i_1_n_0 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(\sum_array[0]_23 [28]),
        .Q(\sum_array_reg[0]_25 [28]));
  FDCE \sum_array_reg[0][29] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[0][31]_i_1_n_0 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(\sum_array[0]_23 [29]),
        .Q(\sum_array_reg[0]_25 [29]));
  FDCE \sum_array_reg[0][2] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[0][31]_i_1_n_0 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(\sum_array[0]_23 [2]),
        .Q(\sum_array_reg[0]_25 [2]));
  FDCE \sum_array_reg[0][30] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[0][31]_i_1_n_0 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(\sum_array[0]_23 [30]),
        .Q(\sum_array_reg[0]_25 [30]));
  FDCE \sum_array_reg[0][31] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[0][31]_i_1_n_0 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(\sum_array[0]_23 [31]),
        .Q(\sum_array_reg[0]_25 [31]));
  FDCE \sum_array_reg[0][3] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[0][31]_i_1_n_0 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(\sum_array[0]_23 [3]),
        .Q(\sum_array_reg[0]_25 [3]));
  FDCE \sum_array_reg[0][4] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[0][31]_i_1_n_0 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(\sum_array[0]_23 [4]),
        .Q(\sum_array_reg[0]_25 [4]));
  FDCE \sum_array_reg[0][5] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[0][31]_i_1_n_0 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(\sum_array[0]_23 [5]),
        .Q(\sum_array_reg[0]_25 [5]));
  FDCE \sum_array_reg[0][6] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[0][31]_i_1_n_0 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(\sum_array[0]_23 [6]),
        .Q(\sum_array_reg[0]_25 [6]));
  FDCE \sum_array_reg[0][7] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[0][31]_i_1_n_0 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(\sum_array[0]_23 [7]),
        .Q(\sum_array_reg[0]_25 [7]));
  FDCE \sum_array_reg[0][8] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[0][31]_i_1_n_0 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(\sum_array[0]_23 [8]),
        .Q(\sum_array_reg[0]_25 [8]));
  FDCE \sum_array_reg[0][9] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[0][31]_i_1_n_0 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(\sum_array[0]_23 [9]),
        .Q(\sum_array_reg[0]_25 [9]));
  FDCE \sum_array_reg[10][0] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[10]_13 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[0]),
        .Q(\sum_array_reg_n_0_[10][0] ));
  FDCE \sum_array_reg[10][10] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[10]_13 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[10]),
        .Q(\sum_array_reg_n_0_[10][10] ));
  FDCE \sum_array_reg[10][11] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[10]_13 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[11]),
        .Q(\sum_array_reg_n_0_[10][11] ));
  FDCE \sum_array_reg[10][12] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[10]_13 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[12]),
        .Q(\sum_array_reg_n_0_[10][12] ));
  FDCE \sum_array_reg[10][13] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[10]_13 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[13]),
        .Q(\sum_array_reg_n_0_[10][13] ));
  FDCE \sum_array_reg[10][14] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[10]_13 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[14]),
        .Q(\sum_array_reg_n_0_[10][14] ));
  FDCE \sum_array_reg[10][15] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[10]_13 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[15]),
        .Q(\sum_array_reg_n_0_[10][15] ));
  FDCE \sum_array_reg[10][16] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[10]_13 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[16]),
        .Q(\sum_array_reg_n_0_[10][16] ));
  FDCE \sum_array_reg[10][17] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[10]_13 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[17]),
        .Q(\sum_array_reg_n_0_[10][17] ));
  FDCE \sum_array_reg[10][18] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[10]_13 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[18]),
        .Q(\sum_array_reg_n_0_[10][18] ));
  FDCE \sum_array_reg[10][19] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[10]_13 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[19]),
        .Q(\sum_array_reg_n_0_[10][19] ));
  FDCE \sum_array_reg[10][1] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[10]_13 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[1]),
        .Q(\sum_array_reg_n_0_[10][1] ));
  FDCE \sum_array_reg[10][20] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[10]_13 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[20]),
        .Q(\sum_array_reg_n_0_[10][20] ));
  FDCE \sum_array_reg[10][21] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[10]_13 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[21]),
        .Q(\sum_array_reg_n_0_[10][21] ));
  FDCE \sum_array_reg[10][22] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[10]_13 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[22]),
        .Q(\sum_array_reg_n_0_[10][22] ));
  FDCE \sum_array_reg[10][23] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[10]_13 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[23]),
        .Q(\sum_array_reg_n_0_[10][23] ));
  FDCE \sum_array_reg[10][24] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[10]_13 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[24]),
        .Q(\sum_array_reg_n_0_[10][24] ));
  FDCE \sum_array_reg[10][25] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[10]_13 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[25]),
        .Q(\sum_array_reg_n_0_[10][25] ));
  FDCE \sum_array_reg[10][26] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[10]_13 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[26]),
        .Q(\sum_array_reg_n_0_[10][26] ));
  FDCE \sum_array_reg[10][27] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[10]_13 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[27]),
        .Q(\sum_array_reg_n_0_[10][27] ));
  FDCE \sum_array_reg[10][28] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[10]_13 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[28]),
        .Q(\sum_array_reg_n_0_[10][28] ));
  FDCE \sum_array_reg[10][29] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[10]_13 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[29]),
        .Q(\sum_array_reg_n_0_[10][29] ));
  FDCE \sum_array_reg[10][2] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[10]_13 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[2]),
        .Q(\sum_array_reg_n_0_[10][2] ));
  FDCE \sum_array_reg[10][30] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[10]_13 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[30]),
        .Q(\sum_array_reg_n_0_[10][30] ));
  FDCE \sum_array_reg[10][31] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[10]_13 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[31]),
        .Q(\sum_array_reg_n_0_[10][31] ));
  FDCE \sum_array_reg[10][3] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[10]_13 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[3]),
        .Q(\sum_array_reg_n_0_[10][3] ));
  FDCE \sum_array_reg[10][4] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[10]_13 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[4]),
        .Q(\sum_array_reg_n_0_[10][4] ));
  FDCE \sum_array_reg[10][5] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[10]_13 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[5]),
        .Q(\sum_array_reg_n_0_[10][5] ));
  FDCE \sum_array_reg[10][6] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[10]_13 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[6]),
        .Q(\sum_array_reg_n_0_[10][6] ));
  FDCE \sum_array_reg[10][7] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[10]_13 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[7]),
        .Q(\sum_array_reg_n_0_[10][7] ));
  FDCE \sum_array_reg[10][8] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[10]_13 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[8]),
        .Q(\sum_array_reg_n_0_[10][8] ));
  FDCE \sum_array_reg[10][9] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[10]_13 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[9]),
        .Q(\sum_array_reg_n_0_[10][9] ));
  FDCE \sum_array_reg[11][0] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[11]_12 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[0]),
        .Q(\sum_array_reg_n_0_[11][0] ));
  FDCE \sum_array_reg[11][10] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[11]_12 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[10]),
        .Q(\sum_array_reg_n_0_[11][10] ));
  FDCE \sum_array_reg[11][11] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[11]_12 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[11]),
        .Q(\sum_array_reg_n_0_[11][11] ));
  FDCE \sum_array_reg[11][12] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[11]_12 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[12]),
        .Q(\sum_array_reg_n_0_[11][12] ));
  FDCE \sum_array_reg[11][13] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[11]_12 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[13]),
        .Q(\sum_array_reg_n_0_[11][13] ));
  FDCE \sum_array_reg[11][14] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[11]_12 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[14]),
        .Q(\sum_array_reg_n_0_[11][14] ));
  FDCE \sum_array_reg[11][15] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[11]_12 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[15]),
        .Q(\sum_array_reg_n_0_[11][15] ));
  FDCE \sum_array_reg[11][16] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[11]_12 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[16]),
        .Q(\sum_array_reg_n_0_[11][16] ));
  FDCE \sum_array_reg[11][17] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[11]_12 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[17]),
        .Q(\sum_array_reg_n_0_[11][17] ));
  FDCE \sum_array_reg[11][18] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[11]_12 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[18]),
        .Q(\sum_array_reg_n_0_[11][18] ));
  FDCE \sum_array_reg[11][19] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[11]_12 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[19]),
        .Q(\sum_array_reg_n_0_[11][19] ));
  FDCE \sum_array_reg[11][1] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[11]_12 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[1]),
        .Q(\sum_array_reg_n_0_[11][1] ));
  FDCE \sum_array_reg[11][20] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[11]_12 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[20]),
        .Q(\sum_array_reg_n_0_[11][20] ));
  FDCE \sum_array_reg[11][21] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[11]_12 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[21]),
        .Q(\sum_array_reg_n_0_[11][21] ));
  FDCE \sum_array_reg[11][22] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[11]_12 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[22]),
        .Q(\sum_array_reg_n_0_[11][22] ));
  FDCE \sum_array_reg[11][23] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[11]_12 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[23]),
        .Q(\sum_array_reg_n_0_[11][23] ));
  FDCE \sum_array_reg[11][24] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[11]_12 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[24]),
        .Q(\sum_array_reg_n_0_[11][24] ));
  FDCE \sum_array_reg[11][25] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[11]_12 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[25]),
        .Q(\sum_array_reg_n_0_[11][25] ));
  FDCE \sum_array_reg[11][26] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[11]_12 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[26]),
        .Q(\sum_array_reg_n_0_[11][26] ));
  FDCE \sum_array_reg[11][27] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[11]_12 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[27]),
        .Q(\sum_array_reg_n_0_[11][27] ));
  FDCE \sum_array_reg[11][28] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[11]_12 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[28]),
        .Q(\sum_array_reg_n_0_[11][28] ));
  FDCE \sum_array_reg[11][29] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[11]_12 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[29]),
        .Q(\sum_array_reg_n_0_[11][29] ));
  FDCE \sum_array_reg[11][2] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[11]_12 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[2]),
        .Q(\sum_array_reg_n_0_[11][2] ));
  FDCE \sum_array_reg[11][30] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[11]_12 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[30]),
        .Q(\sum_array_reg_n_0_[11][30] ));
  FDCE \sum_array_reg[11][31] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[11]_12 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[31]),
        .Q(\sum_array_reg_n_0_[11][31] ));
  FDCE \sum_array_reg[11][3] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[11]_12 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[3]),
        .Q(\sum_array_reg_n_0_[11][3] ));
  FDCE \sum_array_reg[11][4] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[11]_12 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[4]),
        .Q(\sum_array_reg_n_0_[11][4] ));
  FDCE \sum_array_reg[11][5] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[11]_12 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[5]),
        .Q(\sum_array_reg_n_0_[11][5] ));
  FDCE \sum_array_reg[11][6] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[11]_12 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[6]),
        .Q(\sum_array_reg_n_0_[11][6] ));
  FDCE \sum_array_reg[11][7] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[11]_12 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[7]),
        .Q(\sum_array_reg_n_0_[11][7] ));
  FDCE \sum_array_reg[11][8] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[11]_12 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[8]),
        .Q(\sum_array_reg_n_0_[11][8] ));
  FDCE \sum_array_reg[11][9] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[11]_12 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[9]),
        .Q(\sum_array_reg_n_0_[11][9] ));
  FDCE \sum_array_reg[12][0] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[12]_11 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[0]),
        .Q(\sum_array_reg_n_0_[12][0] ));
  FDCE \sum_array_reg[12][10] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[12]_11 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[10]),
        .Q(\sum_array_reg_n_0_[12][10] ));
  FDCE \sum_array_reg[12][11] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[12]_11 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[11]),
        .Q(\sum_array_reg_n_0_[12][11] ));
  FDCE \sum_array_reg[12][12] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[12]_11 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[12]),
        .Q(\sum_array_reg_n_0_[12][12] ));
  FDCE \sum_array_reg[12][13] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[12]_11 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[13]),
        .Q(\sum_array_reg_n_0_[12][13] ));
  FDCE \sum_array_reg[12][14] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[12]_11 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[14]),
        .Q(\sum_array_reg_n_0_[12][14] ));
  FDCE \sum_array_reg[12][15] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[12]_11 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[15]),
        .Q(\sum_array_reg_n_0_[12][15] ));
  FDCE \sum_array_reg[12][16] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[12]_11 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[16]),
        .Q(\sum_array_reg_n_0_[12][16] ));
  FDCE \sum_array_reg[12][17] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[12]_11 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[17]),
        .Q(\sum_array_reg_n_0_[12][17] ));
  FDCE \sum_array_reg[12][18] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[12]_11 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[18]),
        .Q(\sum_array_reg_n_0_[12][18] ));
  FDCE \sum_array_reg[12][19] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[12]_11 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[19]),
        .Q(\sum_array_reg_n_0_[12][19] ));
  FDCE \sum_array_reg[12][1] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[12]_11 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[1]),
        .Q(\sum_array_reg_n_0_[12][1] ));
  FDCE \sum_array_reg[12][20] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[12]_11 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[20]),
        .Q(\sum_array_reg_n_0_[12][20] ));
  FDCE \sum_array_reg[12][21] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[12]_11 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[21]),
        .Q(\sum_array_reg_n_0_[12][21] ));
  FDCE \sum_array_reg[12][22] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[12]_11 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[22]),
        .Q(\sum_array_reg_n_0_[12][22] ));
  FDCE \sum_array_reg[12][23] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[12]_11 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[23]),
        .Q(\sum_array_reg_n_0_[12][23] ));
  FDCE \sum_array_reg[12][24] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[12]_11 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[24]),
        .Q(\sum_array_reg_n_0_[12][24] ));
  FDCE \sum_array_reg[12][25] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[12]_11 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[25]),
        .Q(\sum_array_reg_n_0_[12][25] ));
  FDCE \sum_array_reg[12][26] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[12]_11 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[26]),
        .Q(\sum_array_reg_n_0_[12][26] ));
  FDCE \sum_array_reg[12][27] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[12]_11 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[27]),
        .Q(\sum_array_reg_n_0_[12][27] ));
  FDCE \sum_array_reg[12][28] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[12]_11 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[28]),
        .Q(\sum_array_reg_n_0_[12][28] ));
  FDCE \sum_array_reg[12][29] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[12]_11 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[29]),
        .Q(\sum_array_reg_n_0_[12][29] ));
  FDCE \sum_array_reg[12][2] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[12]_11 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[2]),
        .Q(\sum_array_reg_n_0_[12][2] ));
  FDCE \sum_array_reg[12][30] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[12]_11 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[30]),
        .Q(\sum_array_reg_n_0_[12][30] ));
  FDCE \sum_array_reg[12][31] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[12]_11 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[31]),
        .Q(\sum_array_reg_n_0_[12][31] ));
  FDCE \sum_array_reg[12][3] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[12]_11 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[3]),
        .Q(\sum_array_reg_n_0_[12][3] ));
  FDCE \sum_array_reg[12][4] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[12]_11 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[4]),
        .Q(\sum_array_reg_n_0_[12][4] ));
  FDCE \sum_array_reg[12][5] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[12]_11 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[5]),
        .Q(\sum_array_reg_n_0_[12][5] ));
  FDCE \sum_array_reg[12][6] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[12]_11 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[6]),
        .Q(\sum_array_reg_n_0_[12][6] ));
  FDCE \sum_array_reg[12][7] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[12]_11 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[7]),
        .Q(\sum_array_reg_n_0_[12][7] ));
  FDCE \sum_array_reg[12][8] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[12]_11 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[8]),
        .Q(\sum_array_reg_n_0_[12][8] ));
  FDCE \sum_array_reg[12][9] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[12]_11 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[9]),
        .Q(\sum_array_reg_n_0_[12][9] ));
  FDCE \sum_array_reg[13][0] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[13]_10 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[0]),
        .Q(\sum_array_reg_n_0_[13][0] ));
  FDCE \sum_array_reg[13][10] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[13]_10 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[10]),
        .Q(\sum_array_reg_n_0_[13][10] ));
  FDCE \sum_array_reg[13][11] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[13]_10 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[11]),
        .Q(\sum_array_reg_n_0_[13][11] ));
  FDCE \sum_array_reg[13][12] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[13]_10 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[12]),
        .Q(\sum_array_reg_n_0_[13][12] ));
  FDCE \sum_array_reg[13][13] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[13]_10 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[13]),
        .Q(\sum_array_reg_n_0_[13][13] ));
  FDCE \sum_array_reg[13][14] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[13]_10 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[14]),
        .Q(\sum_array_reg_n_0_[13][14] ));
  FDCE \sum_array_reg[13][15] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[13]_10 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[15]),
        .Q(\sum_array_reg_n_0_[13][15] ));
  FDCE \sum_array_reg[13][16] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[13]_10 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[16]),
        .Q(\sum_array_reg_n_0_[13][16] ));
  FDCE \sum_array_reg[13][17] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[13]_10 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[17]),
        .Q(\sum_array_reg_n_0_[13][17] ));
  FDCE \sum_array_reg[13][18] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[13]_10 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[18]),
        .Q(\sum_array_reg_n_0_[13][18] ));
  FDCE \sum_array_reg[13][19] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[13]_10 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[19]),
        .Q(\sum_array_reg_n_0_[13][19] ));
  FDCE \sum_array_reg[13][1] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[13]_10 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[1]),
        .Q(\sum_array_reg_n_0_[13][1] ));
  FDCE \sum_array_reg[13][20] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[13]_10 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[20]),
        .Q(\sum_array_reg_n_0_[13][20] ));
  FDCE \sum_array_reg[13][21] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[13]_10 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[21]),
        .Q(\sum_array_reg_n_0_[13][21] ));
  FDCE \sum_array_reg[13][22] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[13]_10 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[22]),
        .Q(\sum_array_reg_n_0_[13][22] ));
  FDCE \sum_array_reg[13][23] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[13]_10 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[23]),
        .Q(\sum_array_reg_n_0_[13][23] ));
  FDCE \sum_array_reg[13][24] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[13]_10 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[24]),
        .Q(\sum_array_reg_n_0_[13][24] ));
  FDCE \sum_array_reg[13][25] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[13]_10 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[25]),
        .Q(\sum_array_reg_n_0_[13][25] ));
  FDCE \sum_array_reg[13][26] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[13]_10 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[26]),
        .Q(\sum_array_reg_n_0_[13][26] ));
  FDCE \sum_array_reg[13][27] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[13]_10 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[27]),
        .Q(\sum_array_reg_n_0_[13][27] ));
  FDCE \sum_array_reg[13][28] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[13]_10 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[28]),
        .Q(\sum_array_reg_n_0_[13][28] ));
  FDCE \sum_array_reg[13][29] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[13]_10 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[29]),
        .Q(\sum_array_reg_n_0_[13][29] ));
  FDCE \sum_array_reg[13][2] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[13]_10 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[2]),
        .Q(\sum_array_reg_n_0_[13][2] ));
  FDCE \sum_array_reg[13][30] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[13]_10 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[30]),
        .Q(\sum_array_reg_n_0_[13][30] ));
  FDCE \sum_array_reg[13][31] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[13]_10 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[31]),
        .Q(\sum_array_reg_n_0_[13][31] ));
  FDCE \sum_array_reg[13][3] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[13]_10 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[3]),
        .Q(\sum_array_reg_n_0_[13][3] ));
  FDCE \sum_array_reg[13][4] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[13]_10 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[4]),
        .Q(\sum_array_reg_n_0_[13][4] ));
  FDCE \sum_array_reg[13][5] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[13]_10 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[5]),
        .Q(\sum_array_reg_n_0_[13][5] ));
  FDCE \sum_array_reg[13][6] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[13]_10 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[6]),
        .Q(\sum_array_reg_n_0_[13][6] ));
  FDCE \sum_array_reg[13][7] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[13]_10 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[7]),
        .Q(\sum_array_reg_n_0_[13][7] ));
  FDCE \sum_array_reg[13][8] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[13]_10 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[8]),
        .Q(\sum_array_reg_n_0_[13][8] ));
  FDCE \sum_array_reg[13][9] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[13]_10 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[9]),
        .Q(\sum_array_reg_n_0_[13][9] ));
  FDCE \sum_array_reg[14][0] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[14]_9 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[0]),
        .Q(\sum_array_reg_n_0_[14][0] ));
  FDCE \sum_array_reg[14][10] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[14]_9 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[10]),
        .Q(\sum_array_reg_n_0_[14][10] ));
  FDCE \sum_array_reg[14][11] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[14]_9 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[11]),
        .Q(\sum_array_reg_n_0_[14][11] ));
  FDCE \sum_array_reg[14][12] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[14]_9 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[12]),
        .Q(\sum_array_reg_n_0_[14][12] ));
  FDCE \sum_array_reg[14][13] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[14]_9 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[13]),
        .Q(\sum_array_reg_n_0_[14][13] ));
  FDCE \sum_array_reg[14][14] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[14]_9 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[14]),
        .Q(\sum_array_reg_n_0_[14][14] ));
  FDCE \sum_array_reg[14][15] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[14]_9 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[15]),
        .Q(\sum_array_reg_n_0_[14][15] ));
  FDCE \sum_array_reg[14][16] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[14]_9 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[16]),
        .Q(\sum_array_reg_n_0_[14][16] ));
  FDCE \sum_array_reg[14][17] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[14]_9 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[17]),
        .Q(\sum_array_reg_n_0_[14][17] ));
  FDCE \sum_array_reg[14][18] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[14]_9 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[18]),
        .Q(\sum_array_reg_n_0_[14][18] ));
  FDCE \sum_array_reg[14][19] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[14]_9 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[19]),
        .Q(\sum_array_reg_n_0_[14][19] ));
  FDCE \sum_array_reg[14][1] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[14]_9 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[1]),
        .Q(\sum_array_reg_n_0_[14][1] ));
  FDCE \sum_array_reg[14][20] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[14]_9 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[20]),
        .Q(\sum_array_reg_n_0_[14][20] ));
  FDCE \sum_array_reg[14][21] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[14]_9 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[21]),
        .Q(\sum_array_reg_n_0_[14][21] ));
  FDCE \sum_array_reg[14][22] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[14]_9 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[22]),
        .Q(\sum_array_reg_n_0_[14][22] ));
  FDCE \sum_array_reg[14][23] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[14]_9 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[23]),
        .Q(\sum_array_reg_n_0_[14][23] ));
  FDCE \sum_array_reg[14][24] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[14]_9 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[24]),
        .Q(\sum_array_reg_n_0_[14][24] ));
  FDCE \sum_array_reg[14][25] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[14]_9 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[25]),
        .Q(\sum_array_reg_n_0_[14][25] ));
  FDCE \sum_array_reg[14][26] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[14]_9 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[26]),
        .Q(\sum_array_reg_n_0_[14][26] ));
  FDCE \sum_array_reg[14][27] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[14]_9 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[27]),
        .Q(\sum_array_reg_n_0_[14][27] ));
  FDCE \sum_array_reg[14][28] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[14]_9 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[28]),
        .Q(\sum_array_reg_n_0_[14][28] ));
  FDCE \sum_array_reg[14][29] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[14]_9 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[29]),
        .Q(\sum_array_reg_n_0_[14][29] ));
  FDCE \sum_array_reg[14][2] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[14]_9 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[2]),
        .Q(\sum_array_reg_n_0_[14][2] ));
  FDCE \sum_array_reg[14][30] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[14]_9 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[30]),
        .Q(\sum_array_reg_n_0_[14][30] ));
  FDCE \sum_array_reg[14][31] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[14]_9 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[31]),
        .Q(\sum_array_reg_n_0_[14][31] ));
  FDCE \sum_array_reg[14][3] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[14]_9 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[3]),
        .Q(\sum_array_reg_n_0_[14][3] ));
  FDCE \sum_array_reg[14][4] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[14]_9 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[4]),
        .Q(\sum_array_reg_n_0_[14][4] ));
  FDCE \sum_array_reg[14][5] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[14]_9 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[5]),
        .Q(\sum_array_reg_n_0_[14][5] ));
  FDCE \sum_array_reg[14][6] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[14]_9 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[6]),
        .Q(\sum_array_reg_n_0_[14][6] ));
  FDCE \sum_array_reg[14][7] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[14]_9 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[7]),
        .Q(\sum_array_reg_n_0_[14][7] ));
  FDCE \sum_array_reg[14][8] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[14]_9 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[8]),
        .Q(\sum_array_reg_n_0_[14][8] ));
  FDCE \sum_array_reg[14][9] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[14]_9 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[9]),
        .Q(\sum_array_reg_n_0_[14][9] ));
  FDCE \sum_array_reg[15][0] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[15]_8 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[0]),
        .Q(\sum_array_reg_n_0_[15][0] ));
  FDCE \sum_array_reg[15][10] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[15]_8 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[10]),
        .Q(\sum_array_reg_n_0_[15][10] ));
  FDCE \sum_array_reg[15][11] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[15]_8 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[11]),
        .Q(\sum_array_reg_n_0_[15][11] ));
  FDCE \sum_array_reg[15][12] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[15]_8 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[12]),
        .Q(\sum_array_reg_n_0_[15][12] ));
  FDCE \sum_array_reg[15][13] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[15]_8 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[13]),
        .Q(\sum_array_reg_n_0_[15][13] ));
  FDCE \sum_array_reg[15][14] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[15]_8 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[14]),
        .Q(\sum_array_reg_n_0_[15][14] ));
  FDCE \sum_array_reg[15][15] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[15]_8 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[15]),
        .Q(\sum_array_reg_n_0_[15][15] ));
  FDCE \sum_array_reg[15][16] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[15]_8 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[16]),
        .Q(\sum_array_reg_n_0_[15][16] ));
  FDCE \sum_array_reg[15][17] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[15]_8 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[17]),
        .Q(\sum_array_reg_n_0_[15][17] ));
  FDCE \sum_array_reg[15][18] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[15]_8 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[18]),
        .Q(\sum_array_reg_n_0_[15][18] ));
  FDCE \sum_array_reg[15][19] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[15]_8 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[19]),
        .Q(\sum_array_reg_n_0_[15][19] ));
  FDCE \sum_array_reg[15][1] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[15]_8 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[1]),
        .Q(\sum_array_reg_n_0_[15][1] ));
  FDCE \sum_array_reg[15][20] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[15]_8 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[20]),
        .Q(\sum_array_reg_n_0_[15][20] ));
  FDCE \sum_array_reg[15][21] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[15]_8 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[21]),
        .Q(\sum_array_reg_n_0_[15][21] ));
  FDCE \sum_array_reg[15][22] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[15]_8 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[22]),
        .Q(\sum_array_reg_n_0_[15][22] ));
  FDCE \sum_array_reg[15][23] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[15]_8 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[23]),
        .Q(\sum_array_reg_n_0_[15][23] ));
  FDCE \sum_array_reg[15][24] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[15]_8 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[24]),
        .Q(\sum_array_reg_n_0_[15][24] ));
  FDCE \sum_array_reg[15][25] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[15]_8 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[25]),
        .Q(\sum_array_reg_n_0_[15][25] ));
  FDCE \sum_array_reg[15][26] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[15]_8 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[26]),
        .Q(\sum_array_reg_n_0_[15][26] ));
  FDCE \sum_array_reg[15][27] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[15]_8 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[27]),
        .Q(\sum_array_reg_n_0_[15][27] ));
  FDCE \sum_array_reg[15][28] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[15]_8 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[28]),
        .Q(\sum_array_reg_n_0_[15][28] ));
  FDCE \sum_array_reg[15][29] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[15]_8 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[29]),
        .Q(\sum_array_reg_n_0_[15][29] ));
  FDCE \sum_array_reg[15][2] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[15]_8 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[2]),
        .Q(\sum_array_reg_n_0_[15][2] ));
  FDCE \sum_array_reg[15][30] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[15]_8 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[30]),
        .Q(\sum_array_reg_n_0_[15][30] ));
  FDCE \sum_array_reg[15][31] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[15]_8 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[31]),
        .Q(\sum_array_reg_n_0_[15][31] ));
  FDCE \sum_array_reg[15][3] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[15]_8 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[3]),
        .Q(\sum_array_reg_n_0_[15][3] ));
  FDCE \sum_array_reg[15][4] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[15]_8 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[4]),
        .Q(\sum_array_reg_n_0_[15][4] ));
  FDCE \sum_array_reg[15][5] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[15]_8 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[5]),
        .Q(\sum_array_reg_n_0_[15][5] ));
  FDCE \sum_array_reg[15][6] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[15]_8 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[6]),
        .Q(\sum_array_reg_n_0_[15][6] ));
  FDCE \sum_array_reg[15][7] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[15]_8 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[7]),
        .Q(\sum_array_reg_n_0_[15][7] ));
  FDCE \sum_array_reg[15][8] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[15]_8 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[8]),
        .Q(\sum_array_reg_n_0_[15][8] ));
  FDCE \sum_array_reg[15][9] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[15]_8 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[9]),
        .Q(\sum_array_reg_n_0_[15][9] ));
  FDCE \sum_array_reg[16][0] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[16]_7 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[0]),
        .Q(\sum_array_reg_n_0_[16][0] ));
  FDCE \sum_array_reg[16][10] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[16]_7 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[10]),
        .Q(\sum_array_reg_n_0_[16][10] ));
  FDCE \sum_array_reg[16][11] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[16]_7 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[11]),
        .Q(\sum_array_reg_n_0_[16][11] ));
  FDCE \sum_array_reg[16][12] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[16]_7 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[12]),
        .Q(\sum_array_reg_n_0_[16][12] ));
  FDCE \sum_array_reg[16][13] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[16]_7 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[13]),
        .Q(\sum_array_reg_n_0_[16][13] ));
  FDCE \sum_array_reg[16][14] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[16]_7 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[14]),
        .Q(\sum_array_reg_n_0_[16][14] ));
  FDCE \sum_array_reg[16][15] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[16]_7 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[15]),
        .Q(\sum_array_reg_n_0_[16][15] ));
  FDCE \sum_array_reg[16][16] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[16]_7 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[16]),
        .Q(\sum_array_reg_n_0_[16][16] ));
  FDCE \sum_array_reg[16][17] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[16]_7 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[17]),
        .Q(\sum_array_reg_n_0_[16][17] ));
  FDCE \sum_array_reg[16][18] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[16]_7 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[18]),
        .Q(\sum_array_reg_n_0_[16][18] ));
  FDCE \sum_array_reg[16][19] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[16]_7 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[19]),
        .Q(\sum_array_reg_n_0_[16][19] ));
  FDCE \sum_array_reg[16][1] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[16]_7 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[1]),
        .Q(\sum_array_reg_n_0_[16][1] ));
  FDCE \sum_array_reg[16][20] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[16]_7 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[20]),
        .Q(\sum_array_reg_n_0_[16][20] ));
  FDCE \sum_array_reg[16][21] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[16]_7 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[21]),
        .Q(\sum_array_reg_n_0_[16][21] ));
  FDCE \sum_array_reg[16][22] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[16]_7 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[22]),
        .Q(\sum_array_reg_n_0_[16][22] ));
  FDCE \sum_array_reg[16][23] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[16]_7 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[23]),
        .Q(\sum_array_reg_n_0_[16][23] ));
  FDCE \sum_array_reg[16][24] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[16]_7 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[24]),
        .Q(\sum_array_reg_n_0_[16][24] ));
  FDCE \sum_array_reg[16][25] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[16]_7 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[25]),
        .Q(\sum_array_reg_n_0_[16][25] ));
  FDCE \sum_array_reg[16][26] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[16]_7 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[26]),
        .Q(\sum_array_reg_n_0_[16][26] ));
  FDCE \sum_array_reg[16][27] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[16]_7 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[27]),
        .Q(\sum_array_reg_n_0_[16][27] ));
  FDCE \sum_array_reg[16][28] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[16]_7 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[28]),
        .Q(\sum_array_reg_n_0_[16][28] ));
  FDCE \sum_array_reg[16][29] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[16]_7 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[29]),
        .Q(\sum_array_reg_n_0_[16][29] ));
  FDCE \sum_array_reg[16][2] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[16]_7 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[2]),
        .Q(\sum_array_reg_n_0_[16][2] ));
  FDCE \sum_array_reg[16][30] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[16]_7 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[30]),
        .Q(\sum_array_reg_n_0_[16][30] ));
  FDCE \sum_array_reg[16][31] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[16]_7 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[31]),
        .Q(\sum_array_reg_n_0_[16][31] ));
  FDCE \sum_array_reg[16][3] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[16]_7 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[3]),
        .Q(\sum_array_reg_n_0_[16][3] ));
  FDCE \sum_array_reg[16][4] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[16]_7 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[4]),
        .Q(\sum_array_reg_n_0_[16][4] ));
  FDCE \sum_array_reg[16][5] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[16]_7 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[5]),
        .Q(\sum_array_reg_n_0_[16][5] ));
  FDCE \sum_array_reg[16][6] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[16]_7 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[6]),
        .Q(\sum_array_reg_n_0_[16][6] ));
  FDCE \sum_array_reg[16][7] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[16]_7 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[7]),
        .Q(\sum_array_reg_n_0_[16][7] ));
  FDCE \sum_array_reg[16][8] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[16]_7 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[8]),
        .Q(\sum_array_reg_n_0_[16][8] ));
  FDCE \sum_array_reg[16][9] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[16]_7 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[9]),
        .Q(\sum_array_reg_n_0_[16][9] ));
  FDCE \sum_array_reg[17][0] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[17]_6 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[0]),
        .Q(\sum_array_reg_n_0_[17][0] ));
  FDCE \sum_array_reg[17][10] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[17]_6 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[10]),
        .Q(\sum_array_reg_n_0_[17][10] ));
  FDCE \sum_array_reg[17][11] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[17]_6 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[11]),
        .Q(\sum_array_reg_n_0_[17][11] ));
  FDCE \sum_array_reg[17][12] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[17]_6 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[12]),
        .Q(\sum_array_reg_n_0_[17][12] ));
  FDCE \sum_array_reg[17][13] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[17]_6 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[13]),
        .Q(\sum_array_reg_n_0_[17][13] ));
  FDCE \sum_array_reg[17][14] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[17]_6 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[14]),
        .Q(\sum_array_reg_n_0_[17][14] ));
  FDCE \sum_array_reg[17][15] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[17]_6 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[15]),
        .Q(\sum_array_reg_n_0_[17][15] ));
  FDCE \sum_array_reg[17][16] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[17]_6 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[16]),
        .Q(\sum_array_reg_n_0_[17][16] ));
  FDCE \sum_array_reg[17][17] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[17]_6 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[17]),
        .Q(\sum_array_reg_n_0_[17][17] ));
  FDCE \sum_array_reg[17][18] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[17]_6 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[18]),
        .Q(\sum_array_reg_n_0_[17][18] ));
  FDCE \sum_array_reg[17][19] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[17]_6 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[19]),
        .Q(\sum_array_reg_n_0_[17][19] ));
  FDCE \sum_array_reg[17][1] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[17]_6 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[1]),
        .Q(\sum_array_reg_n_0_[17][1] ));
  FDCE \sum_array_reg[17][20] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[17]_6 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[20]),
        .Q(\sum_array_reg_n_0_[17][20] ));
  FDCE \sum_array_reg[17][21] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[17]_6 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[21]),
        .Q(\sum_array_reg_n_0_[17][21] ));
  FDCE \sum_array_reg[17][22] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[17]_6 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[22]),
        .Q(\sum_array_reg_n_0_[17][22] ));
  FDCE \sum_array_reg[17][23] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[17]_6 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[23]),
        .Q(\sum_array_reg_n_0_[17][23] ));
  FDCE \sum_array_reg[17][24] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[17]_6 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[24]),
        .Q(\sum_array_reg_n_0_[17][24] ));
  FDCE \sum_array_reg[17][25] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[17]_6 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[25]),
        .Q(\sum_array_reg_n_0_[17][25] ));
  FDCE \sum_array_reg[17][26] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[17]_6 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[26]),
        .Q(\sum_array_reg_n_0_[17][26] ));
  FDCE \sum_array_reg[17][27] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[17]_6 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[27]),
        .Q(\sum_array_reg_n_0_[17][27] ));
  FDCE \sum_array_reg[17][28] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[17]_6 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[28]),
        .Q(\sum_array_reg_n_0_[17][28] ));
  FDCE \sum_array_reg[17][29] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[17]_6 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[29]),
        .Q(\sum_array_reg_n_0_[17][29] ));
  FDCE \sum_array_reg[17][2] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[17]_6 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[2]),
        .Q(\sum_array_reg_n_0_[17][2] ));
  FDCE \sum_array_reg[17][30] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[17]_6 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[30]),
        .Q(\sum_array_reg_n_0_[17][30] ));
  FDCE \sum_array_reg[17][31] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[17]_6 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[31]),
        .Q(\sum_array_reg_n_0_[17][31] ));
  FDCE \sum_array_reg[17][3] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[17]_6 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[3]),
        .Q(\sum_array_reg_n_0_[17][3] ));
  FDCE \sum_array_reg[17][4] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[17]_6 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[4]),
        .Q(\sum_array_reg_n_0_[17][4] ));
  FDCE \sum_array_reg[17][5] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[17]_6 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[5]),
        .Q(\sum_array_reg_n_0_[17][5] ));
  FDCE \sum_array_reg[17][6] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[17]_6 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[6]),
        .Q(\sum_array_reg_n_0_[17][6] ));
  FDCE \sum_array_reg[17][7] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[17]_6 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[7]),
        .Q(\sum_array_reg_n_0_[17][7] ));
  FDCE \sum_array_reg[17][8] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[17]_6 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[8]),
        .Q(\sum_array_reg_n_0_[17][8] ));
  FDCE \sum_array_reg[17][9] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[17]_6 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[9]),
        .Q(\sum_array_reg_n_0_[17][9] ));
  FDCE \sum_array_reg[18][0] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[18]_5 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[0]),
        .Q(\sum_array_reg_n_0_[18][0] ));
  FDCE \sum_array_reg[18][10] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[18]_5 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[10]),
        .Q(\sum_array_reg_n_0_[18][10] ));
  FDCE \sum_array_reg[18][11] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[18]_5 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[11]),
        .Q(\sum_array_reg_n_0_[18][11] ));
  FDCE \sum_array_reg[18][12] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[18]_5 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[12]),
        .Q(\sum_array_reg_n_0_[18][12] ));
  FDCE \sum_array_reg[18][13] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[18]_5 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[13]),
        .Q(\sum_array_reg_n_0_[18][13] ));
  FDCE \sum_array_reg[18][14] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[18]_5 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[14]),
        .Q(\sum_array_reg_n_0_[18][14] ));
  FDCE \sum_array_reg[18][15] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[18]_5 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[15]),
        .Q(\sum_array_reg_n_0_[18][15] ));
  FDCE \sum_array_reg[18][16] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[18]_5 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[16]),
        .Q(\sum_array_reg_n_0_[18][16] ));
  FDCE \sum_array_reg[18][17] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[18]_5 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[17]),
        .Q(\sum_array_reg_n_0_[18][17] ));
  FDCE \sum_array_reg[18][18] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[18]_5 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[18]),
        .Q(\sum_array_reg_n_0_[18][18] ));
  FDCE \sum_array_reg[18][19] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[18]_5 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[19]),
        .Q(\sum_array_reg_n_0_[18][19] ));
  FDCE \sum_array_reg[18][1] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[18]_5 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[1]),
        .Q(\sum_array_reg_n_0_[18][1] ));
  FDCE \sum_array_reg[18][20] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[18]_5 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[20]),
        .Q(\sum_array_reg_n_0_[18][20] ));
  FDCE \sum_array_reg[18][21] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[18]_5 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[21]),
        .Q(\sum_array_reg_n_0_[18][21] ));
  FDCE \sum_array_reg[18][22] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[18]_5 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[22]),
        .Q(\sum_array_reg_n_0_[18][22] ));
  FDCE \sum_array_reg[18][23] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[18]_5 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[23]),
        .Q(\sum_array_reg_n_0_[18][23] ));
  FDCE \sum_array_reg[18][24] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[18]_5 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[24]),
        .Q(\sum_array_reg_n_0_[18][24] ));
  FDCE \sum_array_reg[18][25] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[18]_5 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[25]),
        .Q(\sum_array_reg_n_0_[18][25] ));
  FDCE \sum_array_reg[18][26] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[18]_5 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[26]),
        .Q(\sum_array_reg_n_0_[18][26] ));
  FDCE \sum_array_reg[18][27] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[18]_5 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[27]),
        .Q(\sum_array_reg_n_0_[18][27] ));
  FDCE \sum_array_reg[18][28] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[18]_5 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[28]),
        .Q(\sum_array_reg_n_0_[18][28] ));
  FDCE \sum_array_reg[18][29] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[18]_5 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[29]),
        .Q(\sum_array_reg_n_0_[18][29] ));
  FDCE \sum_array_reg[18][2] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[18]_5 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[2]),
        .Q(\sum_array_reg_n_0_[18][2] ));
  FDCE \sum_array_reg[18][30] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[18]_5 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[30]),
        .Q(\sum_array_reg_n_0_[18][30] ));
  FDCE \sum_array_reg[18][31] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[18]_5 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[31]),
        .Q(\sum_array_reg_n_0_[18][31] ));
  FDCE \sum_array_reg[18][3] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[18]_5 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[3]),
        .Q(\sum_array_reg_n_0_[18][3] ));
  FDCE \sum_array_reg[18][4] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[18]_5 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[4]),
        .Q(\sum_array_reg_n_0_[18][4] ));
  FDCE \sum_array_reg[18][5] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[18]_5 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[5]),
        .Q(\sum_array_reg_n_0_[18][5] ));
  FDCE \sum_array_reg[18][6] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[18]_5 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[6]),
        .Q(\sum_array_reg_n_0_[18][6] ));
  FDCE \sum_array_reg[18][7] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[18]_5 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[7]),
        .Q(\sum_array_reg_n_0_[18][7] ));
  FDCE \sum_array_reg[18][8] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[18]_5 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[8]),
        .Q(\sum_array_reg_n_0_[18][8] ));
  FDCE \sum_array_reg[18][9] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[18]_5 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[9]),
        .Q(\sum_array_reg_n_0_[18][9] ));
  FDCE \sum_array_reg[19][0] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[19]_4 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[0]),
        .Q(\sum_array_reg_n_0_[19][0] ));
  FDCE \sum_array_reg[19][10] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[19]_4 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[10]),
        .Q(\sum_array_reg_n_0_[19][10] ));
  FDCE \sum_array_reg[19][11] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[19]_4 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[11]),
        .Q(\sum_array_reg_n_0_[19][11] ));
  FDCE \sum_array_reg[19][12] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[19]_4 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[12]),
        .Q(\sum_array_reg_n_0_[19][12] ));
  FDCE \sum_array_reg[19][13] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[19]_4 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[13]),
        .Q(\sum_array_reg_n_0_[19][13] ));
  FDCE \sum_array_reg[19][14] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[19]_4 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[14]),
        .Q(\sum_array_reg_n_0_[19][14] ));
  FDCE \sum_array_reg[19][15] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[19]_4 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[15]),
        .Q(\sum_array_reg_n_0_[19][15] ));
  FDCE \sum_array_reg[19][16] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[19]_4 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[16]),
        .Q(\sum_array_reg_n_0_[19][16] ));
  FDCE \sum_array_reg[19][17] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[19]_4 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[17]),
        .Q(\sum_array_reg_n_0_[19][17] ));
  FDCE \sum_array_reg[19][18] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[19]_4 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[18]),
        .Q(\sum_array_reg_n_0_[19][18] ));
  FDCE \sum_array_reg[19][19] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[19]_4 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[19]),
        .Q(\sum_array_reg_n_0_[19][19] ));
  FDCE \sum_array_reg[19][1] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[19]_4 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[1]),
        .Q(\sum_array_reg_n_0_[19][1] ));
  FDCE \sum_array_reg[19][20] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[19]_4 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[20]),
        .Q(\sum_array_reg_n_0_[19][20] ));
  FDCE \sum_array_reg[19][21] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[19]_4 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[21]),
        .Q(\sum_array_reg_n_0_[19][21] ));
  FDCE \sum_array_reg[19][22] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[19]_4 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[22]),
        .Q(\sum_array_reg_n_0_[19][22] ));
  FDCE \sum_array_reg[19][23] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[19]_4 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[23]),
        .Q(\sum_array_reg_n_0_[19][23] ));
  FDCE \sum_array_reg[19][24] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[19]_4 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[24]),
        .Q(\sum_array_reg_n_0_[19][24] ));
  FDCE \sum_array_reg[19][25] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[19]_4 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[25]),
        .Q(\sum_array_reg_n_0_[19][25] ));
  FDCE \sum_array_reg[19][26] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[19]_4 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[26]),
        .Q(\sum_array_reg_n_0_[19][26] ));
  FDCE \sum_array_reg[19][27] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[19]_4 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[27]),
        .Q(\sum_array_reg_n_0_[19][27] ));
  FDCE \sum_array_reg[19][28] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[19]_4 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[28]),
        .Q(\sum_array_reg_n_0_[19][28] ));
  FDCE \sum_array_reg[19][29] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[19]_4 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[29]),
        .Q(\sum_array_reg_n_0_[19][29] ));
  FDCE \sum_array_reg[19][2] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[19]_4 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[2]),
        .Q(\sum_array_reg_n_0_[19][2] ));
  FDCE \sum_array_reg[19][30] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[19]_4 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[30]),
        .Q(\sum_array_reg_n_0_[19][30] ));
  FDCE \sum_array_reg[19][31] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[19]_4 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[31]),
        .Q(\sum_array_reg_n_0_[19][31] ));
  FDCE \sum_array_reg[19][3] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[19]_4 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[3]),
        .Q(\sum_array_reg_n_0_[19][3] ));
  FDCE \sum_array_reg[19][4] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[19]_4 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[4]),
        .Q(\sum_array_reg_n_0_[19][4] ));
  FDCE \sum_array_reg[19][5] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[19]_4 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[5]),
        .Q(\sum_array_reg_n_0_[19][5] ));
  FDCE \sum_array_reg[19][6] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[19]_4 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[6]),
        .Q(\sum_array_reg_n_0_[19][6] ));
  FDCE \sum_array_reg[19][7] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[19]_4 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[7]),
        .Q(\sum_array_reg_n_0_[19][7] ));
  FDCE \sum_array_reg[19][8] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[19]_4 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[8]),
        .Q(\sum_array_reg_n_0_[19][8] ));
  FDCE \sum_array_reg[19][9] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[19]_4 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[9]),
        .Q(\sum_array_reg_n_0_[19][9] ));
  FDCE \sum_array_reg[1][0] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[1][31]_i_1_n_0 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(\sum_array[1]_22 [0]),
        .Q(\sum_array_reg[1]_24 [0]));
  FDCE \sum_array_reg[1][10] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[1][31]_i_1_n_0 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(\sum_array[1]_22 [10]),
        .Q(\sum_array_reg[1]_24 [10]));
  FDCE \sum_array_reg[1][11] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[1][31]_i_1_n_0 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(\sum_array[1]_22 [11]),
        .Q(\sum_array_reg[1]_24 [11]));
  FDCE \sum_array_reg[1][12] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[1][31]_i_1_n_0 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(\sum_array[1]_22 [12]),
        .Q(\sum_array_reg[1]_24 [12]));
  FDCE \sum_array_reg[1][13] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[1][31]_i_1_n_0 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(\sum_array[1]_22 [13]),
        .Q(\sum_array_reg[1]_24 [13]));
  FDCE \sum_array_reg[1][14] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[1][31]_i_1_n_0 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(\sum_array[1]_22 [14]),
        .Q(\sum_array_reg[1]_24 [14]));
  FDCE \sum_array_reg[1][15] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[1][31]_i_1_n_0 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(\sum_array[1]_22 [15]),
        .Q(\sum_array_reg[1]_24 [15]));
  FDCE \sum_array_reg[1][16] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[1][31]_i_1_n_0 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(\sum_array[1]_22 [16]),
        .Q(\sum_array_reg[1]_24 [16]));
  FDCE \sum_array_reg[1][17] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[1][31]_i_1_n_0 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(\sum_array[1]_22 [17]),
        .Q(\sum_array_reg[1]_24 [17]));
  FDCE \sum_array_reg[1][18] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[1][31]_i_1_n_0 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(\sum_array[1]_22 [18]),
        .Q(\sum_array_reg[1]_24 [18]));
  FDCE \sum_array_reg[1][19] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[1][31]_i_1_n_0 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(\sum_array[1]_22 [19]),
        .Q(\sum_array_reg[1]_24 [19]));
  FDCE \sum_array_reg[1][1] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[1][31]_i_1_n_0 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(\sum_array[1]_22 [1]),
        .Q(\sum_array_reg[1]_24 [1]));
  FDCE \sum_array_reg[1][20] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[1][31]_i_1_n_0 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(\sum_array[1]_22 [20]),
        .Q(\sum_array_reg[1]_24 [20]));
  FDCE \sum_array_reg[1][21] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[1][31]_i_1_n_0 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(\sum_array[1]_22 [21]),
        .Q(\sum_array_reg[1]_24 [21]));
  FDCE \sum_array_reg[1][22] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[1][31]_i_1_n_0 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(\sum_array[1]_22 [22]),
        .Q(\sum_array_reg[1]_24 [22]));
  FDCE \sum_array_reg[1][23] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[1][31]_i_1_n_0 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(\sum_array[1]_22 [23]),
        .Q(\sum_array_reg[1]_24 [23]));
  FDCE \sum_array_reg[1][24] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[1][31]_i_1_n_0 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(\sum_array[1]_22 [24]),
        .Q(\sum_array_reg[1]_24 [24]));
  FDCE \sum_array_reg[1][25] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[1][31]_i_1_n_0 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(\sum_array[1]_22 [25]),
        .Q(\sum_array_reg[1]_24 [25]));
  FDCE \sum_array_reg[1][26] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[1][31]_i_1_n_0 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(\sum_array[1]_22 [26]),
        .Q(\sum_array_reg[1]_24 [26]));
  FDCE \sum_array_reg[1][27] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[1][31]_i_1_n_0 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(\sum_array[1]_22 [27]),
        .Q(\sum_array_reg[1]_24 [27]));
  FDCE \sum_array_reg[1][28] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[1][31]_i_1_n_0 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(\sum_array[1]_22 [28]),
        .Q(\sum_array_reg[1]_24 [28]));
  FDCE \sum_array_reg[1][29] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[1][31]_i_1_n_0 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(\sum_array[1]_22 [29]),
        .Q(\sum_array_reg[1]_24 [29]));
  FDCE \sum_array_reg[1][2] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[1][31]_i_1_n_0 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(\sum_array[1]_22 [2]),
        .Q(\sum_array_reg[1]_24 [2]));
  FDCE \sum_array_reg[1][30] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[1][31]_i_1_n_0 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(\sum_array[1]_22 [30]),
        .Q(\sum_array_reg[1]_24 [30]));
  FDCE \sum_array_reg[1][31] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[1][31]_i_1_n_0 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(\sum_array[1]_22 [31]),
        .Q(\sum_array_reg[1]_24 [31]));
  FDCE \sum_array_reg[1][3] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[1][31]_i_1_n_0 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(\sum_array[1]_22 [3]),
        .Q(\sum_array_reg[1]_24 [3]));
  FDCE \sum_array_reg[1][4] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[1][31]_i_1_n_0 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(\sum_array[1]_22 [4]),
        .Q(\sum_array_reg[1]_24 [4]));
  FDCE \sum_array_reg[1][5] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[1][31]_i_1_n_0 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(\sum_array[1]_22 [5]),
        .Q(\sum_array_reg[1]_24 [5]));
  FDCE \sum_array_reg[1][6] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[1][31]_i_1_n_0 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(\sum_array[1]_22 [6]),
        .Q(\sum_array_reg[1]_24 [6]));
  FDCE \sum_array_reg[1][7] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[1][31]_i_1_n_0 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(\sum_array[1]_22 [7]),
        .Q(\sum_array_reg[1]_24 [7]));
  FDCE \sum_array_reg[1][8] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[1][31]_i_1_n_0 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(\sum_array[1]_22 [8]),
        .Q(\sum_array_reg[1]_24 [8]));
  FDCE \sum_array_reg[1][9] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[1][31]_i_1_n_0 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(\sum_array[1]_22 [9]),
        .Q(\sum_array_reg[1]_24 [9]));
  FDCE \sum_array_reg[20][0] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[20]_3 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[0]),
        .Q(\sum_array_reg_n_0_[20][0] ));
  FDCE \sum_array_reg[20][10] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[20]_3 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[10]),
        .Q(\sum_array_reg_n_0_[20][10] ));
  FDCE \sum_array_reg[20][11] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[20]_3 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[11]),
        .Q(\sum_array_reg_n_0_[20][11] ));
  FDCE \sum_array_reg[20][12] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[20]_3 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[12]),
        .Q(\sum_array_reg_n_0_[20][12] ));
  FDCE \sum_array_reg[20][13] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[20]_3 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[13]),
        .Q(\sum_array_reg_n_0_[20][13] ));
  FDCE \sum_array_reg[20][14] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[20]_3 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[14]),
        .Q(\sum_array_reg_n_0_[20][14] ));
  FDCE \sum_array_reg[20][15] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[20]_3 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[15]),
        .Q(\sum_array_reg_n_0_[20][15] ));
  FDCE \sum_array_reg[20][16] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[20]_3 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[16]),
        .Q(\sum_array_reg_n_0_[20][16] ));
  FDCE \sum_array_reg[20][17] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[20]_3 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[17]),
        .Q(\sum_array_reg_n_0_[20][17] ));
  FDCE \sum_array_reg[20][18] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[20]_3 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[18]),
        .Q(\sum_array_reg_n_0_[20][18] ));
  FDCE \sum_array_reg[20][19] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[20]_3 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[19]),
        .Q(\sum_array_reg_n_0_[20][19] ));
  FDCE \sum_array_reg[20][1] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[20]_3 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[1]),
        .Q(\sum_array_reg_n_0_[20][1] ));
  FDCE \sum_array_reg[20][20] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[20]_3 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[20]),
        .Q(\sum_array_reg_n_0_[20][20] ));
  FDCE \sum_array_reg[20][21] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[20]_3 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[21]),
        .Q(\sum_array_reg_n_0_[20][21] ));
  FDCE \sum_array_reg[20][22] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[20]_3 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[22]),
        .Q(\sum_array_reg_n_0_[20][22] ));
  FDCE \sum_array_reg[20][23] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[20]_3 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[23]),
        .Q(\sum_array_reg_n_0_[20][23] ));
  FDCE \sum_array_reg[20][24] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[20]_3 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[24]),
        .Q(\sum_array_reg_n_0_[20][24] ));
  FDCE \sum_array_reg[20][25] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[20]_3 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[25]),
        .Q(\sum_array_reg_n_0_[20][25] ));
  FDCE \sum_array_reg[20][26] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[20]_3 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[26]),
        .Q(\sum_array_reg_n_0_[20][26] ));
  FDCE \sum_array_reg[20][27] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[20]_3 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[27]),
        .Q(\sum_array_reg_n_0_[20][27] ));
  FDCE \sum_array_reg[20][28] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[20]_3 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[28]),
        .Q(\sum_array_reg_n_0_[20][28] ));
  FDCE \sum_array_reg[20][29] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[20]_3 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[29]),
        .Q(\sum_array_reg_n_0_[20][29] ));
  FDCE \sum_array_reg[20][2] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[20]_3 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[2]),
        .Q(\sum_array_reg_n_0_[20][2] ));
  FDCE \sum_array_reg[20][30] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[20]_3 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[30]),
        .Q(\sum_array_reg_n_0_[20][30] ));
  FDCE \sum_array_reg[20][31] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[20]_3 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[31]),
        .Q(\sum_array_reg_n_0_[20][31] ));
  FDCE \sum_array_reg[20][3] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[20]_3 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[3]),
        .Q(\sum_array_reg_n_0_[20][3] ));
  FDCE \sum_array_reg[20][4] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[20]_3 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[4]),
        .Q(\sum_array_reg_n_0_[20][4] ));
  FDCE \sum_array_reg[20][5] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[20]_3 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[5]),
        .Q(\sum_array_reg_n_0_[20][5] ));
  FDCE \sum_array_reg[20][6] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[20]_3 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[6]),
        .Q(\sum_array_reg_n_0_[20][6] ));
  FDCE \sum_array_reg[20][7] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[20]_3 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[7]),
        .Q(\sum_array_reg_n_0_[20][7] ));
  FDCE \sum_array_reg[20][8] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[20]_3 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[8]),
        .Q(\sum_array_reg_n_0_[20][8] ));
  FDCE \sum_array_reg[20][9] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[20]_3 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[9]),
        .Q(\sum_array_reg_n_0_[20][9] ));
  FDCE \sum_array_reg[21][0] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[21]_2 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[0]),
        .Q(\sum_array_reg_n_0_[21][0] ));
  FDCE \sum_array_reg[21][10] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[21]_2 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[10]),
        .Q(\sum_array_reg_n_0_[21][10] ));
  FDCE \sum_array_reg[21][11] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[21]_2 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[11]),
        .Q(\sum_array_reg_n_0_[21][11] ));
  FDCE \sum_array_reg[21][12] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[21]_2 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[12]),
        .Q(\sum_array_reg_n_0_[21][12] ));
  FDCE \sum_array_reg[21][13] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[21]_2 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[13]),
        .Q(\sum_array_reg_n_0_[21][13] ));
  FDCE \sum_array_reg[21][14] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[21]_2 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[14]),
        .Q(\sum_array_reg_n_0_[21][14] ));
  FDCE \sum_array_reg[21][15] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[21]_2 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[15]),
        .Q(\sum_array_reg_n_0_[21][15] ));
  FDCE \sum_array_reg[21][16] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[21]_2 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[16]),
        .Q(\sum_array_reg_n_0_[21][16] ));
  FDCE \sum_array_reg[21][17] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[21]_2 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[17]),
        .Q(\sum_array_reg_n_0_[21][17] ));
  FDCE \sum_array_reg[21][18] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[21]_2 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[18]),
        .Q(\sum_array_reg_n_0_[21][18] ));
  FDCE \sum_array_reg[21][19] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[21]_2 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[19]),
        .Q(\sum_array_reg_n_0_[21][19] ));
  FDCE \sum_array_reg[21][1] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[21]_2 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[1]),
        .Q(\sum_array_reg_n_0_[21][1] ));
  FDCE \sum_array_reg[21][20] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[21]_2 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[20]),
        .Q(\sum_array_reg_n_0_[21][20] ));
  FDCE \sum_array_reg[21][21] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[21]_2 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[21]),
        .Q(\sum_array_reg_n_0_[21][21] ));
  FDCE \sum_array_reg[21][22] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[21]_2 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[22]),
        .Q(\sum_array_reg_n_0_[21][22] ));
  FDCE \sum_array_reg[21][23] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[21]_2 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[23]),
        .Q(\sum_array_reg_n_0_[21][23] ));
  FDCE \sum_array_reg[21][24] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[21]_2 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[24]),
        .Q(\sum_array_reg_n_0_[21][24] ));
  FDCE \sum_array_reg[21][25] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[21]_2 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[25]),
        .Q(\sum_array_reg_n_0_[21][25] ));
  FDCE \sum_array_reg[21][26] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[21]_2 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[26]),
        .Q(\sum_array_reg_n_0_[21][26] ));
  FDCE \sum_array_reg[21][27] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[21]_2 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[27]),
        .Q(\sum_array_reg_n_0_[21][27] ));
  FDCE \sum_array_reg[21][28] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[21]_2 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[28]),
        .Q(\sum_array_reg_n_0_[21][28] ));
  FDCE \sum_array_reg[21][29] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[21]_2 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[29]),
        .Q(\sum_array_reg_n_0_[21][29] ));
  FDCE \sum_array_reg[21][2] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[21]_2 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[2]),
        .Q(\sum_array_reg_n_0_[21][2] ));
  FDCE \sum_array_reg[21][30] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[21]_2 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[30]),
        .Q(\sum_array_reg_n_0_[21][30] ));
  FDCE \sum_array_reg[21][31] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[21]_2 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[31]),
        .Q(\sum_array_reg_n_0_[21][31] ));
  FDCE \sum_array_reg[21][3] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[21]_2 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[3]),
        .Q(\sum_array_reg_n_0_[21][3] ));
  FDCE \sum_array_reg[21][4] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[21]_2 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[4]),
        .Q(\sum_array_reg_n_0_[21][4] ));
  FDCE \sum_array_reg[21][5] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[21]_2 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[5]),
        .Q(\sum_array_reg_n_0_[21][5] ));
  FDCE \sum_array_reg[21][6] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[21]_2 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[6]),
        .Q(\sum_array_reg_n_0_[21][6] ));
  FDCE \sum_array_reg[21][7] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[21]_2 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[7]),
        .Q(\sum_array_reg_n_0_[21][7] ));
  FDCE \sum_array_reg[21][8] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[21]_2 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[8]),
        .Q(\sum_array_reg_n_0_[21][8] ));
  FDCE \sum_array_reg[21][9] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[21]_2 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[9]),
        .Q(\sum_array_reg_n_0_[21][9] ));
  FDCE \sum_array_reg[22][0] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[22]_1 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[0]),
        .Q(\sum_array_reg_n_0_[22][0] ));
  FDCE \sum_array_reg[22][10] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[22]_1 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[10]),
        .Q(\sum_array_reg_n_0_[22][10] ));
  FDCE \sum_array_reg[22][11] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[22]_1 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[11]),
        .Q(\sum_array_reg_n_0_[22][11] ));
  FDCE \sum_array_reg[22][12] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[22]_1 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[12]),
        .Q(\sum_array_reg_n_0_[22][12] ));
  FDCE \sum_array_reg[22][13] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[22]_1 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[13]),
        .Q(\sum_array_reg_n_0_[22][13] ));
  FDCE \sum_array_reg[22][14] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[22]_1 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[14]),
        .Q(\sum_array_reg_n_0_[22][14] ));
  FDCE \sum_array_reg[22][15] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[22]_1 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[15]),
        .Q(\sum_array_reg_n_0_[22][15] ));
  FDCE \sum_array_reg[22][16] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[22]_1 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[16]),
        .Q(\sum_array_reg_n_0_[22][16] ));
  FDCE \sum_array_reg[22][17] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[22]_1 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[17]),
        .Q(\sum_array_reg_n_0_[22][17] ));
  FDCE \sum_array_reg[22][18] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[22]_1 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[18]),
        .Q(\sum_array_reg_n_0_[22][18] ));
  FDCE \sum_array_reg[22][19] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[22]_1 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[19]),
        .Q(\sum_array_reg_n_0_[22][19] ));
  FDCE \sum_array_reg[22][1] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[22]_1 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[1]),
        .Q(\sum_array_reg_n_0_[22][1] ));
  FDCE \sum_array_reg[22][20] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[22]_1 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[20]),
        .Q(\sum_array_reg_n_0_[22][20] ));
  FDCE \sum_array_reg[22][21] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[22]_1 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[21]),
        .Q(\sum_array_reg_n_0_[22][21] ));
  FDCE \sum_array_reg[22][22] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[22]_1 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[22]),
        .Q(\sum_array_reg_n_0_[22][22] ));
  FDCE \sum_array_reg[22][23] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[22]_1 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[23]),
        .Q(\sum_array_reg_n_0_[22][23] ));
  FDCE \sum_array_reg[22][24] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[22]_1 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[24]),
        .Q(\sum_array_reg_n_0_[22][24] ));
  FDCE \sum_array_reg[22][25] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[22]_1 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[25]),
        .Q(\sum_array_reg_n_0_[22][25] ));
  FDCE \sum_array_reg[22][26] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[22]_1 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[26]),
        .Q(\sum_array_reg_n_0_[22][26] ));
  FDCE \sum_array_reg[22][27] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[22]_1 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[27]),
        .Q(\sum_array_reg_n_0_[22][27] ));
  FDCE \sum_array_reg[22][28] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[22]_1 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[28]),
        .Q(\sum_array_reg_n_0_[22][28] ));
  FDCE \sum_array_reg[22][29] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[22]_1 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[29]),
        .Q(\sum_array_reg_n_0_[22][29] ));
  FDCE \sum_array_reg[22][2] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[22]_1 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[2]),
        .Q(\sum_array_reg_n_0_[22][2] ));
  FDCE \sum_array_reg[22][30] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[22]_1 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[30]),
        .Q(\sum_array_reg_n_0_[22][30] ));
  FDCE \sum_array_reg[22][31] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[22]_1 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[31]),
        .Q(\sum_array_reg_n_0_[22][31] ));
  FDCE \sum_array_reg[22][3] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[22]_1 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[3]),
        .Q(\sum_array_reg_n_0_[22][3] ));
  FDCE \sum_array_reg[22][4] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[22]_1 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[4]),
        .Q(\sum_array_reg_n_0_[22][4] ));
  FDCE \sum_array_reg[22][5] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[22]_1 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[5]),
        .Q(\sum_array_reg_n_0_[22][5] ));
  FDCE \sum_array_reg[22][6] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[22]_1 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[6]),
        .Q(\sum_array_reg_n_0_[22][6] ));
  FDCE \sum_array_reg[22][7] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[22]_1 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[7]),
        .Q(\sum_array_reg_n_0_[22][7] ));
  FDCE \sum_array_reg[22][8] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[22]_1 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[8]),
        .Q(\sum_array_reg_n_0_[22][8] ));
  FDCE \sum_array_reg[22][9] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[22]_1 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[9]),
        .Q(\sum_array_reg_n_0_[22][9] ));
  FDCE \sum_array_reg[23][0] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[23]_0 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[0]),
        .Q(\sum_array_reg_n_0_[23][0] ));
  FDCE \sum_array_reg[23][10] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[23]_0 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[10]),
        .Q(\sum_array_reg_n_0_[23][10] ));
  FDCE \sum_array_reg[23][11] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[23]_0 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[11]),
        .Q(\sum_array_reg_n_0_[23][11] ));
  FDCE \sum_array_reg[23][12] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[23]_0 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[12]),
        .Q(\sum_array_reg_n_0_[23][12] ));
  FDCE \sum_array_reg[23][13] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[23]_0 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[13]),
        .Q(\sum_array_reg_n_0_[23][13] ));
  FDCE \sum_array_reg[23][14] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[23]_0 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[14]),
        .Q(\sum_array_reg_n_0_[23][14] ));
  FDCE \sum_array_reg[23][15] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[23]_0 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[15]),
        .Q(\sum_array_reg_n_0_[23][15] ));
  FDCE \sum_array_reg[23][16] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[23]_0 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[16]),
        .Q(\sum_array_reg_n_0_[23][16] ));
  FDCE \sum_array_reg[23][17] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[23]_0 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[17]),
        .Q(\sum_array_reg_n_0_[23][17] ));
  FDCE \sum_array_reg[23][18] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[23]_0 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[18]),
        .Q(\sum_array_reg_n_0_[23][18] ));
  FDCE \sum_array_reg[23][19] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[23]_0 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[19]),
        .Q(\sum_array_reg_n_0_[23][19] ));
  FDCE \sum_array_reg[23][1] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[23]_0 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[1]),
        .Q(\sum_array_reg_n_0_[23][1] ));
  FDCE \sum_array_reg[23][20] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[23]_0 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[20]),
        .Q(\sum_array_reg_n_0_[23][20] ));
  FDCE \sum_array_reg[23][21] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[23]_0 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[21]),
        .Q(\sum_array_reg_n_0_[23][21] ));
  FDCE \sum_array_reg[23][22] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[23]_0 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[22]),
        .Q(\sum_array_reg_n_0_[23][22] ));
  FDCE \sum_array_reg[23][23] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[23]_0 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[23]),
        .Q(\sum_array_reg_n_0_[23][23] ));
  FDCE \sum_array_reg[23][24] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[23]_0 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[24]),
        .Q(\sum_array_reg_n_0_[23][24] ));
  FDCE \sum_array_reg[23][25] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[23]_0 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[25]),
        .Q(\sum_array_reg_n_0_[23][25] ));
  FDCE \sum_array_reg[23][26] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[23]_0 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[26]),
        .Q(\sum_array_reg_n_0_[23][26] ));
  FDCE \sum_array_reg[23][27] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[23]_0 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[27]),
        .Q(\sum_array_reg_n_0_[23][27] ));
  FDCE \sum_array_reg[23][28] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[23]_0 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[28]),
        .Q(\sum_array_reg_n_0_[23][28] ));
  FDCE \sum_array_reg[23][29] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[23]_0 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[29]),
        .Q(\sum_array_reg_n_0_[23][29] ));
  FDCE \sum_array_reg[23][2] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[23]_0 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[2]),
        .Q(\sum_array_reg_n_0_[23][2] ));
  FDCE \sum_array_reg[23][30] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[23]_0 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[30]),
        .Q(\sum_array_reg_n_0_[23][30] ));
  FDCE \sum_array_reg[23][31] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[23]_0 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[31]),
        .Q(\sum_array_reg_n_0_[23][31] ));
  FDCE \sum_array_reg[23][3] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[23]_0 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[3]),
        .Q(\sum_array_reg_n_0_[23][3] ));
  FDCE \sum_array_reg[23][4] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[23]_0 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[4]),
        .Q(\sum_array_reg_n_0_[23][4] ));
  FDCE \sum_array_reg[23][5] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[23]_0 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[5]),
        .Q(\sum_array_reg_n_0_[23][5] ));
  FDCE \sum_array_reg[23][6] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[23]_0 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[6]),
        .Q(\sum_array_reg_n_0_[23][6] ));
  FDCE \sum_array_reg[23][7] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[23]_0 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[7]),
        .Q(\sum_array_reg_n_0_[23][7] ));
  FDCE \sum_array_reg[23][8] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[23]_0 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[8]),
        .Q(\sum_array_reg_n_0_[23][8] ));
  FDCE \sum_array_reg[23][9] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[23]_0 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[9]),
        .Q(\sum_array_reg_n_0_[23][9] ));
  FDCE \sum_array_reg[2][0] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[2]_21 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[0]),
        .Q(\sum_array_reg_n_0_[2][0] ));
  FDCE \sum_array_reg[2][10] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[2]_21 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[10]),
        .Q(\sum_array_reg_n_0_[2][10] ));
  FDCE \sum_array_reg[2][11] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[2]_21 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[11]),
        .Q(\sum_array_reg_n_0_[2][11] ));
  FDCE \sum_array_reg[2][12] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[2]_21 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[12]),
        .Q(\sum_array_reg_n_0_[2][12] ));
  FDCE \sum_array_reg[2][13] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[2]_21 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[13]),
        .Q(\sum_array_reg_n_0_[2][13] ));
  FDCE \sum_array_reg[2][14] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[2]_21 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[14]),
        .Q(\sum_array_reg_n_0_[2][14] ));
  FDCE \sum_array_reg[2][15] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[2]_21 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[15]),
        .Q(\sum_array_reg_n_0_[2][15] ));
  FDCE \sum_array_reg[2][16] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[2]_21 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[16]),
        .Q(\sum_array_reg_n_0_[2][16] ));
  FDCE \sum_array_reg[2][17] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[2]_21 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[17]),
        .Q(\sum_array_reg_n_0_[2][17] ));
  FDCE \sum_array_reg[2][18] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[2]_21 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[18]),
        .Q(\sum_array_reg_n_0_[2][18] ));
  FDCE \sum_array_reg[2][19] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[2]_21 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[19]),
        .Q(\sum_array_reg_n_0_[2][19] ));
  FDCE \sum_array_reg[2][1] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[2]_21 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[1]),
        .Q(\sum_array_reg_n_0_[2][1] ));
  FDCE \sum_array_reg[2][20] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[2]_21 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[20]),
        .Q(\sum_array_reg_n_0_[2][20] ));
  FDCE \sum_array_reg[2][21] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[2]_21 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[21]),
        .Q(\sum_array_reg_n_0_[2][21] ));
  FDCE \sum_array_reg[2][22] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[2]_21 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[22]),
        .Q(\sum_array_reg_n_0_[2][22] ));
  FDCE \sum_array_reg[2][23] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[2]_21 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[23]),
        .Q(\sum_array_reg_n_0_[2][23] ));
  FDCE \sum_array_reg[2][24] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[2]_21 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[24]),
        .Q(\sum_array_reg_n_0_[2][24] ));
  FDCE \sum_array_reg[2][25] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[2]_21 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[25]),
        .Q(\sum_array_reg_n_0_[2][25] ));
  FDCE \sum_array_reg[2][26] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[2]_21 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[26]),
        .Q(\sum_array_reg_n_0_[2][26] ));
  FDCE \sum_array_reg[2][27] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[2]_21 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[27]),
        .Q(\sum_array_reg_n_0_[2][27] ));
  FDCE \sum_array_reg[2][28] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[2]_21 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[28]),
        .Q(\sum_array_reg_n_0_[2][28] ));
  FDCE \sum_array_reg[2][29] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[2]_21 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[29]),
        .Q(\sum_array_reg_n_0_[2][29] ));
  FDCE \sum_array_reg[2][2] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[2]_21 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[2]),
        .Q(\sum_array_reg_n_0_[2][2] ));
  FDCE \sum_array_reg[2][30] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[2]_21 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[30]),
        .Q(\sum_array_reg_n_0_[2][30] ));
  FDCE \sum_array_reg[2][31] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[2]_21 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[31]),
        .Q(\sum_array_reg_n_0_[2][31] ));
  FDCE \sum_array_reg[2][3] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[2]_21 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[3]),
        .Q(\sum_array_reg_n_0_[2][3] ));
  FDCE \sum_array_reg[2][4] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[2]_21 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[4]),
        .Q(\sum_array_reg_n_0_[2][4] ));
  FDCE \sum_array_reg[2][5] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[2]_21 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[5]),
        .Q(\sum_array_reg_n_0_[2][5] ));
  FDCE \sum_array_reg[2][6] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[2]_21 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[6]),
        .Q(\sum_array_reg_n_0_[2][6] ));
  FDCE \sum_array_reg[2][7] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[2]_21 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[7]),
        .Q(\sum_array_reg_n_0_[2][7] ));
  FDCE \sum_array_reg[2][8] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[2]_21 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[8]),
        .Q(\sum_array_reg_n_0_[2][8] ));
  FDCE \sum_array_reg[2][9] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[2]_21 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[9]),
        .Q(\sum_array_reg_n_0_[2][9] ));
  FDCE \sum_array_reg[3][0] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[3]_20 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[0]),
        .Q(\sum_array_reg_n_0_[3][0] ));
  FDCE \sum_array_reg[3][10] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[3]_20 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[10]),
        .Q(\sum_array_reg_n_0_[3][10] ));
  FDCE \sum_array_reg[3][11] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[3]_20 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[11]),
        .Q(\sum_array_reg_n_0_[3][11] ));
  FDCE \sum_array_reg[3][12] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[3]_20 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[12]),
        .Q(\sum_array_reg_n_0_[3][12] ));
  FDCE \sum_array_reg[3][13] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[3]_20 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[13]),
        .Q(\sum_array_reg_n_0_[3][13] ));
  FDCE \sum_array_reg[3][14] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[3]_20 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[14]),
        .Q(\sum_array_reg_n_0_[3][14] ));
  FDCE \sum_array_reg[3][15] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[3]_20 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[15]),
        .Q(\sum_array_reg_n_0_[3][15] ));
  FDCE \sum_array_reg[3][16] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[3]_20 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[16]),
        .Q(\sum_array_reg_n_0_[3][16] ));
  FDCE \sum_array_reg[3][17] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[3]_20 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[17]),
        .Q(\sum_array_reg_n_0_[3][17] ));
  FDCE \sum_array_reg[3][18] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[3]_20 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[18]),
        .Q(\sum_array_reg_n_0_[3][18] ));
  FDCE \sum_array_reg[3][19] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[3]_20 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[19]),
        .Q(\sum_array_reg_n_0_[3][19] ));
  FDCE \sum_array_reg[3][1] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[3]_20 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[1]),
        .Q(\sum_array_reg_n_0_[3][1] ));
  FDCE \sum_array_reg[3][20] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[3]_20 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[20]),
        .Q(\sum_array_reg_n_0_[3][20] ));
  FDCE \sum_array_reg[3][21] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[3]_20 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[21]),
        .Q(\sum_array_reg_n_0_[3][21] ));
  FDCE \sum_array_reg[3][22] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[3]_20 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[22]),
        .Q(\sum_array_reg_n_0_[3][22] ));
  FDCE \sum_array_reg[3][23] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[3]_20 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[23]),
        .Q(\sum_array_reg_n_0_[3][23] ));
  FDCE \sum_array_reg[3][24] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[3]_20 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[24]),
        .Q(\sum_array_reg_n_0_[3][24] ));
  FDCE \sum_array_reg[3][25] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[3]_20 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[25]),
        .Q(\sum_array_reg_n_0_[3][25] ));
  FDCE \sum_array_reg[3][26] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[3]_20 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[26]),
        .Q(\sum_array_reg_n_0_[3][26] ));
  FDCE \sum_array_reg[3][27] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[3]_20 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[27]),
        .Q(\sum_array_reg_n_0_[3][27] ));
  FDCE \sum_array_reg[3][28] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[3]_20 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[28]),
        .Q(\sum_array_reg_n_0_[3][28] ));
  FDCE \sum_array_reg[3][29] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[3]_20 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[29]),
        .Q(\sum_array_reg_n_0_[3][29] ));
  FDCE \sum_array_reg[3][2] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[3]_20 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[2]),
        .Q(\sum_array_reg_n_0_[3][2] ));
  FDCE \sum_array_reg[3][30] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[3]_20 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[30]),
        .Q(\sum_array_reg_n_0_[3][30] ));
  FDCE \sum_array_reg[3][31] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[3]_20 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[31]),
        .Q(\sum_array_reg_n_0_[3][31] ));
  FDCE \sum_array_reg[3][3] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[3]_20 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[3]),
        .Q(\sum_array_reg_n_0_[3][3] ));
  FDCE \sum_array_reg[3][4] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[3]_20 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[4]),
        .Q(\sum_array_reg_n_0_[3][4] ));
  FDCE \sum_array_reg[3][5] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[3]_20 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[5]),
        .Q(\sum_array_reg_n_0_[3][5] ));
  FDCE \sum_array_reg[3][6] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[3]_20 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[6]),
        .Q(\sum_array_reg_n_0_[3][6] ));
  FDCE \sum_array_reg[3][7] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[3]_20 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[7]),
        .Q(\sum_array_reg_n_0_[3][7] ));
  FDCE \sum_array_reg[3][8] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[3]_20 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[8]),
        .Q(\sum_array_reg_n_0_[3][8] ));
  FDCE \sum_array_reg[3][9] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[3]_20 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[9]),
        .Q(\sum_array_reg_n_0_[3][9] ));
  FDCE \sum_array_reg[4][0] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[4]_19 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[0]),
        .Q(\sum_array_reg_n_0_[4][0] ));
  FDCE \sum_array_reg[4][10] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[4]_19 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[10]),
        .Q(\sum_array_reg_n_0_[4][10] ));
  FDCE \sum_array_reg[4][11] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[4]_19 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[11]),
        .Q(\sum_array_reg_n_0_[4][11] ));
  FDCE \sum_array_reg[4][12] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[4]_19 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[12]),
        .Q(\sum_array_reg_n_0_[4][12] ));
  FDCE \sum_array_reg[4][13] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[4]_19 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[13]),
        .Q(\sum_array_reg_n_0_[4][13] ));
  FDCE \sum_array_reg[4][14] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[4]_19 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[14]),
        .Q(\sum_array_reg_n_0_[4][14] ));
  FDCE \sum_array_reg[4][15] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[4]_19 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[15]),
        .Q(\sum_array_reg_n_0_[4][15] ));
  FDCE \sum_array_reg[4][16] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[4]_19 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[16]),
        .Q(\sum_array_reg_n_0_[4][16] ));
  FDCE \sum_array_reg[4][17] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[4]_19 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[17]),
        .Q(\sum_array_reg_n_0_[4][17] ));
  FDCE \sum_array_reg[4][18] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[4]_19 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[18]),
        .Q(\sum_array_reg_n_0_[4][18] ));
  FDCE \sum_array_reg[4][19] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[4]_19 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[19]),
        .Q(\sum_array_reg_n_0_[4][19] ));
  FDCE \sum_array_reg[4][1] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[4]_19 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[1]),
        .Q(\sum_array_reg_n_0_[4][1] ));
  FDCE \sum_array_reg[4][20] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[4]_19 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[20]),
        .Q(\sum_array_reg_n_0_[4][20] ));
  FDCE \sum_array_reg[4][21] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[4]_19 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[21]),
        .Q(\sum_array_reg_n_0_[4][21] ));
  FDCE \sum_array_reg[4][22] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[4]_19 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[22]),
        .Q(\sum_array_reg_n_0_[4][22] ));
  FDCE \sum_array_reg[4][23] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[4]_19 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[23]),
        .Q(\sum_array_reg_n_0_[4][23] ));
  FDCE \sum_array_reg[4][24] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[4]_19 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[24]),
        .Q(\sum_array_reg_n_0_[4][24] ));
  FDCE \sum_array_reg[4][25] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[4]_19 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[25]),
        .Q(\sum_array_reg_n_0_[4][25] ));
  FDCE \sum_array_reg[4][26] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[4]_19 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[26]),
        .Q(\sum_array_reg_n_0_[4][26] ));
  FDCE \sum_array_reg[4][27] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[4]_19 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[27]),
        .Q(\sum_array_reg_n_0_[4][27] ));
  FDCE \sum_array_reg[4][28] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[4]_19 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[28]),
        .Q(\sum_array_reg_n_0_[4][28] ));
  FDCE \sum_array_reg[4][29] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[4]_19 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[29]),
        .Q(\sum_array_reg_n_0_[4][29] ));
  FDCE \sum_array_reg[4][2] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[4]_19 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[2]),
        .Q(\sum_array_reg_n_0_[4][2] ));
  FDCE \sum_array_reg[4][30] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[4]_19 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[30]),
        .Q(\sum_array_reg_n_0_[4][30] ));
  FDCE \sum_array_reg[4][31] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[4]_19 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[31]),
        .Q(\sum_array_reg_n_0_[4][31] ));
  FDCE \sum_array_reg[4][3] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[4]_19 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[3]),
        .Q(\sum_array_reg_n_0_[4][3] ));
  FDCE \sum_array_reg[4][4] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[4]_19 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[4]),
        .Q(\sum_array_reg_n_0_[4][4] ));
  FDCE \sum_array_reg[4][5] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[4]_19 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[5]),
        .Q(\sum_array_reg_n_0_[4][5] ));
  FDCE \sum_array_reg[4][6] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[4]_19 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[6]),
        .Q(\sum_array_reg_n_0_[4][6] ));
  FDCE \sum_array_reg[4][7] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[4]_19 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[7]),
        .Q(\sum_array_reg_n_0_[4][7] ));
  FDCE \sum_array_reg[4][8] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[4]_19 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[8]),
        .Q(\sum_array_reg_n_0_[4][8] ));
  FDCE \sum_array_reg[4][9] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[4]_19 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[9]),
        .Q(\sum_array_reg_n_0_[4][9] ));
  FDCE \sum_array_reg[5][0] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[5]_18 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[0]),
        .Q(\sum_array_reg_n_0_[5][0] ));
  FDCE \sum_array_reg[5][10] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[5]_18 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[10]),
        .Q(\sum_array_reg_n_0_[5][10] ));
  FDCE \sum_array_reg[5][11] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[5]_18 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[11]),
        .Q(\sum_array_reg_n_0_[5][11] ));
  FDCE \sum_array_reg[5][12] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[5]_18 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[12]),
        .Q(\sum_array_reg_n_0_[5][12] ));
  FDCE \sum_array_reg[5][13] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[5]_18 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[13]),
        .Q(\sum_array_reg_n_0_[5][13] ));
  FDCE \sum_array_reg[5][14] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[5]_18 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[14]),
        .Q(\sum_array_reg_n_0_[5][14] ));
  FDCE \sum_array_reg[5][15] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[5]_18 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[15]),
        .Q(\sum_array_reg_n_0_[5][15] ));
  FDCE \sum_array_reg[5][16] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[5]_18 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[16]),
        .Q(\sum_array_reg_n_0_[5][16] ));
  FDCE \sum_array_reg[5][17] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[5]_18 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[17]),
        .Q(\sum_array_reg_n_0_[5][17] ));
  FDCE \sum_array_reg[5][18] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[5]_18 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[18]),
        .Q(\sum_array_reg_n_0_[5][18] ));
  FDCE \sum_array_reg[5][19] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[5]_18 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[19]),
        .Q(\sum_array_reg_n_0_[5][19] ));
  FDCE \sum_array_reg[5][1] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[5]_18 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[1]),
        .Q(\sum_array_reg_n_0_[5][1] ));
  FDCE \sum_array_reg[5][20] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[5]_18 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[20]),
        .Q(\sum_array_reg_n_0_[5][20] ));
  FDCE \sum_array_reg[5][21] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[5]_18 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[21]),
        .Q(\sum_array_reg_n_0_[5][21] ));
  FDCE \sum_array_reg[5][22] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[5]_18 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[22]),
        .Q(\sum_array_reg_n_0_[5][22] ));
  FDCE \sum_array_reg[5][23] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[5]_18 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[23]),
        .Q(\sum_array_reg_n_0_[5][23] ));
  FDCE \sum_array_reg[5][24] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[5]_18 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[24]),
        .Q(\sum_array_reg_n_0_[5][24] ));
  FDCE \sum_array_reg[5][25] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[5]_18 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[25]),
        .Q(\sum_array_reg_n_0_[5][25] ));
  FDCE \sum_array_reg[5][26] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[5]_18 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[26]),
        .Q(\sum_array_reg_n_0_[5][26] ));
  FDCE \sum_array_reg[5][27] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[5]_18 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[27]),
        .Q(\sum_array_reg_n_0_[5][27] ));
  FDCE \sum_array_reg[5][28] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[5]_18 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[28]),
        .Q(\sum_array_reg_n_0_[5][28] ));
  FDCE \sum_array_reg[5][29] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[5]_18 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[29]),
        .Q(\sum_array_reg_n_0_[5][29] ));
  FDCE \sum_array_reg[5][2] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[5]_18 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[2]),
        .Q(\sum_array_reg_n_0_[5][2] ));
  FDCE \sum_array_reg[5][30] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[5]_18 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[30]),
        .Q(\sum_array_reg_n_0_[5][30] ));
  FDCE \sum_array_reg[5][31] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[5]_18 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[31]),
        .Q(\sum_array_reg_n_0_[5][31] ));
  FDCE \sum_array_reg[5][3] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[5]_18 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[3]),
        .Q(\sum_array_reg_n_0_[5][3] ));
  FDCE \sum_array_reg[5][4] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[5]_18 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[4]),
        .Q(\sum_array_reg_n_0_[5][4] ));
  FDCE \sum_array_reg[5][5] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[5]_18 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[5]),
        .Q(\sum_array_reg_n_0_[5][5] ));
  FDCE \sum_array_reg[5][6] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[5]_18 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[6]),
        .Q(\sum_array_reg_n_0_[5][6] ));
  FDCE \sum_array_reg[5][7] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[5]_18 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[7]),
        .Q(\sum_array_reg_n_0_[5][7] ));
  FDCE \sum_array_reg[5][8] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[5]_18 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[8]),
        .Q(\sum_array_reg_n_0_[5][8] ));
  FDCE \sum_array_reg[5][9] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[5]_18 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[9]),
        .Q(\sum_array_reg_n_0_[5][9] ));
  FDCE \sum_array_reg[6][0] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[6]_17 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[0]),
        .Q(\sum_array_reg_n_0_[6][0] ));
  FDCE \sum_array_reg[6][10] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[6]_17 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[10]),
        .Q(\sum_array_reg_n_0_[6][10] ));
  FDCE \sum_array_reg[6][11] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[6]_17 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[11]),
        .Q(\sum_array_reg_n_0_[6][11] ));
  FDCE \sum_array_reg[6][12] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[6]_17 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[12]),
        .Q(\sum_array_reg_n_0_[6][12] ));
  FDCE \sum_array_reg[6][13] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[6]_17 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[13]),
        .Q(\sum_array_reg_n_0_[6][13] ));
  FDCE \sum_array_reg[6][14] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[6]_17 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[14]),
        .Q(\sum_array_reg_n_0_[6][14] ));
  FDCE \sum_array_reg[6][15] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[6]_17 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[15]),
        .Q(\sum_array_reg_n_0_[6][15] ));
  FDCE \sum_array_reg[6][16] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[6]_17 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[16]),
        .Q(\sum_array_reg_n_0_[6][16] ));
  FDCE \sum_array_reg[6][17] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[6]_17 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[17]),
        .Q(\sum_array_reg_n_0_[6][17] ));
  FDCE \sum_array_reg[6][18] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[6]_17 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[18]),
        .Q(\sum_array_reg_n_0_[6][18] ));
  FDCE \sum_array_reg[6][19] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[6]_17 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[19]),
        .Q(\sum_array_reg_n_0_[6][19] ));
  FDCE \sum_array_reg[6][1] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[6]_17 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[1]),
        .Q(\sum_array_reg_n_0_[6][1] ));
  FDCE \sum_array_reg[6][20] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[6]_17 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[20]),
        .Q(\sum_array_reg_n_0_[6][20] ));
  FDCE \sum_array_reg[6][21] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[6]_17 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[21]),
        .Q(\sum_array_reg_n_0_[6][21] ));
  FDCE \sum_array_reg[6][22] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[6]_17 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[22]),
        .Q(\sum_array_reg_n_0_[6][22] ));
  FDCE \sum_array_reg[6][23] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[6]_17 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[23]),
        .Q(\sum_array_reg_n_0_[6][23] ));
  FDCE \sum_array_reg[6][24] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[6]_17 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[24]),
        .Q(\sum_array_reg_n_0_[6][24] ));
  FDCE \sum_array_reg[6][25] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[6]_17 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[25]),
        .Q(\sum_array_reg_n_0_[6][25] ));
  FDCE \sum_array_reg[6][26] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[6]_17 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[26]),
        .Q(\sum_array_reg_n_0_[6][26] ));
  FDCE \sum_array_reg[6][27] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[6]_17 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[27]),
        .Q(\sum_array_reg_n_0_[6][27] ));
  FDCE \sum_array_reg[6][28] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[6]_17 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[28]),
        .Q(\sum_array_reg_n_0_[6][28] ));
  FDCE \sum_array_reg[6][29] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[6]_17 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[29]),
        .Q(\sum_array_reg_n_0_[6][29] ));
  FDCE \sum_array_reg[6][2] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[6]_17 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[2]),
        .Q(\sum_array_reg_n_0_[6][2] ));
  FDCE \sum_array_reg[6][30] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[6]_17 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[30]),
        .Q(\sum_array_reg_n_0_[6][30] ));
  FDCE \sum_array_reg[6][31] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[6]_17 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[31]),
        .Q(\sum_array_reg_n_0_[6][31] ));
  FDCE \sum_array_reg[6][3] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[6]_17 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[3]),
        .Q(\sum_array_reg_n_0_[6][3] ));
  FDCE \sum_array_reg[6][4] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[6]_17 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[4]),
        .Q(\sum_array_reg_n_0_[6][4] ));
  FDCE \sum_array_reg[6][5] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[6]_17 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[5]),
        .Q(\sum_array_reg_n_0_[6][5] ));
  FDCE \sum_array_reg[6][6] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[6]_17 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[6]),
        .Q(\sum_array_reg_n_0_[6][6] ));
  FDCE \sum_array_reg[6][7] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[6]_17 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[7]),
        .Q(\sum_array_reg_n_0_[6][7] ));
  FDCE \sum_array_reg[6][8] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[6]_17 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[8]),
        .Q(\sum_array_reg_n_0_[6][8] ));
  FDCE \sum_array_reg[6][9] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[6]_17 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[9]),
        .Q(\sum_array_reg_n_0_[6][9] ));
  FDCE \sum_array_reg[7][0] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[7]_16 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[0]),
        .Q(\sum_array_reg_n_0_[7][0] ));
  FDCE \sum_array_reg[7][10] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[7]_16 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[10]),
        .Q(\sum_array_reg_n_0_[7][10] ));
  FDCE \sum_array_reg[7][11] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[7]_16 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[11]),
        .Q(\sum_array_reg_n_0_[7][11] ));
  FDCE \sum_array_reg[7][12] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[7]_16 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[12]),
        .Q(\sum_array_reg_n_0_[7][12] ));
  FDCE \sum_array_reg[7][13] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[7]_16 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[13]),
        .Q(\sum_array_reg_n_0_[7][13] ));
  FDCE \sum_array_reg[7][14] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[7]_16 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[14]),
        .Q(\sum_array_reg_n_0_[7][14] ));
  FDCE \sum_array_reg[7][15] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[7]_16 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[15]),
        .Q(\sum_array_reg_n_0_[7][15] ));
  FDCE \sum_array_reg[7][16] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[7]_16 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[16]),
        .Q(\sum_array_reg_n_0_[7][16] ));
  FDCE \sum_array_reg[7][17] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[7]_16 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[17]),
        .Q(\sum_array_reg_n_0_[7][17] ));
  FDCE \sum_array_reg[7][18] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[7]_16 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[18]),
        .Q(\sum_array_reg_n_0_[7][18] ));
  FDCE \sum_array_reg[7][19] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[7]_16 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[19]),
        .Q(\sum_array_reg_n_0_[7][19] ));
  FDCE \sum_array_reg[7][1] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[7]_16 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[1]),
        .Q(\sum_array_reg_n_0_[7][1] ));
  FDCE \sum_array_reg[7][20] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[7]_16 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[20]),
        .Q(\sum_array_reg_n_0_[7][20] ));
  FDCE \sum_array_reg[7][21] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[7]_16 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[21]),
        .Q(\sum_array_reg_n_0_[7][21] ));
  FDCE \sum_array_reg[7][22] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[7]_16 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[22]),
        .Q(\sum_array_reg_n_0_[7][22] ));
  FDCE \sum_array_reg[7][23] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[7]_16 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[23]),
        .Q(\sum_array_reg_n_0_[7][23] ));
  FDCE \sum_array_reg[7][24] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[7]_16 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[24]),
        .Q(\sum_array_reg_n_0_[7][24] ));
  FDCE \sum_array_reg[7][25] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[7]_16 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[25]),
        .Q(\sum_array_reg_n_0_[7][25] ));
  FDCE \sum_array_reg[7][26] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[7]_16 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[26]),
        .Q(\sum_array_reg_n_0_[7][26] ));
  FDCE \sum_array_reg[7][27] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[7]_16 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[27]),
        .Q(\sum_array_reg_n_0_[7][27] ));
  FDCE \sum_array_reg[7][28] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[7]_16 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[28]),
        .Q(\sum_array_reg_n_0_[7][28] ));
  FDCE \sum_array_reg[7][29] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[7]_16 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[29]),
        .Q(\sum_array_reg_n_0_[7][29] ));
  FDCE \sum_array_reg[7][2] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[7]_16 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[2]),
        .Q(\sum_array_reg_n_0_[7][2] ));
  FDCE \sum_array_reg[7][30] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[7]_16 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[30]),
        .Q(\sum_array_reg_n_0_[7][30] ));
  FDCE \sum_array_reg[7][31] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[7]_16 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[31]),
        .Q(\sum_array_reg_n_0_[7][31] ));
  FDCE \sum_array_reg[7][3] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[7]_16 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[3]),
        .Q(\sum_array_reg_n_0_[7][3] ));
  FDCE \sum_array_reg[7][4] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[7]_16 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[4]),
        .Q(\sum_array_reg_n_0_[7][4] ));
  FDCE \sum_array_reg[7][5] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[7]_16 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[5]),
        .Q(\sum_array_reg_n_0_[7][5] ));
  FDCE \sum_array_reg[7][6] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[7]_16 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[6]),
        .Q(\sum_array_reg_n_0_[7][6] ));
  FDCE \sum_array_reg[7][7] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[7]_16 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[7]),
        .Q(\sum_array_reg_n_0_[7][7] ));
  FDCE \sum_array_reg[7][8] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[7]_16 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[8]),
        .Q(\sum_array_reg_n_0_[7][8] ));
  FDCE \sum_array_reg[7][9] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[7]_16 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[9]),
        .Q(\sum_array_reg_n_0_[7][9] ));
  FDCE \sum_array_reg[8][0] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[8]_15 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[0]),
        .Q(\sum_array_reg_n_0_[8][0] ));
  FDCE \sum_array_reg[8][10] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[8]_15 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[10]),
        .Q(\sum_array_reg_n_0_[8][10] ));
  FDCE \sum_array_reg[8][11] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[8]_15 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[11]),
        .Q(\sum_array_reg_n_0_[8][11] ));
  FDCE \sum_array_reg[8][12] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[8]_15 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[12]),
        .Q(\sum_array_reg_n_0_[8][12] ));
  FDCE \sum_array_reg[8][13] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[8]_15 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[13]),
        .Q(\sum_array_reg_n_0_[8][13] ));
  FDCE \sum_array_reg[8][14] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[8]_15 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[14]),
        .Q(\sum_array_reg_n_0_[8][14] ));
  FDCE \sum_array_reg[8][15] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[8]_15 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[15]),
        .Q(\sum_array_reg_n_0_[8][15] ));
  FDCE \sum_array_reg[8][16] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[8]_15 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[16]),
        .Q(\sum_array_reg_n_0_[8][16] ));
  FDCE \sum_array_reg[8][17] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[8]_15 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[17]),
        .Q(\sum_array_reg_n_0_[8][17] ));
  FDCE \sum_array_reg[8][18] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[8]_15 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[18]),
        .Q(\sum_array_reg_n_0_[8][18] ));
  FDCE \sum_array_reg[8][19] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[8]_15 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[19]),
        .Q(\sum_array_reg_n_0_[8][19] ));
  FDCE \sum_array_reg[8][1] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[8]_15 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[1]),
        .Q(\sum_array_reg_n_0_[8][1] ));
  FDCE \sum_array_reg[8][20] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[8]_15 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[20]),
        .Q(\sum_array_reg_n_0_[8][20] ));
  FDCE \sum_array_reg[8][21] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[8]_15 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[21]),
        .Q(\sum_array_reg_n_0_[8][21] ));
  FDCE \sum_array_reg[8][22] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[8]_15 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[22]),
        .Q(\sum_array_reg_n_0_[8][22] ));
  FDCE \sum_array_reg[8][23] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[8]_15 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[23]),
        .Q(\sum_array_reg_n_0_[8][23] ));
  FDCE \sum_array_reg[8][24] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[8]_15 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[24]),
        .Q(\sum_array_reg_n_0_[8][24] ));
  FDCE \sum_array_reg[8][25] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[8]_15 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[25]),
        .Q(\sum_array_reg_n_0_[8][25] ));
  FDCE \sum_array_reg[8][26] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[8]_15 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[26]),
        .Q(\sum_array_reg_n_0_[8][26] ));
  FDCE \sum_array_reg[8][27] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[8]_15 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[27]),
        .Q(\sum_array_reg_n_0_[8][27] ));
  FDCE \sum_array_reg[8][28] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[8]_15 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[28]),
        .Q(\sum_array_reg_n_0_[8][28] ));
  FDCE \sum_array_reg[8][29] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[8]_15 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[29]),
        .Q(\sum_array_reg_n_0_[8][29] ));
  FDCE \sum_array_reg[8][2] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[8]_15 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[2]),
        .Q(\sum_array_reg_n_0_[8][2] ));
  FDCE \sum_array_reg[8][30] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[8]_15 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[30]),
        .Q(\sum_array_reg_n_0_[8][30] ));
  FDCE \sum_array_reg[8][31] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[8]_15 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[31]),
        .Q(\sum_array_reg_n_0_[8][31] ));
  FDCE \sum_array_reg[8][3] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[8]_15 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[3]),
        .Q(\sum_array_reg_n_0_[8][3] ));
  FDCE \sum_array_reg[8][4] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[8]_15 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[4]),
        .Q(\sum_array_reg_n_0_[8][4] ));
  FDCE \sum_array_reg[8][5] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[8]_15 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[5]),
        .Q(\sum_array_reg_n_0_[8][5] ));
  FDCE \sum_array_reg[8][6] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[8]_15 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[6]),
        .Q(\sum_array_reg_n_0_[8][6] ));
  FDCE \sum_array_reg[8][7] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[8]_15 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[7]),
        .Q(\sum_array_reg_n_0_[8][7] ));
  FDCE \sum_array_reg[8][8] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[8]_15 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[8]),
        .Q(\sum_array_reg_n_0_[8][8] ));
  FDCE \sum_array_reg[8][9] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[8]_15 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[9]),
        .Q(\sum_array_reg_n_0_[8][9] ));
  FDCE \sum_array_reg[9][0] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[9]_14 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[0]),
        .Q(\sum_array_reg_n_0_[9][0] ));
  FDCE \sum_array_reg[9][10] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[9]_14 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[10]),
        .Q(\sum_array_reg_n_0_[9][10] ));
  FDCE \sum_array_reg[9][11] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[9]_14 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[11]),
        .Q(\sum_array_reg_n_0_[9][11] ));
  FDCE \sum_array_reg[9][12] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[9]_14 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[12]),
        .Q(\sum_array_reg_n_0_[9][12] ));
  FDCE \sum_array_reg[9][13] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[9]_14 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[13]),
        .Q(\sum_array_reg_n_0_[9][13] ));
  FDCE \sum_array_reg[9][14] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[9]_14 ),
        .CLR(\sum_array[1][13]_i_2_n_0 ),
        .D(result[14]),
        .Q(\sum_array_reg_n_0_[9][14] ));
  FDCE \sum_array_reg[9][15] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[9]_14 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[15]),
        .Q(\sum_array_reg_n_0_[9][15] ));
  FDCE \sum_array_reg[9][16] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[9]_14 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[16]),
        .Q(\sum_array_reg_n_0_[9][16] ));
  FDCE \sum_array_reg[9][17] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[9]_14 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[17]),
        .Q(\sum_array_reg_n_0_[9][17] ));
  FDCE \sum_array_reg[9][18] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[9]_14 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[18]),
        .Q(\sum_array_reg_n_0_[9][18] ));
  FDCE \sum_array_reg[9][19] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[9]_14 ),
        .CLR(\sum_array[1][18]_i_2_n_0 ),
        .D(result[19]),
        .Q(\sum_array_reg_n_0_[9][19] ));
  FDCE \sum_array_reg[9][1] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[9]_14 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[1]),
        .Q(\sum_array_reg_n_0_[9][1] ));
  FDCE \sum_array_reg[9][20] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[9]_14 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[20]),
        .Q(\sum_array_reg_n_0_[9][20] ));
  FDCE \sum_array_reg[9][21] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[9]_14 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[21]),
        .Q(\sum_array_reg_n_0_[9][21] ));
  FDCE \sum_array_reg[9][22] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[9]_14 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[22]),
        .Q(\sum_array_reg_n_0_[9][22] ));
  FDCE \sum_array_reg[9][23] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[9]_14 ),
        .CLR(\sum_array[1][23]_i_2_n_0 ),
        .D(result[23]),
        .Q(\sum_array_reg_n_0_[9][23] ));
  FDCE \sum_array_reg[9][24] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[9]_14 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[24]),
        .Q(\sum_array_reg_n_0_[9][24] ));
  FDCE \sum_array_reg[9][25] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[9]_14 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[25]),
        .Q(\sum_array_reg_n_0_[9][25] ));
  FDCE \sum_array_reg[9][26] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[9]_14 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[26]),
        .Q(\sum_array_reg_n_0_[9][26] ));
  FDCE \sum_array_reg[9][27] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[9]_14 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[27]),
        .Q(\sum_array_reg_n_0_[9][27] ));
  FDCE \sum_array_reg[9][28] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[9]_14 ),
        .CLR(\sum_array[1][28]_i_2_n_0 ),
        .D(result[28]),
        .Q(\sum_array_reg_n_0_[9][28] ));
  FDCE \sum_array_reg[9][29] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[9]_14 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[29]),
        .Q(\sum_array_reg_n_0_[9][29] ));
  FDCE \sum_array_reg[9][2] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[9]_14 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[2]),
        .Q(\sum_array_reg_n_0_[9][2] ));
  FDCE \sum_array_reg[9][30] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[9]_14 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[30]),
        .Q(\sum_array_reg_n_0_[9][30] ));
  FDCE \sum_array_reg[9][31] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[9]_14 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(result[31]),
        .Q(\sum_array_reg_n_0_[9][31] ));
  FDCE \sum_array_reg[9][3] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[9]_14 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[3]),
        .Q(\sum_array_reg_n_0_[9][3] ));
  FDCE \sum_array_reg[9][4] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[9]_14 ),
        .CLR(\FSM_sequential_current_state[2]_i_2_n_0 ),
        .D(result[4]),
        .Q(\sum_array_reg_n_0_[9][4] ));
  FDCE \sum_array_reg[9][5] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[9]_14 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[5]),
        .Q(\sum_array_reg_n_0_[9][5] ));
  FDCE \sum_array_reg[9][6] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[9]_14 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[6]),
        .Q(\sum_array_reg_n_0_[9][6] ));
  FDCE \sum_array_reg[9][7] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[9]_14 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[7]),
        .Q(\sum_array_reg_n_0_[9][7] ));
  FDCE \sum_array_reg[9][8] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[9]_14 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[8]),
        .Q(\sum_array_reg_n_0_[9][8] ));
  FDCE \sum_array_reg[9][9] 
       (.C(m00_axi_aclk),
        .CE(\sum_array[9]_14 ),
        .CLR(\sum_array[1][8]_i_2_n_0 ),
        .D(result[9]),
        .Q(\sum_array_reg_n_0_[9][9] ));
  LUT6 #(
    .INIT(64'h0222022202220220)) 
    \sum_counter[0]_i_1 
       (.I0(current_state[2]),
        .I1(\ila_smax_exp_sum_counter[4] [0]),
        .I2(\ila_smax_exp_sum_counter[4] [4]),
        .I3(\ila_smax_exp_sum_counter[4] [3]),
        .I4(\ila_smax_exp_sum_counter[4] [2]),
        .I5(\ila_smax_exp_sum_counter[4] [1]),
        .O(sum_counter[0]));
  LUT6 #(
    .INIT(64'h0222022202220220)) 
    \sum_counter[0]_rep_i_1 
       (.I0(current_state[2]),
        .I1(\ila_smax_exp_sum_counter[4] [0]),
        .I2(\ila_smax_exp_sum_counter[4] [4]),
        .I3(\ila_smax_exp_sum_counter[4] [3]),
        .I4(\ila_smax_exp_sum_counter[4] [2]),
        .I5(\ila_smax_exp_sum_counter[4] [1]),
        .O(\sum_counter[0]_rep_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000AAA0AA80002)) 
    \sum_counter[1]_i_1 
       (.I0(current_state[2]),
        .I1(\ila_smax_exp_sum_counter[4] [2]),
        .I2(\ila_smax_exp_sum_counter[4] [3]),
        .I3(\ila_smax_exp_sum_counter[4] [4]),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\ila_smax_exp_sum_counter[4] [1]),
        .O(sum_counter[1]));
  LUT6 #(
    .INIT(64'h00000AAA0AA80002)) 
    \sum_counter[1]_rep__0_i_1 
       (.I0(current_state[2]),
        .I1(\ila_smax_exp_sum_counter[4] [2]),
        .I2(\ila_smax_exp_sum_counter[4] [3]),
        .I3(\ila_smax_exp_sum_counter[4] [4]),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\ila_smax_exp_sum_counter[4] [1]),
        .O(\sum_counter[1]_rep__0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000AAA0AA80002)) 
    \sum_counter[1]_rep_i_1 
       (.I0(current_state[2]),
        .I1(\ila_smax_exp_sum_counter[4] [2]),
        .I2(\ila_smax_exp_sum_counter[4] [3]),
        .I3(\ila_smax_exp_sum_counter[4] [4]),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\ila_smax_exp_sum_counter[4] [1]),
        .O(\sum_counter[1]_rep_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000288828882888)) 
    \sum_counter[2]_i_1 
       (.I0(current_state[2]),
        .I1(\ila_smax_exp_sum_counter[4] [2]),
        .I2(\sum_counter_reg[0]_rep_n_0 ),
        .I3(\ila_smax_exp_sum_counter[4] [1]),
        .I4(\ila_smax_exp_sum_counter[4] [4]),
        .I5(\ila_smax_exp_sum_counter[4] [3]),
        .O(sum_counter[2]));
  LUT6 #(
    .INIT(64'h0000000028888888)) 
    \sum_counter[3]_i_1 
       (.I0(current_state[2]),
        .I1(\ila_smax_exp_sum_counter[4] [3]),
        .I2(\ila_smax_exp_sum_counter[4] [2]),
        .I3(\ila_smax_exp_sum_counter[4] [1]),
        .I4(\sum_counter_reg[0]_rep_n_0 ),
        .I5(\ila_smax_exp_sum_counter[4] [4]),
        .O(sum_counter[3]));
  LUT3 #(
    .INIT(8'h41)) 
    \sum_counter[4]_i_1__0 
       (.I0(current_state[1]),
        .I1(current_state[2]),
        .I2(out),
        .O(\sum_counter[4]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h2008080808080808)) 
    \sum_counter[4]_i_2 
       (.I0(current_state[2]),
        .I1(\ila_smax_exp_sum_counter[4] [4]),
        .I2(\ila_smax_exp_sum_counter[4] [3]),
        .I3(\sum_counter_reg[0]_rep_n_0 ),
        .I4(\ila_smax_exp_sum_counter[4] [1]),
        .I5(\ila_smax_exp_sum_counter[4] [2]),
        .O(sum_counter[4]));
  LUT1 #(
    .INIT(2'h1)) 
    \sum_counter[4]_i_3 
       (.I0(m00_axi_aresetn),
        .O(\sum_counter_reg[0]_rep_0 ));
  (* ORIG_CELL_NAME = "sum_counter_reg[0]" *) 
  FDCE \sum_counter_reg[0] 
       (.C(m00_axi_aclk),
        .CE(\sum_counter[4]_i_1__0_n_0 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(sum_counter[0]),
        .Q(\ila_smax_exp_sum_counter[4] [0]));
  (* ORIG_CELL_NAME = "sum_counter_reg[0]" *) 
  FDCE \sum_counter_reg[0]_rep 
       (.C(m00_axi_aclk),
        .CE(\sum_counter[4]_i_1__0_n_0 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(\sum_counter[0]_rep_i_1_n_0 ),
        .Q(\sum_counter_reg[0]_rep_n_0 ));
  (* ORIG_CELL_NAME = "sum_counter_reg[1]" *) 
  FDCE \sum_counter_reg[1] 
       (.C(m00_axi_aclk),
        .CE(\sum_counter[4]_i_1__0_n_0 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(sum_counter[1]),
        .Q(\ila_smax_exp_sum_counter[4] [1]));
  (* ORIG_CELL_NAME = "sum_counter_reg[1]" *) 
  FDCE \sum_counter_reg[1]_rep 
       (.C(m00_axi_aclk),
        .CE(\sum_counter[4]_i_1__0_n_0 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(\sum_counter[1]_rep_i_1_n_0 ),
        .Q(\sum_counter_reg[1]_rep_n_0 ));
  (* ORIG_CELL_NAME = "sum_counter_reg[1]" *) 
  FDCE \sum_counter_reg[1]_rep__0 
       (.C(m00_axi_aclk),
        .CE(\sum_counter[4]_i_1__0_n_0 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(\sum_counter[1]_rep__0_i_1_n_0 ),
        .Q(\sum_counter_reg[1]_rep__0_n_0 ));
  FDCE \sum_counter_reg[2] 
       (.C(m00_axi_aclk),
        .CE(\sum_counter[4]_i_1__0_n_0 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(sum_counter[2]),
        .Q(\ila_smax_exp_sum_counter[4] [2]));
  FDCE \sum_counter_reg[3] 
       (.C(m00_axi_aclk),
        .CE(\sum_counter[4]_i_1__0_n_0 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(sum_counter[3]),
        .Q(\ila_smax_exp_sum_counter[4] [3]));
  FDCE \sum_counter_reg[4] 
       (.C(m00_axi_aclk),
        .CE(\sum_counter[4]_i_1__0_n_0 ),
        .CLR(\sum_counter_reg[0]_rep_0 ),
        .D(sum_counter[4]),
        .Q(\ila_smax_exp_sum_counter[4] [4]));
  LUT6 #(
    .INIT(64'hEFFFFFCC20000000)) 
    valid_result_i_1
       (.I0(valid_result_i_2_n_0),
        .I1(out),
        .I2(\ila_smax_exp_hold_counter[3] [3]),
        .I3(current_state[1]),
        .I4(current_state[2]),
        .I5(ila_smax_exp_valid_result),
        .O(valid_result_i_1_n_0));
  LUT5 #(
    .INIT(32'hFF800000)) 
    valid_result_i_2
       (.I0(\ila_smax_exp_sum_counter[4] [2]),
        .I1(\sum_counter_reg[1]_rep_n_0 ),
        .I2(\sum_counter_reg[0]_rep_n_0 ),
        .I3(\ila_smax_exp_sum_counter[4] [3]),
        .I4(\ila_smax_exp_sum_counter[4] [4]),
        .O(valid_result_i_2_n_0));
  FDCE valid_result_reg
       (.C(m00_axi_aclk),
        .CE(1'b1),
        .CLR(m00_axi_aresetn_0),
        .D(valid_result_i_1_n_0),
        .Q(ila_smax_exp_valid_result));
endmodule

(* BUS_INFO = "32:OUTPUT:result<31:0>" *) (* CHECK_LICENSE_TYPE = "softmax_adder_32bit,floating_point_v5_0,{}" *) (* NLW_MACRO_ALIAS = "softmax_adder_32bit_softmax_adder_32bit" *) 
(* NLW_MACRO_TAG = "0" *) (* NLW_UNIQUE_ID = "0" *) (* ORIG_REF_NAME = "softmax_adder_32bit" *) 
(* SHREG_EXTRACT_NGC = "Yes" *) (* SHREG_MIN_SIZE = "-1" *) (* TYPE = "softmax_adder_32bit" *) 
(* x_core_info = "floating_point_v5_0, Xilinx CORE Generator 14.7" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_softmax_adder_32bit
   (clk,
    a,
    b,
    result);
  input clk;
  input [31:0]a;
  input [31:0]b;
  output [31:0]result;

  wire [7:0]\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/exp_op ;
  wire [22:0]\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/mant_op ;
  wire \U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/sign_op ;
  wire [31:0]a;
  wire [31:0]b;
  wire clk;
  wire sig00000001;
  wire sig00000002;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000003;
  wire sig00000004;
  wire sig00000005;
  wire sig00000006;
  wire sig00000007;
  wire sig00000008;
  wire sig00000009;
  wire sig0000000a;
  wire sig0000000b;
  wire sig0000000c;
  wire sig0000000d;
  wire sig0000000e;
  wire sig0000000f;
  wire sig00000010;
  wire sig00000011;
  wire sig00000012;
  wire sig00000013;
  wire sig00000014;
  wire sig00000015;
  wire sig00000016;
  wire sig00000017;
  wire sig00000018;
  wire sig00000019;
  wire sig0000001a;
  wire sig0000001b;
  wire sig0000001c;
  wire sig0000001d;
  wire sig0000001e;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000001f;
  wire sig00000020;
  wire sig00000021;
  wire sig00000022;
  wire sig00000023;
  wire sig00000024;
  wire sig00000025;
  wire sig00000026;
  wire sig00000027;
  wire sig00000028;
  wire sig00000029;
  wire sig0000002a;
  wire sig0000002b;
  wire sig0000002c;
  wire sig0000002d;
  wire sig0000002e;
  wire sig0000002f;
  wire sig00000030;
  wire sig00000031;
  wire sig00000032;
  wire sig00000033;
  wire sig00000034;
  wire sig00000035;
  wire sig00000036;
  wire sig00000037;
  wire sig00000038;
  wire sig00000039;
  wire sig0000003a;
  wire sig0000003b;
  wire sig0000003c;
  wire sig0000003d;
  wire sig0000003e;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000003f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000040;
  wire sig00000041;
  wire sig00000042;
  wire sig00000043;
  wire sig00000044;
  wire sig00000045;
  wire sig00000046;
  wire sig00000047;
  wire sig00000048;
  wire sig00000049;
  wire sig0000004a;
  wire sig0000004b;
  wire sig0000004c;
  wire sig0000004d;
  wire sig0000004e;
  wire sig0000004f;
  wire sig00000050;
  wire sig00000051;
  wire sig00000052;
  wire sig00000053;
  wire sig00000054;
  wire sig00000055;
  wire sig00000056;
  wire sig00000057;
  wire sig00000058;
  wire sig00000059;
  wire sig0000005a;
  wire sig0000005b;
  wire sig0000005c;
  wire sig0000005d;
  wire sig0000005e;
  wire sig0000005f;
  wire sig00000060;
  wire sig00000061;
  wire sig00000062;
  wire sig00000063;
  wire sig00000064;
  wire sig00000065;
  wire sig00000066;
  wire sig00000067;
  wire sig00000068;
  wire sig00000069;
  wire sig0000006a;
  wire sig0000006b;
  wire sig0000006c;
  wire sig0000006d;
  wire sig0000006e;
  wire sig0000006f;
  wire sig00000070;
  wire sig00000071;
  wire sig00000072;
  wire sig00000073;
  wire sig00000074;
  wire sig00000075;
  wire sig00000076;
  wire sig00000077;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000078;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000079;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000007a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000007b;
  wire sig0000007c;
  wire sig0000007d;
  wire sig0000007e;
  wire sig0000007f;
  wire sig00000080;
  wire sig00000081;
  wire sig00000082;
  wire sig00000083;
  wire sig00000084;
  wire sig00000085;
  wire sig00000086;
  wire sig00000087;
  wire sig00000088;
  wire sig00000089;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000008a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000008b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000008c;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000008d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000008e;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000008f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000090;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000091;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000092;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000093;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000094;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000095;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000096;
  wire sig00000097;
  wire sig00000098;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000099;
  wire sig0000009a;
  wire sig0000009b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000009c;
  wire sig0000009d;
  wire sig0000009e;
  wire sig0000009f;
  wire sig000000a0;
  wire sig000000a1;
  wire sig000000a2;
  wire sig000000a3;
  wire sig000000a4;
  wire sig000000a5;
  wire sig000000a6;
  wire sig000000a7;
  wire sig000000a8;
  wire sig000000a9;
  wire sig000000aa;
  wire sig000000ab;
  wire sig000000ac;
  wire sig000000ad;
  wire sig000000ae;
  wire sig000000af;
  wire sig000000b0;
  wire sig000000b1;
  wire sig000000b2;
  wire sig000000b3;
  wire sig000000b4;
  wire sig000000b5;
  wire sig000000b6;
  wire sig000000b7;
  wire sig000000b8;
  wire sig000000b9;
  wire sig000000ba;
  wire sig000000bb;
  wire sig000000bc;
  wire sig000000bd;
  wire sig000000be;
  wire sig000000bf;
  wire sig000000c0;
  wire sig000000c1;
  wire sig000000c2;
  wire sig000000c3;
  wire sig000000c4;
  wire sig000000c5;
  wire sig000000c6;
  wire sig000000c7;
  wire sig000000c8;
  wire sig000000c9;
  wire sig000000ca;
  wire sig000000cb;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000cc;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000cd;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000ce;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000cf;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000d0;
  wire sig000000d1;
  wire sig000000d2;
  wire sig000000d3;
  wire sig000000d4;
  wire sig000000d5;
  wire sig000000d6;
  wire sig000000d7;
  wire sig000000d8;
  wire sig000000d9;
  wire sig000000da;
  wire sig000000db;
  wire sig000000dc;
  wire sig000000dd;
  wire sig000000de;
  wire sig000000df;
  wire sig000000e0;
  wire sig000000e1;
  wire sig000000e2;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000e3;
  wire sig000000e4;
  wire sig000000e5;
  wire sig000000e6;
  wire sig000000e7;
  wire sig000000e8;
  wire sig000000e9;
  wire sig000000ea;
  wire sig000000eb;
  wire sig000000ed;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000ee;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000ef;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000f0;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000f1;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000f2;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000f3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000f4;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000f5;
  wire sig000000f6;
  wire sig000000f7;
  wire sig000000f8;
  wire sig000000f9;
  wire sig000000fa;
  wire sig000000fb;
  wire sig000000fc;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000fd;
  wire sig000000fe;
  wire sig000000ff;
  wire sig00000100;
  wire sig00000101;
  wire sig00000102;
  wire sig00000103;
  wire sig00000104;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000105;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000106;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000107;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000108;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000109;
  wire sig0000010a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000010b;
  wire sig0000010c;
  wire sig0000010d;
  wire sig0000010e;
  wire sig0000010f;
  wire sig00000110;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000111;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000112;
  wire sig00000113;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000114;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000116;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000117;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000118;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000119;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000011a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000011b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000011c;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000011d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000011e;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000011f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000120;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000121;
  wire sig00000122;
  wire sig00000123;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000124;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000125;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000126;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000127;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000128;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000129;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000012a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000012b;
  wire sig0000012c;
  wire sig0000012d;
  wire sig0000012e;
  wire sig0000012f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000130;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000131;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000132;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000133;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000134;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000135;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000136;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000137;
  wire sig00000138;
  wire sig00000139;
  wire sig0000013a;
  wire sig0000013b;
  wire sig0000013c;
  wire sig0000013d;
  wire sig0000013e;
  wire sig0000013f;
  wire sig00000140;
  wire sig00000141;
  wire sig00000142;
  wire sig00000143;
  wire sig00000144;
  wire sig00000145;
  wire sig00000146;
  wire sig00000147;
  wire sig00000148;
  wire sig00000149;
  wire sig0000014a;
  wire sig0000014b;
  wire sig0000014c;
  wire sig0000014d;
  wire sig0000014e;
  wire sig0000014f;
  wire sig00000150;
  wire sig00000151;
  wire sig00000152;
  wire sig00000153;
  wire sig00000154;
  wire sig00000155;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000156;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000157;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000158;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000159;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000015a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000015b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000015c;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000015d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000015e;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000015f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000160;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000161;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000162;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000163;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000164;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000165;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000166;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000167;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000168;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000169;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000016a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000016b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000016c;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000016d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000016e;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000016f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000170;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000171;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000172;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000173;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000174;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000175;
  wire sig00000176;
  wire sig00000177;
  wire sig00000178;
  wire sig00000179;
  wire sig0000017a;
  wire sig0000017b;
  wire sig0000017c;
  wire sig0000017d;
  wire sig0000017e;
  wire sig0000017f;
  wire sig00000180;
  wire sig00000181;
  wire sig00000182;
  wire sig00000183;
  wire sig00000184;
  wire sig00000185;
  wire sig00000186;
  wire sig00000187;
  wire sig00000188;
  wire sig00000189;
  wire sig0000018a;
  wire sig0000018b;
  wire sig0000018c;
  wire sig0000018d;
  wire sig0000018e;
  wire sig0000018f;
  wire sig00000190;
  wire sig00000191;
  wire sig00000192;
  wire sig00000193;
  wire sig00000194;
  wire sig00000195;
  wire sig00000196;
  wire sig00000197;
  wire sig00000198;
  wire sig00000199;
  wire sig0000019a;
  wire sig0000019b;
  wire sig0000019c;
  wire sig0000019d;
  wire sig0000019e;
  wire sig0000019f;
  wire sig000001a0;
  wire sig000001a1;
  wire sig000001a2;
  wire sig000001a3;
  wire sig000001a4;
  wire sig000001a5;
  wire sig000001a6;
  wire sig000001a7;
  wire sig000001a8;
  wire sig000001a9;
  wire sig000001aa;
  wire sig000001ab;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001ac;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001ad;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001ae;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001af;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001b0;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001b1;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001b2;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001b3;
  wire sig000001b4;
  wire sig000001b5;
  wire sig000001b6;
  wire sig000001b7;
  wire sig000001b8;
  wire sig000001b9;
  wire sig000001ba;
  wire sig000001bb;
  wire sig000001bc;
  wire sig000001bd;
  wire sig000001be;
  wire sig000001bf;
  wire sig000001c0;
  wire sig000001c1;
  wire sig000001c2;
  wire sig000001c3;
  wire sig000001c4;
  wire sig000001c5;
  wire sig000001c6;
  wire sig000001c7;
  wire sig000001c8;
  wire sig000001c9;
  wire sig000001ca;
  wire sig000001cb;
  wire sig000001cc;
  wire sig000001cd;
  wire sig000001ce;
  wire sig000001cf;
  wire sig000001d0;
  wire sig000001d1;
  wire sig000001d2;
  wire sig000001d3;
  wire sig000001d4;
  wire sig000001d5;
  wire sig000001d6;
  wire sig000001d7;
  wire sig000001d8;
  wire sig000001d9;
  wire sig000001da;
  wire sig000001db;
  wire sig000001dc;
  wire sig000001dd;
  wire sig000001de;
  wire sig000001df;
  wire sig000001e0;
  wire sig000001e1;
  wire sig000001e2;
  wire sig000001e3;
  wire sig000001e4;
  wire sig000001e5;
  wire sig000001e6;
  wire sig000001e7;
  wire sig000001e8;
  wire sig000001e9;
  wire sig000001ea;
  wire sig000001eb;
  wire sig000001ec;
  wire sig000001ed;
  wire sig000001ee;
  wire sig000001ef;
  wire sig000001f0;
  wire sig000001f1;
  wire sig000001f2;
  wire sig000001f3;
  wire sig000001f4;
  wire sig000001f5;
  wire sig000001f6;
  wire sig000001f7;
  wire sig000001f8;
  wire sig000001f9;
  wire sig000001fa;
  wire sig000001fb;
  wire sig000001fc;
  wire sig000001fd;
  wire sig000001fe;
  wire sig000001ff;
  wire sig00000200;
  wire sig00000201;
  wire sig00000202;
  wire sig00000203;
  wire sig00000204;
  wire sig00000205;
  wire sig00000206;
  wire sig00000207;
  wire sig00000208;
  wire sig00000209;
  wire sig0000020a;
  wire sig0000020b;
  wire sig0000020c;
  wire sig0000020d;
  wire sig0000020e;
  wire sig0000020f;
  wire sig00000210;
  wire sig00000211;
  wire sig00000212;
  wire sig00000213;
  wire sig00000214;
  wire sig00000215;
  wire sig00000216;
  wire sig00000217;
  wire sig00000218;
  wire sig00000219;
  wire sig0000021a;
  wire sig0000021b;
  wire sig0000021c;
  wire sig0000021d;
  wire sig0000021e;
  wire sig0000021f;
  wire sig00000220;
  wire sig00000221;
  wire sig00000222;
  wire sig00000223;
  wire sig00000224;
  wire sig00000225;
  wire sig00000226;
  wire sig00000227;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000228;
  wire sig00000229;
  wire sig0000022a;
  wire sig0000022b;
  wire sig0000022c;
  wire sig0000022d;
  wire sig0000022e;
  wire sig0000022f;
  wire sig00000230;
  wire sig00000231;
  wire sig00000232;
  wire sig00000233;
  wire sig00000234;
  wire sig00000235;
  wire sig00000236;
  wire sig00000237;
  wire sig00000238;
  wire sig00000239;
  wire sig0000023a;
  wire sig0000023b;
  wire sig0000023c;
  wire sig0000023d;
  wire sig0000023e;
  wire sig0000023f;
  wire sig00000240;
  wire sig00000241;
  wire sig00000242;
  wire sig00000243;
  wire sig00000244;
  wire sig00000245;
  wire sig00000246;
  wire sig00000247;
  wire sig00000248;
  wire sig00000249;
  wire sig0000024a;
  wire sig0000024b;
  wire sig0000024c;
  wire sig0000024d;
  wire sig0000024e;
  wire sig0000024f;
  wire sig00000250;
  wire sig00000251;
  wire sig00000252;
  wire sig00000253;
  wire sig00000254;
  wire sig00000255;
  wire sig00000256;
  wire sig00000257;
  wire sig00000258;
  wire sig00000259;
  wire sig0000025a;
  wire sig0000025b;
  wire sig0000025c;
  wire sig0000025d;
  wire sig0000025e;
  wire sig0000025f;
  wire sig00000260;
  wire sig00000261;
  wire sig00000262;
  wire sig00000263;
  wire sig00000264;
  wire sig00000265;
  wire sig00000266;
  wire sig00000267;
  wire sig00000268;
  wire sig00000269;
  wire sig0000026a;
  wire sig0000026b;
  wire sig0000026c;
  wire sig0000026d;
  wire sig0000026e;
  wire sig0000026f;
  wire sig00000270;
  wire sig00000271;
  wire sig00000272;
  wire sig00000273;
  wire sig00000274;
  wire sig00000275;
  wire sig00000276;
  wire sig00000277;
  wire sig00000278;
  wire sig00000279;
  wire sig0000027a;
  wire sig0000027b;
  wire sig0000027c;
  wire sig0000027d;
  wire sig0000027e;
  wire sig0000027f;
  wire sig00000280;
  wire sig00000281;
  wire sig00000282;
  wire sig00000283;
  wire sig00000284;
  wire sig00000285;
  wire sig00000286;
  wire sig00000287;
  wire sig00000288;
  wire sig00000289;
  wire sig0000028a;
  wire sig0000028b;
  wire sig0000028c;
  wire sig0000028d;
  wire sig0000028e;
  wire sig0000028f;
  wire sig00000290;
  wire sig00000291;
  wire sig00000292;
  wire sig00000293;
  wire sig00000294;
  wire sig00000295;
  wire sig00000296;
  wire sig00000297;
  wire sig00000298;
  wire sig00000299;
  wire sig0000029a;
  wire sig0000029b;
  wire sig0000029c;
  wire sig0000029d;
  wire sig0000029e;
  wire sig0000029f;
  wire sig000002a0;
  wire sig000002a1;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002a2;
  wire sig000002a3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002a4;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002a5;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002a6;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002a7;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002a8;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002a9;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002aa;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002ab;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002ac;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002ad;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002ae;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002af;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002b0;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002b1;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002b2;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002b3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002b4;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002b5;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002b6;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002b7;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002b8;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002b9;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002ba;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002bb;
  wire sig000002bc;
  wire sig000002bd;
  wire sig000002be;
  wire sig000002bf;
  wire sig000002c0;
  wire sig000002c1;
  wire sig000002c2;
  wire sig000002c3;
  wire sig000002c4;
  wire sig000002c5;
  wire sig000002c6;
  wire sig000002c7;
  wire sig000002c8;
  wire sig000002c9;
  wire sig000002ca;
  wire sig000002cb;
  wire sig000002cc;
  wire sig000002cd;
  wire sig000002ce;
  wire sig000002cf;
  wire sig000002d0;
  wire sig000002d1;
  wire sig000002d2;
  wire sig000002d3;
  wire sig000002d4;
  wire sig000002d5;
  wire sig000002d6;
  wire sig000002d7;
  wire sig000002d8;
  wire sig000002d9;
  wire sig000002da;
  wire sig000002db;
  wire sig000002dc;
  wire sig000002dd;
  wire sig000002de;
  wire sig000002df;
  wire sig000002e0;
  wire sig000002e1;
  wire sig000002e2;
  wire sig000002e3;
  wire sig000002e4;
  wire sig000002e5;
  wire sig000002e6;
  wire sig000002e7;
  wire sig000002e8;
  wire sig000002e9;
  wire sig000002ea;
  wire sig000002eb;
  wire sig000002ec;
  wire sig000002ed;
  wire sig000002ee;
  wire sig000002ef;
  wire sig000002f0;
  wire sig000002f1;
  wire sig000002f2;
  wire sig000002f3;
  wire sig000002f4;
  wire sig000002f5;
  wire sig000002f6;
  wire sig000002f7;
  wire sig000002f8;
  wire sig000002f9;
  wire sig000002fa;
  wire sig000002fb;
  wire sig000002fc;
  wire sig000002fd;
  wire sig000002fe;
  wire sig000002ff;
  wire sig00000300;
  wire sig00000301;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000302;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000303;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000304;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000305;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000306;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000307;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000308;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000309;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000030a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000030b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000030c;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000030d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000030e;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000030f;
  wire sig00000310;
  wire sig00000311;
  wire sig00000312;
  wire sig00000313;
  wire sig00000314;
  wire sig00000315;
  wire sig00000316;
  wire sig00000317;
  wire sig00000318;
  wire sig00000319;
  wire sig0000031a;
  wire sig0000031b;
  wire sig0000031c;
  wire sig0000031d;
  wire sig0000031e;
  wire sig0000031f;
  wire sig00000320;
  wire sig00000321;
  wire sig00000322;
  wire sig00000323;
  wire sig00000324;
  wire sig00000325;
  wire sig00000326;
  wire sig00000327;
  wire sig00000328;
  wire sig00000329;
  wire sig0000032a;
  wire sig0000032b;
  wire sig0000032c;
  wire sig0000032d;
  wire sig0000032e;
  wire sig0000032f;
  wire sig00000330;
  wire sig00000331;
  wire sig00000332;
  wire sig00000333;
  wire sig00000334;
  wire sig00000335;
  wire sig00000336;
  wire sig00000337;
  wire sig00000338;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000339;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000033a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000033b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000033c;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000033d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000033e;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000033f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000340;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000341;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000342;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000343;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000344;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000345;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000346;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000347;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000348;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000349;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000034a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000034b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000034c;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000034d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000034e;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000034f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000350;
  wire sig00000351;
  wire sig00000352;
  wire sig00000353;
  wire sig00000354;
  wire sig00000355;
  wire sig00000356;
  wire sig00000357;
  wire sig00000358;
  wire sig00000359;
  wire sig0000035a;
  wire sig0000035b;
  wire sig0000035c;
  wire sig0000035d;
  wire sig0000035e;
  wire sig0000035f;
  wire sig00000360;
  wire sig00000361;
  wire sig00000362;
  wire sig00000363;
  wire sig00000364;
  wire sig00000365;
  wire sig00000366;
  wire sig00000367;
  wire sig00000368;
  wire sig00000369;
  wire sig0000036a;
  wire sig0000036b;
  wire sig0000036c;
  wire sig0000036d;
  wire sig0000036e;
  wire sig0000036f;
  wire sig00000370;
  wire sig00000371;
  wire sig00000372;
  wire sig00000373;
  wire sig00000374;
  wire sig00000375;
  wire sig00000376;
  wire sig00000377;
  wire sig00000378;
  wire sig00000379;
  wire sig0000037a;
  wire sig0000037b;
  wire sig0000037c;
  wire sig0000037d;
  wire sig0000037e;
  wire sig0000037f;
  wire sig00000380;
  wire sig00000381;
  wire sig00000382;
  wire sig00000383;
  wire sig00000384;
  wire sig00000385;
  wire sig00000386;
  wire sig00000387;
  wire sig00000388;
  wire sig00000389;
  wire sig0000038a;
  wire sig0000038b;
  wire sig0000038c;
  wire sig0000038d;
  wire sig0000038e;
  wire sig0000038f;
  wire sig00000390;
  wire sig00000391;
  wire sig00000392;
  wire sig00000393;
  wire sig00000394;
  wire sig00000395;
  wire sig00000396;
  wire sig00000397;
  wire sig00000398;
  wire sig00000399;
  wire sig0000039a;
  wire sig0000039b;
  wire sig0000039c;
  wire sig0000039d;
  wire sig0000039e;
  wire sig0000039f;
  wire sig000003a0;
  wire sig000003a1;
  wire sig000003a2;
  wire sig000003a3;
  wire sig000003a4;
  wire sig000003a5;
  wire sig000003a6;
  wire sig000003a7;
  wire sig000003a8;
  wire sig000003a9;
  wire sig000003aa;
  wire sig000003ab;
  wire sig000003ac;
  wire sig000003ad;
  wire sig000003ae;
  wire sig000003af;
  wire sig000003b0;
  wire sig000003b1;
  wire sig000003b2;
  wire sig000003b3;
  wire sig000003b4;
  wire sig000003b5;
  wire sig000003b6;
  wire sig000003b7;
  wire sig000003b8;
  wire sig000003b9;
  wire sig000003ba;
  wire sig000003bb;
  wire sig000003bc;
  wire sig000003bd;
  wire sig000003be;
  wire sig000003bf;
  wire sig000003c0;
  wire sig000003c1;
  wire sig000003c2;
  wire sig000003c3;
  wire sig000003c4;
  wire sig000003c5;
  wire sig000003c6;
  wire sig000003c7;
  wire sig000003c8;
  wire sig000003c9;
  wire sig000003ca;
  wire sig000003cb;
  wire sig000003cc;
  wire sig000003cd;
  wire sig000003ce;
  wire sig000003cf;
  wire sig000003d0;
  wire sig000003d1;
  wire sig000003d2;
  wire sig000003d3;
  wire sig000003d4;
  wire sig000003d5;
  wire sig000003d6;
  wire sig000003d7;
  wire sig000003d8;
  wire sig000003d9;
  wire sig000003da;
  wire sig000003db;
  wire sig000003dc;
  wire sig000003dd;
  wire sig000003de;
  wire sig000003df;
  wire sig000003e0;
  wire sig000003e1;
  wire sig000003e2;
  wire sig000003e3;
  wire sig000003e4;
  wire sig000003e5;
  wire sig000003e6;
  wire sig000003e7;
  wire sig000003e8;
  wire sig000003e9;
  wire sig000003ea;
  wire sig000003eb;
  wire sig000003ec;
  wire sig000003ed;
  wire sig000003ee;
  wire sig000003ef;
  wire sig000003f0;
  wire sig000003f1;
  wire sig000003f2;
  wire sig000003f3;
  wire sig000003f4;
  wire sig000003f5;
  wire sig000003f6;
  wire sig000003f7;
  wire sig000003f8;
  wire sig000003f9;
  wire sig000003fa;
  wire sig000003fb;
  wire sig000003fc;
  wire sig000003fd;
  wire sig000003fe;
  wire sig000003ff;
  wire sig00000400;
  wire sig00000401;
  wire sig00000402;
  wire sig00000403;
  wire sig00000404;
  wire sig00000405;
  wire sig00000406;
  wire sig00000407;
  wire sig00000408;
  wire sig00000409;
  wire sig0000040a;
  wire sig0000040b;
  wire sig0000040c;
  wire sig0000040d;
  wire sig0000040e;
  wire sig0000040f;
  wire sig00000410;
  wire sig00000411;
  wire sig00000412;
  wire sig00000413;
  wire sig00000414;
  wire sig00000415;
  wire sig00000416;
  wire sig00000417;
  wire sig00000418;
  wire sig00000419;
  wire sig0000041a;
  wire sig0000041b;
  wire sig0000041c;
  wire sig0000041d;
  wire sig0000041e;
  wire sig0000041f;
  wire sig00000420;
  wire sig00000421;
  wire sig00000422;
  wire sig00000423;
  wire sig00000424;
  wire sig00000425;
  wire sig00000426;
  wire sig00000427;
  wire sig00000428;
  wire sig00000429;
  wire sig0000042a;
  wire sig0000042b;
  wire sig0000042c;
  wire sig0000042d;
  wire sig0000042e;
  wire sig0000042f;
  wire sig00000430;
  wire sig00000431;
  wire sig00000432;
  wire sig00000433;
  wire sig00000434;
  wire sig00000435;
  wire sig00000436;
  wire sig00000437;
  wire sig00000438;
  wire sig00000439;
  wire sig0000043a;
  wire sig0000043b;
  wire sig0000043c;
  wire sig0000043d;
  wire sig0000043e;
  wire sig0000043f;
  wire sig00000440;
  wire sig00000441;
  wire sig00000442;
  wire sig00000443;
  wire sig00000444;
  wire sig00000445;
  wire sig00000446;
  wire sig00000447;
  wire sig00000448;
  wire sig00000449;
  wire sig0000044a;
  wire sig0000044b;
  wire sig0000044c;
  wire sig0000044d;
  wire sig0000044e;
  wire sig0000044f;
  wire sig00000450;
  wire sig00000451;
  wire sig00000452;
  wire sig00000453;
  wire sig00000454;
  wire sig00000455;
  wire sig00000456;
  wire sig00000457;
  wire sig00000458;
  wire sig00000459;
  wire sig0000045a;
  wire sig0000045b;
  wire sig0000045c;
  wire sig0000045d;
  wire sig0000045e;
  wire sig0000045f;
  wire sig00000460;
  wire sig00000461;
  wire sig00000462;
  wire sig00000463;
  wire sig00000464;
  wire sig00000465;
  wire sig00000466;
  wire sig00000467;
  wire sig00000468;
  wire sig00000469;
  wire sig0000046a;
  wire sig0000046b;
  wire sig0000046c;
  wire sig0000046d;
  wire sig0000046e;
  wire sig0000046f;
  wire sig00000470;
  wire sig00000471;
  wire sig00000472;
  wire sig00000473;
  wire sig00000474;
  wire sig00000475;
  wire sig00000476;
  wire sig00000477;
  wire sig00000478;
  wire sig00000479;
  wire sig0000047a;
  wire sig0000047b;
  wire sig0000047c;
  wire sig0000047d;
  wire sig0000047e;
  wire sig0000047f;
  wire sig00000480;
  wire sig00000481;
  wire sig00000482;
  wire sig00000483;
  wire sig00000484;
  wire sig00000485;
  wire sig00000486;
  wire sig00000487;
  wire sig00000488;
  wire sig00000489;
  wire sig0000048a;
  wire sig0000048b;
  wire sig0000048c;
  wire sig0000048d;
  wire sig0000048e;
  wire sig0000048f;
  wire sig00000490;
  wire sig00000491;
  wire sig00000492;
  wire sig00000493;
  wire sig00000494;
  wire sig00000495;
  wire sig00000496;
  wire sig00000497;
  wire sig00000498;
  wire sig00000499;
  wire sig0000049a;
  wire sig0000049b;
  wire sig0000049c;
  wire sig0000049d;
  wire sig0000049e;
  wire sig0000049f;
  wire sig000004a0;
  wire sig000004a1;
  wire sig000004a2;
  wire sig000004a3;
  wire sig000004a4;
  wire sig000004a5;
  wire sig000004a6;
  wire sig000004a7;
  wire sig000004a8;
  wire sig000004a9;
  wire sig000004aa;
  wire sig000004ab;
  wire sig000004ac;
  wire sig000004ad;
  wire sig000004ae;
  wire sig000004af;
  wire sig000004b0;
  wire sig000004b1;
  wire sig000004b2;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004b3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004b4;
  wire sig000004b5;
  wire sig000004b6;
  wire sig000004b7;
  wire sig000004b8;
  wire sig000004b9;
  wire sig000004ba;
  wire sig000004bb;
  wire sig000004bc;
  wire sig000004bd;
  wire sig000004be;
  wire sig000004bf;
  wire sig000004c0;
  wire sig000004c1;
  wire sig000004c2;
  wire sig000004c3;
  wire sig000004c4;
  wire sig000004c5;
  wire sig000004c6;
  wire sig000004c7;
  wire sig000004c8;
  wire sig000004c9;
  wire sig000004ca;
  wire sig000004cb;
  wire sig000004cc;
  wire sig000004cd;
  wire sig000004ce;
  wire sig000004cf;
  wire sig000004d0;
  wire sig000004d1;
  wire sig000004d2;
  wire sig000004d3;
  wire sig000004d4;
  wire sig000004d5;
  wire sig000004d6;
  wire sig000004d7;
  wire sig000004d8;
  wire sig000004d9;
  wire sig000004da;
  wire sig000004db;
  wire sig000004dc;
  wire sig000004dd;
  wire sig000004de;
  wire sig000004df;
  wire sig000004e0;
  wire sig000004e1;
  wire sig000004e2;
  wire sig000004e3;
  wire sig000004e4;
  wire sig000004e5;
  wire sig000004e6;
  wire sig000004e7;
  wire sig000004e8;
  wire sig000004e9;
  wire sig000004ea;
  wire sig000004eb;
  wire sig000004ec;
  wire sig000004ed;
  wire sig000004ee;
  wire sig000004ef;
  wire sig000004f0;
  wire sig000004f1;
  wire sig000004f2;
  wire sig000004f3;
  wire sig000004f4;
  wire sig000004f5;
  wire sig000004f6;
  wire sig000004f7;
  wire sig000004f8;
  wire sig000004f9;
  wire sig000004fa;
  wire sig000004fb;
  wire sig000004fc;
  wire sig000004fd;
  wire sig000004fe;
  wire sig000004ff;
  wire sig00000500;
  wire sig00000501;
  wire sig00000502;
  wire sig00000503;
  wire sig00000504;
  wire sig00000505;
  wire sig00000506;
  wire sig00000507;
  wire sig00000508;
  wire sig00000509;
  wire sig0000050a;
  wire sig0000050b;
  wire sig0000050c;
  wire sig0000050d;
  wire sig0000050e;
  wire sig0000050f;
  wire sig00000510;
  wire sig00000511;
  wire sig00000512;
  wire sig00000513;
  wire sig00000514;
  wire sig00000515;
  wire sig00000516;
  wire sig00000517;
  wire sig00000518;
  wire sig00000519;
  wire sig0000051a;
  wire sig0000051b;
  wire sig0000051c;
  wire sig0000051d;
  wire sig0000051e;
  wire sig0000051f;
  wire sig00000520;
  wire sig00000521;
  wire sig00000522;
  wire sig00000523;
  wire sig00000524;
  wire sig00000525;
  wire sig00000526;
  wire sig00000527;
  wire sig00000528;
  wire sig00000529;
  wire sig0000052a;
  wire sig0000052b;
  wire sig0000052c;
  wire sig0000052d;
  wire sig0000052e;
  wire sig0000052f;
  wire sig00000530;
  wire sig00000531;
  wire sig00000532;
  wire sig00000533;
  wire sig00000534;
  wire sig00000535;
  wire sig00000536;
  wire sig00000537;
  wire sig00000538;
  wire sig00000539;
  wire sig0000053a;
  wire sig0000053b;
  wire sig0000053c;
  wire sig0000053d;
  wire sig0000053e;
  wire sig0000053f;
  wire sig00000540;
  wire sig00000541;
  wire sig00000542;
  wire sig00000543;
  wire sig00000544;
  wire sig00000545;
  wire sig00000546;
  wire sig00000547;
  wire sig00000548;
  wire sig00000549;
  wire sig0000054a;
  wire sig0000054b;
  wire sig0000054c;
  wire sig0000054d;
  wire sig0000054e;
  wire sig0000054f;
  wire sig00000550;
  wire sig00000551;
  wire sig00000552;
  wire sig00000553;
  wire sig00000554;
  wire sig00000555;
  wire sig00000556;
  wire sig00000557;
  wire sig00000558;
  wire sig00000559;
  wire sig0000055a;
  wire sig0000055b;
  wire sig0000055c;
  wire sig0000055d;
  wire sig0000055e;
  wire sig0000055f;
  wire sig00000560;
  wire sig00000561;
  wire sig00000562;
  wire sig00000563;
  wire sig00000564;
  wire sig00000565;
  wire sig00000566;
  wire sig00000567;
  wire sig00000568;
  wire sig00000569;
  wire sig0000056a;
  wire sig0000056b;
  wire sig0000056c;
  wire sig0000056d;
  wire sig0000056e;
  wire sig0000056f;
  wire sig00000570;
  wire sig00000571;
  wire sig00000572;
  wire sig00000573;
  wire sig00000574;
  wire sig00000575;
  wire sig00000576;
  wire sig00000577;
  wire sig00000578;
  wire sig00000579;
  wire sig0000057a;
  wire sig0000057b;
  wire sig0000057c;
  wire sig0000057d;
  wire sig0000057e;
  wire sig0000057f;
  wire sig00000580;
  wire sig00000581;
  wire sig00000582;
  wire sig00000583;
  wire sig00000584;
  wire sig00000585;
  wire sig00000586;
  wire sig00000587;
  wire sig00000588;
  wire sig00000589;
  wire sig0000058a;
  wire sig0000058b;
  wire sig0000058c;
  wire sig0000058d;
  wire sig0000058e;
  wire sig0000058f;
  wire sig00000590;
  wire sig00000591;
  wire sig00000592;
  wire sig00000593;
  wire sig00000594;
  wire sig00000595;
  wire sig00000596;
  wire sig00000597;
  wire sig00000598;
  wire sig00000599;
  wire sig0000059a;
  wire sig0000059b;
  wire sig0000059c;
  wire sig0000059d;
  wire sig0000059e;
  wire sig0000059f;
  wire sig000005a0;
  wire sig000005a1;
  wire sig000005a2;
  wire sig000005a3;
  wire sig000005a4;
  wire sig000005a5;
  wire sig000005a6;
  wire sig000005a7;
  wire sig000005a8;
  wire sig000005a9;
  wire sig000005aa;
  wire sig000005ab;
  wire sig000005ac;
  wire sig000005ad;
  wire sig000005ae;
  wire sig000005af;
  wire sig000005b0;
  wire sig000005b1;
  wire sig000005b2;
  wire sig000005b3;
  wire sig000005b4;
  wire sig000005b5;
  wire sig000005b6;
  wire sig000005b7;
  wire sig000005b8;
  wire sig000005b9;
  wire sig000005ba;
  wire sig000005bb;
  wire sig000005bc;
  wire sig000005bd;
  wire sig000005be;
  wire sig000005bf;
  wire sig000005c0;
  wire sig000005c1;
  wire sig000005c2;
  wire sig000005c3;
  wire sig000005c4;
  wire sig000005c5;
  wire sig000005c6;
  wire sig000005c7;
  wire sig000005c8;
  wire sig000005c9;
  wire [3:0]NLW_blk00000008_CARRY4_O_UNCONNECTED;
  wire [3:2]NLW_blk0000000c_CARRY4_CO_UNCONNECTED;
  wire [3:2]NLW_blk0000000c_CARRY4_DI_UNCONNECTED;
  wire [3:0]NLW_blk0000000c_CARRY4_O_UNCONNECTED;
  wire [3:2]NLW_blk0000000c_CARRY4_S_UNCONNECTED;
  wire [3:0]NLW_blk0000000f_CARRY4_O_UNCONNECTED;
  wire [3:2]NLW_blk00000013_CARRY4_CO_UNCONNECTED;
  wire [3:2]NLW_blk00000013_CARRY4_DI_UNCONNECTED;
  wire [3:0]NLW_blk00000013_CARRY4_O_UNCONNECTED;
  wire [3:2]NLW_blk00000013_CARRY4_S_UNCONNECTED;
  wire [3:2]NLW_blk00000016_CARRY4_CO_UNCONNECTED;
  wire [3:2]NLW_blk00000016_CARRY4_DI_UNCONNECTED;
  wire [3:0]NLW_blk00000016_CARRY4_O_UNCONNECTED;
  wire [3:2]NLW_blk00000016_CARRY4_S_UNCONNECTED;
  wire [3:2]NLW_blk00000018_CARRY4_CO_UNCONNECTED;
  wire [3:2]NLW_blk00000018_CARRY4_DI_UNCONNECTED;
  wire [3:0]NLW_blk00000018_CARRY4_O_UNCONNECTED;
  wire [3:2]NLW_blk00000018_CARRY4_S_UNCONNECTED;
  wire [3:2]NLW_blk00000019_CARRY4_CO_UNCONNECTED;
  wire [3:2]NLW_blk00000019_CARRY4_DI_UNCONNECTED;
  wire [3:0]NLW_blk00000019_CARRY4_O_UNCONNECTED;
  wire [3:2]NLW_blk00000019_CARRY4_S_UNCONNECTED;
  wire [3:2]NLW_blk0000001b_CARRY4_CO_UNCONNECTED;
  wire [3:2]NLW_blk0000001b_CARRY4_DI_UNCONNECTED;
  wire [3:0]NLW_blk0000001b_CARRY4_O_UNCONNECTED;
  wire [3:2]NLW_blk0000001b_CARRY4_S_UNCONNECTED;
  wire NLW_blk0000001d_O_UNCONNECTED;
  wire NLW_blk0000001e_O_UNCONNECTED;
  wire NLW_blk0000001f_O_UNCONNECTED;
  wire NLW_blk00000020_O_UNCONNECTED;
  wire NLW_blk00000021_O_UNCONNECTED;
  wire NLW_blk00000024_O5_UNCONNECTED;
  wire NLW_blk00000025_O5_UNCONNECTED;
  wire [3:0]NLW_blk00000060_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_blk00000060_CARRY4_DI_UNCONNECTED;
  wire [3:1]NLW_blk00000060_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk00000060_CARRY4_S_UNCONNECTED;
  wire [0:0]NLW_blk00000070_CARRY4_O_UNCONNECTED;
  wire [3:0]NLW_blk00000071_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_blk00000071_CARRY4_DI_UNCONNECTED;
  wire [3:1]NLW_blk00000071_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk00000071_CARRY4_S_UNCONNECTED;
  wire [0:0]NLW_blk00000081_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk000000b3_CARRY4_CO_UNCONNECTED;
  wire [3:1]NLW_blk000000b3_CARRY4_DI_UNCONNECTED;
  wire [3:2]NLW_blk000000b3_CARRY4_O_UNCONNECTED;
  wire [3:2]NLW_blk000000b3_CARRY4_S_UNCONNECTED;
  wire [0:0]NLW_blk000000c3_CARRY4_O_UNCONNECTED;
  wire [3:3]NLW_blk0000010e_CARRY4_CO_UNCONNECTED;
  wire [3:3]NLW_blk0000010e_CARRY4_DI_UNCONNECTED;
  wire [3:0]NLW_blk0000010e_CARRY4_O_UNCONNECTED;
  wire [3:3]NLW_blk0000010e_CARRY4_S_UNCONNECTED;
  wire [3:0]NLW_blk00000112_CARRY4_O_UNCONNECTED;
  wire [1:0]NLW_blk00000123_CARRY4_O_UNCONNECTED;
  wire [3:0]NLW_blk0000014b_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_blk0000014b_CARRY4_DI_UNCONNECTED;
  wire [3:1]NLW_blk0000014b_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk0000014b_CARRY4_S_UNCONNECTED;
  wire [3:1]NLW_blk0000026c_CARRY4_CO_UNCONNECTED;
  wire [3:1]NLW_blk0000026c_CARRY4_DI_UNCONNECTED;
  wire [3:2]NLW_blk0000026c_CARRY4_O_UNCONNECTED;
  wire [3:2]NLW_blk0000026c_CARRY4_S_UNCONNECTED;
  wire [0:0]NLW_blk0000029b_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk0000029e_CARRY4_CO_UNCONNECTED;
  wire [3:1]NLW_blk0000029e_CARRY4_DI_UNCONNECTED;
  wire [3:2]NLW_blk0000029e_CARRY4_O_UNCONNECTED;
  wire [3:2]NLW_blk0000029e_CARRY4_S_UNCONNECTED;
  wire [0:0]NLW_blk000002cd_CARRY4_O_UNCONNECTED;
  wire NLW_blk000002cf_O_UNCONNECTED;
  wire NLW_blk000002d1_O_UNCONNECTED;
  wire NLW_blk000002d2_O_UNCONNECTED;
  wire NLW_blk000002d3_O_UNCONNECTED;
  wire NLW_blk000002d7_O_UNCONNECTED;
  wire [3:0]NLW_blk000002e7_CARRY4_O_UNCONNECTED;
  wire [3:0]NLW_blk000002eb_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk000002f4_CARRY4_CO_UNCONNECTED;
  wire [3:1]NLW_blk000002f4_CARRY4_DI_UNCONNECTED;
  wire [3:0]NLW_blk000002f4_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk000002f4_CARRY4_S_UNCONNECTED;
  wire [3:0]NLW_blk000002f8_CARRY4_O_UNCONNECTED;
  wire [3:0]NLW_blk00000330_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_blk00000330_CARRY4_DI_UNCONNECTED;
  wire [3:0]NLW_blk00000330_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk00000330_CARRY4_S_UNCONNECTED;
  wire [3:0]NLW_blk00000331_CARRY4_O_UNCONNECTED;
  wire [1:0]NLW_blk00000335_CARRY4_O_UNCONNECTED;
  wire [3:2]NLW_blk0000035e_CARRY4_CO_UNCONNECTED;
  wire [3:2]NLW_blk0000035e_CARRY4_DI_UNCONNECTED;
  wire [3:1]NLW_blk0000035e_CARRY4_O_UNCONNECTED;
  wire [3:2]NLW_blk0000035e_CARRY4_S_UNCONNECTED;

  assign result[31] = \U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/sign_op ;
  assign result[30:23] = \U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/exp_op ;
  assign result[22:0] = \U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/mant_op ;
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000003
       (.C(clk),
        .CE(1'b1),
        .D(sig00000001),
        .Q(sig00000040),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000004
       (.C(clk),
        .CE(1'b1),
        .D(sig00000002),
        .Q(sig0000003f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000005
       (.C(clk),
        .CE(1'b1),
        .D(sig0000005d),
        .Q(sig0000005c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000006
       (.C(clk),
        .CE(1'b1),
        .D(sig0000001e),
        .Q(sig00000041),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000007
       (.C(clk),
        .CE(1'b1),
        .D(sig000000b6),
        .Q(sig0000019b),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000008_CARRY4
       (.CI(1'b0),
        .CO({sig000000b4,sig000000b3,sig000000b2,sig000000b1}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_blk00000008_CARRY4_O_UNCONNECTED[3:0]),
        .S({sig000000c7,sig000000c6,sig000000c5,sig000000c4}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000000c_CARRY4
       (.CI(sig000000b4),
        .CO({NLW_blk0000000c_CARRY4_CO_UNCONNECTED[3:2],sig000000b6,sig000000b5}),
        .CYINIT(1'b0),
        .DI({NLW_blk0000000c_CARRY4_DI_UNCONNECTED[3:2],1'b0,1'b0}),
        .O(NLW_blk0000000c_CARRY4_O_UNCONNECTED[3:0]),
        .S({NLW_blk0000000c_CARRY4_S_UNCONNECTED[3:2],sig000000c3,sig000000c8}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000000e
       (.C(clk),
        .CE(1'b1),
        .D(sig000000bc),
        .Q(sig00000199),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000000f_CARRY4
       (.CI(1'b0),
        .CO({sig000000ba,sig000000b9,sig000000b8,sig000000b7}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_blk0000000f_CARRY4_O_UNCONNECTED[3:0]),
        .S({sig000000c1,sig000000c0,sig000000bf,sig000000be}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000013_CARRY4
       (.CI(sig000000ba),
        .CO({NLW_blk00000013_CARRY4_CO_UNCONNECTED[3:2],sig000000bc,sig000000bb}),
        .CYINIT(1'b0),
        .DI({NLW_blk00000013_CARRY4_DI_UNCONNECTED[3:2],1'b0,1'b0}),
        .O(NLW_blk00000013_CARRY4_O_UNCONNECTED[3:0]),
        .S({NLW_blk00000013_CARRY4_S_UNCONNECTED[3:2],sig000000bd,sig000000c2}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000016_CARRY4
       (.CI(1'b0),
        .CO({NLW_blk00000016_CARRY4_CO_UNCONNECTED[3:2],sig000000d3,sig000000d4}),
        .CYINIT(1'b1),
        .DI({NLW_blk00000016_CARRY4_DI_UNCONNECTED[3:2],1'b0,1'b0}),
        .O(NLW_blk00000016_CARRY4_O_UNCONNECTED[3:0]),
        .S({NLW_blk00000016_CARRY4_S_UNCONNECTED[3:2],sig000000d2,sig000000d1}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000018_CARRY4
       (.CI(1'b0),
        .CO({NLW_blk00000018_CARRY4_CO_UNCONNECTED[3:2],sig000000d7,sig000000d8}),
        .CYINIT(1'b1),
        .DI({NLW_blk00000018_CARRY4_DI_UNCONNECTED[3:2],1'b0,1'b0}),
        .O(NLW_blk00000018_CARRY4_O_UNCONNECTED[3:0]),
        .S({NLW_blk00000018_CARRY4_S_UNCONNECTED[3:2],sig000000d6,sig000000d5}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000019_CARRY4
       (.CI(1'b0),
        .CO({NLW_blk00000019_CARRY4_CO_UNCONNECTED[3:2],sig000000db,sig000000da}),
        .CYINIT(1'b1),
        .DI({NLW_blk00000019_CARRY4_DI_UNCONNECTED[3:2],1'b0,1'b0}),
        .O(NLW_blk00000019_CARRY4_O_UNCONNECTED[3:0]),
        .S({NLW_blk00000019_CARRY4_S_UNCONNECTED[3:2],sig000000e2,sig000000e1}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000001b_CARRY4
       (.CI(1'b0),
        .CO({NLW_blk0000001b_CARRY4_CO_UNCONNECTED[3:2],sig000000de,sig000000dd}),
        .CYINIT(1'b1),
        .DI({NLW_blk0000001b_CARRY4_DI_UNCONNECTED[3:2],1'b0,1'b0}),
        .O(NLW_blk0000001b_CARRY4_O_UNCONNECTED[3:0]),
        .S({NLW_blk0000001b_CARRY4_S_UNCONNECTED[3:2],sig000000e0,sig000000df}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  MUXF7 blk0000001d
       (.I0(1'b0),
        .I1(sig000000fe),
        .O(NLW_blk0000001d_O_UNCONNECTED),
        .S(sig0000013a));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  MUXF7 blk0000001e
       (.I0(1'b0),
        .I1(sig000000ff),
        .O(NLW_blk0000001e_O_UNCONNECTED),
        .S(sig0000013a));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  MUXF7 blk0000001f
       (.I0(1'b0),
        .I1(sig00000100),
        .O(NLW_blk0000001f_O_UNCONNECTED),
        .S(sig0000013a));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  MUXF7 blk00000020
       (.I0(1'b0),
        .I1(sig00000101),
        .O(NLW_blk00000020_O_UNCONNECTED),
        .S(sig0000013a));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  MUXF7 blk00000021
       (.I0(1'b0),
        .I1(1'b0),
        .O(NLW_blk00000021_O_UNCONNECTED),
        .S(sig0000013a));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  MUXF7 blk00000022
       (.I0(sig00000590),
        .I1(sig00000103),
        .O(sig00000106),
        .S(sig0000013a));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  MUXF7 blk00000023
       (.I0(sig00000591),
        .I1(sig00000104),
        .O(sig00000107),
        .S(sig0000013a));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT6_2 #(
    .INIT(64'hF5F9F5F9000C000C)) 
    blk00000024
       (.I0(1'b0),
        .I1(1'b0),
        .I2(1'b0),
        .I3(1'b0),
        .I4(1'b0),
        .I5(1'b1),
        .O5(NLW_blk00000024_O5_UNCONNECTED),
        .O6(sig00000176));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT6_2 #(
    .INIT(64'hF5F9F5F90A0A0A0A)) 
    blk00000025
       (.I0(1'b0),
        .I1(1'b0),
        .I2(1'b0),
        .I3(1'b0),
        .I4(1'b0),
        .I5(1'b1),
        .O5(NLW_blk00000025_O5_UNCONNECTED),
        .O6(sig00000177));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT6_2 #(
    .INIT(64'hFA09FA09FF0CFF0C)) 
    blk00000026
       (.I0(a[30]),
        .I1(b[30]),
        .I2(1'b0),
        .I3(1'b0),
        .I4(1'b0),
        .I5(1'b1),
        .O5(sig00000179),
        .O6(sig00000178));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT6_2 #(
    .INIT(64'hFA09FA09FAFAFAFA)) 
    blk00000027
       (.I0(a[30]),
        .I1(b[30]),
        .I2(1'b0),
        .I3(1'b0),
        .I4(1'b0),
        .I5(1'b1),
        .O5(sig0000017b),
        .O6(sig0000017a));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT6_2 #(
    .INIT(64'hF5F9F5F9000C000C)) 
    blk00000028
       (.I0(a[29]),
        .I1(b[29]),
        .I2(1'b0),
        .I3(1'b0),
        .I4(1'b0),
        .I5(1'b1),
        .O5(sig0000017d),
        .O6(sig0000017c));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT6_2 #(
    .INIT(64'hF5F9F5F90A0A0A0A)) 
    blk00000029
       (.I0(a[29]),
        .I1(b[29]),
        .I2(1'b0),
        .I3(1'b0),
        .I4(1'b0),
        .I5(1'b1),
        .O5(sig0000017f),
        .O6(sig0000017e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT6_2 #(
    .INIT(64'hF5F9F5F9000C000C)) 
    blk0000002a
       (.I0(a[28]),
        .I1(b[28]),
        .I2(1'b0),
        .I3(1'b0),
        .I4(1'b0),
        .I5(1'b1),
        .O5(sig00000181),
        .O6(sig00000180));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT6_2 #(
    .INIT(64'hF5F9F5F90A0A0A0A)) 
    blk0000002b
       (.I0(a[28]),
        .I1(b[28]),
        .I2(1'b0),
        .I3(1'b0),
        .I4(1'b0),
        .I5(1'b1),
        .O5(sig00000183),
        .O6(sig00000182));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT6_2 #(
    .INIT(64'hFA09FA09FF0CFF0C)) 
    blk0000002c
       (.I0(a[27]),
        .I1(b[27]),
        .I2(1'b0),
        .I3(1'b0),
        .I4(1'b0),
        .I5(1'b1),
        .O5(sig00000185),
        .O6(sig00000184));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT6_2 #(
    .INIT(64'hFA09FA09FAFAFAFA)) 
    blk0000002d
       (.I0(a[27]),
        .I1(b[27]),
        .I2(1'b0),
        .I3(1'b0),
        .I4(1'b0),
        .I5(1'b1),
        .O5(sig00000187),
        .O6(sig00000186));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT6_2 #(
    .INIT(64'h0AF90AF9FF0CFF0C)) 
    blk0000002e
       (.I0(a[26]),
        .I1(b[26]),
        .I2(1'b0),
        .I3(1'b0),
        .I4(1'b0),
        .I5(1'b1),
        .O5(sig00000189),
        .O6(sig00000188));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT6_2 #(
    .INIT(64'h0AF90AF90A0A0A0A)) 
    blk0000002f
       (.I0(a[26]),
        .I1(b[26]),
        .I2(1'b0),
        .I3(1'b0),
        .I4(1'b0),
        .I5(1'b1),
        .O5(sig0000018b),
        .O6(sig0000018a));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT6_2 #(
    .INIT(64'hFA09FA09FF0CFF0C)) 
    blk00000030
       (.I0(a[25]),
        .I1(b[25]),
        .I2(1'b0),
        .I3(1'b0),
        .I4(1'b0),
        .I5(1'b1),
        .O5(sig0000018d),
        .O6(sig0000018c));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT6_2 #(
    .INIT(64'hFA09FA09FAFAFAFA)) 
    blk00000031
       (.I0(a[25]),
        .I1(b[25]),
        .I2(1'b0),
        .I3(1'b0),
        .I4(1'b0),
        .I5(1'b1),
        .O5(sig0000018f),
        .O6(sig0000018e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT6_2 #(
    .INIT(64'h05090509000C000C)) 
    blk00000032
       (.I0(a[24]),
        .I1(b[24]),
        .I2(1'b0),
        .I3(1'b0),
        .I4(1'b0),
        .I5(1'b1),
        .O5(sig00000191),
        .O6(sig00000190));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT6_2 #(
    .INIT(64'h05090509FAFAFAFA)) 
    blk00000033
       (.I0(a[24]),
        .I1(b[24]),
        .I2(1'b0),
        .I3(1'b0),
        .I4(1'b0),
        .I5(1'b1),
        .O5(sig00000193),
        .O6(sig00000192));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT6_2 #(
    .INIT(64'h0AF90AF9FF0CFF0C)) 
    blk00000034
       (.I0(a[23]),
        .I1(b[23]),
        .I2(1'b0),
        .I3(1'b0),
        .I4(1'b0),
        .I5(1'b1),
        .O5(sig00000195),
        .O6(sig00000194));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT6_2 #(
    .INIT(64'h0AF90AF90A0A0A0A)) 
    blk00000035
       (.I0(a[23]),
        .I1(b[23]),
        .I2(1'b0),
        .I3(1'b0),
        .I4(1'b0),
        .I5(1'b1),
        .O5(sig00000197),
        .O6(sig00000196));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000036
       (.C(clk),
        .CE(1'b1),
        .D(sig00000107),
        .Q(sig00000113),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000037
       (.C(clk),
        .CE(1'b1),
        .D(sig00000106),
        .Q(sig00000114),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000038
       (.C(clk),
        .CE(1'b1),
        .D(sig00000112),
        .Q(sig00000117),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000039
       (.C(clk),
        .CE(1'b1),
        .D(sig00000122),
        .Q(sig00000119),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000003a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000111),
        .Q(sig00000116),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000003b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000105),
        .Q(sig00000118),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000003c
       (.C(clk),
        .CE(1'b1),
        .D(sig000000e4),
        .Q(sig000000c9),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000003d
       (.C(clk),
        .CE(1'b1),
        .D(sig000000c9),
        .Q(sig00000123),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000003e
       (.C(clk),
        .CE(1'b1),
        .D(sig0000010a),
        .Q(sig000000cb),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000003f
       (.C(clk),
        .CE(1'b1),
        .D(sig000000cb),
        .Q(sig000000ca),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000040
       (.C(clk),
        .CE(1'b1),
        .D(sig000000ca),
        .Q(sig0000009a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000041
       (.C(clk),
        .CE(1'b1),
        .D(sig0000010b),
        .Q(sig000000cc),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000042
       (.C(clk),
        .CE(1'b1),
        .D(sig000000cc),
        .Q(sig0000012d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000043
       (.C(clk),
        .CE(1'b1),
        .D(sig0000012d),
        .Q(sig000000cd),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000044
       (.C(clk),
        .CE(1'b1),
        .D(sig000000cd),
        .Q(sig00000098),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000045
       (.C(clk),
        .CE(1'b1),
        .D(sig00000108),
        .Q(sig000000cf),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000046
       (.C(clk),
        .CE(1'b1),
        .D(sig00000109),
        .Q(sig000000ce),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000047
       (.C(clk),
        .CE(1'b1),
        .D(sig000000cf),
        .Q(sig0000012e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000048
       (.C(clk),
        .CE(1'b1),
        .D(sig000000ce),
        .Q(sig0000012f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000049
       (.C(clk),
        .CE(1'b1),
        .D(1'b1),
        .Q(sig000002cc),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000004a
       (.C(clk),
        .CE(1'b1),
        .D(sig0000001f),
        .Q(sig00000175),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000004b
       (.C(clk),
        .CE(1'b1),
        .D(sig000000fd),
        .Q(sig00000003),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000004c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000102),
        .Q(sig0000009d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000004d
       (.C(clk),
        .CE(1'b1),
        .D(a[31]),
        .Q(sig00000145),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000004e
       (.C(clk),
        .CE(1'b1),
        .D(b[31]),
        .Q(sig00000144),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000004f
       (.C(clk),
        .CE(1'b1),
        .D(sig000000e3),
        .Q(sig000000d0),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000050
       (.C(clk),
        .CE(1'b1),
        .D(sig0000010e),
        .Q(sig00000143),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000051
       (.C(clk),
        .CE(1'b1),
        .D(sig00000110),
        .Q(sig00000142),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000052
       (.C(clk),
        .CE(1'b1),
        .D(sig00000145),
        .Q(sig00000141),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000053
       (.C(clk),
        .CE(1'b1),
        .D(sig00000144),
        .Q(sig00000140),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000054
       (.C(clk),
        .CE(1'b1),
        .D(sig0000009f),
        .Q(sig0000013f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000055
       (.C(clk),
        .CE(1'b1),
        .D(sig0000019a),
        .Q(sig0000013e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000056
       (.C(clk),
        .CE(1'b1),
        .D(sig0000019b),
        .Q(sig0000013d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000057
       (.C(clk),
        .CE(1'b1),
        .D(sig00000198),
        .Q(sig0000013c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000058
       (.C(clk),
        .CE(1'b1),
        .D(sig00000199),
        .Q(sig0000013b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000059
       (.C(clk),
        .CE(1'b1),
        .D(sig00000099),
        .Q(sig00000139),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000005a
       (.C(clk),
        .CE(1'b1),
        .D(sig0000010f),
        .Q(sig00000138),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000005b
       (.C(clk),
        .CE(1'b1),
        .D(sig000000ed),
        .Q(sig0000012c),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000005c
       (.C(clk),
        .CE(1'b1),
        .D(sig000000d3),
        .Q(sig00000198),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000005d
       (.C(clk),
        .CE(1'b1),
        .D(sig000000d7),
        .Q(sig0000019a),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000005e
       (.C(clk),
        .CE(1'b1),
        .D(sig000000db),
        .Q(sig000000d9),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000005f
       (.C(clk),
        .CE(1'b1),
        .D(sig000000de),
        .Q(sig000000dc),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000060_CARRY4
       (.CI(sig0000019c),
        .CO(NLW_blk00000060_CARRY4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI(NLW_blk00000060_CARRY4_DI_UNCONNECTED[3:0]),
        .O({NLW_blk00000060_CARRY4_O_UNCONNECTED[3:1],sig00000165}),
        .S({NLW_blk00000060_CARRY4_S_UNCONNECTED[3:1],sig00000176}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000068_CARRY4
       (.CI(sig000001a0),
        .CO({sig0000019c,sig0000019d,sig0000019e,sig0000019f}),
        .CYINIT(1'b0),
        .DI({sig00000179,sig0000017d,sig00000181,sig00000185}),
        .O({sig00000164,sig00000163,sig00000162,sig00000161}),
        .S({sig00000178,sig0000017c,sig00000180,sig00000184}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000070_CARRY4
       (.CI(1'b0),
        .CO({sig000001a0,sig000001a1,sig000001a2,sig000001a3}),
        .CYINIT(1'b1),
        .DI({sig00000189,sig0000018d,sig00000191,sig00000195}),
        .O({sig00000160,sig0000015f,sig0000015e,NLW_blk00000070_CARRY4_O_UNCONNECTED[0]}),
        .S({sig00000188,sig0000018c,sig00000190,sig00000194}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000071_CARRY4
       (.CI(sig000001a4),
        .CO(NLW_blk00000071_CARRY4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI(NLW_blk00000071_CARRY4_DI_UNCONNECTED[3:0]),
        .O({NLW_blk00000071_CARRY4_O_UNCONNECTED[3:1],sig00000174}),
        .S({NLW_blk00000071_CARRY4_S_UNCONNECTED[3:1],sig00000177}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000079_CARRY4
       (.CI(sig000001a8),
        .CO({sig000001a4,sig000001a5,sig000001a6,sig000001a7}),
        .CYINIT(1'b0),
        .DI({sig0000017b,sig0000017f,sig00000183,sig00000187}),
        .O({sig00000173,sig00000172,sig00000171,sig00000170}),
        .S({sig0000017a,sig0000017e,sig00000182,sig00000186}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000081_CARRY4
       (.CI(1'b0),
        .CO({sig000001a8,sig000001a9,sig000001aa,sig000001ab}),
        .CYINIT(1'b1),
        .DI({sig0000018b,sig0000018f,sig00000193,sig00000197}),
        .O({sig0000016f,sig0000016e,sig0000016d,NLW_blk00000081_CARRY4_O_UNCONNECTED[0]}),
        .S({sig0000018a,sig0000018e,sig00000192,sig00000196}));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000082
       (.C(clk),
        .CE(1'b1),
        .D(sig00000137),
        .Q(sig0000012b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000083
       (.C(clk),
        .CE(1'b1),
        .D(sig00000136),
        .Q(sig0000012a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000084
       (.C(clk),
        .CE(1'b1),
        .D(sig00000135),
        .Q(sig00000129),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000085
       (.C(clk),
        .CE(1'b1),
        .D(sig00000134),
        .Q(sig00000128),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000086
       (.C(clk),
        .CE(1'b1),
        .D(sig00000133),
        .Q(sig00000127),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000087
       (.C(clk),
        .CE(1'b1),
        .D(sig00000132),
        .Q(sig00000126),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000088
       (.C(clk),
        .CE(1'b1),
        .D(sig00000131),
        .Q(sig00000125),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000089
       (.C(clk),
        .CE(1'b1),
        .D(sig00000130),
        .Q(sig00000124),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000008a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000165),
        .Q(sig00000156),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000008b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000164),
        .Q(sig0000015d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000008c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000163),
        .Q(sig0000015c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000008d
       (.C(clk),
        .CE(1'b1),
        .D(sig00000162),
        .Q(sig0000015b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000008e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000161),
        .Q(sig0000015a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000008f
       (.C(clk),
        .CE(1'b1),
        .D(sig00000160),
        .Q(sig00000159),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000090
       (.C(clk),
        .CE(1'b1),
        .D(sig0000015f),
        .Q(sig00000158),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000091
       (.C(clk),
        .CE(1'b1),
        .D(sig0000015e),
        .Q(sig00000157),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000092
       (.C(clk),
        .CE(1'b1),
        .D(sig00000174),
        .Q(sig00000099),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000093
       (.C(clk),
        .CE(1'b1),
        .D(sig00000173),
        .Q(sig0000016c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000094
       (.C(clk),
        .CE(1'b1),
        .D(sig00000172),
        .Q(sig0000016b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000095
       (.C(clk),
        .CE(1'b1),
        .D(sig00000171),
        .Q(sig0000016a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000096
       (.C(clk),
        .CE(1'b1),
        .D(sig00000170),
        .Q(sig00000169),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000097
       (.C(clk),
        .CE(1'b1),
        .D(sig0000016f),
        .Q(sig00000168),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000098
       (.C(clk),
        .CE(1'b1),
        .D(sig0000016e),
        .Q(sig00000167),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000099
       (.C(clk),
        .CE(1'b1),
        .D(sig0000016d),
        .Q(sig00000166),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000009a
       (.C(clk),
        .CE(1'b1),
        .D(sig000000fc),
        .Q(sig000000ae),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000009b
       (.C(clk),
        .CE(1'b1),
        .D(sig000000fb),
        .Q(sig000000ad),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000009c
       (.C(clk),
        .CE(1'b1),
        .D(sig000000fa),
        .Q(sig000000ac),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000009d
       (.C(clk),
        .CE(1'b1),
        .D(sig000000f9),
        .Q(sig000000ab),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000009e
       (.C(clk),
        .CE(1'b1),
        .D(sig000000f8),
        .Q(sig000000aa),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000009f
       (.C(clk),
        .CE(1'b1),
        .D(sig000000f7),
        .Q(sig000000a9),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000a0
       (.C(clk),
        .CE(1'b1),
        .D(sig000000f6),
        .Q(sig000000a8),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000a1
       (.C(clk),
        .CE(1'b1),
        .D(sig000001b3),
        .Q(sig00000137),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000a2
       (.C(clk),
        .CE(1'b1),
        .D(sig000001b2),
        .Q(sig00000136),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000a3
       (.C(clk),
        .CE(1'b1),
        .D(sig000001b1),
        .Q(sig00000135),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000a4
       (.C(clk),
        .CE(1'b1),
        .D(sig000001b0),
        .Q(sig00000134),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000a5
       (.C(clk),
        .CE(1'b1),
        .D(sig000001af),
        .Q(sig00000133),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000a6
       (.C(clk),
        .CE(1'b1),
        .D(sig000001ae),
        .Q(sig00000132),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000a7
       (.C(clk),
        .CE(1'b1),
        .D(sig000001ad),
        .Q(sig00000131),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000a8
       (.C(clk),
        .CE(1'b1),
        .D(sig000001ac),
        .Q(sig00000130),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000a9
       (.C(clk),
        .CE(1'b1),
        .D(sig000000f5),
        .Q(sig000001b3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000aa
       (.C(clk),
        .CE(1'b1),
        .D(sig000000f4),
        .Q(sig000001b2),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000ab
       (.C(clk),
        .CE(1'b1),
        .D(sig000000f3),
        .Q(sig000001b1),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000ac
       (.C(clk),
        .CE(1'b1),
        .D(sig000000f2),
        .Q(sig000001b0),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000ad
       (.C(clk),
        .CE(1'b1),
        .D(sig000000f1),
        .Q(sig000001af),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000ae
       (.C(clk),
        .CE(1'b1),
        .D(sig000000f0),
        .Q(sig000001ae),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000af
       (.C(clk),
        .CE(1'b1),
        .D(sig000000ef),
        .Q(sig000001ad),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000b0
       (.C(clk),
        .CE(1'b1),
        .D(sig000000ee),
        .Q(sig000001ac),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000000b3_CARRY4
       (.CI(sig000001b5),
        .CO({NLW_blk000000b3_CARRY4_CO_UNCONNECTED[3:1],sig000001b4}),
        .CYINIT(1'b0),
        .DI({NLW_blk000000b3_CARRY4_DI_UNCONNECTED[3:1],sig0000012b}),
        .O({NLW_blk000000b3_CARRY4_O_UNCONNECTED[3:2],sig00000122,sig00000121}),
        .S({NLW_blk000000b3_CARRY4_S_UNCONNECTED[3:2],1'b1,sig000000eb}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000000bb_CARRY4
       (.CI(sig000001b9),
        .CO({sig000001b5,sig000001b6,sig000001b7,sig000001b8}),
        .CYINIT(1'b0),
        .DI({sig0000012a,sig00000129,sig00000128,sig00000127}),
        .O({sig00000120,sig0000011f,sig0000011e,sig0000011d}),
        .S({sig000000ea,sig000000e9,sig00000583,sig000000e8}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000000c3_CARRY4
       (.CI(1'b0),
        .CO({sig000001b9,sig000001ba,sig000001bb,sig000001bc}),
        .CYINIT(1'b0),
        .DI({sig00000126,sig00000125,sig00000124,1'b1}),
        .O({sig0000011c,sig0000011b,sig0000011a,NLW_blk000000c3_CARRY4_O_UNCONNECTED[0]}),
        .S({sig000000e7,sig000000e6,sig000000e5,1'b0}));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000c4
       (.C(clk),
        .CE(1'b1),
        .D(sig00000121),
        .Q(sig000000a7),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000c5
       (.C(clk),
        .CE(1'b1),
        .D(sig00000120),
        .Q(sig000000a6),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000c6
       (.C(clk),
        .CE(1'b1),
        .D(sig0000011f),
        .Q(sig000000a5),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000c7
       (.C(clk),
        .CE(1'b1),
        .D(sig0000011e),
        .Q(sig000000a4),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000c8
       (.C(clk),
        .CE(1'b1),
        .D(sig0000011d),
        .Q(sig000000a3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000c9
       (.C(clk),
        .CE(1'b1),
        .D(sig0000011c),
        .Q(sig000000a2),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000ca
       (.C(clk),
        .CE(1'b1),
        .D(sig0000011b),
        .Q(sig000000a1),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000cb
       (.C(clk),
        .CE(1'b1),
        .D(sig0000011a),
        .Q(sig000000a0),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000cc
       (.C(clk),
        .CE(1'b1),
        .D(sig000000a8),
        .Q(sig000001d8),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000cd
       (.C(clk),
        .CE(1'b1),
        .D(sig000000a9),
        .Q(sig000001d7),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000ce
       (.C(clk),
        .CE(1'b1),
        .D(sig0000009e),
        .Q(sig00000227),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000cf
       (.C(clk),
        .CE(1'b1),
        .D(sig00000227),
        .Q(sig000002a3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000d0
       (.C(clk),
        .CE(1'b1),
        .D(sig0000009c),
        .Q(sig000002a2),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000d1
       (.C(clk),
        .CE(1'b1),
        .D(sig00000228),
        .Q(sig00000229),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000d2
       (.C(clk),
        .CE(1'b1),
        .D(sig000002bc),
        .Q(sig0000007c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000d3
       (.C(clk),
        .CE(1'b1),
        .D(sig000001d9),
        .Q(sig000001bd),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000d4
       (.C(clk),
        .CE(1'b1),
        .D(sig000001da),
        .Q(sig000001be),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000d5
       (.C(clk),
        .CE(1'b1),
        .D(sig000001db),
        .Q(sig000001bf),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000d6
       (.C(clk),
        .CE(1'b1),
        .D(sig000001dc),
        .Q(sig000001c0),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000d7
       (.C(clk),
        .CE(1'b1),
        .D(sig000001dd),
        .Q(sig000001c1),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000d8
       (.C(clk),
        .CE(1'b1),
        .D(sig000001de),
        .Q(sig000001c2),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000d9
       (.C(clk),
        .CE(1'b1),
        .D(sig000001df),
        .Q(sig000001c3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000da
       (.C(clk),
        .CE(1'b1),
        .D(sig000001e0),
        .Q(sig000001c4),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000db
       (.C(clk),
        .CE(1'b1),
        .D(sig000001e1),
        .Q(sig000001c5),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000dc
       (.C(clk),
        .CE(1'b1),
        .D(sig000001e2),
        .Q(sig000001c6),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000dd
       (.C(clk),
        .CE(1'b1),
        .D(sig000001e3),
        .Q(sig000001c7),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000de
       (.C(clk),
        .CE(1'b1),
        .D(sig000001e4),
        .Q(sig000001c8),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000df
       (.C(clk),
        .CE(1'b1),
        .D(sig000001e5),
        .Q(sig000001c9),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000e0
       (.C(clk),
        .CE(1'b1),
        .D(sig000001e6),
        .Q(sig000001ca),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000e1
       (.C(clk),
        .CE(1'b1),
        .D(sig000001e7),
        .Q(sig000001cb),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000e2
       (.C(clk),
        .CE(1'b1),
        .D(sig000001e8),
        .Q(sig000001cc),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000e3
       (.C(clk),
        .CE(1'b1),
        .D(sig000001e9),
        .Q(sig000001cd),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000e4
       (.C(clk),
        .CE(1'b1),
        .D(sig000001ea),
        .Q(sig000001ce),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000e5
       (.C(clk),
        .CE(1'b1),
        .D(sig000001eb),
        .Q(sig000001cf),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000e6
       (.C(clk),
        .CE(1'b1),
        .D(sig000001ec),
        .Q(sig000001d0),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000e7
       (.C(clk),
        .CE(1'b1),
        .D(sig000001ed),
        .Q(sig000001d1),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000e8
       (.C(clk),
        .CE(1'b1),
        .D(sig000001ee),
        .Q(sig000001d2),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000e9
       (.C(clk),
        .CE(1'b1),
        .D(sig000001ef),
        .Q(sig000001d3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000ea
       (.C(clk),
        .CE(1'b1),
        .D(sig000001f0),
        .Q(sig000001d4),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000eb
       (.C(clk),
        .CE(1'b1),
        .D(sig000001f1),
        .Q(sig000001d5),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000ec
       (.C(clk),
        .CE(1'b1),
        .D(sig000001f2),
        .Q(sig000001d6),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000ed
       (.C(clk),
        .CE(1'b1),
        .D(sig000001f3),
        .Q(sig0000020d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000ee
       (.C(clk),
        .CE(1'b1),
        .D(sig000001f4),
        .Q(sig0000020e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000ef
       (.C(clk),
        .CE(1'b1),
        .D(sig000001f5),
        .Q(sig0000020f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000f0
       (.C(clk),
        .CE(1'b1),
        .D(sig000001f6),
        .Q(sig00000210),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000f1
       (.C(clk),
        .CE(1'b1),
        .D(sig000001f7),
        .Q(sig00000211),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000f2
       (.C(clk),
        .CE(1'b1),
        .D(sig000001f8),
        .Q(sig00000212),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000f3
       (.C(clk),
        .CE(1'b1),
        .D(sig000001f9),
        .Q(sig00000213),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000f4
       (.C(clk),
        .CE(1'b1),
        .D(sig000001fa),
        .Q(sig00000214),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000f5
       (.C(clk),
        .CE(1'b1),
        .D(sig000001fb),
        .Q(sig00000215),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000f6
       (.C(clk),
        .CE(1'b1),
        .D(sig000001fc),
        .Q(sig00000216),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000f7
       (.C(clk),
        .CE(1'b1),
        .D(sig000001fd),
        .Q(sig00000217),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000f8
       (.C(clk),
        .CE(1'b1),
        .D(sig000001fe),
        .Q(sig00000218),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000f9
       (.C(clk),
        .CE(1'b1),
        .D(sig000001ff),
        .Q(sig00000219),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000fa
       (.C(clk),
        .CE(1'b1),
        .D(sig00000200),
        .Q(sig0000021a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000fb
       (.C(clk),
        .CE(1'b1),
        .D(sig00000201),
        .Q(sig0000021b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000fc
       (.C(clk),
        .CE(1'b1),
        .D(sig00000202),
        .Q(sig0000021c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000fd
       (.C(clk),
        .CE(1'b1),
        .D(sig00000203),
        .Q(sig0000021d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000fe
       (.C(clk),
        .CE(1'b1),
        .D(sig00000204),
        .Q(sig0000021e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000ff
       (.C(clk),
        .CE(1'b1),
        .D(sig00000205),
        .Q(sig0000021f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000100
       (.C(clk),
        .CE(1'b1),
        .D(sig00000206),
        .Q(sig00000220),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000101
       (.C(clk),
        .CE(1'b1),
        .D(sig00000207),
        .Q(sig00000221),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000102
       (.C(clk),
        .CE(1'b1),
        .D(sig00000208),
        .Q(sig00000222),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000103
       (.C(clk),
        .CE(1'b1),
        .D(sig00000209),
        .Q(sig00000223),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000104
       (.C(clk),
        .CE(1'b1),
        .D(sig0000020a),
        .Q(sig00000224),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000105
       (.C(clk),
        .CE(1'b1),
        .D(sig0000020b),
        .Q(sig00000225),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000106
       (.C(clk),
        .CE(1'b1),
        .D(sig0000020c),
        .Q(sig00000226),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  MUXF8 blk00000107
       (.I0(sig000002bf),
        .I1(sig000002be),
        .O(sig000002bd),
        .S(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  MUXF7 blk00000108
       (.I0(1'b1),
        .I1(1'b1),
        .O(sig000002be),
        .S(sig000002c7));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  MUXF7 blk00000109
       (.I0(sig000002c9),
        .I1(sig000002c8),
        .O(sig000002bf),
        .S(sig000002c7));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000010a
       (.C(clk),
        .CE(1'b1),
        .D(sig000000aa),
        .Q(sig000002ca),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000010b
       (.C(clk),
        .CE(1'b1),
        .D(sig000000ab),
        .Q(sig000002c7),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000010e_CARRY4
       (.CI(sig000002e4),
        .CO({NLW_blk0000010e_CARRY4_CO_UNCONNECTED[3],sig000002e1,sig000002e2,sig000002e3}),
        .CYINIT(1'b0),
        .DI({NLW_blk0000010e_CARRY4_DI_UNCONNECTED[3],1'b0,1'b0,1'b0}),
        .O(NLW_blk0000010e_CARRY4_O_UNCONNECTED[3:0]),
        .S({NLW_blk0000010e_CARRY4_S_UNCONNECTED[3],sig000002d9,sig000002da,sig000002db}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000112_CARRY4
       (.CI(1'b0),
        .CO({sig000002e4,sig000002e5,sig000002e6,sig000002e7}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_blk00000112_CARRY4_O_UNCONNECTED[3:0]),
        .S({sig000002dc,sig000002dd,sig000002de,sig000002df}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000113
       (.C(clk),
        .CE(1'b1),
        .D(sig000002e1),
        .Q(sig000002e0),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000114
       (.C(clk),
        .CE(1'b1),
        .D(sig000002e2),
        .Q(sig000002d4),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000115
       (.C(clk),
        .CE(1'b1),
        .D(sig000002e3),
        .Q(sig000002d5),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000116
       (.C(clk),
        .CE(1'b1),
        .D(sig000002e4),
        .Q(sig000002d3),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000117
       (.C(clk),
        .CE(1'b1),
        .D(sig000002e5),
        .Q(sig000002d6),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000118
       (.C(clk),
        .CE(1'b1),
        .D(sig000002e6),
        .Q(sig000002d7),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000119
       (.C(clk),
        .CE(1'b1),
        .D(sig000002e7),
        .Q(sig000002d8),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000011a
       (.C(clk),
        .CE(1'b1),
        .D(sig000002bd),
        .Q(sig000002bc),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000011b
       (.C(clk),
        .CE(1'b1),
        .D(sig000002c0),
        .Q(sig000002cd),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000011c
       (.C(clk),
        .CE(1'b1),
        .D(sig000002c1),
        .Q(sig000002ce),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000011d
       (.C(clk),
        .CE(1'b1),
        .D(sig000002c2),
        .Q(sig000002cb),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000011e
       (.C(clk),
        .CE(1'b1),
        .D(sig000002c3),
        .Q(sig000002d0),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000011f
       (.C(clk),
        .CE(1'b1),
        .D(sig000002c4),
        .Q(sig000002d1),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000120
       (.C(clk),
        .CE(1'b1),
        .D(sig000002c5),
        .Q(sig000002d2),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000121
       (.C(clk),
        .CE(1'b1),
        .D(sig000002c6),
        .Q(sig000002cf),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000123_CARRY4
       (.CI(1'b0),
        .CO({sig00000329,sig0000032b,sig00000311,sig00000312}),
        .CYINIT(sig0000009b),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({sig00000328,sig0000032a,NLW_blk00000123_CARRY4_O_UNCONNECTED[1:0]}),
        .S({sig000002f6,sig000002f5,sig00000584,1'b1}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000129_CARRY4
       (.CI(sig00000319),
        .CO({sig00000338,sig00000310,sig00000315,sig00000317}),
        .CYINIT(1'b0),
        .DI({sig0000024e,sig0000024d,sig0000024c,sig0000024b}),
        .O({sig00000302,sig00000313,sig00000314,sig00000316}),
        .S({sig000002e8,sig00000301,sig00000300,sig000002ff}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000131_CARRY4
       (.CI(sig00000321),
        .CO({sig00000319,sig0000031b,sig0000031d,sig0000031f}),
        .CYINIT(1'b0),
        .DI({sig0000024a,sig00000249,sig00000248,sig00000247}),
        .O({sig00000318,sig0000031a,sig0000031c,sig0000031e}),
        .S({sig000002fe,sig000002fd,sig000002fc,sig000002fb}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000139_CARRY4
       (.CI(sig00000329),
        .CO({sig00000321,sig00000323,sig00000325,sig00000327}),
        .CYINIT(1'b0),
        .DI({sig00000246,sig00000245,sig00000244,sig00000243}),
        .O({sig00000320,sig00000322,sig00000324,sig00000326}),
        .S({sig000002fa,sig000002f9,sig000002f8,sig000002f7}));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000013e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000313),
        .Q(sig00000089),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000013f
       (.C(clk),
        .CE(1'b1),
        .D(sig00000314),
        .Q(sig00000088),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000140
       (.C(clk),
        .CE(1'b1),
        .D(sig00000316),
        .Q(sig00000087),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000141
       (.C(clk),
        .CE(1'b1),
        .D(sig00000318),
        .Q(sig00000086),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000142
       (.C(clk),
        .CE(1'b1),
        .D(sig0000031a),
        .Q(sig00000085),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000143
       (.C(clk),
        .CE(1'b1),
        .D(sig0000031c),
        .Q(sig00000084),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000144
       (.C(clk),
        .CE(1'b1),
        .D(sig0000031e),
        .Q(sig00000083),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000145
       (.C(clk),
        .CE(1'b1),
        .D(sig00000320),
        .Q(sig00000082),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000146
       (.C(clk),
        .CE(1'b1),
        .D(sig00000322),
        .Q(sig00000081),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000147
       (.C(clk),
        .CE(1'b1),
        .D(sig00000324),
        .Q(sig00000080),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000148
       (.C(clk),
        .CE(1'b1),
        .D(sig00000326),
        .Q(sig0000007f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000149
       (.C(clk),
        .CE(1'b1),
        .D(sig00000328),
        .Q(sig0000007e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000014a
       (.C(clk),
        .CE(1'b1),
        .D(sig0000032a),
        .Q(sig0000007d),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000014b_CARRY4
       (.CI(sig0000032c),
        .CO(NLW_blk0000014b_CARRY4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI(NLW_blk0000014b_CARRY4_DI_UNCONNECTED[3:0]),
        .O({NLW_blk0000014b_CARRY4_O_UNCONNECTED[3:1],sig0000030f}),
        .S({NLW_blk0000014b_CARRY4_S_UNCONNECTED[3:1],sig0000058f}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000153_CARRY4
       (.CI(sig00000330),
        .CO({sig0000032c,sig0000032d,sig0000032e,sig0000032f}),
        .CYINIT(1'b0),
        .DI({sig0000025a,sig00000259,sig00000258,sig00000257}),
        .O({sig0000030e,sig0000030d,sig0000030c,sig0000030b}),
        .S({sig000002f4,sig000002f3,sig000002f2,sig000002f1}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000015b_CARRY4
       (.CI(sig00000334),
        .CO({sig00000330,sig00000331,sig00000332,sig00000333}),
        .CYINIT(1'b0),
        .DI({sig00000256,sig00000255,sig00000254,sig00000253}),
        .O({sig0000030a,sig00000309,sig00000308,sig00000307}),
        .S({sig000002f0,sig000002ef,sig000002ee,sig000002ed}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000163_CARRY4
       (.CI(sig00000338),
        .CO({sig00000334,sig00000335,sig00000336,sig00000337}),
        .CYINIT(1'b0),
        .DI({sig00000252,sig00000251,sig00000250,sig0000024f}),
        .O({sig00000306,sig00000305,sig00000304,sig00000303}),
        .S({sig000002ec,sig000002eb,sig000002ea,sig000002e9}));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000166
       (.C(clk),
        .CE(1'b1),
        .D(sig0000030f),
        .Q(sig00000097),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000167
       (.C(clk),
        .CE(1'b1),
        .D(sig0000030e),
        .Q(sig00000096),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000168
       (.C(clk),
        .CE(1'b1),
        .D(sig0000030d),
        .Q(sig00000095),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000169
       (.C(clk),
        .CE(1'b1),
        .D(sig0000030c),
        .Q(sig00000094),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000016a
       (.C(clk),
        .CE(1'b1),
        .D(sig0000030b),
        .Q(sig00000093),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000016b
       (.C(clk),
        .CE(1'b1),
        .D(sig0000030a),
        .Q(sig00000092),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000016c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000309),
        .Q(sig00000091),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000016d
       (.C(clk),
        .CE(1'b1),
        .D(sig00000308),
        .Q(sig00000090),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000016e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000307),
        .Q(sig0000008f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000016f
       (.C(clk),
        .CE(1'b1),
        .D(sig00000306),
        .Q(sig0000008e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000170
       (.C(clk),
        .CE(1'b1),
        .D(sig00000305),
        .Q(sig0000008d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000171
       (.C(clk),
        .CE(1'b1),
        .D(sig00000304),
        .Q(sig0000008c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000172
       (.C(clk),
        .CE(1'b1),
        .D(sig00000303),
        .Q(sig0000008b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000173
       (.C(clk),
        .CE(1'b1),
        .D(sig00000302),
        .Q(sig0000008a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000174
       (.C(clk),
        .CE(1'b1),
        .D(b[22]),
        .Q(sig00000271),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000175
       (.C(clk),
        .CE(1'b1),
        .D(b[21]),
        .Q(sig00000270),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000176
       (.C(clk),
        .CE(1'b1),
        .D(b[20]),
        .Q(sig0000026f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000177
       (.C(clk),
        .CE(1'b1),
        .D(b[19]),
        .Q(sig0000026e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000178
       (.C(clk),
        .CE(1'b1),
        .D(b[18]),
        .Q(sig0000026d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000179
       (.C(clk),
        .CE(1'b1),
        .D(b[17]),
        .Q(sig0000026c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000017a
       (.C(clk),
        .CE(1'b1),
        .D(b[16]),
        .Q(sig0000026b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000017b
       (.C(clk),
        .CE(1'b1),
        .D(b[15]),
        .Q(sig0000026a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000017c
       (.C(clk),
        .CE(1'b1),
        .D(b[14]),
        .Q(sig00000269),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000017d
       (.C(clk),
        .CE(1'b1),
        .D(b[13]),
        .Q(sig00000268),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000017e
       (.C(clk),
        .CE(1'b1),
        .D(b[12]),
        .Q(sig00000267),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000017f
       (.C(clk),
        .CE(1'b1),
        .D(b[11]),
        .Q(sig00000266),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000180
       (.C(clk),
        .CE(1'b1),
        .D(b[10]),
        .Q(sig00000265),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000181
       (.C(clk),
        .CE(1'b1),
        .D(b[9]),
        .Q(sig00000264),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000182
       (.C(clk),
        .CE(1'b1),
        .D(b[8]),
        .Q(sig00000263),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000183
       (.C(clk),
        .CE(1'b1),
        .D(b[7]),
        .Q(sig00000262),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000184
       (.C(clk),
        .CE(1'b1),
        .D(b[6]),
        .Q(sig00000261),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000185
       (.C(clk),
        .CE(1'b1),
        .D(b[5]),
        .Q(sig00000260),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000186
       (.C(clk),
        .CE(1'b1),
        .D(b[4]),
        .Q(sig0000025f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000187
       (.C(clk),
        .CE(1'b1),
        .D(b[3]),
        .Q(sig0000025e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000188
       (.C(clk),
        .CE(1'b1),
        .D(b[2]),
        .Q(sig0000025d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000189
       (.C(clk),
        .CE(1'b1),
        .D(b[1]),
        .Q(sig0000025c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000018a
       (.C(clk),
        .CE(1'b1),
        .D(b[0]),
        .Q(sig0000025b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000018b
       (.C(clk),
        .CE(1'b1),
        .D(a[22]),
        .Q(sig00000288),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000018c
       (.C(clk),
        .CE(1'b1),
        .D(a[21]),
        .Q(sig00000287),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000018d
       (.C(clk),
        .CE(1'b1),
        .D(a[20]),
        .Q(sig00000286),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000018e
       (.C(clk),
        .CE(1'b1),
        .D(a[19]),
        .Q(sig00000285),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000018f
       (.C(clk),
        .CE(1'b1),
        .D(a[18]),
        .Q(sig00000284),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000190
       (.C(clk),
        .CE(1'b1),
        .D(a[17]),
        .Q(sig00000283),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000191
       (.C(clk),
        .CE(1'b1),
        .D(a[16]),
        .Q(sig00000282),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000192
       (.C(clk),
        .CE(1'b1),
        .D(a[15]),
        .Q(sig00000281),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000193
       (.C(clk),
        .CE(1'b1),
        .D(a[14]),
        .Q(sig00000280),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000194
       (.C(clk),
        .CE(1'b1),
        .D(a[13]),
        .Q(sig0000027f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000195
       (.C(clk),
        .CE(1'b1),
        .D(a[12]),
        .Q(sig0000027e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000196
       (.C(clk),
        .CE(1'b1),
        .D(a[11]),
        .Q(sig0000027d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000197
       (.C(clk),
        .CE(1'b1),
        .D(a[10]),
        .Q(sig0000027c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000198
       (.C(clk),
        .CE(1'b1),
        .D(a[9]),
        .Q(sig0000027b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000199
       (.C(clk),
        .CE(1'b1),
        .D(a[8]),
        .Q(sig0000027a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000019a
       (.C(clk),
        .CE(1'b1),
        .D(a[7]),
        .Q(sig00000279),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000019b
       (.C(clk),
        .CE(1'b1),
        .D(a[6]),
        .Q(sig00000278),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000019c
       (.C(clk),
        .CE(1'b1),
        .D(a[5]),
        .Q(sig00000277),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000019d
       (.C(clk),
        .CE(1'b1),
        .D(a[4]),
        .Q(sig00000276),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000019e
       (.C(clk),
        .CE(1'b1),
        .D(a[3]),
        .Q(sig00000275),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000019f
       (.C(clk),
        .CE(1'b1),
        .D(a[2]),
        .Q(sig00000274),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001a0
       (.C(clk),
        .CE(1'b1),
        .D(a[1]),
        .Q(sig00000273),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001a1
       (.C(clk),
        .CE(1'b1),
        .D(a[0]),
        .Q(sig00000272),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001a2
       (.C(clk),
        .CE(1'b1),
        .D(sig000002bb),
        .Q(sig00000350),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001a3
       (.C(clk),
        .CE(1'b1),
        .D(sig000002ba),
        .Q(sig0000034f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001a4
       (.C(clk),
        .CE(1'b1),
        .D(sig000002b9),
        .Q(sig0000034e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001a5
       (.C(clk),
        .CE(1'b1),
        .D(sig000002b8),
        .Q(sig0000034d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001a6
       (.C(clk),
        .CE(1'b1),
        .D(sig000002b7),
        .Q(sig0000034c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001a7
       (.C(clk),
        .CE(1'b1),
        .D(sig000002b6),
        .Q(sig0000034b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001a8
       (.C(clk),
        .CE(1'b1),
        .D(sig000002b5),
        .Q(sig0000034a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001a9
       (.C(clk),
        .CE(1'b1),
        .D(sig000002b4),
        .Q(sig00000349),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001aa
       (.C(clk),
        .CE(1'b1),
        .D(sig000002b3),
        .Q(sig00000348),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001ab
       (.C(clk),
        .CE(1'b1),
        .D(sig000002b2),
        .Q(sig00000347),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001ac
       (.C(clk),
        .CE(1'b1),
        .D(sig000002b1),
        .Q(sig00000346),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001ad
       (.C(clk),
        .CE(1'b1),
        .D(sig000002b0),
        .Q(sig00000345),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001ae
       (.C(clk),
        .CE(1'b1),
        .D(sig000002af),
        .Q(sig00000344),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001af
       (.C(clk),
        .CE(1'b1),
        .D(sig000002ae),
        .Q(sig00000343),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001b0
       (.C(clk),
        .CE(1'b1),
        .D(sig000002ad),
        .Q(sig00000342),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001b1
       (.C(clk),
        .CE(1'b1),
        .D(sig000002ac),
        .Q(sig00000341),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001b2
       (.C(clk),
        .CE(1'b1),
        .D(sig000002ab),
        .Q(sig00000340),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001b3
       (.C(clk),
        .CE(1'b1),
        .D(sig000002aa),
        .Q(sig0000033f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001b4
       (.C(clk),
        .CE(1'b1),
        .D(sig000002a9),
        .Q(sig0000033e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001b5
       (.C(clk),
        .CE(1'b1),
        .D(sig000002a8),
        .Q(sig0000033d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001b6
       (.C(clk),
        .CE(1'b1),
        .D(sig000002a7),
        .Q(sig0000033c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001b7
       (.C(clk),
        .CE(1'b1),
        .D(sig000002a6),
        .Q(sig0000033b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001b8
       (.C(clk),
        .CE(1'b1),
        .D(sig000002a5),
        .Q(sig0000033a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001b9
       (.C(clk),
        .CE(1'b1),
        .D(sig000002a4),
        .Q(sig00000339),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001ba
       (.C(clk),
        .CE(1'b1),
        .D(sig000002a1),
        .Q(sig00000242),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001bb
       (.C(clk),
        .CE(1'b1),
        .D(sig000002a0),
        .Q(sig00000241),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001bc
       (.C(clk),
        .CE(1'b1),
        .D(sig0000029f),
        .Q(sig00000240),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001bd
       (.C(clk),
        .CE(1'b1),
        .D(sig0000029e),
        .Q(sig0000023f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001be
       (.C(clk),
        .CE(1'b1),
        .D(sig0000029d),
        .Q(sig0000023e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001bf
       (.C(clk),
        .CE(1'b1),
        .D(sig0000029c),
        .Q(sig0000023d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001c0
       (.C(clk),
        .CE(1'b1),
        .D(sig0000029b),
        .Q(sig0000023c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001c1
       (.C(clk),
        .CE(1'b1),
        .D(sig0000029a),
        .Q(sig0000023b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001c2
       (.C(clk),
        .CE(1'b1),
        .D(sig00000299),
        .Q(sig0000023a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001c3
       (.C(clk),
        .CE(1'b1),
        .D(sig00000298),
        .Q(sig00000239),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001c4
       (.C(clk),
        .CE(1'b1),
        .D(sig00000297),
        .Q(sig00000238),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001c5
       (.C(clk),
        .CE(1'b1),
        .D(sig00000296),
        .Q(sig00000237),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001c6
       (.C(clk),
        .CE(1'b1),
        .D(sig00000295),
        .Q(sig00000236),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001c7
       (.C(clk),
        .CE(1'b1),
        .D(sig00000294),
        .Q(sig00000235),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001c8
       (.C(clk),
        .CE(1'b1),
        .D(sig00000293),
        .Q(sig00000234),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001c9
       (.C(clk),
        .CE(1'b1),
        .D(sig00000292),
        .Q(sig00000233),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001ca
       (.C(clk),
        .CE(1'b1),
        .D(sig00000291),
        .Q(sig00000232),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001cb
       (.C(clk),
        .CE(1'b1),
        .D(sig00000290),
        .Q(sig00000231),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001cc
       (.C(clk),
        .CE(1'b1),
        .D(sig0000028f),
        .Q(sig00000230),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001cd
       (.C(clk),
        .CE(1'b1),
        .D(sig0000028e),
        .Q(sig0000022f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001ce
       (.C(clk),
        .CE(1'b1),
        .D(sig0000028d),
        .Q(sig0000022e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001cf
       (.C(clk),
        .CE(1'b1),
        .D(sig0000028c),
        .Q(sig0000022d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001d0
       (.C(clk),
        .CE(1'b1),
        .D(sig0000028b),
        .Q(sig0000022c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001d1
       (.C(clk),
        .CE(1'b1),
        .D(sig0000028a),
        .Q(sig0000022b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001d2
       (.C(clk),
        .CE(1'b1),
        .D(sig00000289),
        .Q(sig0000022a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001d3
       (.C(clk),
        .CE(1'b1),
        .D(sig0000044c),
        .Q(sig00000465),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001d4
       (.C(clk),
        .CE(1'b1),
        .D(sig0000044d),
        .Q(sig00000466),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001d5
       (.C(clk),
        .CE(1'b1),
        .D(sig0000044e),
        .Q(sig00000467),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001d6
       (.C(clk),
        .CE(1'b1),
        .D(sig0000044f),
        .Q(sig00000468),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001d7
       (.C(clk),
        .CE(1'b1),
        .D(sig00000450),
        .Q(sig00000469),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001d8
       (.C(clk),
        .CE(1'b1),
        .D(sig00000451),
        .Q(sig0000046a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001d9
       (.C(clk),
        .CE(1'b1),
        .D(sig00000452),
        .Q(sig0000046b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001da
       (.C(clk),
        .CE(1'b1),
        .D(sig00000453),
        .Q(sig0000046c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001db
       (.C(clk),
        .CE(1'b1),
        .D(sig00000454),
        .Q(sig0000046d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001dc
       (.C(clk),
        .CE(1'b1),
        .D(sig00000455),
        .Q(sig0000046e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001dd
       (.C(clk),
        .CE(1'b1),
        .D(sig00000456),
        .Q(sig0000046f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001de
       (.C(clk),
        .CE(1'b1),
        .D(sig00000457),
        .Q(sig00000470),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001df
       (.C(clk),
        .CE(1'b1),
        .D(sig00000458),
        .Q(sig00000471),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001e0
       (.C(clk),
        .CE(1'b1),
        .D(sig00000459),
        .Q(sig00000472),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001e1
       (.C(clk),
        .CE(1'b1),
        .D(sig0000045a),
        .Q(sig00000473),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001e2
       (.C(clk),
        .CE(1'b1),
        .D(sig0000045b),
        .Q(sig00000474),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001e3
       (.C(clk),
        .CE(1'b1),
        .D(sig0000045c),
        .Q(sig00000475),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001e4
       (.C(clk),
        .CE(1'b1),
        .D(sig0000045d),
        .Q(sig00000476),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001e5
       (.C(clk),
        .CE(1'b1),
        .D(sig0000045e),
        .Q(sig00000477),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001e6
       (.C(clk),
        .CE(1'b1),
        .D(sig0000045f),
        .Q(sig00000478),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001e7
       (.C(clk),
        .CE(1'b1),
        .D(sig00000460),
        .Q(sig00000479),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001e8
       (.C(clk),
        .CE(1'b1),
        .D(sig00000461),
        .Q(sig0000047a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001e9
       (.C(clk),
        .CE(1'b1),
        .D(sig00000462),
        .Q(sig0000047b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001ea
       (.C(clk),
        .CE(1'b1),
        .D(sig00000463),
        .Q(sig0000047c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001eb
       (.C(clk),
        .CE(1'b1),
        .D(sig00000464),
        .Q(sig0000047d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001ec
       (.C(clk),
        .CE(1'b1),
        .D(sig00000419),
        .Q(sig0000047e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001ed
       (.C(clk),
        .CE(1'b1),
        .D(sig0000041a),
        .Q(sig0000047f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001ee
       (.C(clk),
        .CE(1'b1),
        .D(sig0000041b),
        .Q(sig00000480),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001ef
       (.C(clk),
        .CE(1'b1),
        .D(sig0000041c),
        .Q(sig00000481),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001f0
       (.C(clk),
        .CE(1'b1),
        .D(sig0000041d),
        .Q(sig00000482),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001f1
       (.C(clk),
        .CE(1'b1),
        .D(sig0000041e),
        .Q(sig00000483),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001f2
       (.C(clk),
        .CE(1'b1),
        .D(sig0000041f),
        .Q(sig00000484),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001f3
       (.C(clk),
        .CE(1'b1),
        .D(sig00000420),
        .Q(sig00000485),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001f4
       (.C(clk),
        .CE(1'b1),
        .D(sig00000421),
        .Q(sig00000486),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001f5
       (.C(clk),
        .CE(1'b1),
        .D(sig00000422),
        .Q(sig00000487),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001f6
       (.C(clk),
        .CE(1'b1),
        .D(sig00000423),
        .Q(sig00000488),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001f7
       (.C(clk),
        .CE(1'b1),
        .D(sig00000424),
        .Q(sig00000489),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001f8
       (.C(clk),
        .CE(1'b1),
        .D(sig00000425),
        .Q(sig0000048a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001f9
       (.C(clk),
        .CE(1'b1),
        .D(sig00000426),
        .Q(sig0000048b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001fa
       (.C(clk),
        .CE(1'b1),
        .D(sig00000427),
        .Q(sig0000048c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001fb
       (.C(clk),
        .CE(1'b1),
        .D(sig00000428),
        .Q(sig0000048d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001fc
       (.C(clk),
        .CE(1'b1),
        .D(sig00000429),
        .Q(sig0000048e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001fd
       (.C(clk),
        .CE(1'b1),
        .D(sig0000042a),
        .Q(sig0000048f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001fe
       (.C(clk),
        .CE(1'b1),
        .D(sig0000042b),
        .Q(sig00000490),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001ff
       (.C(clk),
        .CE(1'b1),
        .D(sig0000042c),
        .Q(sig00000491),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000200
       (.C(clk),
        .CE(1'b1),
        .D(sig0000042d),
        .Q(sig00000492),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000201
       (.C(clk),
        .CE(1'b1),
        .D(sig0000042e),
        .Q(sig00000493),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000202
       (.C(clk),
        .CE(1'b1),
        .D(sig0000042f),
        .Q(sig00000494),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000203
       (.C(clk),
        .CE(1'b1),
        .D(sig00000430),
        .Q(sig00000495),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000204
       (.C(clk),
        .CE(1'b1),
        .D(sig00000431),
        .Q(sig00000496),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000205
       (.C(clk),
        .CE(1'b1),
        .D(sig00000433),
        .Q(sig00000497),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000206
       (.C(clk),
        .CE(1'b1),
        .D(sig00000434),
        .Q(sig00000498),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000207
       (.C(clk),
        .CE(1'b1),
        .D(sig00000435),
        .Q(sig00000499),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000208
       (.C(clk),
        .CE(1'b1),
        .D(sig00000436),
        .Q(sig0000049a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000209
       (.C(clk),
        .CE(1'b1),
        .D(sig00000437),
        .Q(sig0000049b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000020a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000438),
        .Q(sig0000049c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000020b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000439),
        .Q(sig0000049d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000020c
       (.C(clk),
        .CE(1'b1),
        .D(sig0000043a),
        .Q(sig0000049e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000020d
       (.C(clk),
        .CE(1'b1),
        .D(sig0000043b),
        .Q(sig0000049f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000020e
       (.C(clk),
        .CE(1'b1),
        .D(sig0000043c),
        .Q(sig000004a0),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000020f
       (.C(clk),
        .CE(1'b1),
        .D(sig0000043d),
        .Q(sig000004a1),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000210
       (.C(clk),
        .CE(1'b1),
        .D(sig0000043e),
        .Q(sig000004a2),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000211
       (.C(clk),
        .CE(1'b1),
        .D(sig0000043f),
        .Q(sig000004a3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000212
       (.C(clk),
        .CE(1'b1),
        .D(sig00000440),
        .Q(sig000004a4),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000213
       (.C(clk),
        .CE(1'b1),
        .D(sig00000441),
        .Q(sig000004a5),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000214
       (.C(clk),
        .CE(1'b1),
        .D(sig00000442),
        .Q(sig000004a6),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000215
       (.C(clk),
        .CE(1'b1),
        .D(sig00000443),
        .Q(sig000004a7),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000216
       (.C(clk),
        .CE(1'b1),
        .D(sig00000444),
        .Q(sig000004a8),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000217
       (.C(clk),
        .CE(1'b1),
        .D(sig00000445),
        .Q(sig000004a9),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000218
       (.C(clk),
        .CE(1'b1),
        .D(sig00000446),
        .Q(sig000004aa),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000219
       (.C(clk),
        .CE(1'b1),
        .D(sig00000447),
        .Q(sig000004ab),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000021a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000448),
        .Q(sig000004ac),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000021b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000449),
        .Q(sig000004ad),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000021c
       (.C(clk),
        .CE(1'b1),
        .D(sig0000044a),
        .Q(sig000004ae),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000021d
       (.C(clk),
        .CE(1'b1),
        .D(sig0000044b),
        .Q(sig0000005e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000021e
       (.C(clk),
        .CE(1'b1),
        .D(sig0000022a),
        .Q(sig00000414),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000021f
       (.C(clk),
        .CE(1'b1),
        .D(sig00000465),
        .Q(sig00000413),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000220
       (.C(clk),
        .CE(1'b1),
        .D(sig00000466),
        .Q(sig00000412),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000221
       (.C(clk),
        .CE(1'b1),
        .D(sig00000467),
        .Q(sig00000411),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000222
       (.C(clk),
        .CE(1'b1),
        .D(sig00000468),
        .Q(sig00000410),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000223
       (.C(clk),
        .CE(1'b1),
        .D(sig00000469),
        .Q(sig0000040f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000224
       (.C(clk),
        .CE(1'b1),
        .D(sig0000046a),
        .Q(sig0000040e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000225
       (.C(clk),
        .CE(1'b1),
        .D(sig0000046b),
        .Q(sig0000040d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000226
       (.C(clk),
        .CE(1'b1),
        .D(sig0000046c),
        .Q(sig0000040c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000227
       (.C(clk),
        .CE(1'b1),
        .D(sig0000046d),
        .Q(sig0000040b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000228
       (.C(clk),
        .CE(1'b1),
        .D(sig0000046e),
        .Q(sig0000040a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000229
       (.C(clk),
        .CE(1'b1),
        .D(sig0000046f),
        .Q(sig00000409),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000022a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000470),
        .Q(sig00000408),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000022b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000471),
        .Q(sig00000407),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000022c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000472),
        .Q(sig00000406),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000022d
       (.C(clk),
        .CE(1'b1),
        .D(sig00000473),
        .Q(sig00000405),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000022e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000474),
        .Q(sig00000404),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000022f
       (.C(clk),
        .CE(1'b1),
        .D(sig00000475),
        .Q(sig00000403),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000230
       (.C(clk),
        .CE(1'b1),
        .D(sig00000476),
        .Q(sig00000402),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000231
       (.C(clk),
        .CE(1'b1),
        .D(sig00000477),
        .Q(sig00000401),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000232
       (.C(clk),
        .CE(1'b1),
        .D(sig00000478),
        .Q(sig00000400),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000233
       (.C(clk),
        .CE(1'b1),
        .D(sig00000479),
        .Q(sig000003ff),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000234
       (.C(clk),
        .CE(1'b1),
        .D(sig0000047a),
        .Q(sig000003fe),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000235
       (.C(clk),
        .CE(1'b1),
        .D(sig0000047b),
        .Q(sig000003fd),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000236
       (.C(clk),
        .CE(1'b1),
        .D(sig0000047c),
        .Q(sig000003fc),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000237
       (.C(clk),
        .CE(1'b1),
        .D(sig0000047d),
        .Q(sig000003fb),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000238
       (.C(clk),
        .CE(1'b1),
        .D(sig000003e1),
        .Q(sig000003c8),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000239
       (.C(clk),
        .CE(1'b1),
        .D(sig000003e0),
        .Q(sig000004db),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000023a
       (.C(clk),
        .CE(1'b1),
        .D(sig000003df),
        .Q(sig000003c7),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000023b
       (.C(clk),
        .CE(1'b1),
        .D(sig000003de),
        .Q(sig000004da),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000023c
       (.C(clk),
        .CE(1'b1),
        .D(sig000003dd),
        .Q(sig000003c6),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000023d
       (.C(clk),
        .CE(1'b1),
        .D(sig000003dc),
        .Q(sig000004d9),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000023e
       (.C(clk),
        .CE(1'b1),
        .D(sig000003db),
        .Q(sig000003c5),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000023f
       (.C(clk),
        .CE(1'b1),
        .D(sig000003da),
        .Q(sig000003c4),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000240
       (.C(clk),
        .CE(1'b1),
        .D(sig000003d9),
        .Q(sig000003c3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000241
       (.C(clk),
        .CE(1'b1),
        .D(sig000003d8),
        .Q(sig000003c2),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000242
       (.C(clk),
        .CE(1'b1),
        .D(sig000003d7),
        .Q(sig000003c1),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000243
       (.C(clk),
        .CE(1'b1),
        .D(sig000003d6),
        .Q(sig000003c0),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000244
       (.C(clk),
        .CE(1'b1),
        .D(sig000003d5),
        .Q(sig000003bf),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000245
       (.C(clk),
        .CE(1'b1),
        .D(sig000003d4),
        .Q(sig000003be),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000246
       (.C(clk),
        .CE(1'b1),
        .D(sig000003d3),
        .Q(sig000003bd),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000247
       (.C(clk),
        .CE(1'b1),
        .D(sig000003d2),
        .Q(sig000003bc),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000248
       (.C(clk),
        .CE(1'b1),
        .D(sig000003d1),
        .Q(sig000003bb),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000249
       (.C(clk),
        .CE(1'b1),
        .D(sig000003d0),
        .Q(sig000003ba),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000024a
       (.C(clk),
        .CE(1'b1),
        .D(sig000003cf),
        .Q(sig000003b9),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000024b
       (.C(clk),
        .CE(1'b1),
        .D(sig000003ce),
        .Q(sig000003b8),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000024c
       (.C(clk),
        .CE(1'b1),
        .D(sig000003cd),
        .Q(sig000003b7),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000024d
       (.C(clk),
        .CE(1'b1),
        .D(sig000003cc),
        .Q(sig000003b6),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000024e
       (.C(clk),
        .CE(1'b1),
        .D(sig000003cb),
        .Q(sig000003b5),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000024f
       (.C(clk),
        .CE(1'b1),
        .D(sig000003ca),
        .Q(sig000003b4),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000250
       (.C(clk),
        .CE(1'b1),
        .D(sig000003c9),
        .Q(sig000003b3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000251
       (.C(clk),
        .CE(1'b1),
        .D(sig000003fa),
        .Q(sig00000077),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000252
       (.C(clk),
        .CE(1'b1),
        .D(sig000003f9),
        .Q(sig00000076),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000253
       (.C(clk),
        .CE(1'b1),
        .D(sig000003f8),
        .Q(sig00000075),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000254
       (.C(clk),
        .CE(1'b1),
        .D(sig000003f7),
        .Q(sig00000074),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000255
       (.C(clk),
        .CE(1'b1),
        .D(sig000003f6),
        .Q(sig00000073),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000256
       (.C(clk),
        .CE(1'b1),
        .D(sig000003f5),
        .Q(sig00000072),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000257
       (.C(clk),
        .CE(1'b1),
        .D(sig000003f4),
        .Q(sig00000071),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000258
       (.C(clk),
        .CE(1'b1),
        .D(sig000003f3),
        .Q(sig00000070),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000259
       (.C(clk),
        .CE(1'b1),
        .D(sig000003f2),
        .Q(sig0000006f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000025a
       (.C(clk),
        .CE(1'b1),
        .D(sig000003f1),
        .Q(sig0000006e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000025b
       (.C(clk),
        .CE(1'b1),
        .D(sig000003f0),
        .Q(sig0000006d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000025c
       (.C(clk),
        .CE(1'b1),
        .D(sig000003ef),
        .Q(sig0000006c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000025d
       (.C(clk),
        .CE(1'b1),
        .D(sig000003ee),
        .Q(sig0000006b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000025e
       (.C(clk),
        .CE(1'b1),
        .D(sig000003ed),
        .Q(sig0000006a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000025f
       (.C(clk),
        .CE(1'b1),
        .D(sig000003ec),
        .Q(sig00000069),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000260
       (.C(clk),
        .CE(1'b1),
        .D(sig000003eb),
        .Q(sig00000068),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000261
       (.C(clk),
        .CE(1'b1),
        .D(sig000003ea),
        .Q(sig00000067),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000262
       (.C(clk),
        .CE(1'b1),
        .D(sig000003e9),
        .Q(sig00000066),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000263
       (.C(clk),
        .CE(1'b1),
        .D(sig000003e8),
        .Q(sig00000065),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000264
       (.C(clk),
        .CE(1'b1),
        .D(sig000003e7),
        .Q(sig00000064),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000265
       (.C(clk),
        .CE(1'b1),
        .D(sig000003e6),
        .Q(sig00000063),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000266
       (.C(clk),
        .CE(1'b1),
        .D(sig000003e5),
        .Q(sig00000062),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000267
       (.C(clk),
        .CE(1'b1),
        .D(sig000003e4),
        .Q(sig00000061),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000268
       (.C(clk),
        .CE(1'b1),
        .D(sig000003e3),
        .Q(sig00000060),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000269
       (.C(clk),
        .CE(1'b1),
        .D(sig000003e2),
        .Q(sig0000005f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000026c_CARRY4
       (.CI(sig00000352),
        .CO({NLW_blk0000026c_CARRY4_CO_UNCONNECTED[3:1],sig00000351}),
        .CYINIT(1'b0),
        .DI({NLW_blk0000026c_CARRY4_DI_UNCONNECTED[3:1],1'b1}),
        .O({NLW_blk0000026c_CARRY4_O_UNCONNECTED[3:2],sig00000431,sig00000430}),
        .S({NLW_blk0000026c_CARRY4_S_UNCONNECTED[3:2],1'b1,sig00000585}));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000274_CARRY4
       (.CI(sig0000035a),
        .CO({sig00000352,sig00000354,sig00000356,sig00000358}),
        .CYINIT(1'b0),
        .DI(b[22:19]),
        .O({sig0000042f,sig0000042e,sig0000042d,sig0000042c}),
        .S({sig00000353,sig00000355,sig00000357,sig00000359}));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000027c_CARRY4
       (.CI(sig00000362),
        .CO({sig0000035a,sig0000035c,sig0000035e,sig00000360}),
        .CYINIT(1'b0),
        .DI(b[18:15]),
        .O({sig0000042b,sig0000042a,sig00000429,sig00000428}),
        .S({sig0000035b,sig0000035d,sig0000035f,sig00000361}));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000284_CARRY4
       (.CI(sig0000036a),
        .CO({sig00000362,sig00000364,sig00000366,sig00000368}),
        .CYINIT(1'b0),
        .DI(b[14:11]),
        .O({sig00000427,sig00000426,sig00000425,sig00000424}),
        .S({sig00000363,sig00000365,sig00000367,sig00000369}));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000028c_CARRY4
       (.CI(sig00000372),
        .CO({sig0000036a,sig0000036c,sig0000036e,sig00000370}),
        .CYINIT(1'b0),
        .DI(b[10:7]),
        .O({sig00000423,sig00000422,sig00000421,sig00000420}),
        .S({sig0000036b,sig0000036d,sig0000036f,sig00000371}));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000294_CARRY4
       (.CI(sig0000037a),
        .CO({sig00000372,sig00000374,sig00000376,sig00000378}),
        .CYINIT(1'b0),
        .DI(b[6:3]),
        .O({sig0000041f,sig0000041e,sig0000041d,sig0000041c}),
        .S({sig00000373,sig00000375,sig00000377,sig00000379}));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000029b_CARRY4
       (.CI(1'b0),
        .CO({sig0000037a,sig0000037c,sig0000037e,sig00000380}),
        .CYINIT(1'b1),
        .DI({b[2:0],1'b0}),
        .O({sig0000041b,sig0000041a,sig00000419,NLW_blk0000029b_CARRY4_O_UNCONNECTED[0]}),
        .S({sig0000037b,sig0000037d,sig0000037f,sig00000381}));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000029e_CARRY4
       (.CI(sig00000383),
        .CO({NLW_blk0000029e_CARRY4_CO_UNCONNECTED[3:1],sig00000382}),
        .CYINIT(1'b0),
        .DI({NLW_blk0000029e_CARRY4_DI_UNCONNECTED[3:1],1'b1}),
        .O({NLW_blk0000029e_CARRY4_O_UNCONNECTED[3:2],sig0000044b,sig0000044a}),
        .S({NLW_blk0000029e_CARRY4_S_UNCONNECTED[3:2],1'b1,sig00000432}));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000002a6_CARRY4
       (.CI(sig0000038b),
        .CO({sig00000383,sig00000385,sig00000387,sig00000389}),
        .CYINIT(1'b0),
        .DI(a[22:19]),
        .O({sig00000449,sig00000448,sig00000447,sig00000446}),
        .S({sig00000384,sig00000386,sig00000388,sig0000038a}));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000002ae_CARRY4
       (.CI(sig00000393),
        .CO({sig0000038b,sig0000038d,sig0000038f,sig00000391}),
        .CYINIT(1'b0),
        .DI(a[18:15]),
        .O({sig00000445,sig00000444,sig00000443,sig00000442}),
        .S({sig0000038c,sig0000038e,sig00000390,sig00000392}));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000002b6_CARRY4
       (.CI(sig0000039b),
        .CO({sig00000393,sig00000395,sig00000397,sig00000399}),
        .CYINIT(1'b0),
        .DI(a[14:11]),
        .O({sig00000441,sig00000440,sig0000043f,sig0000043e}),
        .S({sig00000394,sig00000396,sig00000398,sig0000039a}));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000002be_CARRY4
       (.CI(sig000003a3),
        .CO({sig0000039b,sig0000039d,sig0000039f,sig000003a1}),
        .CYINIT(1'b0),
        .DI(a[10:7]),
        .O({sig0000043d,sig0000043c,sig0000043b,sig0000043a}),
        .S({sig0000039c,sig0000039e,sig000003a0,sig000003a2}));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000002c6_CARRY4
       (.CI(sig000003ab),
        .CO({sig000003a3,sig000003a5,sig000003a7,sig000003a9}),
        .CYINIT(1'b0),
        .DI(a[6:3]),
        .O({sig00000439,sig00000438,sig00000437,sig00000436}),
        .S({sig000003a4,sig000003a6,sig000003a8,sig000003aa}));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000002cd_CARRY4
       (.CI(1'b0),
        .CO({sig000003ab,sig000003ad,sig000003af,sig000003b1}),
        .CYINIT(1'b1),
        .DI({a[2:0],1'b0}),
        .O({sig00000435,sig00000434,sig00000433,NLW_blk000002cd_CARRY4_O_UNCONNECTED[0]}),
        .S({sig000003ac,sig000003ae,sig000003b0,sig000003b2}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  MUXF7 blk000002ce
       (.I0(sig000004af),
        .I1(sig000004b0),
        .O(sig000004b1),
        .S(sig00000417));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  MUXF7 blk000002cf
       (.I0(sig000004b2),
        .I1(1'b0),
        .O(NLW_blk000002cf_O_UNCONNECTED),
        .S(sig00000417));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  MUXF7 blk000002d0
       (.I0(sig000004b5),
        .I1(sig000004b9),
        .O(sig000004bd),
        .S(sig00000415));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  MUXF7 blk000002d1
       (.I0(sig000004b6),
        .I1(sig000004ba),
        .O(NLW_blk000002d1_O_UNCONNECTED),
        .S(sig00000415));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  MUXF7 blk000002d2
       (.I0(sig000004b7),
        .I1(sig000004bb),
        .O(NLW_blk000002d2_O_UNCONNECTED),
        .S(sig00000415));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  MUXF7 blk000002d3
       (.I0(sig000004b8),
        .I1(sig000004bc),
        .O(NLW_blk000002d3_O_UNCONNECTED),
        .S(sig00000415));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  MUXF7 blk000002d4
       (.I0(sig000004be),
        .I1(sig000004c2),
        .O(sig000004c5),
        .S(sig00000415));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  MUXF7 blk000002d5
       (.I0(sig000004bf),
        .I1(sig000004c3),
        .O(sig000004c6),
        .S(sig00000415));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  MUXF7 blk000002d6
       (.I0(sig000004c0),
        .I1(sig000004c4),
        .O(sig000004c7),
        .S(sig00000415));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  MUXF7 blk000002d7
       (.I0(sig000004c1),
        .I1(1'b0),
        .O(NLW_blk000002d7_O_UNCONNECTED),
        .S(sig00000415));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002d8
       (.C(clk),
        .CE(1'b1),
        .D(sig000004b1),
        .Q(sig000004d6),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002d9
       (.C(clk),
        .CE(1'b1),
        .D(sig00000415),
        .Q(sig000004b4),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002da
       (.C(clk),
        .CE(1'b1),
        .D(sig00000416),
        .Q(sig000004b3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002db
       (.C(clk),
        .CE(1'b1),
        .D(sig000004b4),
        .Q(sig0000007b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002dc
       (.C(clk),
        .CE(1'b1),
        .D(sig000004b3),
        .Q(sig0000007a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002dd
       (.C(clk),
        .CE(1'b1),
        .D(sig000004c5),
        .Q(sig000004d8),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002de
       (.C(clk),
        .CE(1'b1),
        .D(sig000004c6),
        .Q(sig00000417),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002df
       (.C(clk),
        .CE(1'b1),
        .D(sig000004c7),
        .Q(sig000004d7),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002e0
       (.C(clk),
        .CE(1'b1),
        .D(sig000004bd),
        .Q(sig000004dc),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002e1
       (.C(clk),
        .CE(1'b1),
        .D(sig00000417),
        .Q(sig00000079),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002e2
       (.C(clk),
        .CE(1'b1),
        .D(sig00000418),
        .Q(sig00000078),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002e3
       (.C(clk),
        .CE(1'b1),
        .D(sig000004c8),
        .Q(sig0000005d),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000002e7_CARRY4
       (.CI(sig000004ed),
        .CO({sig000004e9,sig000004ea,sig000004eb,sig000004ec}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_blk000002e7_CARRY4_O_UNCONNECTED[3:0]),
        .S({sig000004d0,sig000004cf,sig000004ce,sig000004cd}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000002eb_CARRY4
       (.CI(1'b0),
        .CO({sig000004ed,sig000004ee,sig000004ef,sig000004f0}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_blk000002eb_CARRY4_O_UNCONNECTED[3:0]),
        .S({sig000004cc,sig000004cb,sig000004ca,sig000004c9}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002ec
       (.C(clk),
        .CE(1'b1),
        .D(sig000004e9),
        .Q(sig00000415),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002ed
       (.C(clk),
        .CE(1'b1),
        .D(sig000004ea),
        .Q(sig000004e4),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002ee
       (.C(clk),
        .CE(1'b1),
        .D(sig000004eb),
        .Q(sig000004e3),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002ef
       (.C(clk),
        .CE(1'b1),
        .D(sig000004ec),
        .Q(sig000004e2),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002f0
       (.C(clk),
        .CE(1'b1),
        .D(sig000004ed),
        .Q(sig000004e8),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002f1
       (.C(clk),
        .CE(1'b1),
        .D(sig000004ee),
        .Q(sig000004e7),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002f2
       (.C(clk),
        .CE(1'b1),
        .D(sig000004ef),
        .Q(sig000004e6),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002f3
       (.C(clk),
        .CE(1'b1),
        .D(sig000004f0),
        .Q(sig000004e5),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000002f4_CARRY4
       (.CI(sig000004f2),
        .CO({NLW_blk000002f4_CARRY4_CO_UNCONNECTED[3:1],sig000004f1}),
        .CYINIT(1'b0),
        .DI({NLW_blk000002f4_CARRY4_DI_UNCONNECTED[3:1],1'b0}),
        .O(NLW_blk000002f4_CARRY4_O_UNCONNECTED[3:0]),
        .S({NLW_blk000002f4_CARRY4_S_UNCONNECTED[3:1],sig000004d5}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000002f8_CARRY4
       (.CI(1'b0),
        .CO({sig000004f2,sig000004f3,sig000004f4,sig000004f5}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_blk000002f8_CARRY4_O_UNCONNECTED[3:0]),
        .S({sig000004d4,sig000004d3,sig000004d2,sig000004d1}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002f9
       (.C(clk),
        .CE(1'b1),
        .D(sig000004f1),
        .Q(sig000004e1),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002fa
       (.C(clk),
        .CE(1'b1),
        .D(sig000004f2),
        .Q(sig000004e0),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002fb
       (.C(clk),
        .CE(1'b1),
        .D(sig000004f3),
        .Q(sig000004df),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002fc
       (.C(clk),
        .CE(1'b1),
        .D(sig000004f4),
        .Q(sig000004de),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002fd
       (.C(clk),
        .CE(1'b1),
        .D(sig000004f5),
        .Q(sig000004dd),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002fe
       (.C(clk),
        .CE(1'b1),
        .D(sig0000001b),
        .Q(sig0000005b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002ff
       (.C(clk),
        .CE(1'b1),
        .D(sig0000001a),
        .Q(sig0000005a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000300
       (.C(clk),
        .CE(1'b1),
        .D(sig00000019),
        .Q(sig00000059),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000301
       (.C(clk),
        .CE(1'b1),
        .D(sig00000018),
        .Q(sig00000058),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000302
       (.C(clk),
        .CE(1'b1),
        .D(sig00000017),
        .Q(sig00000057),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000303
       (.C(clk),
        .CE(1'b1),
        .D(sig00000016),
        .Q(sig00000056),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000304
       (.C(clk),
        .CE(1'b1),
        .D(sig00000015),
        .Q(sig00000055),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000305
       (.C(clk),
        .CE(1'b1),
        .D(sig00000014),
        .Q(sig00000054),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000306
       (.C(clk),
        .CE(1'b1),
        .D(sig00000013),
        .Q(sig00000053),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000307
       (.C(clk),
        .CE(1'b1),
        .D(sig00000012),
        .Q(sig00000052),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000308
       (.C(clk),
        .CE(1'b1),
        .D(sig00000011),
        .Q(sig00000051),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000309
       (.C(clk),
        .CE(1'b1),
        .D(sig00000010),
        .Q(sig00000050),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000030a
       (.C(clk),
        .CE(1'b1),
        .D(sig0000000f),
        .Q(sig0000004f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000030b
       (.C(clk),
        .CE(1'b1),
        .D(sig0000000e),
        .Q(sig0000004e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000030c
       (.C(clk),
        .CE(1'b1),
        .D(sig0000000d),
        .Q(sig0000004d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000030d
       (.C(clk),
        .CE(1'b1),
        .D(sig0000000c),
        .Q(sig0000004c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000030e
       (.C(clk),
        .CE(1'b1),
        .D(sig0000000b),
        .Q(sig0000004b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000030f
       (.C(clk),
        .CE(1'b1),
        .D(sig0000000a),
        .Q(sig0000004a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000310
       (.C(clk),
        .CE(1'b1),
        .D(sig00000009),
        .Q(sig00000049),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000311
       (.C(clk),
        .CE(1'b1),
        .D(sig00000008),
        .Q(sig00000048),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000312
       (.C(clk),
        .CE(1'b1),
        .D(sig00000007),
        .Q(sig00000047),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000313
       (.C(clk),
        .CE(1'b1),
        .D(sig00000006),
        .Q(sig00000046),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000314
       (.C(clk),
        .CE(1'b1),
        .D(sig00000005),
        .Q(sig00000045),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000315
       (.C(clk),
        .CE(1'b1),
        .D(sig00000004),
        .Q(sig00000044),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000316
       (.C(clk),
        .CE(1'b1),
        .D(sig0000001c),
        .Q(sig00000043),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000317
       (.C(clk),
        .CE(1'b1),
        .D(sig0000001d),
        .Q(sig00000042),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000318
       (.C(clk),
        .CE(1'b1),
        .D(sig000000a0),
        .Q(sig00000515),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000319
       (.C(clk),
        .CE(1'b1),
        .D(sig000000a1),
        .Q(sig00000516),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000031a
       (.C(clk),
        .CE(1'b1),
        .D(sig000000a2),
        .Q(sig00000517),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000031b
       (.C(clk),
        .CE(1'b1),
        .D(sig000000a3),
        .Q(sig00000518),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000031c
       (.C(clk),
        .CE(1'b1),
        .D(sig000000a4),
        .Q(sig00000519),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000031d
       (.C(clk),
        .CE(1'b1),
        .D(sig000000a5),
        .Q(sig0000051a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000031e
       (.C(clk),
        .CE(1'b1),
        .D(sig000000a6),
        .Q(sig0000051b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000031f
       (.C(clk),
        .CE(1'b1),
        .D(sig000000a7),
        .Q(sig0000051c),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000320_CARRY4
       (.CI(1'b0),
        .CO({sig000004f9,sig000004f8,sig000004f7,sig000004f6}),
        .CYINIT(sig0000051d),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({sig00000023,sig00000022,sig00000021,sig00000020}),
        .S({sig00000589,sig00000588,sig00000587,sig00000586}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000328_CARRY4
       (.CI(sig000004f9),
        .CO({sig000004fd,sig000004fc,sig000004fb,sig000004fa}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({sig00000027,sig00000026,sig00000025,sig00000024}),
        .S({sig0000058d,sig0000058c,sig0000058b,sig0000058a}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000330_CARRY4
       (.CI(sig000004fd),
        .CO(NLW_blk00000330_CARRY4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI(NLW_blk00000330_CARRY4_DI_UNCONNECTED[3:0]),
        .O(NLW_blk00000330_CARRY4_O_UNCONNECTED[3:0]),
        .S({NLW_blk00000330_CARRY4_S_UNCONNECTED[3:1],1'b0}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000331_CARRY4
       (.CI(1'b0),
        .CO({sig00000523,sig00000522,sig00000521,sig00000520}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b1,1'b1,1'b0}),
        .O(NLW_blk00000331_CARRY4_O_UNCONNECTED[3:0]),
        .S({sig00000526,sig0000058e,sig00000525,sig00000527}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000335_CARRY4
       (.CI(sig00000523),
        .CO({sig0000053c,sig0000053e,sig0000051f,sig00000524}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b1,1'b0}),
        .O({sig0000053b,sig0000053d,NLW_blk00000335_CARRY4_O_UNCONNECTED[1:0]}),
        .S({sig0000050a,sig00000509,1'b1,1'b1}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000033a_CARRY4
       (.CI(sig0000052c),
        .CO({sig00000553,sig00000555,sig0000051e,sig0000052a}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({sig00000552,sig00000554,sig00000528,sig00000529}),
        .S({sig000004ff,sig000004fe,sig00000514,sig00000513}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000342_CARRY4
       (.CI(sig00000534),
        .CO({sig0000052c,sig0000052e,sig00000530,sig00000532}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({sig0000052b,sig0000052d,sig0000052f,sig00000531}),
        .S({sig00000512,sig00000511,sig00000510,sig0000050f}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000034a_CARRY4
       (.CI(sig0000053c),
        .CO({sig00000534,sig00000536,sig00000538,sig0000053a}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({sig00000533,sig00000535,sig00000537,sig00000539}),
        .S({sig0000050e,sig0000050d,sig0000050c,sig0000050b}));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000034f
       (.C(clk),
        .CE(1'b1),
        .D(sig0000053d),
        .Q(sig00000028),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000350
       (.C(clk),
        .CE(1'b1),
        .D(sig0000053b),
        .Q(sig00000029),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000351
       (.C(clk),
        .CE(1'b1),
        .D(sig00000539),
        .Q(sig0000002a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000352
       (.C(clk),
        .CE(1'b1),
        .D(sig00000537),
        .Q(sig0000002b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000353
       (.C(clk),
        .CE(1'b1),
        .D(sig00000535),
        .Q(sig0000002c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000354
       (.C(clk),
        .CE(1'b1),
        .D(sig00000533),
        .Q(sig0000002d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000355
       (.C(clk),
        .CE(1'b1),
        .D(sig00000531),
        .Q(sig0000002e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000356
       (.C(clk),
        .CE(1'b1),
        .D(sig0000052f),
        .Q(sig0000002f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000357
       (.C(clk),
        .CE(1'b1),
        .D(sig0000052d),
        .Q(sig00000030),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000358
       (.C(clk),
        .CE(1'b1),
        .D(sig0000052b),
        .Q(sig00000031),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000359
       (.C(clk),
        .CE(1'b1),
        .D(sig00000529),
        .Q(sig00000032),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000035a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000528),
        .Q(sig00000033),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000035e_CARRY4
       (.CI(sig00000543),
        .CO({NLW_blk0000035e_CARRY4_CO_UNCONNECTED[3:2],sig0000053f,sig00000541}),
        .CYINIT(1'b0),
        .DI({NLW_blk0000035e_CARRY4_DI_UNCONNECTED[3:2],1'b1,1'b0}),
        .O({NLW_blk0000035e_CARRY4_O_UNCONNECTED[3:1],sig00000540}),
        .S({NLW_blk0000035e_CARRY4_S_UNCONNECTED[3:2],1'b1,sig00000508}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000366_CARRY4
       (.CI(sig0000054b),
        .CO({sig00000543,sig00000545,sig00000547,sig00000549}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({sig00000542,sig00000544,sig00000546,sig00000548}),
        .S({sig00000507,sig00000506,sig00000505,sig00000504}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000036e_CARRY4
       (.CI(sig00000553),
        .CO({sig0000054b,sig0000054d,sig0000054f,sig00000551}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({sig0000054a,sig0000054c,sig0000054e,sig00000550}),
        .S({sig00000503,sig00000502,sig00000501,sig00000500}));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000373
       (.C(clk),
        .CE(1'b1),
        .D(sig00000554),
        .Q(sig00000034),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000374
       (.C(clk),
        .CE(1'b1),
        .D(sig00000552),
        .Q(sig00000035),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000375
       (.C(clk),
        .CE(1'b1),
        .D(sig00000550),
        .Q(sig00000036),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000376
       (.C(clk),
        .CE(1'b1),
        .D(sig0000054e),
        .Q(sig00000037),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000377
       (.C(clk),
        .CE(1'b1),
        .D(sig0000054c),
        .Q(sig00000038),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000378
       (.C(clk),
        .CE(1'b1),
        .D(sig0000054a),
        .Q(sig00000039),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000379
       (.C(clk),
        .CE(1'b1),
        .D(sig00000548),
        .Q(sig0000003a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000037a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000546),
        .Q(sig0000003b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000037b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000544),
        .Q(sig0000003c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000037c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000542),
        .Q(sig0000003d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000037d
       (.C(clk),
        .CE(1'b1),
        .D(sig00000540),
        .Q(sig0000003e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000037e
       (.C(clk),
        .CE(1'b1),
        .D(sig0000053f),
        .Q(sig0000051d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000037f
       (.C(clk),
        .CE(1'b1),
        .D(sig0000056c),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/mant_op [22]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000380
       (.C(clk),
        .CE(1'b1),
        .D(sig0000056b),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/mant_op [21]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000381
       (.C(clk),
        .CE(1'b1),
        .D(sig0000056a),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/mant_op [20]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000382
       (.C(clk),
        .CE(1'b1),
        .D(sig00000569),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/mant_op [19]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000383
       (.C(clk),
        .CE(1'b1),
        .D(sig00000568),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/mant_op [18]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000384
       (.C(clk),
        .CE(1'b1),
        .D(sig00000567),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/mant_op [17]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000385
       (.C(clk),
        .CE(1'b1),
        .D(sig00000566),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/mant_op [16]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000386
       (.C(clk),
        .CE(1'b1),
        .D(sig00000565),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/mant_op [15]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000387
       (.C(clk),
        .CE(1'b1),
        .D(sig00000564),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/mant_op [14]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000388
       (.C(clk),
        .CE(1'b1),
        .D(sig00000563),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/mant_op [13]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000389
       (.C(clk),
        .CE(1'b1),
        .D(sig00000562),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/mant_op [12]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000038a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000561),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/mant_op [11]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000038b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000560),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/mant_op [10]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000038c
       (.C(clk),
        .CE(1'b1),
        .D(sig0000055f),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/mant_op [9]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000038d
       (.C(clk),
        .CE(1'b1),
        .D(sig0000055e),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/mant_op [8]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000038e
       (.C(clk),
        .CE(1'b1),
        .D(sig0000055d),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/mant_op [7]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000038f
       (.C(clk),
        .CE(1'b1),
        .D(sig0000055c),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/mant_op [6]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000390
       (.C(clk),
        .CE(1'b1),
        .D(sig0000055b),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/mant_op [5]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000391
       (.C(clk),
        .CE(1'b1),
        .D(sig0000055a),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/mant_op [4]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000392
       (.C(clk),
        .CE(1'b1),
        .D(sig00000559),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/mant_op [3]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000393
       (.C(clk),
        .CE(1'b1),
        .D(sig00000558),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/mant_op [2]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000394
       (.C(clk),
        .CE(1'b1),
        .D(sig00000557),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/mant_op [1]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000395
       (.C(clk),
        .CE(1'b1),
        .D(sig00000556),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/mant_op [0]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000396
       (.C(clk),
        .CE(1'b1),
        .D(sig00000574),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/exp_op [7]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000397
       (.C(clk),
        .CE(1'b1),
        .D(sig00000573),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/exp_op [6]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000398
       (.C(clk),
        .CE(1'b1),
        .D(sig00000572),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/exp_op [5]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000399
       (.C(clk),
        .CE(1'b1),
        .D(sig00000571),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/exp_op [4]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000039a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000570),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/exp_op [3]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000039b
       (.C(clk),
        .CE(1'b1),
        .D(sig0000056f),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/exp_op [2]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000039c
       (.C(clk),
        .CE(1'b1),
        .D(sig0000056e),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/exp_op [1]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000039d
       (.C(clk),
        .CE(1'b1),
        .D(sig0000056d),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/exp_op [0]),
        .R(1'b0));
  (* PK_HLUTNM = "___XLNM___11___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_norm_dist_lsbs_up_sel11" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h2722)) 
    blk0000039e
       (.I0(sig0000009a),
        .I1(sig000004d6),
        .I2(sig00000097),
        .I3(sig00000096),
        .O(sig00000001));
  (* PK_HLUTNM = "___XLNM___11___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_norm_dist_lsbs_up_sel11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h01)) 
    blk0000039f
       (.I0(sig0000009a),
        .I1(sig00000097),
        .I2(sig00000096),
        .O(sig00000002));
  (* PK_HLUTNM = "___XLNM___56___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>110" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk000003a0
       (.I0(sig0000009a),
        .I1(sig0000007d),
        .O(sig0000001d));
  (* PK_HLUTNM = "___XLNM___61___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>27" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003a1
       (.I0(sig0000009a),
        .I1(sig00000087),
        .I2(sig00000068),
        .O(sig0000000c));
  (* PK_HLUTNM = "___XLNM___60___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>31" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003a2
       (.I0(sig0000009a),
        .I1(sig00000088),
        .I2(sig00000069),
        .O(sig0000000d));
  (* PK_HLUTNM = "___XLNM___60___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>31" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003a3
       (.I0(sig0000009a),
        .I1(sig00000089),
        .I2(sig0000006a),
        .O(sig0000000e));
  (* PK_HLUTNM = "___XLNM___59___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>51" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003a4
       (.I0(sig0000009a),
        .I1(sig0000008a),
        .I2(sig0000006b),
        .O(sig0000000f));
  (* PK_HLUTNM = "___XLNM___59___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>51" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003a5
       (.I0(sig0000009a),
        .I1(sig0000008b),
        .I2(sig0000006c),
        .O(sig00000010));
  (* PK_HLUTNM = "___XLNM___58___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>71" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003a6
       (.I0(sig0000009a),
        .I1(sig0000008c),
        .I2(sig0000006d),
        .O(sig00000011));
  (* PK_HLUTNM = "___XLNM___58___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>71" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003a7
       (.I0(sig0000009a),
        .I1(sig0000008d),
        .I2(sig0000006e),
        .O(sig00000012));
  (* PK_HLUTNM = "___XLNM___57___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>91" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003a8
       (.I0(sig0000009a),
        .I1(sig0000008e),
        .I2(sig0000006f),
        .O(sig00000013));
  (* PK_HLUTNM = "___XLNM___56___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>110" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003a9
       (.I0(sig0000009a),
        .I1(sig0000008f),
        .I2(sig00000070),
        .O(sig00000014));
  (* PK_HLUTNM = "___XLNM___55___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>111" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003aa
       (.I0(sig0000009a),
        .I1(sig00000090),
        .I2(sig00000071),
        .O(sig00000015));
  (* PK_HLUTNM = "___XLNM___55___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>111" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003ab
       (.I0(sig0000009a),
        .I1(sig0000007e),
        .I2(sig0000005f),
        .O(sig0000001c));
  (* PK_HLUTNM = "___XLNM___54___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>131" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003ac
       (.I0(sig0000009a),
        .I1(sig00000091),
        .I2(sig00000072),
        .O(sig00000016));
  (* PK_HLUTNM = "___XLNM___54___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>131" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003ad
       (.I0(sig0000009a),
        .I1(sig00000092),
        .I2(sig00000073),
        .O(sig00000017));
  (* PK_HLUTNM = "___XLNM___53___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>151" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003ae
       (.I0(sig0000009a),
        .I1(sig00000093),
        .I2(sig00000074),
        .O(sig00000018));
  (* PK_HLUTNM = "___XLNM___53___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>151" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003af
       (.I0(sig0000009a),
        .I1(sig00000094),
        .I2(sig00000075),
        .O(sig00000019));
  (* PK_HLUTNM = "___XLNM___52___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>171" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003b0
       (.I0(sig0000009a),
        .I1(sig00000095),
        .I2(sig00000076),
        .O(sig0000001a));
  (* PK_HLUTNM = "___XLNM___61___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>27" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003b1
       (.I0(sig0000009a),
        .I1(sig00000096),
        .I2(sig00000077),
        .O(sig0000001b));
  (* PK_HLUTNM = "___XLNM___52___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>171" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003b2
       (.I0(sig0000009a),
        .I1(sig0000007f),
        .I2(sig00000060),
        .O(sig00000004));
  (* PK_HLUTNM = "___XLNM___57___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>91" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003b3
       (.I0(sig0000009a),
        .I1(sig00000080),
        .I2(sig00000061),
        .O(sig00000005));
  (* PK_HLUTNM = "___XLNM___51___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>211" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003b4
       (.I0(sig0000009a),
        .I1(sig00000081),
        .I2(sig00000062),
        .O(sig00000006));
  (* PK_HLUTNM = "___XLNM___51___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>211" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003b5
       (.I0(sig0000009a),
        .I1(sig00000082),
        .I2(sig00000063),
        .O(sig00000007));
  (* PK_HLUTNM = "___XLNM___50___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>231" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003b6
       (.I0(sig0000009a),
        .I1(sig00000083),
        .I2(sig00000064),
        .O(sig00000008));
  (* PK_HLUTNM = "___XLNM___50___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>231" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003b7
       (.I0(sig0000009a),
        .I1(sig00000084),
        .I2(sig00000065),
        .O(sig00000009));
  (* PK_HLUTNM = "___XLNM___49___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>251" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003b8
       (.I0(sig0000009a),
        .I1(sig00000085),
        .I2(sig00000066),
        .O(sig0000000a));
  (* PK_HLUTNM = "___XLNM___49___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>251" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003b9
       (.I0(sig0000009a),
        .I1(sig00000086),
        .I2(sig00000067),
        .O(sig0000000b));
  (* PK_HLUTNM = "___XLNM___62___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_zeros_sel11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'hE)) 
    blk000003ba
       (.I0(sig0000009a),
        .I1(sig0000007c),
        .O(sig0000001e));
  (* PK_HLUTNM = "___XLNM___62___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_zeros_sel11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000003bb
       (.I0(sig0000009a),
        .I1(sig0000005c),
        .O(sig0000001f));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hD78282D7)) 
    blk000003bc
       (.I0(sig00000139),
        .I1(sig00000149),
        .I2(sig000000af),
        .I3(sig00000151),
        .I4(sig000000b0),
        .O(sig000000f1));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h7F)) 
    blk000003bd
       (.I0(sig00000146),
        .I1(sig00000147),
        .I2(sig00000148),
        .O(sig000000af));
  (* PK_HLUTNM = "___XLNM___24___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/EXP/exp_align<3>21" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h7F)) 
    blk000003be
       (.I0(sig0000014e),
        .I1(sig0000014f),
        .I2(sig00000150),
        .O(sig000000b0));
  (* PK_HLUTNM = "___XLNM___45___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/EXP/Mmux_add_sign_mux11" *) 
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEEFE2202)) 
    blk000003bf
       (.I0(sig00000145),
        .I1(sig00000099),
        .I2(sig0000005e),
        .I3(sig00000156),
        .I4(sig00000144),
        .O(sig00000110));
  (* PK_HLUTNM = "___XLNM___10___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/EXP/Madd_exp_align_xor<1>11" *) 
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h287D7D28)) 
    blk000003c0
       (.I0(sig00000139),
        .I1(sig00000146),
        .I2(sig00000147),
        .I3(sig0000014e),
        .I4(sig0000014f),
        .O(sig000000ef));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h54)) 
    blk000003c1
       (.I0(sig0000013f),
        .I1(sig0000013e),
        .I2(sig0000013c),
        .O(sig00000108));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h95)) 
    blk000003c2
       (.I0(sig00000126),
        .I1(sig00000079),
        .I2(sig0000009a),
        .O(sig000000e7));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h95)) 
    blk000003c3
       (.I0(sig00000127),
        .I1(sig0000007a),
        .I2(sig0000009a),
        .O(sig000000e8));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h2AAA)) 
    blk000003c4
       (.I0(sig00000098),
        .I1(sig0000013a),
        .I2(sig00000175),
        .I3(sig00000123),
        .O(sig000000fd));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h4444444E4444444C)) 
    blk000003c5
       (.I0(sig00000123),
        .I1(sig0000010d),
        .I2(sig00000175),
        .I3(sig00000119),
        .I4(sig00000118),
        .I5(sig00000117),
        .O(sig00000104));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFFFFFFFFAAAAAAA8)) 
    blk000003c6
       (.I0(sig00000123),
        .I1(sig00000175),
        .I2(sig00000117),
        .I3(sig00000119),
        .I4(sig00000118),
        .I5(sig0000010c),
        .O(sig00000103));
  (* PK_HLUTNM = "___XLNM___10___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/EXP/Madd_exp_align_xor<1>11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h1B)) 
    blk000003c7
       (.I0(sig00000139),
        .I1(sig0000014e),
        .I2(sig00000146),
        .O(sig000000ee));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk000003c8
       (.I0(sig000000d0),
        .I1(sig000000dc),
        .I2(sig000000d9),
        .O(sig0000010e));
  (* PK_HLUTNM = "___XLNM___45___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/EXP/Mmux_add_sign_mux11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000003c9
       (.I0(sig00000145),
        .I1(sig00000144),
        .O(sig0000010f));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h01)) 
    blk000003ca
       (.I0(b[20]),
        .I1(b[21]),
        .I2(b[22]),
        .O(sig000000bd));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h0001)) 
    blk000003cb
       (.I0(b[0]),
        .I1(b[1]),
        .I2(b[2]),
        .I3(b[3]),
        .O(sig000000be));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h0001)) 
    blk000003cc
       (.I0(b[4]),
        .I1(b[5]),
        .I2(b[6]),
        .I3(b[7]),
        .O(sig000000bf));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h0001)) 
    blk000003cd
       (.I0(b[8]),
        .I1(b[9]),
        .I2(b[10]),
        .I3(b[11]),
        .O(sig000000c0));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h0001)) 
    blk000003ce
       (.I0(b[12]),
        .I1(b[13]),
        .I2(b[14]),
        .I3(b[15]),
        .O(sig000000c1));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h0001)) 
    blk000003cf
       (.I0(b[16]),
        .I1(b[17]),
        .I2(b[18]),
        .I3(b[19]),
        .O(sig000000c2));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h01)) 
    blk000003d0
       (.I0(a[20]),
        .I1(a[21]),
        .I2(a[22]),
        .O(sig000000c3));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h0001)) 
    blk000003d1
       (.I0(a[0]),
        .I1(a[1]),
        .I2(a[2]),
        .I3(a[3]),
        .O(sig000000c4));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h0001)) 
    blk000003d2
       (.I0(a[4]),
        .I1(a[5]),
        .I2(a[6]),
        .I3(a[7]),
        .O(sig000000c5));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h0001)) 
    blk000003d3
       (.I0(a[8]),
        .I1(a[9]),
        .I2(a[10]),
        .I3(a[11]),
        .O(sig000000c6));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h0001)) 
    blk000003d4
       (.I0(a[12]),
        .I1(a[13]),
        .I2(a[14]),
        .I3(a[15]),
        .O(sig000000c7));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h0001)) 
    blk000003d5
       (.I0(a[16]),
        .I1(a[17]),
        .I2(a[18]),
        .I3(a[19]),
        .O(sig000000c8));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003d6
       (.I0(sig00000099),
        .I1(sig00000166),
        .I2(sig00000157),
        .O(sig000000f6));
  (* PK_HLUTNM = "___XLNM___68___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/EXP/Mmux_abs_exp_mux31" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003d7
       (.I0(sig00000099),
        .I1(sig00000167),
        .I2(sig00000158),
        .O(sig000000f7));
  (* PK_HLUTNM = "___XLNM___68___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/EXP/Mmux_abs_exp_mux31" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003d8
       (.I0(sig00000099),
        .I1(sig00000168),
        .I2(sig00000159),
        .O(sig000000f8));
  (* PK_HLUTNM = "___XLNM___67___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/EXP/Mmux_abs_exp_mux51" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003d9
       (.I0(sig00000099),
        .I1(sig00000169),
        .I2(sig0000015a),
        .O(sig000000f9));
  (* PK_HLUTNM = "___XLNM___67___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/EXP/Mmux_abs_exp_mux51" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003da
       (.I0(sig00000099),
        .I1(sig0000016a),
        .I2(sig0000015b),
        .O(sig000000fa));
  (* PK_HLUTNM = "___XLNM___66___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/EXP/Mmux_abs_exp_mux71" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003db
       (.I0(sig00000099),
        .I1(sig0000016b),
        .I2(sig0000015c),
        .O(sig000000fb));
  (* PK_HLUTNM = "___XLNM___66___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/EXP/Mmux_abs_exp_mux71" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003dc
       (.I0(sig00000099),
        .I1(sig0000016c),
        .I2(sig0000015d),
        .O(sig000000fc));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h20)) 
    blk000003dd
       (.I0(sig00000123),
        .I1(sig00000175),
        .I2(sig00000117),
        .O(sig00000101));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h20)) 
    blk000003de
       (.I0(sig00000123),
        .I1(sig00000175),
        .I2(sig00000119),
        .O(sig00000100));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h20)) 
    blk000003df
       (.I0(sig00000123),
        .I1(sig00000175),
        .I2(sig00000116),
        .O(sig000000ff));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h20)) 
    blk000003e0
       (.I0(sig00000123),
        .I1(sig00000175),
        .I2(sig00000118),
        .O(sig000000fe));
  (* PK_HLUTNM = "___XLNM___69___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/EXP/Mxor_subtract_ip_xo<0>1" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk000003e1
       (.I0(a[23]),
        .I1(b[23]),
        .O(sig00000102));
  (* PK_HLUTNM = "___XLNM___69___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/EXP/Mxor_subtract_ip_xo<0>1" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk000003e2
       (.I0(a[31]),
        .I1(b[31]),
        .O(sig000000e3));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h8000)) 
    blk000003e3
       (.I0(b[23]),
        .I1(b[24]),
        .I2(b[25]),
        .I3(b[26]),
        .O(sig000000d1));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h8000)) 
    blk000003e4
       (.I0(b[27]),
        .I1(b[28]),
        .I2(b[29]),
        .I3(b[30]),
        .O(sig000000d2));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h8000)) 
    blk000003e5
       (.I0(a[23]),
        .I1(a[24]),
        .I2(a[25]),
        .I3(a[26]),
        .O(sig000000d5));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h8000)) 
    blk000003e6
       (.I0(a[27]),
        .I1(a[28]),
        .I2(a[29]),
        .I3(a[30]),
        .O(sig000000d6));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h0001)) 
    blk000003e7
       (.I0(b[23]),
        .I1(b[24]),
        .I2(b[25]),
        .I3(b[26]),
        .O(sig000000df));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h0001)) 
    blk000003e8
       (.I0(b[27]),
        .I1(b[28]),
        .I2(b[29]),
        .I3(b[30]),
        .O(sig000000e0));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h0001)) 
    blk000003e9
       (.I0(a[23]),
        .I1(a[24]),
        .I2(a[25]),
        .I3(a[26]),
        .O(sig000000e1));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h0001)) 
    blk000003ea
       (.I0(a[27]),
        .I1(a[28]),
        .I2(a[29]),
        .I3(a[30]),
        .O(sig000000e2));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h1)) 
    blk000003eb
       (.I0(sig0000012f),
        .I1(sig0000012e),
        .O(sig000000e4));
  (* PK_HLUTNM = "___XLNM___46___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/EXP/ZERO_SMALLEST1" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'hE)) 
    blk000003ec
       (.I0(sig000000dc),
        .I1(sig000000d9),
        .O(sig0000009e));
  (* PK_HLUTNM = "___XLNM___46___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/EXP/ZERO_SMALLEST1" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000003ed
       (.I0(sig000000dc),
        .I1(sig000000d9),
        .O(sig0000009f));
  (* PK_HLUTNM = "___XLNM___0___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[0].shifted_temp110" *) 
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hE6C4A280)) 
    blk000003ee
       (.I0(sig000000ab),
        .I1(sig000000aa),
        .I2(sig00000241),
        .I3(sig00000239),
        .I4(sig00000231),
        .O(sig000001f2));
  (* PK_HLUTNM = "___XLNM___13___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[0].shifted_temp81" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h5410)) 
    blk000003ef
       (.I0(sig000000ab),
        .I1(sig000000aa),
        .I2(sig00000239),
        .I3(sig00000241),
        .O(sig000001e2));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk000003f0
       (.I0(sig000000aa),
        .I1(sig000000ab),
        .I2(sig00000232),
        .I3(sig00000242),
        .I4(sig0000023a),
        .I5(sig0000022a),
        .O(sig000001f1));
  (* PK_HLUTNM = "___XLNM___3___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[0].shifted_temp91" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h5410)) 
    blk000003f1
       (.I0(sig000000ab),
        .I1(sig000000aa),
        .I2(sig0000023a),
        .I3(sig00000242),
        .O(sig000001e1));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk000003f2
       (.I0(sig0000009d),
        .I1(sig00000099),
        .I2(sig0000026c),
        .I3(sig00000283),
        .I4(sig00000282),
        .I5(sig0000026b),
        .O(sig0000029a));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk000003f3
       (.I0(sig0000009d),
        .I1(sig00000099),
        .I2(sig0000026d),
        .I3(sig00000284),
        .I4(sig00000283),
        .I5(sig0000026c),
        .O(sig0000029b));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk000003f4
       (.I0(sig0000009d),
        .I1(sig00000099),
        .I2(sig0000026b),
        .I3(sig00000282),
        .I4(sig00000281),
        .I5(sig0000026a),
        .O(sig00000299));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk000003f5
       (.I0(sig0000009d),
        .I1(sig00000099),
        .I2(sig0000026a),
        .I3(sig00000281),
        .I4(sig00000280),
        .I5(sig00000269),
        .O(sig00000298));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk000003f6
       (.I0(sig0000009d),
        .I1(sig00000099),
        .I2(sig0000025c),
        .I3(sig00000273),
        .I4(sig00000272),
        .I5(sig0000025b),
        .O(sig0000028a));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk000003f7
       (.I0(sig0000009d),
        .I1(sig00000099),
        .I2(sig0000025d),
        .I3(sig00000274),
        .I4(sig00000273),
        .I5(sig0000025c),
        .O(sig0000028b));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk000003f8
       (.I0(sig0000009d),
        .I1(sig00000099),
        .I2(sig00000269),
        .I3(sig00000280),
        .I4(sig0000027f),
        .I5(sig00000268),
        .O(sig00000297));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk000003f9
       (.I0(sig0000009d),
        .I1(sig00000099),
        .I2(sig00000268),
        .I3(sig0000027f),
        .I4(sig0000027e),
        .I5(sig00000267),
        .O(sig00000296));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk000003fa
       (.I0(sig0000009d),
        .I1(sig00000099),
        .I2(sig00000267),
        .I3(sig0000027e),
        .I4(sig0000027d),
        .I5(sig00000266),
        .O(sig00000295));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk000003fb
       (.I0(sig0000009d),
        .I1(sig00000099),
        .I2(sig00000265),
        .I3(sig0000027c),
        .I4(sig0000027b),
        .I5(sig00000264),
        .O(sig00000293));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk000003fc
       (.I0(sig0000009d),
        .I1(sig00000099),
        .I2(sig00000266),
        .I3(sig0000027d),
        .I4(sig0000027c),
        .I5(sig00000265),
        .O(sig00000294));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk000003fd
       (.I0(sig0000009d),
        .I1(sig00000099),
        .I2(sig00000264),
        .I3(sig0000027b),
        .I4(sig0000027a),
        .I5(sig00000263),
        .O(sig00000292));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk000003fe
       (.I0(sig0000009d),
        .I1(sig00000099),
        .I2(sig00000263),
        .I3(sig0000027a),
        .I4(sig00000279),
        .I5(sig00000262),
        .O(sig00000291));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk000003ff
       (.I0(sig0000009d),
        .I1(sig00000099),
        .I2(sig00000262),
        .I3(sig00000279),
        .I4(sig00000278),
        .I5(sig00000261),
        .O(sig00000290));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk00000400
       (.I0(sig0000009d),
        .I1(sig00000099),
        .I2(sig00000261),
        .I3(sig00000278),
        .I4(sig00000277),
        .I5(sig00000260),
        .O(sig0000028f));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk00000401
       (.I0(sig0000009d),
        .I1(sig00000099),
        .I2(sig00000260),
        .I3(sig00000277),
        .I4(sig00000276),
        .I5(sig0000025f),
        .O(sig0000028e));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'hA820)) 
    blk00000402
       (.I0(sig0000009d),
        .I1(sig00000099),
        .I2(sig0000025b),
        .I3(sig00000272),
        .O(sig00000289));
  (* PK_HLUTNM = "___XLNM___29___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/Mmux_smallest_z_mux161" *) 
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hFBEA5140)) 
    blk00000403
       (.I0(sig0000009d),
        .I1(sig00000099),
        .I2(sig00000288),
        .I3(sig00000271),
        .I4(sig000002cc),
        .O(sig000002a0));
  (* PK_HLUTNM = "___XLNM___29___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/Mmux_smallest_z_mux161" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk00000404
       (.I0(sig0000009d),
        .I1(sig000002cc),
        .O(sig000002a1));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk00000405
       (.I0(sig0000009d),
        .I1(sig00000099),
        .I2(sig00000271),
        .I3(sig00000288),
        .I4(sig00000287),
        .I5(sig00000270),
        .O(sig0000029f));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk00000406
       (.I0(sig0000009d),
        .I1(sig00000099),
        .I2(sig00000270),
        .I3(sig00000287),
        .I4(sig00000286),
        .I5(sig0000026f),
        .O(sig0000029e));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk00000407
       (.I0(sig0000009d),
        .I1(sig00000099),
        .I2(sig0000026f),
        .I3(sig00000286),
        .I4(sig00000285),
        .I5(sig0000026e),
        .O(sig0000029d));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk00000408
       (.I0(sig0000009d),
        .I1(sig00000099),
        .I2(sig0000025f),
        .I3(sig00000276),
        .I4(sig00000275),
        .I5(sig0000025e),
        .O(sig0000028d));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk00000409
       (.I0(sig0000009d),
        .I1(sig00000099),
        .I2(sig0000026e),
        .I3(sig00000285),
        .I4(sig00000284),
        .I5(sig0000026d),
        .O(sig0000029c));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk0000040a
       (.I0(sig0000009d),
        .I1(sig00000099),
        .I2(sig0000025e),
        .I3(sig00000275),
        .I4(sig00000274),
        .I5(sig0000025d),
        .O(sig0000028c));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk0000040b
       (.I0(sig000001d8),
        .I1(sig000001d7),
        .I2(sig000001c3),
        .I3(sig000001bf),
        .I4(sig000001c1),
        .I5(sig000001c5),
        .O(sig000001fb));
  (* PK_HLUTNM = "___XLNM___2___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[1].shifted_temp141" *) 
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h73625140)) 
    blk0000040c
       (.I0(sig000001d7),
        .I1(sig000001d8),
        .I2(sig000001bf),
        .I3(sig000001c1),
        .I4(sig000001bd),
        .O(sig000001f7));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk0000040d
       (.I0(sig000001d8),
        .I1(sig000001d7),
        .I2(sig000001c4),
        .I3(sig000001c0),
        .I4(sig000001c2),
        .I5(sig000001c6),
        .O(sig000001fc));
  (* PK_HLUTNM = "___XLNM___1___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[1].shifted_temp131" *) 
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h73625140)) 
    blk0000040e
       (.I0(sig000001d7),
        .I1(sig000001d8),
        .I2(sig000001c0),
        .I3(sig000001c2),
        .I4(sig000001be),
        .O(sig000001f8));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk0000040f
       (.I0(sig000001d8),
        .I1(sig000001d7),
        .I2(sig000001c5),
        .I3(sig000001c1),
        .I4(sig000001c3),
        .I5(sig000001c7),
        .O(sig000001fd));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk00000410
       (.I0(sig000001d8),
        .I1(sig000001d7),
        .I2(sig000001c1),
        .I3(sig000001bd),
        .I4(sig000001bf),
        .I5(sig000001c3),
        .O(sig000001f9));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk00000411
       (.I0(sig000001d8),
        .I1(sig000001d7),
        .I2(sig000001c6),
        .I3(sig000001c2),
        .I4(sig000001c4),
        .I5(sig000001c8),
        .O(sig000001fe));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk00000412
       (.I0(sig000001d8),
        .I1(sig000001d7),
        .I2(sig000001c2),
        .I3(sig000001be),
        .I4(sig000001c0),
        .I5(sig000001c4),
        .O(sig000001fa));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk00000413
       (.I0(sig000001d8),
        .I1(sig000001d7),
        .I2(sig000001c7),
        .I3(sig000001c3),
        .I4(sig000001c5),
        .I5(sig000001c9),
        .O(sig000001ff));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk00000414
       (.I0(sig000001d8),
        .I1(sig000001d7),
        .I2(sig000001c8),
        .I3(sig000001c4),
        .I4(sig000001c6),
        .I5(sig000001ca),
        .O(sig00000200));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk00000415
       (.I0(sig000001d8),
        .I1(sig000001d7),
        .I2(sig000001c9),
        .I3(sig000001c5),
        .I4(sig000001c7),
        .I5(sig000001cb),
        .O(sig00000201));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk00000416
       (.I0(sig000001d8),
        .I1(sig000001d7),
        .I2(sig000001d0),
        .I3(sig000001cc),
        .I4(sig000001ce),
        .I5(sig000001d2),
        .O(sig00000208));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk00000417
       (.I0(sig000001d8),
        .I1(sig000001d7),
        .I2(sig000001d4),
        .I3(sig000001d0),
        .I4(sig000001d2),
        .I5(sig000001d6),
        .O(sig0000020c));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk00000418
       (.I0(sig000001d8),
        .I1(sig000001d7),
        .I2(sig000001cb),
        .I3(sig000001c7),
        .I4(sig000001c9),
        .I5(sig000001cd),
        .O(sig00000203));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk00000419
       (.I0(sig000001d8),
        .I1(sig000001d7),
        .I2(sig000001ca),
        .I3(sig000001c6),
        .I4(sig000001c8),
        .I5(sig000001cc),
        .O(sig00000202));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk0000041a
       (.I0(sig000001d8),
        .I1(sig000001d7),
        .I2(sig000001cc),
        .I3(sig000001c8),
        .I4(sig000001ca),
        .I5(sig000001ce),
        .O(sig00000204));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk0000041b
       (.I0(sig000001d8),
        .I1(sig000001d7),
        .I2(sig000001cd),
        .I3(sig000001c9),
        .I4(sig000001cb),
        .I5(sig000001cf),
        .O(sig00000205));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk0000041c
       (.I0(sig000001d8),
        .I1(sig000001d7),
        .I2(sig000001ce),
        .I3(sig000001ca),
        .I4(sig000001cc),
        .I5(sig000001d0),
        .O(sig00000206));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk0000041d
       (.I0(sig000001d8),
        .I1(sig000001d7),
        .I2(sig000001cf),
        .I3(sig000001cb),
        .I4(sig000001cd),
        .I5(sig000001d1),
        .O(sig00000207));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk0000041e
       (.I0(sig000001d8),
        .I1(sig000001d7),
        .I2(sig000001d1),
        .I3(sig000001cd),
        .I4(sig000001cf),
        .I5(sig000001d3),
        .O(sig00000209));
  (* PK_HLUTNM = "___XLNM___2___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[1].shifted_temp141" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h5410)) 
    blk0000041f
       (.I0(sig000001d7),
        .I1(sig000001d8),
        .I2(sig000001bf),
        .I3(sig000001bd),
        .O(sig000001f5));
  (* PK_HLUTNM = "___XLNM___1___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[1].shifted_temp131" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h5410)) 
    blk00000420
       (.I0(sig000001d7),
        .I1(sig000001d8),
        .I2(sig000001c0),
        .I3(sig000001be),
        .O(sig000001f6));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk00000421
       (.I0(sig000001d8),
        .I1(sig000001d7),
        .I2(sig000001d2),
        .I3(sig000001ce),
        .I4(sig000001d0),
        .I5(sig000001d4),
        .O(sig0000020a));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk00000422
       (.I0(sig000001d8),
        .I1(sig000001d7),
        .I2(sig000001d3),
        .I3(sig000001cf),
        .I4(sig000001d1),
        .I5(sig000001d5),
        .O(sig0000020b));
  (* PK_HLUTNM = "___XLNM___9___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[0].shifted_temp27" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h5410)) 
    blk00000423
       (.I0(sig000000ab),
        .I1(sig000000aa),
        .I2(sig00000233),
        .I3(sig0000023b),
        .O(sig000001e8));
  (* PK_HLUTNM = "___XLNM___8___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[0].shifted_temp31" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h5410)) 
    blk00000424
       (.I0(sig000000ab),
        .I1(sig000000aa),
        .I2(sig00000234),
        .I3(sig0000023c),
        .O(sig000001e7));
  (* PK_HLUTNM = "___XLNM___7___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[0].shifted_temp41" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h5410)) 
    blk00000425
       (.I0(sig000000ab),
        .I1(sig000000aa),
        .I2(sig00000235),
        .I3(sig0000023d),
        .O(sig000001e6));
  (* PK_HLUTNM = "___XLNM___6___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[0].shifted_temp51" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h5410)) 
    blk00000426
       (.I0(sig000000ab),
        .I1(sig000000aa),
        .I2(sig00000236),
        .I3(sig0000023e),
        .O(sig000001e5));
  (* PK_HLUTNM = "___XLNM___5___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[0].shifted_temp61" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h5410)) 
    blk00000427
       (.I0(sig000000ab),
        .I1(sig000000aa),
        .I2(sig00000237),
        .I3(sig0000023f),
        .O(sig000001e4));
  (* PK_HLUTNM = "___XLNM___4___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[0].shifted_temp71" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h5410)) 
    blk00000428
       (.I0(sig000000ab),
        .I1(sig000000aa),
        .I2(sig00000238),
        .I3(sig00000240),
        .O(sig000001e3));
  (* PK_HLUTNM = "___XLNM___9___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[0].shifted_temp27" *) 
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h73625140)) 
    blk00000429
       (.I0(sig000000ab),
        .I1(sig000000aa),
        .I2(sig00000233),
        .I3(sig0000022b),
        .I4(sig0000023b),
        .O(sig000001f0));
  (* PK_HLUTNM = "___XLNM___8___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[0].shifted_temp31" *) 
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h73625140)) 
    blk0000042a
       (.I0(sig000000ab),
        .I1(sig000000aa),
        .I2(sig00000234),
        .I3(sig0000022c),
        .I4(sig0000023c),
        .O(sig000001ef));
  (* PK_HLUTNM = "___XLNM___7___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[0].shifted_temp41" *) 
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h73625140)) 
    blk0000042b
       (.I0(sig000000ab),
        .I1(sig000000aa),
        .I2(sig00000235),
        .I3(sig0000022d),
        .I4(sig0000023d),
        .O(sig000001ee));
  (* PK_HLUTNM = "___XLNM___6___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[0].shifted_temp51" *) 
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h73625140)) 
    blk0000042c
       (.I0(sig000000ab),
        .I1(sig000000aa),
        .I2(sig00000236),
        .I3(sig0000022e),
        .I4(sig0000023e),
        .O(sig000001ed));
  (* PK_HLUTNM = "___XLNM___5___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[0].shifted_temp61" *) 
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h73625140)) 
    blk0000042d
       (.I0(sig000000ab),
        .I1(sig000000aa),
        .I2(sig00000237),
        .I3(sig0000022f),
        .I4(sig0000023f),
        .O(sig000001ec));
  (* PK_HLUTNM = "___XLNM___4___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[0].shifted_temp71" *) 
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h73625140)) 
    blk0000042e
       (.I0(sig000000ab),
        .I1(sig000000aa),
        .I2(sig00000238),
        .I3(sig00000230),
        .I4(sig00000240),
        .O(sig000001eb));
  (* PK_HLUTNM = "___XLNM___0___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[0].shifted_temp110" *) 
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h73625140)) 
    blk0000042f
       (.I0(sig000000ab),
        .I1(sig000000aa),
        .I2(sig00000239),
        .I3(sig00000231),
        .I4(sig00000241),
        .O(sig000001ea));
  (* PK_HLUTNM = "___XLNM___3___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[0].shifted_temp91" *) 
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h73625140)) 
    blk00000430
       (.I0(sig000000ab),
        .I1(sig000000aa),
        .I2(sig0000023a),
        .I3(sig00000232),
        .I4(sig00000242),
        .O(sig000001e9));
  (* PK_HLUTNM = "___XLNM___25___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[1].shifted_temp171" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk00000431
       (.I0(sig000001be),
        .I1(sig000001d7),
        .I2(sig000001d8),
        .O(sig000001f4));
  (* PK_HLUTNM = "___XLNM___25___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[1].shifted_temp171" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk00000432
       (.I0(sig000001bd),
        .I1(sig000001d7),
        .I2(sig000001d8),
        .O(sig000001f3));
  (* PK_HLUTNM = "___XLNM___27___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[0].shifted_temp101" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk00000433
       (.I0(sig0000023b),
        .I1(sig000000ab),
        .I2(sig000000aa),
        .O(sig000001e0));
  (* PK_HLUTNM = "___XLNM___27___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[0].shifted_temp101" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk00000434
       (.I0(sig0000023c),
        .I1(sig000000ab),
        .I2(sig000000aa),
        .O(sig000001df));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk00000435
       (.I0(sig0000023d),
        .I1(sig000000ab),
        .I2(sig000000aa),
        .O(sig000001de));
  (* PK_HLUTNM = "___XLNM___28___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[0].shifted_temp141" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk00000436
       (.I0(sig0000023e),
        .I1(sig000000ab),
        .I2(sig000000aa),
        .O(sig000001dd));
  (* PK_HLUTNM = "___XLNM___26___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[0].shifted_temp151" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk00000437
       (.I0(sig0000023f),
        .I1(sig000000ab),
        .I2(sig000000aa),
        .O(sig000001dc));
  (* PK_HLUTNM = "___XLNM___26___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[0].shifted_temp151" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk00000438
       (.I0(sig00000240),
        .I1(sig000000ab),
        .I2(sig000000aa),
        .O(sig000001db));
  (* PK_HLUTNM = "___XLNM___13___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[0].shifted_temp81" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk00000439
       (.I0(sig00000241),
        .I1(sig000000ab),
        .I2(sig000000aa),
        .O(sig000001da));
  (* PK_HLUTNM = "___XLNM___28___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[0].shifted_temp141" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk0000043a
       (.I0(sig00000242),
        .I1(sig000000ab),
        .I2(sig000000aa),
        .O(sig000001d9));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'hE)) 
    blk0000043b
       (.I0(sig000002a2),
        .I1(sig000002a3),
        .O(sig00000228));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h1F)) 
    blk0000043c
       (.I0(sig00000242),
        .I1(sig00000241),
        .I2(sig000000a8),
        .O(sig000002c0));
  (* PK_HLUTNM = "___XLNM___65___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_Z_D/Mmux_zero_det_unreg<0><5>11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h1F)) 
    blk0000043d
       (.I0(sig0000023e),
        .I1(sig0000023d),
        .I2(sig000000a8),
        .O(sig000002c1));
  (* PK_HLUTNM = "___XLNM___65___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_Z_D/Mmux_zero_det_unreg<0><5>11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h1F)) 
    blk0000043e
       (.I0(sig0000023a),
        .I1(sig00000239),
        .I2(sig000000a8),
        .O(sig000002c2));
  (* PK_HLUTNM = "___XLNM___64___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_Z_D/Mmux_zero_det_unreg<0><3>11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h1F)) 
    blk0000043f
       (.I0(sig00000236),
        .I1(sig00000235),
        .I2(sig000000a8),
        .O(sig000002c3));
  (* PK_HLUTNM = "___XLNM___64___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_Z_D/Mmux_zero_det_unreg<0><3>11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h1F)) 
    blk00000440
       (.I0(sig00000232),
        .I1(sig00000231),
        .I2(sig000000a8),
        .O(sig000002c4));
  (* PK_HLUTNM = "___XLNM___63___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_Z_D/Mmux_zero_det_unreg<0><1>11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h1F)) 
    blk00000441
       (.I0(sig0000022e),
        .I1(sig0000022d),
        .I2(sig000000a8),
        .O(sig000002c5));
  (* PK_HLUTNM = "___XLNM___63___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_Z_D/Mmux_zero_det_unreg<0><1>11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h7)) 
    blk00000442
       (.I0(sig000000a8),
        .I1(sig0000022a),
        .O(sig000002c6));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h1)) 
    blk00000443
       (.I0(sig00000241),
        .I1(sig00000242),
        .O(sig000002d9));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h0001)) 
    blk00000444
       (.I0(sig0000023d),
        .I1(sig0000023e),
        .I2(sig0000023f),
        .I3(sig00000240),
        .O(sig000002da));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h0001)) 
    blk00000445
       (.I0(sig00000239),
        .I1(sig0000023a),
        .I2(sig0000023b),
        .I3(sig0000023c),
        .O(sig000002db));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h0001)) 
    blk00000446
       (.I0(sig00000235),
        .I1(sig00000236),
        .I2(sig00000237),
        .I3(sig00000238),
        .O(sig000002dc));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h0001)) 
    blk00000447
       (.I0(sig00000231),
        .I1(sig00000232),
        .I2(sig00000233),
        .I3(sig00000234),
        .O(sig000002dd));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h0001)) 
    blk00000448
       (.I0(sig0000022d),
        .I1(sig0000022e),
        .I2(sig0000022f),
        .I3(sig00000230),
        .O(sig000002de));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h01)) 
    blk00000449
       (.I0(sig0000022a),
        .I1(sig0000022b),
        .I2(sig0000022c),
        .O(sig000002df));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h39C6)) 
    blk0000044a
       (.I0(sig00000224),
        .I1(sig00000243),
        .I2(sig00000229),
        .I3(sig0000009b),
        .O(sig000002f7));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h39C6)) 
    blk0000044b
       (.I0(sig00000223),
        .I1(sig00000244),
        .I2(sig00000229),
        .I3(sig0000009b),
        .O(sig000002f8));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h39C6)) 
    blk0000044c
       (.I0(sig00000222),
        .I1(sig00000245),
        .I2(sig00000229),
        .I3(sig0000009b),
        .O(sig000002f9));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h39C6)) 
    blk0000044d
       (.I0(sig00000221),
        .I1(sig00000246),
        .I2(sig00000229),
        .I3(sig0000009b),
        .O(sig000002fa));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h39C6)) 
    blk0000044e
       (.I0(sig00000220),
        .I1(sig00000247),
        .I2(sig00000229),
        .I3(sig0000009b),
        .O(sig000002fb));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h39C6)) 
    blk0000044f
       (.I0(sig0000021f),
        .I1(sig00000248),
        .I2(sig00000229),
        .I3(sig0000009b),
        .O(sig000002fc));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h39C6)) 
    blk00000450
       (.I0(sig0000021e),
        .I1(sig00000249),
        .I2(sig00000229),
        .I3(sig0000009b),
        .O(sig000002fd));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h39C6)) 
    blk00000451
       (.I0(sig0000021d),
        .I1(sig0000024a),
        .I2(sig00000229),
        .I3(sig0000009b),
        .O(sig000002fe));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h39C6)) 
    blk00000452
       (.I0(sig0000021c),
        .I1(sig0000024b),
        .I2(sig00000229),
        .I3(sig0000009b),
        .O(sig000002ff));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h39C6)) 
    blk00000453
       (.I0(sig0000021b),
        .I1(sig0000024c),
        .I2(sig00000229),
        .I3(sig0000009b),
        .O(sig00000300));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h39C6)) 
    blk00000454
       (.I0(sig0000021a),
        .I1(sig0000024d),
        .I2(sig00000229),
        .I3(sig0000009b),
        .O(sig00000301));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h39C6)) 
    blk00000455
       (.I0(sig00000219),
        .I1(sig0000024e),
        .I2(sig00000229),
        .I3(sig0000009b),
        .O(sig000002e8));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h39C6)) 
    blk00000456
       (.I0(sig00000218),
        .I1(sig0000024f),
        .I2(sig00000229),
        .I3(sig0000009b),
        .O(sig000002e9));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h39C6)) 
    blk00000457
       (.I0(sig00000217),
        .I1(sig00000250),
        .I2(sig00000229),
        .I3(sig0000009b),
        .O(sig000002ea));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h39C6)) 
    blk00000458
       (.I0(sig00000216),
        .I1(sig00000251),
        .I2(sig00000229),
        .I3(sig0000009b),
        .O(sig000002eb));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h39C6)) 
    blk00000459
       (.I0(sig00000215),
        .I1(sig00000252),
        .I2(sig00000229),
        .I3(sig0000009b),
        .O(sig000002ec));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h39C6)) 
    blk0000045a
       (.I0(sig00000214),
        .I1(sig00000253),
        .I2(sig00000229),
        .I3(sig0000009b),
        .O(sig000002ed));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h6696)) 
    blk0000045b
       (.I0(sig00000254),
        .I1(sig0000009b),
        .I2(sig00000213),
        .I3(sig00000229),
        .O(sig000002ee));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h6696)) 
    blk0000045c
       (.I0(sig00000255),
        .I1(sig0000009b),
        .I2(sig00000212),
        .I3(sig00000229),
        .O(sig000002ef));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h6696)) 
    blk0000045d
       (.I0(sig00000256),
        .I1(sig0000009b),
        .I2(sig00000211),
        .I3(sig00000229),
        .O(sig000002f0));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h6696)) 
    blk0000045e
       (.I0(sig00000257),
        .I1(sig0000009b),
        .I2(sig00000210),
        .I3(sig00000229),
        .O(sig000002f1));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h6696)) 
    blk0000045f
       (.I0(sig00000258),
        .I1(sig0000009b),
        .I2(sig0000020f),
        .I3(sig00000229),
        .O(sig000002f2));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h6696)) 
    blk00000460
       (.I0(sig00000259),
        .I1(sig0000009b),
        .I2(sig0000020e),
        .I3(sig00000229),
        .O(sig000002f3));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h6696)) 
    blk00000461
       (.I0(sig0000025a),
        .I1(sig0000009b),
        .I2(sig0000020d),
        .I3(sig00000229),
        .O(sig000002f4));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hD2)) 
    blk00000462
       (.I0(sig00000226),
        .I1(sig00000229),
        .I2(sig0000009b),
        .O(sig000002f5));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hD2)) 
    blk00000463
       (.I0(sig00000225),
        .I1(sig00000229),
        .I2(sig0000009b),
        .O(sig000002f6));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk00000464
       (.I0(sig00000416),
        .I1(sig00000415),
        .I2(sig00000404),
        .I3(sig00000414),
        .I4(sig0000040c),
        .I5(sig000003fc),
        .O(sig000003e1));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk00000465
       (.I0(sig000003bb),
        .I1(sig000003b7),
        .I2(sig000003b5),
        .I3(sig000003b9),
        .I4(sig00000417),
        .I5(sig00000418),
        .O(sig000003ea));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk00000466
       (.I0(sig000003bc),
        .I1(sig000003b8),
        .I2(sig000003b6),
        .I3(sig000003ba),
        .I4(sig00000417),
        .I5(sig00000418),
        .O(sig000003eb));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk00000467
       (.I0(sig000003bd),
        .I1(sig000003b9),
        .I2(sig000003b7),
        .I3(sig000003bb),
        .I4(sig00000417),
        .I5(sig00000418),
        .O(sig000003ec));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk00000468
       (.I0(sig000003b9),
        .I1(sig000003b5),
        .I2(sig000003b3),
        .I3(sig000003b7),
        .I4(sig00000417),
        .I5(sig00000418),
        .O(sig000003e8));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk00000469
       (.I0(sig000003be),
        .I1(sig000003ba),
        .I2(sig000003b8),
        .I3(sig000003bc),
        .I4(sig00000417),
        .I5(sig00000418),
        .O(sig000003ed));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk0000046a
       (.I0(sig000003ba),
        .I1(sig000003b6),
        .I2(sig000003b4),
        .I3(sig000003b8),
        .I4(sig00000417),
        .I5(sig00000418),
        .O(sig000003e9));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk0000046b
       (.I0(sig000003bf),
        .I1(sig000003bb),
        .I2(sig000003b9),
        .I3(sig000003bd),
        .I4(sig00000417),
        .I5(sig00000418),
        .O(sig000003ee));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk0000046c
       (.I0(sig000003c0),
        .I1(sig000003bc),
        .I2(sig000003ba),
        .I3(sig000003be),
        .I4(sig00000417),
        .I5(sig00000418),
        .O(sig000003ef));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk0000046d
       (.I0(sig000003c1),
        .I1(sig000003bd),
        .I2(sig000003bb),
        .I3(sig000003bf),
        .I4(sig00000417),
        .I5(sig00000418),
        .O(sig000003f0));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk0000046e
       (.I0(sig000004da),
        .I1(sig000003c4),
        .I2(sig000003c2),
        .I3(sig000004d9),
        .I4(sig00000417),
        .I5(sig00000418),
        .O(sig000003f7));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk0000046f
       (.I0(sig000003c3),
        .I1(sig000003bf),
        .I2(sig000003bd),
        .I3(sig000003c1),
        .I4(sig00000417),
        .I5(sig00000418),
        .O(sig000003f2));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk00000470
       (.I0(sig000003c2),
        .I1(sig000003be),
        .I2(sig000003bc),
        .I3(sig000003c0),
        .I4(sig00000417),
        .I5(sig00000418),
        .O(sig000003f1));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk00000471
       (.I0(sig000003c4),
        .I1(sig000003c0),
        .I2(sig000003be),
        .I3(sig000003c2),
        .I4(sig00000417),
        .I5(sig00000418),
        .O(sig000003f3));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk00000472
       (.I0(sig000003c5),
        .I1(sig000003c1),
        .I2(sig000003bf),
        .I3(sig000003c3),
        .I4(sig00000417),
        .I5(sig00000418),
        .O(sig000003f4));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk00000473
       (.I0(sig000004d9),
        .I1(sig000003c2),
        .I2(sig000003c0),
        .I3(sig000003c4),
        .I4(sig00000417),
        .I5(sig00000418),
        .O(sig000003f5));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk00000474
       (.I0(sig000003c6),
        .I1(sig000003c3),
        .I2(sig000003c1),
        .I3(sig000003c5),
        .I4(sig00000417),
        .I5(sig00000418),
        .O(sig000003f6));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFF00CCCCF0F0AAAA)) 
    blk00000475
       (.I0(sig000003c7),
        .I1(sig000003c6),
        .I2(sig000003c5),
        .I3(sig000003c3),
        .I4(sig00000417),
        .I5(sig00000418),
        .O(sig000003f8));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFF00CCCCF0F0AAAA)) 
    blk00000476
       (.I0(sig000004db),
        .I1(sig000004da),
        .I2(sig000004d9),
        .I3(sig000003c4),
        .I4(sig00000417),
        .I5(sig00000418),
        .O(sig000003f9));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFF00CCCCF0F0AAAA)) 
    blk00000477
       (.I0(sig000003c8),
        .I1(sig000003c7),
        .I2(sig000003c6),
        .I3(sig000003c5),
        .I4(sig00000417),
        .I5(sig00000418),
        .O(sig000003fa));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk00000478
       (.I0(sig000004e8),
        .I1(sig000003fb),
        .I2(sig00000403),
        .O(sig000004b5));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk00000479
       (.I0(sig000004e8),
        .I1(sig000003fd),
        .I2(sig00000405),
        .O(sig000004b6));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk0000047a
       (.I0(sig000004e8),
        .I1(sig000003ff),
        .I2(sig00000407),
        .O(sig000004b7));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk0000047b
       (.I0(sig000004e8),
        .I1(sig00000401),
        .I2(sig00000409),
        .O(sig000004b8));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk0000047c
       (.I0(sig000004e0),
        .I1(sig0000040b),
        .I2(sig00000413),
        .O(sig000004b9));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk0000047d
       (.I0(sig000004e0),
        .I1(sig0000040d),
        .O(sig000004ba));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk0000047e
       (.I0(sig000004e0),
        .I1(sig0000040f),
        .O(sig000004bb));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk0000047f
       (.I0(sig000004e0),
        .I1(sig00000411),
        .O(sig000004bc));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk00000480
       (.I0(sig000004e8),
        .I1(sig000004e5),
        .I2(sig000004e2),
        .O(sig000004be));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk00000481
       (.I0(sig000004e8),
        .I1(sig000004e6),
        .I2(sig000004e3),
        .O(sig000004bf));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk00000482
       (.I0(sig000004e8),
        .I1(sig000004e7),
        .I2(sig000004e4),
        .O(sig000004c0));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000483
       (.I0(sig000004e8),
        .I1(sig00000415),
        .O(sig000004c1));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk00000484
       (.I0(sig000004e0),
        .I1(sig000004dd),
        .I2(sig000004e1),
        .O(sig000004c2));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk00000485
       (.I0(sig000004e0),
        .I1(sig000004de),
        .O(sig000004c3));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk00000486
       (.I0(sig000004e0),
        .I1(sig000004df),
        .O(sig000004c4));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk00000487
       (.I0(sig00000415),
        .I1(sig000004e8),
        .I2(sig000004e0),
        .O(sig00000416));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hAC)) 
    blk00000488
       (.I0(sig000004d7),
        .I1(sig000004d8),
        .I2(sig00000417),
        .O(sig00000418));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk00000489
       (.I0(sig000004d8),
        .I1(sig000004dc),
        .I2(sig000004db),
        .O(sig000004af));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk0000048a
       (.I0(sig000004d7),
        .I1(sig000004da),
        .I2(sig000004d9),
        .O(sig000004b0));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000048b
       (.I0(sig00000417),
        .I1(sig000004d8),
        .O(sig000004b2));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000048c
       (.I0(sig00000415),
        .I1(sig000004e1),
        .O(sig000004c8));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h1)) 
    blk0000048d
       (.I0(sig0000047d),
        .I1(sig0000047c),
        .O(sig000004c9));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h1)) 
    blk0000048e
       (.I0(sig0000047b),
        .I1(sig0000047a),
        .O(sig000004ca));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h1)) 
    blk0000048f
       (.I0(sig00000479),
        .I1(sig00000478),
        .O(sig000004cb));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h1)) 
    blk00000490
       (.I0(sig00000477),
        .I1(sig00000476),
        .O(sig000004cc));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h1)) 
    blk00000491
       (.I0(sig00000475),
        .I1(sig00000474),
        .O(sig000004cd));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h1)) 
    blk00000492
       (.I0(sig00000473),
        .I1(sig00000472),
        .O(sig000004ce));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h1)) 
    blk00000493
       (.I0(sig00000471),
        .I1(sig00000470),
        .O(sig000004cf));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h1)) 
    blk00000494
       (.I0(sig0000046f),
        .I1(sig0000046e),
        .O(sig000004d0));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h1)) 
    blk00000495
       (.I0(sig0000046d),
        .I1(sig0000046c),
        .O(sig000004d1));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h1)) 
    blk00000496
       (.I0(sig0000046b),
        .I1(sig0000046a),
        .O(sig000004d2));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h1)) 
    blk00000497
       (.I0(sig00000469),
        .I1(sig00000468),
        .O(sig000004d3));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h1)) 
    blk00000498
       (.I0(sig00000467),
        .I1(sig00000466),
        .O(sig000004d4));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h1)) 
    blk00000499
       (.I0(sig00000465),
        .I1(sig0000022a),
        .O(sig000004d5));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk0000049a
       (.I0(sig00000059),
        .I1(sig00000057),
        .I2(sig00000056),
        .I3(sig00000058),
        .I4(sig0000003f),
        .I5(sig00000040),
        .O(sig00000506));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFF00CCCCF0F0AAAA)) 
    blk0000049b
       (.I0(sig0000005a),
        .I1(sig00000059),
        .I2(sig00000058),
        .I3(sig00000057),
        .I4(sig0000003f),
        .I5(sig00000040),
        .O(sig00000507));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk0000049c
       (.I0(sig00000058),
        .I1(sig00000056),
        .I2(sig00000055),
        .I3(sig00000057),
        .I4(sig0000003f),
        .I5(sig00000040),
        .O(sig00000505));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk0000049d
       (.I0(sig00000057),
        .I1(sig00000055),
        .I2(sig00000054),
        .I3(sig00000056),
        .I4(sig0000003f),
        .I5(sig00000040),
        .O(sig00000504));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk0000049e
       (.I0(sig00000056),
        .I1(sig00000054),
        .I2(sig00000053),
        .I3(sig00000055),
        .I4(sig0000003f),
        .I5(sig00000040),
        .O(sig00000503));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk0000049f
       (.I0(sig00000055),
        .I1(sig00000053),
        .I2(sig00000052),
        .I3(sig00000054),
        .I4(sig0000003f),
        .I5(sig00000040),
        .O(sig00000502));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk000004a0
       (.I0(sig00000054),
        .I1(sig00000052),
        .I2(sig00000051),
        .I3(sig00000053),
        .I4(sig0000003f),
        .I5(sig00000040),
        .O(sig00000501));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk000004a1
       (.I0(sig00000053),
        .I1(sig00000051),
        .I2(sig00000050),
        .I3(sig00000052),
        .I4(sig0000003f),
        .I5(sig00000040),
        .O(sig00000500));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk000004a2
       (.I0(sig00000052),
        .I1(sig00000050),
        .I2(sig0000004f),
        .I3(sig00000051),
        .I4(sig0000003f),
        .I5(sig00000040),
        .O(sig000004ff));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk000004a3
       (.I0(sig00000040),
        .I1(sig0000003f),
        .I2(sig0000005a),
        .I3(sig00000058),
        .I4(sig00000059),
        .I5(sig0000005b),
        .O(sig00000508));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk000004a4
       (.I0(sig00000051),
        .I1(sig0000004f),
        .I2(sig0000004e),
        .I3(sig00000050),
        .I4(sig0000003f),
        .I5(sig00000040),
        .O(sig000004fe));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk000004a5
       (.I0(sig0000004a),
        .I1(sig00000048),
        .I2(sig00000047),
        .I3(sig00000049),
        .I4(sig0000003f),
        .I5(sig00000040),
        .O(sig0000050e));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk000004a6
       (.I0(sig0000004b),
        .I1(sig00000049),
        .I2(sig00000048),
        .I3(sig0000004a),
        .I4(sig0000003f),
        .I5(sig00000040),
        .O(sig0000050f));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk000004a7
       (.I0(sig00000049),
        .I1(sig00000047),
        .I2(sig00000046),
        .I3(sig00000048),
        .I4(sig0000003f),
        .I5(sig00000040),
        .O(sig0000050d));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    blk000004a8
       (.I0(sig00000048),
        .I1(sig00000046),
        .I2(sig00000047),
        .I3(sig00000045),
        .I4(sig0000003f),
        .I5(sig00000040),
        .O(sig0000050c));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFF00CCCCF0F0AAAA)) 
    blk000004a9
       (.I0(sig00000047),
        .I1(sig00000046),
        .I2(sig00000045),
        .I3(sig00000044),
        .I4(sig0000003f),
        .I5(sig00000040),
        .O(sig0000050b));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk000004aa
       (.I0(sig00000046),
        .I1(sig00000044),
        .I2(sig00000043),
        .I3(sig00000045),
        .I4(sig0000003f),
        .I5(sig00000040),
        .O(sig0000050a));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk000004ab
       (.I0(sig00000050),
        .I1(sig0000004e),
        .I2(sig0000004d),
        .I3(sig0000004f),
        .I4(sig0000003f),
        .I5(sig00000040),
        .O(sig00000514));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk000004ac
       (.I0(sig0000004f),
        .I1(sig0000004d),
        .I2(sig0000004c),
        .I3(sig0000004e),
        .I4(sig0000003f),
        .I5(sig00000040),
        .O(sig00000513));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hAAAAFF00F0F0CCCC)) 
    blk000004ad
       (.I0(sig00000042),
        .I1(sig00000045),
        .I2(sig00000043),
        .I3(sig00000044),
        .I4(sig0000003f),
        .I5(sig00000040),
        .O(sig00000509));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk000004ae
       (.I0(sig0000004e),
        .I1(sig0000004c),
        .I2(sig0000004b),
        .I3(sig0000004d),
        .I4(sig0000003f),
        .I5(sig00000040),
        .O(sig00000512));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk000004af
       (.I0(sig0000004d),
        .I1(sig0000004b),
        .I2(sig0000004a),
        .I3(sig0000004c),
        .I4(sig0000003f),
        .I5(sig00000040),
        .O(sig00000511));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk000004b0
       (.I0(sig0000004c),
        .I1(sig0000004a),
        .I2(sig00000049),
        .I3(sig0000004b),
        .I4(sig0000003f),
        .I5(sig00000040),
        .O(sig00000510));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF7E6B3A2D5C49180)) 
    blk000004b1
       (.I0(sig00000596),
        .I1(sig00000597),
        .I2(sig00000042),
        .I3(sig00000045),
        .I4(sig00000043),
        .I5(sig00000044),
        .O(sig00000527));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h00AAF0CC)) 
    blk000004b2
       (.I0(sig00000042),
        .I1(sig00000044),
        .I2(sig00000043),
        .I3(sig00000040),
        .I4(sig00000597),
        .O(sig00000526));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'hF5F1)) 
    blk000004b3
       (.I0(sig00000042),
        .I1(sig00000043),
        .I2(sig0000003f),
        .I3(sig00000040),
        .O(sig00000525));
  (* PK_HLUTNM = "___XLNM___36___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_mant_op[22]_GND_396_o_MUX_376_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h54)) 
    blk000004b4
       (.I0(sig00000114),
        .I1(sig0000003e),
        .I2(sig00000113),
        .O(sig0000056c));
  (* PK_HLUTNM = "___XLNM___44___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_exp_op[0]_GND_396_o_MUX_373_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hF4)) 
    blk000004b5
       (.I0(sig00000114),
        .I1(sig00000020),
        .I2(sig00000113),
        .O(sig0000056d));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h90000090)) 
    blk000004b6
       (.I0(sig00000127),
        .I1(sig0000007a),
        .I2(sig00000595),
        .I3(sig00000126),
        .I4(sig00000079),
        .O(sig00000578));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h82)) 
    blk000004b7
       (.I0(sig0000013d),
        .I1(sig00000140),
        .I2(sig00000141),
        .O(sig00000579));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFFFFD858FFFF8808)) 
    blk000004b8
       (.I0(sig0000013c),
        .I1(sig0000013b),
        .I2(sig0000013e),
        .I3(sig00000579),
        .I4(sig0000013f),
        .I5(sig0000013d),
        .O(sig00000109));
  (* PK_HLUTNM = "___XLNM___24___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/EXP/exp_align<3>21" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h7)) 
    blk000004b9
       (.I0(sig0000014e),
        .I1(sig0000014f),
        .O(sig0000057a));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h7DDD288828887DDD)) 
    blk000004ba
       (.I0(sig00000139),
        .I1(sig00000148),
        .I2(sig00000147),
        .I3(sig00000146),
        .I4(sig00000150),
        .I5(sig0000057a),
        .O(sig000000f0));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h8080008000800080)) 
    blk000004bb
       (.I0(sig0000013c),
        .I1(sig0000013b),
        .I2(sig00000140),
        .I3(sig0000013e),
        .I4(sig00000141),
        .I5(sig0000013d),
        .O(sig0000057b));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h54101010)) 
    blk000004bc
       (.I0(sig0000013c),
        .I1(sig0000013e),
        .I2(sig00000142),
        .I3(sig00000141),
        .I4(sig0000013d),
        .O(sig0000057c));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'hFE54)) 
    blk000004bd
       (.I0(sig0000013f),
        .I1(sig0000057b),
        .I2(sig0000057c),
        .I3(sig00000138),
        .O(sig0000010b));
  (* PK_HLUTNM = "___XLNM___47___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/EXP/zero_int_align1_SW0" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'hE)) 
    blk000004be
       (.I0(sig000000ad),
        .I1(sig000000ac),
        .O(sig0000057d));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF8880)) 
    blk000004bf
       (.I0(sig000000ab),
        .I1(sig000000aa),
        .I2(sig000000a8),
        .I3(sig000000a9),
        .I4(sig0000057d),
        .I5(sig000000ae),
        .O(sig0000009c));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h80)) 
    blk000004c0
       (.I0(sig00000132),
        .I1(sig00000131),
        .I2(sig00000130),
        .O(sig0000057e));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    blk000004c1
       (.I0(sig00000137),
        .I1(sig00000136),
        .I2(sig00000135),
        .I3(sig00000134),
        .I4(sig00000133),
        .I5(sig0000057e),
        .O(sig000000ed));
  (* PK_HLUTNM = "___XLNM___47___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/EXP/zero_int_align1_SW0" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hFE)) 
    blk000004c2
       (.I0(sig000000ad),
        .I1(sig000000ab),
        .I2(sig000000ac),
        .O(sig0000057f));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h0000000000000004)) 
    blk000004c3
       (.I0(sig000000a8),
        .I1(sig00000143),
        .I2(sig000000a9),
        .I3(sig000000aa),
        .I4(sig000000ae),
        .I5(sig0000057f),
        .O(sig0000010a));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h8888F000)) 
    blk000004c4
       (.I0(sig000002d6),
        .I1(sig000002d0),
        .I2(sig000002d8),
        .I3(sig000002d2),
        .I4(sig000002ca),
        .O(sig00000580));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFBBBEAAA51114000)) 
    blk000004c5
       (.I0(sig000001d7),
        .I1(sig000002ca),
        .I2(sig000002d1),
        .I3(sig000002d7),
        .I4(sig000002cf),
        .I5(sig00000580),
        .O(sig000002c9));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEA404040)) 
    blk000004c6
       (.I0(sig000002ca),
        .I1(sig000002ce),
        .I2(sig000002d5),
        .I3(sig000002cc),
        .I4(sig000002e0),
        .O(sig00000581));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h8888F000)) 
    blk000004c7
       (.I0(sig000002d4),
        .I1(sig000002cd),
        .I2(sig000002d3),
        .I3(sig000002cb),
        .I4(sig000002ca),
        .O(sig00000582));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000004c8
       (.I0(sig000001d7),
        .I1(sig00000582),
        .I2(sig00000581),
        .O(sig000002c8));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h95)) 
    blk000004c9
       (.I0(sig00000128),
        .I1(sig0000007b),
        .I2(sig0000009a),
        .O(sig00000583));
  (* XSTLIB *) 
  LUT1 #(
    .INIT(2'h2)) 
    blk000004ca
       (.I0(sig000002bc),
        .O(sig00000584));
  (* XSTLIB *) 
  LUT1 #(
    .INIT(2'h2)) 
    blk000004cb
       (.I0(sig00000515),
        .O(sig00000586));
  (* XSTLIB *) 
  LUT1 #(
    .INIT(2'h2)) 
    blk000004cc
       (.I0(sig00000516),
        .O(sig00000587));
  (* XSTLIB *) 
  LUT1 #(
    .INIT(2'h2)) 
    blk000004cd
       (.I0(sig00000517),
        .O(sig00000588));
  (* XSTLIB *) 
  LUT1 #(
    .INIT(2'h2)) 
    blk000004ce
       (.I0(sig00000518),
        .O(sig00000589));
  (* XSTLIB *) 
  LUT1 #(
    .INIT(2'h2)) 
    blk000004cf
       (.I0(sig00000519),
        .O(sig0000058a));
  (* XSTLIB *) 
  LUT1 #(
    .INIT(2'h2)) 
    blk000004d0
       (.I0(sig0000051a),
        .O(sig0000058b));
  (* XSTLIB *) 
  LUT1 #(
    .INIT(2'h2)) 
    blk000004d1
       (.I0(sig0000051b),
        .O(sig0000058c));
  (* XSTLIB *) 
  LUT1 #(
    .INIT(2'h2)) 
    blk000004d2
       (.I0(sig0000051c),
        .O(sig0000058d));
  (* XSTLIB *) 
  LUT1 #(
    .INIT(2'h2)) 
    blk000004d3
       (.I0(sig00000041),
        .O(sig0000058e));
  (* XSTLIB *) 
  LUT1 #(
    .INIT(2'h2)) 
    blk000004d4
       (.I0(sig0000009b),
        .O(sig0000058f));
  (* XSTLIB *) 
  LUT1 #(
    .INIT(2'h2)) 
    blk000004d5
       (.I0(sig0000010c),
        .O(sig00000590));
  (* XSTLIB *) 
  LUT1 #(
    .INIT(2'h2)) 
    blk000004d6
       (.I0(sig0000010d),
        .O(sig00000591));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004d7
       (.C(clk),
        .CE(1'b1),
        .D(sig00000003),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/sign_op ),
        .R(1'b0));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h56559A99)) 
    blk000004d8
       (.I0(sig00000124),
        .I1(sig0000009a),
        .I2(sig00000097),
        .I3(sig00000096),
        .I4(sig000004d6),
        .O(sig000000e5));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h999A5556)) 
    blk000004d9
       (.I0(sig00000125),
        .I1(sig0000009a),
        .I2(sig00000096),
        .I3(sig00000097),
        .I4(sig00000078),
        .O(sig000000e6));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h0100000100010001)) 
    blk000004da
       (.I0(sig0000012b),
        .I1(sig00000129),
        .I2(sig0000012a),
        .I3(sig00000128),
        .I4(sig0000009a),
        .I5(sig0000007b),
        .O(sig00000575));
  (* PK_HLUTNM = "___XLNM___48___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/EXP/flow_sel<3>92" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h1E)) 
    blk000004db
       (.I0(sig00000097),
        .I1(sig00000096),
        .I2(sig00000125),
        .O(sig00000576));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h0001000101000001)) 
    blk000004dc
       (.I0(sig00000127),
        .I1(sig0000009a),
        .I2(sig00000126),
        .I3(sig00000124),
        .I4(sig00000096),
        .I5(sig00000097),
        .O(sig00000577));
  (* PK_HLUTNM = "___XLNM___42___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_exp_op[7]_GND_396_o_MUX_364_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hBA)) 
    blk000004dd
       (.I0(sig00000113),
        .I1(sig00000114),
        .I2(sig00000027),
        .O(sig00000574));
  (* PK_HLUTNM = "___XLNM___41___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_exp_op[6]_GND_396_o_MUX_365_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hBA)) 
    blk000004de
       (.I0(sig00000113),
        .I1(sig00000114),
        .I2(sig00000026),
        .O(sig00000573));
  (* PK_HLUTNM = "___XLNM___44___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_exp_op[0]_GND_396_o_MUX_373_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hBA)) 
    blk000004df
       (.I0(sig00000113),
        .I1(sig00000114),
        .I2(sig00000025),
        .O(sig00000572));
  (* PK_HLUTNM = "___XLNM___43___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_exp_op[4]_GND_396_o_MUX_367_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hBA)) 
    blk000004e0
       (.I0(sig00000113),
        .I1(sig00000114),
        .I2(sig00000024),
        .O(sig00000571));
  (* PK_HLUTNM = "___XLNM___43___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_exp_op[4]_GND_396_o_MUX_367_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hBA)) 
    blk000004e1
       (.I0(sig00000113),
        .I1(sig00000114),
        .I2(sig00000023),
        .O(sig00000570));
  (* XSTLIB *) 
  MUXF7 blk000004e2
       (.I0(sig00000592),
        .I1(sig00000593),
        .O(sig000000f5),
        .S(sig00000139));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hAAAA6AAAAAAAAAAA)) 
    blk000004e3
       (.I0(sig00000155),
        .I1(sig00000154),
        .I2(sig00000151),
        .I3(sig00000153),
        .I4(sig000000b0),
        .I5(sig00000152),
        .O(sig00000592));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hAAAA6AAAAAAAAAAA)) 
    blk000004e4
       (.I0(sig0000014d),
        .I1(sig0000014c),
        .I2(sig00000149),
        .I3(sig0000014b),
        .I4(sig000000af),
        .I5(sig0000014a),
        .O(sig00000593));
  (* PK_HLUTNM = "___XLNM___48___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/EXP/flow_sel<3>92" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h90)) 
    blk000004e5
       (.I0(sig00000078),
        .I1(sig00000125),
        .I2(sig00000578),
        .O(sig00000594));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF6006600F0000000)) 
    blk000004e6
       (.I0(sig000004d6),
        .I1(sig00000124),
        .I2(sig00000576),
        .I3(sig00000575),
        .I4(sig00000577),
        .I5(sig00000594),
        .O(sig00000105));
  (* PK_HLUTNM = "___XLNM___17___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/NORM/NORM/NORM_SHIFT/Mmux_MUX_LOOP[0].shifted_temp81" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h5410)) 
    blk000004e7
       (.I0(sig00000415),
        .I1(sig000004e8),
        .I2(sig0000040b),
        .I3(sig00000413),
        .O(sig000003d2));
  (* PK_HLUTNM = "___XLNM___16___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/NORM/NORM/NORM_SHIFT/Mmux_MUX_LOOP[0].shifted_temp91" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h5410)) 
    blk000004e8
       (.I0(sig00000415),
        .I1(sig000004e8),
        .I2(sig0000040c),
        .I3(sig00000414),
        .O(sig000003d1));
  (* PK_HLUTNM = "___XLNM___14___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/NORM/NORM/NORM_SHIFT/Mmux_MUX_LOOP[1].shifted_temp161" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h5410)) 
    blk000004e9
       (.I0(sig00000417),
        .I1(sig000004d8),
        .I2(sig000003b5),
        .I3(sig000003b3),
        .O(sig000003e4));
  (* PK_HLUTNM = "___XLNM___15___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/NORM/NORM/NORM_SHIFT/Mmux_MUX_LOOP[1].shifted_temp151" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h5410)) 
    blk000004ea
       (.I0(sig00000417),
        .I1(sig000004d8),
        .I2(sig000003b6),
        .I3(sig000003b4),
        .O(sig000003e5));
  (* PK_HLUTNM = "___XLNM___23___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/NORM/NORM/NORM_SHIFT/Mmux_MUX_LOOP[0].shifted_temp27" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h5410)) 
    blk000004eb
       (.I0(sig00000415),
        .I1(sig000004e8),
        .I2(sig00000405),
        .I3(sig0000040d),
        .O(sig000003d8));
  (* PK_HLUTNM = "___XLNM___22___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/NORM/NORM/NORM_SHIFT/Mmux_MUX_LOOP[0].shifted_temp31" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h5410)) 
    blk000004ec
       (.I0(sig00000415),
        .I1(sig000004e8),
        .I2(sig00000406),
        .I3(sig0000040e),
        .O(sig000003d7));
  (* PK_HLUTNM = "___XLNM___21___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/NORM/NORM/NORM_SHIFT/Mmux_MUX_LOOP[0].shifted_temp41" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h5410)) 
    blk000004ed
       (.I0(sig00000415),
        .I1(sig000004e8),
        .I2(sig00000407),
        .I3(sig0000040f),
        .O(sig000003d6));
  (* PK_HLUTNM = "___XLNM___20___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/NORM/NORM/NORM_SHIFT/Mmux_MUX_LOOP[0].shifted_temp51" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h5410)) 
    blk000004ee
       (.I0(sig00000415),
        .I1(sig000004e8),
        .I2(sig00000408),
        .I3(sig00000410),
        .O(sig000003d5));
  (* PK_HLUTNM = "___XLNM___19___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/NORM/NORM/NORM_SHIFT/Mmux_MUX_LOOP[0].shifted_temp61" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h5410)) 
    blk000004ef
       (.I0(sig00000415),
        .I1(sig000004e8),
        .I2(sig00000409),
        .I3(sig00000411),
        .O(sig000003d4));
  (* PK_HLUTNM = "___XLNM___18___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/NORM/NORM/NORM_SHIFT/Mmux_MUX_LOOP[0].shifted_temp71" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h5410)) 
    blk000004f0
       (.I0(sig00000415),
        .I1(sig000004e8),
        .I2(sig0000040a),
        .I3(sig00000412),
        .O(sig000003d3));
  (* PK_HLUTNM = "___XLNM___15___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/NORM/NORM/NORM_SHIFT/Mmux_MUX_LOOP[1].shifted_temp151" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk000004f1
       (.I0(sig000003b4),
        .I1(sig00000417),
        .I2(sig000004d8),
        .O(sig000003e3));
  (* PK_HLUTNM = "___XLNM___14___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/NORM/NORM/NORM_SHIFT/Mmux_MUX_LOOP[1].shifted_temp161" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk000004f2
       (.I0(sig000003b3),
        .I1(sig00000417),
        .I2(sig000004d8),
        .O(sig000003e2));
  (* PK_HLUTNM = "___XLNM___23___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/NORM/NORM/NORM_SHIFT/Mmux_MUX_LOOP[0].shifted_temp27" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk000004f3
       (.I0(sig0000040d),
        .I1(sig00000415),
        .I2(sig000004e8),
        .O(sig000003d0));
  (* PK_HLUTNM = "___XLNM___22___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/NORM/NORM/NORM_SHIFT/Mmux_MUX_LOOP[0].shifted_temp31" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk000004f4
       (.I0(sig0000040e),
        .I1(sig00000415),
        .I2(sig000004e8),
        .O(sig000003cf));
  (* PK_HLUTNM = "___XLNM___21___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/NORM/NORM/NORM_SHIFT/Mmux_MUX_LOOP[0].shifted_temp41" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk000004f5
       (.I0(sig0000040f),
        .I1(sig00000415),
        .I2(sig000004e8),
        .O(sig000003ce));
  (* PK_HLUTNM = "___XLNM___20___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/NORM/NORM/NORM_SHIFT/Mmux_MUX_LOOP[0].shifted_temp51" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk000004f6
       (.I0(sig00000410),
        .I1(sig00000415),
        .I2(sig000004e8),
        .O(sig000003cd));
  (* PK_HLUTNM = "___XLNM___19___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/NORM/NORM/NORM_SHIFT/Mmux_MUX_LOOP[0].shifted_temp61" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk000004f7
       (.I0(sig00000411),
        .I1(sig00000415),
        .I2(sig000004e8),
        .O(sig000003cc));
  (* PK_HLUTNM = "___XLNM___18___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/NORM/NORM/NORM_SHIFT/Mmux_MUX_LOOP[0].shifted_temp71" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk000004f8
       (.I0(sig00000412),
        .I1(sig00000415),
        .I2(sig000004e8),
        .O(sig000003cb));
  (* PK_HLUTNM = "___XLNM___17___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/NORM/NORM/NORM_SHIFT/Mmux_MUX_LOOP[0].shifted_temp81" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk000004f9
       (.I0(sig00000413),
        .I1(sig00000415),
        .I2(sig000004e8),
        .O(sig000003ca));
  (* PK_HLUTNM = "___XLNM___16___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/NORM/NORM/NORM_SHIFT/Mmux_MUX_LOOP[0].shifted_temp91" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk000004fa
       (.I0(sig00000414),
        .I1(sig00000415),
        .I2(sig000004e8),
        .O(sig000003c9));
  (* PK_HLUTNM = "___XLNM___12___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/EXP/flow_sel<2><0>1" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'hAA20)) 
    blk000004fb
       (.I0(sig0000012c),
        .I1(sig00000097),
        .I2(sig00000096),
        .I3(sig0000009a),
        .O(sig00000111));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h5410FEBA54105410)) 
    blk000004fc
       (.I0(sig00000417),
        .I1(sig000004d8),
        .I2(sig000003b7),
        .I3(sig000003b5),
        .I4(sig000004d7),
        .I5(sig000003b3),
        .O(sig000003e6));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h5410FEBA54105410)) 
    blk000004fd
       (.I0(sig00000417),
        .I1(sig000004d8),
        .I2(sig000003b8),
        .I3(sig000003b6),
        .I4(sig000004d7),
        .I5(sig000003b4),
        .O(sig000003e7));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h5410FEBA54105410)) 
    blk000004fe
       (.I0(sig00000415),
        .I1(sig000004e8),
        .I2(sig000003fd),
        .I3(sig00000405),
        .I4(sig000004e0),
        .I5(sig0000040d),
        .O(sig000003e0));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h5410FEBA54105410)) 
    blk000004ff
       (.I0(sig00000415),
        .I1(sig000004e8),
        .I2(sig000003fe),
        .I3(sig00000406),
        .I4(sig000004e0),
        .I5(sig0000040e),
        .O(sig000003df));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h5410FEBA54105410)) 
    blk00000500
       (.I0(sig00000415),
        .I1(sig000004e8),
        .I2(sig000003ff),
        .I3(sig00000407),
        .I4(sig000004e0),
        .I5(sig0000040f),
        .O(sig000003de));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h5410FEBA54105410)) 
    blk00000501
       (.I0(sig00000415),
        .I1(sig000004e8),
        .I2(sig00000400),
        .I3(sig00000408),
        .I4(sig000004e0),
        .I5(sig00000410),
        .O(sig000003dd));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h5410FEBA54105410)) 
    blk00000502
       (.I0(sig00000415),
        .I1(sig000004e8),
        .I2(sig00000401),
        .I3(sig00000409),
        .I4(sig000004e0),
        .I5(sig00000411),
        .O(sig000003dc));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h5410FEBA54105410)) 
    blk00000503
       (.I0(sig00000415),
        .I1(sig000004e8),
        .I2(sig00000402),
        .I3(sig0000040a),
        .I4(sig000004e0),
        .I5(sig00000412),
        .O(sig000003db));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h5410FEBA54105410)) 
    blk00000504
       (.I0(sig00000415),
        .I1(sig000004e8),
        .I2(sig00000403),
        .I3(sig0000040b),
        .I4(sig000004e0),
        .I5(sig00000413),
        .O(sig000003da));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h5410FEBA54105410)) 
    blk00000505
       (.I0(sig00000415),
        .I1(sig000004e8),
        .I2(sig00000404),
        .I3(sig0000040c),
        .I4(sig000004e0),
        .I5(sig00000414),
        .O(sig000003d9));
  (* PK_HLUTNM = "___XLNM___12___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/EXP/flow_sel<2><0>1" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h20)) 
    blk00000506
       (.I0(sig0000012c),
        .I1(sig0000009a),
        .I2(sig00000097),
        .O(sig00000112));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h77700700)) 
    blk00000507
       (.I0(sig000000dc),
        .I1(sig000000d9),
        .I2(sig00000099),
        .I3(sig00000272),
        .I4(sig0000025b),
        .O(sig000002a4));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h77700700)) 
    blk00000508
       (.I0(sig000000dc),
        .I1(sig000000d9),
        .I2(sig00000099),
        .I3(sig0000027c),
        .I4(sig00000265),
        .O(sig000002ae));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h77700700)) 
    blk00000509
       (.I0(sig000000dc),
        .I1(sig000000d9),
        .I2(sig00000099),
        .I3(sig0000027d),
        .I4(sig00000266),
        .O(sig000002af));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h77700700)) 
    blk0000050a
       (.I0(sig000000dc),
        .I1(sig000000d9),
        .I2(sig00000099),
        .I3(sig0000027e),
        .I4(sig00000267),
        .O(sig000002b0));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h77700700)) 
    blk0000050b
       (.I0(sig000000dc),
        .I1(sig000000d9),
        .I2(sig00000099),
        .I3(sig0000027f),
        .I4(sig00000268),
        .O(sig000002b1));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h77700700)) 
    blk0000050c
       (.I0(sig000000dc),
        .I1(sig000000d9),
        .I2(sig00000099),
        .I3(sig00000280),
        .I4(sig00000269),
        .O(sig000002b2));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h77700700)) 
    blk0000050d
       (.I0(sig000000dc),
        .I1(sig000000d9),
        .I2(sig00000099),
        .I3(sig00000281),
        .I4(sig0000026a),
        .O(sig000002b3));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h77700700)) 
    blk0000050e
       (.I0(sig000000dc),
        .I1(sig000000d9),
        .I2(sig00000099),
        .I3(sig00000282),
        .I4(sig0000026b),
        .O(sig000002b4));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h77700700)) 
    blk0000050f
       (.I0(sig000000dc),
        .I1(sig000000d9),
        .I2(sig00000099),
        .I3(sig00000283),
        .I4(sig0000026c),
        .O(sig000002b5));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h77700700)) 
    blk00000510
       (.I0(sig000000dc),
        .I1(sig000000d9),
        .I2(sig00000099),
        .I3(sig00000284),
        .I4(sig0000026d),
        .O(sig000002b6));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h77700700)) 
    blk00000511
       (.I0(sig000000dc),
        .I1(sig000000d9),
        .I2(sig00000099),
        .I3(sig00000285),
        .I4(sig0000026e),
        .O(sig000002b7));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h77700700)) 
    blk00000512
       (.I0(sig000000dc),
        .I1(sig000000d9),
        .I2(sig00000099),
        .I3(sig00000273),
        .I4(sig0000025c),
        .O(sig000002a5));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h77700700)) 
    blk00000513
       (.I0(sig000000dc),
        .I1(sig000000d9),
        .I2(sig00000099),
        .I3(sig00000286),
        .I4(sig0000026f),
        .O(sig000002b8));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h77700700)) 
    blk00000514
       (.I0(sig000000dc),
        .I1(sig000000d9),
        .I2(sig00000099),
        .I3(sig00000287),
        .I4(sig00000270),
        .O(sig000002b9));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h77700700)) 
    blk00000515
       (.I0(sig000000dc),
        .I1(sig000000d9),
        .I2(sig00000099),
        .I3(sig00000288),
        .I4(sig00000271),
        .O(sig000002ba));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h2A)) 
    blk00000516
       (.I0(sig000002cc),
        .I1(sig000000dc),
        .I2(sig000000d9),
        .O(sig000002bb));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h77700700)) 
    blk00000517
       (.I0(sig000000dc),
        .I1(sig000000d9),
        .I2(sig00000099),
        .I3(sig00000274),
        .I4(sig0000025d),
        .O(sig000002a6));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h77700700)) 
    blk00000518
       (.I0(sig000000dc),
        .I1(sig000000d9),
        .I2(sig00000099),
        .I3(sig00000275),
        .I4(sig0000025e),
        .O(sig000002a7));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h77700700)) 
    blk00000519
       (.I0(sig000000dc),
        .I1(sig000000d9),
        .I2(sig00000099),
        .I3(sig00000276),
        .I4(sig0000025f),
        .O(sig000002a8));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h77700700)) 
    blk0000051a
       (.I0(sig000000dc),
        .I1(sig000000d9),
        .I2(sig00000099),
        .I3(sig00000277),
        .I4(sig00000260),
        .O(sig000002a9));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h77700700)) 
    blk0000051b
       (.I0(sig000000dc),
        .I1(sig000000d9),
        .I2(sig00000099),
        .I3(sig00000278),
        .I4(sig00000261),
        .O(sig000002aa));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h77700700)) 
    blk0000051c
       (.I0(sig000000dc),
        .I1(sig000000d9),
        .I2(sig00000099),
        .I3(sig00000279),
        .I4(sig00000262),
        .O(sig000002ab));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h77700700)) 
    blk0000051d
       (.I0(sig000000dc),
        .I1(sig000000d9),
        .I2(sig00000099),
        .I3(sig0000027a),
        .I4(sig00000263),
        .O(sig000002ac));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h77700700)) 
    blk0000051e
       (.I0(sig000000dc),
        .I1(sig000000d9),
        .I2(sig00000099),
        .I3(sig0000027b),
        .I4(sig00000264),
        .O(sig000002ad));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEEFE2202)) 
    blk0000051f
       (.I0(sig000004a0),
        .I1(sig00000099),
        .I2(sig0000005e),
        .I3(sig00000156),
        .I4(sig00000487),
        .O(sig00000455));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEEFE2202)) 
    blk00000520
       (.I0(sig000004a1),
        .I1(sig00000099),
        .I2(sig0000005e),
        .I3(sig00000156),
        .I4(sig00000488),
        .O(sig00000456));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEEFE2202)) 
    blk00000521
       (.I0(sig000004a2),
        .I1(sig00000099),
        .I2(sig0000005e),
        .I3(sig00000156),
        .I4(sig00000489),
        .O(sig00000457));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEEFE2202)) 
    blk00000522
       (.I0(sig000004a3),
        .I1(sig00000099),
        .I2(sig0000005e),
        .I3(sig00000156),
        .I4(sig0000048a),
        .O(sig00000458));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEEFE2202)) 
    blk00000523
       (.I0(sig000004a4),
        .I1(sig00000099),
        .I2(sig0000005e),
        .I3(sig00000156),
        .I4(sig0000048b),
        .O(sig00000459));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEEFE2202)) 
    blk00000524
       (.I0(sig000004a5),
        .I1(sig00000099),
        .I2(sig0000005e),
        .I3(sig00000156),
        .I4(sig0000048c),
        .O(sig0000045a));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEEFE2202)) 
    blk00000525
       (.I0(sig000004a6),
        .I1(sig00000099),
        .I2(sig0000005e),
        .I3(sig00000156),
        .I4(sig0000048d),
        .O(sig0000045b));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEEFE2202)) 
    blk00000526
       (.I0(sig000004a7),
        .I1(sig00000099),
        .I2(sig0000005e),
        .I3(sig00000156),
        .I4(sig0000048e),
        .O(sig0000045c));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEEFE2202)) 
    blk00000527
       (.I0(sig000004a8),
        .I1(sig00000099),
        .I2(sig0000005e),
        .I3(sig00000156),
        .I4(sig0000048f),
        .O(sig0000045d));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEEFE2202)) 
    blk00000528
       (.I0(sig000004a9),
        .I1(sig00000099),
        .I2(sig0000005e),
        .I3(sig00000156),
        .I4(sig00000490),
        .O(sig0000045e));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEEFE2202)) 
    blk00000529
       (.I0(sig00000497),
        .I1(sig00000099),
        .I2(sig0000005e),
        .I3(sig00000156),
        .I4(sig0000047e),
        .O(sig0000044c));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEEFE2202)) 
    blk0000052a
       (.I0(sig000004aa),
        .I1(sig00000099),
        .I2(sig0000005e),
        .I3(sig00000156),
        .I4(sig00000491),
        .O(sig0000045f));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEEFE2202)) 
    blk0000052b
       (.I0(sig000004ab),
        .I1(sig00000099),
        .I2(sig0000005e),
        .I3(sig00000156),
        .I4(sig00000492),
        .O(sig00000460));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEEFE2202)) 
    blk0000052c
       (.I0(sig000004ac),
        .I1(sig00000099),
        .I2(sig0000005e),
        .I3(sig00000156),
        .I4(sig00000493),
        .O(sig00000461));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEEFE2202)) 
    blk0000052d
       (.I0(sig000004ad),
        .I1(sig00000099),
        .I2(sig0000005e),
        .I3(sig00000156),
        .I4(sig00000494),
        .O(sig00000462));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEEFE2202)) 
    blk0000052e
       (.I0(sig000004ae),
        .I1(sig00000099),
        .I2(sig0000005e),
        .I3(sig00000156),
        .I4(sig00000495),
        .O(sig00000463));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'hAA20)) 
    blk0000052f
       (.I0(sig00000496),
        .I1(sig00000156),
        .I2(sig0000005e),
        .I3(sig00000099),
        .O(sig00000464));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEEFE2202)) 
    blk00000530
       (.I0(sig00000498),
        .I1(sig00000099),
        .I2(sig0000005e),
        .I3(sig00000156),
        .I4(sig0000047f),
        .O(sig0000044d));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEEFE2202)) 
    blk00000531
       (.I0(sig00000499),
        .I1(sig00000099),
        .I2(sig0000005e),
        .I3(sig00000156),
        .I4(sig00000480),
        .O(sig0000044e));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEEFE2202)) 
    blk00000532
       (.I0(sig0000049a),
        .I1(sig00000099),
        .I2(sig0000005e),
        .I3(sig00000156),
        .I4(sig00000481),
        .O(sig0000044f));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEEFE2202)) 
    blk00000533
       (.I0(sig0000049b),
        .I1(sig00000099),
        .I2(sig0000005e),
        .I3(sig00000156),
        .I4(sig00000482),
        .O(sig00000450));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEEFE2202)) 
    blk00000534
       (.I0(sig0000049c),
        .I1(sig00000099),
        .I2(sig0000005e),
        .I3(sig00000156),
        .I4(sig00000483),
        .O(sig00000451));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEEFE2202)) 
    blk00000535
       (.I0(sig0000049d),
        .I1(sig00000099),
        .I2(sig0000005e),
        .I3(sig00000156),
        .I4(sig00000484),
        .O(sig00000452));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEEFE2202)) 
    blk00000536
       (.I0(sig0000049e),
        .I1(sig00000099),
        .I2(sig0000005e),
        .I3(sig00000156),
        .I4(sig00000485),
        .O(sig00000453));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEEFE2202)) 
    blk00000537
       (.I0(sig0000049f),
        .I1(sig00000099),
        .I2(sig0000005e),
        .I3(sig00000156),
        .I4(sig00000486),
        .O(sig00000454));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk00000538
       (.I0(sig00000029),
        .I1(sig00000113),
        .I2(sig00000114),
        .O(sig00000557));
  (* PK_HLUTNM = "___XLNM___36___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_mant_op[22]_GND_396_o_MUX_376_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk00000539
       (.I0(sig0000002a),
        .I1(sig00000113),
        .I2(sig00000114),
        .O(sig00000558));
  (* PK_HLUTNM = "___XLNM___40___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_mant_op[0]_GND_396_o_MUX_442_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk0000053a
       (.I0(sig00000028),
        .I1(sig00000113),
        .I2(sig00000114),
        .O(sig00000556));
  (* PK_HLUTNM = "___XLNM___40___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_mant_op[0]_GND_396_o_MUX_442_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk0000053b
       (.I0(sig0000002b),
        .I1(sig00000113),
        .I2(sig00000114),
        .O(sig00000559));
  (* PK_HLUTNM = "___XLNM___39___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_mant_op[4]_GND_396_o_MUX_438_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk0000053c
       (.I0(sig0000002c),
        .I1(sig00000113),
        .I2(sig00000114),
        .O(sig0000055a));
  (* PK_HLUTNM = "___XLNM___39___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_mant_op[4]_GND_396_o_MUX_438_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk0000053d
       (.I0(sig0000002d),
        .I1(sig00000113),
        .I2(sig00000114),
        .O(sig0000055b));
  (* PK_HLUTNM = "___XLNM___38___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_mant_op[6]_GND_396_o_MUX_436_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk0000053e
       (.I0(sig0000002e),
        .I1(sig00000113),
        .I2(sig00000114),
        .O(sig0000055c));
  (* PK_HLUTNM = "___XLNM___38___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_mant_op[6]_GND_396_o_MUX_436_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk0000053f
       (.I0(sig0000002f),
        .I1(sig00000113),
        .I2(sig00000114),
        .O(sig0000055d));
  (* PK_HLUTNM = "___XLNM___37___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_mant_op[8]_GND_396_o_MUX_434_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk00000540
       (.I0(sig00000030),
        .I1(sig00000113),
        .I2(sig00000114),
        .O(sig0000055e));
  (* PK_HLUTNM = "___XLNM___37___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_mant_op[8]_GND_396_o_MUX_434_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk00000541
       (.I0(sig00000031),
        .I1(sig00000113),
        .I2(sig00000114),
        .O(sig0000055f));
  (* PK_HLUTNM = "___XLNM___35___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_mant_op[10]_GND_396_o_MUX_432_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk00000542
       (.I0(sig00000032),
        .I1(sig00000113),
        .I2(sig00000114),
        .O(sig00000560));
  (* PK_HLUTNM = "___XLNM___35___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_mant_op[10]_GND_396_o_MUX_432_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk00000543
       (.I0(sig00000033),
        .I1(sig00000113),
        .I2(sig00000114),
        .O(sig00000561));
  (* PK_HLUTNM = "___XLNM___34___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_mant_op[12]_GND_396_o_MUX_430_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk00000544
       (.I0(sig00000034),
        .I1(sig00000113),
        .I2(sig00000114),
        .O(sig00000562));
  (* PK_HLUTNM = "___XLNM___34___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_mant_op[12]_GND_396_o_MUX_430_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk00000545
       (.I0(sig00000035),
        .I1(sig00000113),
        .I2(sig00000114),
        .O(sig00000563));
  (* PK_HLUTNM = "___XLNM___33___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_mant_op[14]_GND_396_o_MUX_428_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk00000546
       (.I0(sig00000036),
        .I1(sig00000113),
        .I2(sig00000114),
        .O(sig00000564));
  (* PK_HLUTNM = "___XLNM___33___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_mant_op[14]_GND_396_o_MUX_428_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk00000547
       (.I0(sig00000037),
        .I1(sig00000113),
        .I2(sig00000114),
        .O(sig00000565));
  (* PK_HLUTNM = "___XLNM___32___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_mant_op[16]_GND_396_o_MUX_426_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk00000548
       (.I0(sig00000038),
        .I1(sig00000113),
        .I2(sig00000114),
        .O(sig00000566));
  (* PK_HLUTNM = "___XLNM___32___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_mant_op[16]_GND_396_o_MUX_426_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk00000549
       (.I0(sig00000039),
        .I1(sig00000113),
        .I2(sig00000114),
        .O(sig00000567));
  (* PK_HLUTNM = "___XLNM___31___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_mant_op[18]_GND_396_o_MUX_424_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk0000054a
       (.I0(sig0000003a),
        .I1(sig00000113),
        .I2(sig00000114),
        .O(sig00000568));
  (* PK_HLUTNM = "___XLNM___31___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_mant_op[18]_GND_396_o_MUX_424_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk0000054b
       (.I0(sig0000003b),
        .I1(sig00000113),
        .I2(sig00000114),
        .O(sig00000569));
  (* PK_HLUTNM = "___XLNM___30___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_mant_op[20]_GND_396_o_MUX_422_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk0000054c
       (.I0(sig0000003c),
        .I1(sig00000113),
        .I2(sig00000114),
        .O(sig0000056a));
  (* PK_HLUTNM = "___XLNM___30___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_mant_op[20]_GND_396_o_MUX_422_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk0000054d
       (.I0(sig0000003d),
        .I1(sig00000113),
        .I2(sig00000114),
        .O(sig0000056b));
  (* PK_HLUTNM = "___XLNM___42___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_exp_op[7]_GND_396_o_MUX_364_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hBA)) 
    blk0000054e
       (.I0(sig00000113),
        .I1(sig00000114),
        .I2(sig00000022),
        .O(sig0000056f));
  (* PK_HLUTNM = "___XLNM___41___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_exp_op[6]_GND_396_o_MUX_365_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hBA)) 
    blk0000054f
       (.I0(sig00000113),
        .I1(sig00000114),
        .I2(sig00000021),
        .O(sig0000056e));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000550
       (.I0(a[23]),
        .I1(b[23]),
        .O(sig00000432));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000551
       (.I0(a[23]),
        .I1(b[23]),
        .O(sig00000585));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'hAA69)) 
    blk00000552
       (.I0(b[22]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(a[22]),
        .O(sig00000353));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000553
       (.I0(b[21]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(a[21]),
        .I4(a[22]),
        .O(sig00000355));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000554
       (.I0(b[20]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(a[20]),
        .I4(a[21]),
        .O(sig00000357));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000555
       (.I0(b[19]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(a[19]),
        .I4(a[20]),
        .O(sig00000359));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000556
       (.I0(b[18]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(a[18]),
        .I4(a[19]),
        .O(sig0000035b));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000557
       (.I0(b[17]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(a[17]),
        .I4(a[18]),
        .O(sig0000035d));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000558
       (.I0(b[16]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(a[16]),
        .I4(a[17]),
        .O(sig0000035f));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000559
       (.I0(b[15]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(a[15]),
        .I4(a[16]),
        .O(sig00000361));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk0000055a
       (.I0(b[14]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(a[14]),
        .I4(a[15]),
        .O(sig00000363));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk0000055b
       (.I0(b[13]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(a[13]),
        .I4(a[14]),
        .O(sig00000365));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk0000055c
       (.I0(b[12]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(a[12]),
        .I4(a[13]),
        .O(sig00000367));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk0000055d
       (.I0(b[11]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(a[11]),
        .I4(a[12]),
        .O(sig00000369));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk0000055e
       (.I0(b[10]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(a[10]),
        .I4(a[11]),
        .O(sig0000036b));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk0000055f
       (.I0(b[9]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(a[9]),
        .I4(a[10]),
        .O(sig0000036d));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000560
       (.I0(b[8]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(a[8]),
        .I4(a[9]),
        .O(sig0000036f));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000561
       (.I0(b[7]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(a[7]),
        .I4(a[8]),
        .O(sig00000371));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000562
       (.I0(b[6]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(a[6]),
        .I4(a[7]),
        .O(sig00000373));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000563
       (.I0(b[5]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(a[5]),
        .I4(a[6]),
        .O(sig00000375));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000564
       (.I0(b[4]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(a[4]),
        .I4(a[5]),
        .O(sig00000377));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000565
       (.I0(b[3]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(a[3]),
        .I4(a[4]),
        .O(sig00000379));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000566
       (.I0(b[2]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(a[2]),
        .I4(a[3]),
        .O(sig0000037b));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000567
       (.I0(b[1]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(a[1]),
        .I4(a[2]),
        .O(sig0000037d));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000568
       (.I0(b[0]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(a[0]),
        .I4(a[1]),
        .O(sig0000037f));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h9F)) 
    blk00000569
       (.I0(a[23]),
        .I1(b[23]),
        .I2(a[0]),
        .O(sig00000381));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'hAA69)) 
    blk0000056a
       (.I0(a[22]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(b[22]),
        .O(sig00000384));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk0000056b
       (.I0(a[21]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(b[21]),
        .I4(b[22]),
        .O(sig00000386));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk0000056c
       (.I0(a[20]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(b[20]),
        .I4(b[21]),
        .O(sig00000388));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk0000056d
       (.I0(a[19]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(b[19]),
        .I4(b[20]),
        .O(sig0000038a));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk0000056e
       (.I0(a[18]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(b[18]),
        .I4(b[19]),
        .O(sig0000038c));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk0000056f
       (.I0(a[17]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(b[17]),
        .I4(b[18]),
        .O(sig0000038e));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000570
       (.I0(a[16]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(b[16]),
        .I4(b[17]),
        .O(sig00000390));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000571
       (.I0(a[15]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(b[15]),
        .I4(b[16]),
        .O(sig00000392));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000572
       (.I0(a[14]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(b[14]),
        .I4(b[15]),
        .O(sig00000394));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000573
       (.I0(a[13]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(b[13]),
        .I4(b[14]),
        .O(sig00000396));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000574
       (.I0(a[12]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(b[12]),
        .I4(b[13]),
        .O(sig00000398));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000575
       (.I0(a[11]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(b[11]),
        .I4(b[12]),
        .O(sig0000039a));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000576
       (.I0(a[10]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(b[10]),
        .I4(b[11]),
        .O(sig0000039c));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000577
       (.I0(a[9]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(b[9]),
        .I4(b[10]),
        .O(sig0000039e));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000578
       (.I0(a[8]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(b[8]),
        .I4(b[9]),
        .O(sig000003a0));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000579
       (.I0(a[7]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(b[7]),
        .I4(b[8]),
        .O(sig000003a2));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk0000057a
       (.I0(a[6]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(b[6]),
        .I4(b[7]),
        .O(sig000003a4));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk0000057b
       (.I0(a[5]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(b[5]),
        .I4(b[6]),
        .O(sig000003a6));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk0000057c
       (.I0(a[4]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(b[4]),
        .I4(b[5]),
        .O(sig000003a8));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk0000057d
       (.I0(a[3]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(b[3]),
        .I4(b[4]),
        .O(sig000003aa));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk0000057e
       (.I0(a[2]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(b[2]),
        .I4(b[3]),
        .O(sig000003ac));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk0000057f
       (.I0(a[1]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(b[1]),
        .I4(b[2]),
        .O(sig000003ae));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000580
       (.I0(a[0]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(b[0]),
        .I4(b[1]),
        .O(sig000003b0));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h9F)) 
    blk00000581
       (.I0(a[23]),
        .I1(b[23]),
        .I2(b[0]),
        .O(sig000003b2));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000582
       (.C(clk),
        .CE(1'b1),
        .D(sig000000ca),
        .Q(sig00000595),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000583
       (.C(clk),
        .CE(1'b1),
        .D(sig00000001),
        .Q(sig00000596),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000584
       (.C(clk),
        .CE(1'b1),
        .D(sig00000002),
        .Q(sig00000597),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "INV" *) 
  (* XILINX_TRANSFORM_PINMAP = "I:I0" *) 
  (* XSTLIB *) 
  LUT1 #(
    .INIT(2'h1)) 
    blk00000585
       (.I0(sig00000129),
        .O(sig000000e9));
  (* XILINX_LEGACY_PRIM = "INV" *) 
  (* XILINX_TRANSFORM_PINMAP = "I:I0" *) 
  (* XSTLIB *) 
  LUT1 #(
    .INIT(2'h1)) 
    blk00000586
       (.I0(sig0000012a),
        .O(sig000000ea));
  (* XILINX_LEGACY_PRIM = "INV" *) 
  (* XILINX_TRANSFORM_PINMAP = "I:I0" *) 
  (* XSTLIB *) 
  LUT1 #(
    .INIT(2'h1)) 
    blk00000587
       (.I0(sig0000012b),
        .O(sig000000eb));
  (* XSTLIB *) 
  MUXF7 blk00000588
       (.I0(sig00000598),
        .I1(sig00000599),
        .O(sig000000f2),
        .S(sig00000139));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    blk00000589
       (.I0(sig00000152),
        .I1(sig00000150),
        .I2(sig0000014f),
        .I3(sig0000014e),
        .I4(sig00000151),
        .O(sig00000598));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    blk0000058a
       (.I0(sig0000014a),
        .I1(sig00000149),
        .I2(sig00000146),
        .I3(sig00000147),
        .I4(sig00000148),
        .O(sig00000599));
  (* XSTLIB *) 
  MUXF7 blk0000058b
       (.I0(sig0000059a),
        .I1(sig0000059b),
        .O(sig000000f3),
        .S(sig00000139));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
    blk0000058c
       (.I0(sig00000153),
        .I1(sig0000014f),
        .I2(sig0000014e),
        .I3(sig00000150),
        .I4(sig00000152),
        .I5(sig00000151),
        .O(sig0000059a));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
    blk0000058d
       (.I0(sig0000014b),
        .I1(sig0000014a),
        .I2(sig00000149),
        .I3(sig00000146),
        .I4(sig00000147),
        .I5(sig00000148),
        .O(sig0000059b));
  (* XSTLIB *) 
  MUXF7 blk0000058e
       (.I0(sig0000059c),
        .I1(sig0000059d),
        .O(sig000000f4),
        .S(sig00000139));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hBFFF4000)) 
    blk0000058f
       (.I0(sig000000b0),
        .I1(sig00000152),
        .I2(sig00000151),
        .I3(sig00000153),
        .I4(sig00000154),
        .O(sig0000059c));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hBFFF4000)) 
    blk00000590
       (.I0(sig000000af),
        .I1(sig0000014a),
        .I2(sig00000149),
        .I3(sig0000014b),
        .I4(sig0000014c),
        .O(sig0000059d));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk00000591
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig000002cc),
        .Q(sig0000059e));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000592
       (.C(clk),
        .CE(1'b1),
        .D(sig0000059e),
        .Q(sig0000013a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk00000593
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig0000012e),
        .Q(sig0000059f));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000594
       (.C(clk),
        .CE(1'b1),
        .D(sig0000059f),
        .Q(sig0000010d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk00000595
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig0000012f),
        .Q(sig000005a0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000596
       (.C(clk),
        .CE(1'b1),
        .D(sig000005a0),
        .Q(sig0000010c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk00000597
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(b[29]),
        .Q(sig000005a1));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000598
       (.C(clk),
        .CE(1'b1),
        .D(sig000005a1),
        .Q(sig0000014c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk00000599
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig000000d0),
        .Q(sig000005a2));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000059a
       (.C(clk),
        .CE(1'b1),
        .D(sig000005a2),
        .Q(sig0000009b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk0000059b
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(b[30]),
        .Q(sig000005a3));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000059c
       (.C(clk),
        .CE(1'b1),
        .D(sig000005a3),
        .Q(sig0000014d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk0000059d
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(b[26]),
        .Q(sig000005a4));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000059e
       (.C(clk),
        .CE(1'b1),
        .D(sig000005a4),
        .Q(sig00000149),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk0000059f
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(b[28]),
        .Q(sig000005a5));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005a0
       (.C(clk),
        .CE(1'b1),
        .D(sig000005a5),
        .Q(sig0000014b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005a1
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(b[27]),
        .Q(sig000005a6));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005a2
       (.C(clk),
        .CE(1'b1),
        .D(sig000005a6),
        .Q(sig0000014a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005a3
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(b[25]),
        .Q(sig000005a7));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005a4
       (.C(clk),
        .CE(1'b1),
        .D(sig000005a7),
        .Q(sig00000148),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005a5
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(b[24]),
        .Q(sig000005a8));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005a6
       (.C(clk),
        .CE(1'b1),
        .D(sig000005a8),
        .Q(sig00000147),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005a7
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(a[29]),
        .Q(sig000005a9));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005a8
       (.C(clk),
        .CE(1'b1),
        .D(sig000005a9),
        .Q(sig00000154),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005a9
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(b[23]),
        .Q(sig000005aa));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005aa
       (.C(clk),
        .CE(1'b1),
        .D(sig000005aa),
        .Q(sig00000146),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005ab
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(a[30]),
        .Q(sig000005ab));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005ac
       (.C(clk),
        .CE(1'b1),
        .D(sig000005ab),
        .Q(sig00000155),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005ad
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(a[26]),
        .Q(sig000005ac));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005ae
       (.C(clk),
        .CE(1'b1),
        .D(sig000005ac),
        .Q(sig00000151),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005af
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(a[28]),
        .Q(sig000005ad));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005b0
       (.C(clk),
        .CE(1'b1),
        .D(sig000005ad),
        .Q(sig00000153),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005b1
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(a[27]),
        .Q(sig000005ae));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005b2
       (.C(clk),
        .CE(1'b1),
        .D(sig000005ae),
        .Q(sig00000152),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005b3
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(a[23]),
        .Q(sig000005af));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005b4
       (.C(clk),
        .CE(1'b1),
        .D(sig000005af),
        .Q(sig0000014e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005b5
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(a[25]),
        .Q(sig000005b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005b6
       (.C(clk),
        .CE(1'b1),
        .D(sig000005b0),
        .Q(sig00000150),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005b7
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(a[24]),
        .Q(sig000005b1));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005b8
       (.C(clk),
        .CE(1'b1),
        .D(sig000005b1),
        .Q(sig0000014f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005b9
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig00000350),
        .Q(sig000005b2));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005ba
       (.C(clk),
        .CE(1'b1),
        .D(sig000005b2),
        .Q(sig0000025a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005bb
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig0000034f),
        .Q(sig000005b3));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005bc
       (.C(clk),
        .CE(1'b1),
        .D(sig000005b3),
        .Q(sig00000259),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005bd
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig0000034c),
        .Q(sig000005b4));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005be
       (.C(clk),
        .CE(1'b1),
        .D(sig000005b4),
        .Q(sig00000256),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005bf
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig0000034e),
        .Q(sig000005b5));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005c0
       (.C(clk),
        .CE(1'b1),
        .D(sig000005b5),
        .Q(sig00000258),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005c1
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig0000034d),
        .Q(sig000005b6));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005c2
       (.C(clk),
        .CE(1'b1),
        .D(sig000005b6),
        .Q(sig00000257),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005c3
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig00000349),
        .Q(sig000005b7));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005c4
       (.C(clk),
        .CE(1'b1),
        .D(sig000005b7),
        .Q(sig00000253),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005c5
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig0000034b),
        .Q(sig000005b8));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005c6
       (.C(clk),
        .CE(1'b1),
        .D(sig000005b8),
        .Q(sig00000255),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005c7
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig0000034a),
        .Q(sig000005b9));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005c8
       (.C(clk),
        .CE(1'b1),
        .D(sig000005b9),
        .Q(sig00000254),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005c9
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig00000346),
        .Q(sig000005ba));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005ca
       (.C(clk),
        .CE(1'b1),
        .D(sig000005ba),
        .Q(sig00000250),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005cb
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig00000348),
        .Q(sig000005bb));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005cc
       (.C(clk),
        .CE(1'b1),
        .D(sig000005bb),
        .Q(sig00000252),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005cd
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig00000347),
        .Q(sig000005bc));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005ce
       (.C(clk),
        .CE(1'b1),
        .D(sig000005bc),
        .Q(sig00000251),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005cf
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig00000345),
        .Q(sig000005bd));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005d0
       (.C(clk),
        .CE(1'b1),
        .D(sig000005bd),
        .Q(sig0000024f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005d1
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig00000344),
        .Q(sig000005be));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005d2
       (.C(clk),
        .CE(1'b1),
        .D(sig000005be),
        .Q(sig0000024e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005d3
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig00000341),
        .Q(sig000005bf));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005d4
       (.C(clk),
        .CE(1'b1),
        .D(sig000005bf),
        .Q(sig0000024b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005d5
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig00000343),
        .Q(sig000005c0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005d6
       (.C(clk),
        .CE(1'b1),
        .D(sig000005c0),
        .Q(sig0000024d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005d7
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig00000342),
        .Q(sig000005c1));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005d8
       (.C(clk),
        .CE(1'b1),
        .D(sig000005c1),
        .Q(sig0000024c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005d9
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig0000033e),
        .Q(sig000005c2));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005da
       (.C(clk),
        .CE(1'b1),
        .D(sig000005c2),
        .Q(sig00000248),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005db
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig00000340),
        .Q(sig000005c3));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005dc
       (.C(clk),
        .CE(1'b1),
        .D(sig000005c3),
        .Q(sig0000024a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005dd
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig0000033f),
        .Q(sig000005c4));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005de
       (.C(clk),
        .CE(1'b1),
        .D(sig000005c4),
        .Q(sig00000249),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005df
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig0000033b),
        .Q(sig000005c5));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005e0
       (.C(clk),
        .CE(1'b1),
        .D(sig000005c5),
        .Q(sig00000245),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005e1
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig0000033d),
        .Q(sig000005c6));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005e2
       (.C(clk),
        .CE(1'b1),
        .D(sig000005c6),
        .Q(sig00000247),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005e3
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig0000033c),
        .Q(sig000005c7));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005e4
       (.C(clk),
        .CE(1'b1),
        .D(sig000005c7),
        .Q(sig00000246),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005e5
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig0000033a),
        .Q(sig000005c8));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005e6
       (.C(clk),
        .CE(1'b1),
        .D(sig000005c8),
        .Q(sig00000244),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005e7
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig00000339),
        .Q(sig000005c9));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005e8
       (.C(clk),
        .CE(1'b1),
        .D(sig000005c9),
        .Q(sig00000243),
        .R(1'b0));
endmodule

(* BUS_INFO = "32:OUTPUT:result<31:0>" *) (* CHECK_LICENSE_TYPE = "softmax_adder_32bit,floating_point_v5_0,{}" *) (* NLW_MACRO_ALIAS = "softmax_adder_32bit_softmax_adder_32bit" *) 
(* NLW_MACRO_TAG = "0" *) (* NLW_UNIQUE_ID = "0" *) (* ORIG_REF_NAME = "softmax_adder_32bit" *) 
(* SHREG_EXTRACT_NGC = "Yes" *) (* SHREG_MIN_SIZE = "-1" *) (* TYPE = "softmax_adder_32bit" *) 
(* x_core_info = "floating_point_v5_0, Xilinx CORE Generator 14.7" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_softmax_adder_32bit_HD89
   (clk,
    a,
    b,
    result);
  input clk;
  input [31:0]a;
  input [31:0]b;
  output [31:0]result;

  wire [7:0]\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/exp_op ;
  wire [22:0]\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/mant_op ;
  wire \U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/sign_op ;
  wire [31:0]a;
  wire [31:0]b;
  wire clk;
  wire sig00000001;
  wire sig00000002;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000003;
  wire sig00000004;
  wire sig00000005;
  wire sig00000006;
  wire sig00000007;
  wire sig00000008;
  wire sig00000009;
  wire sig0000000a;
  wire sig0000000b;
  wire sig0000000c;
  wire sig0000000d;
  wire sig0000000e;
  wire sig0000000f;
  wire sig00000010;
  wire sig00000011;
  wire sig00000012;
  wire sig00000013;
  wire sig00000014;
  wire sig00000015;
  wire sig00000016;
  wire sig00000017;
  wire sig00000018;
  wire sig00000019;
  wire sig0000001a;
  wire sig0000001b;
  wire sig0000001c;
  wire sig0000001d;
  wire sig0000001e;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000001f;
  wire sig00000020;
  wire sig00000021;
  wire sig00000022;
  wire sig00000023;
  wire sig00000024;
  wire sig00000025;
  wire sig00000026;
  wire sig00000027;
  wire sig00000028;
  wire sig00000029;
  wire sig0000002a;
  wire sig0000002b;
  wire sig0000002c;
  wire sig0000002d;
  wire sig0000002e;
  wire sig0000002f;
  wire sig00000030;
  wire sig00000031;
  wire sig00000032;
  wire sig00000033;
  wire sig00000034;
  wire sig00000035;
  wire sig00000036;
  wire sig00000037;
  wire sig00000038;
  wire sig00000039;
  wire sig0000003a;
  wire sig0000003b;
  wire sig0000003c;
  wire sig0000003d;
  wire sig0000003e;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000003f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000040;
  wire sig00000041;
  wire sig00000042;
  wire sig00000043;
  wire sig00000044;
  wire sig00000045;
  wire sig00000046;
  wire sig00000047;
  wire sig00000048;
  wire sig00000049;
  wire sig0000004a;
  wire sig0000004b;
  wire sig0000004c;
  wire sig0000004d;
  wire sig0000004e;
  wire sig0000004f;
  wire sig00000050;
  wire sig00000051;
  wire sig00000052;
  wire sig00000053;
  wire sig00000054;
  wire sig00000055;
  wire sig00000056;
  wire sig00000057;
  wire sig00000058;
  wire sig00000059;
  wire sig0000005a;
  wire sig0000005b;
  wire sig0000005c;
  wire sig0000005d;
  wire sig0000005e;
  wire sig0000005f;
  wire sig00000060;
  wire sig00000061;
  wire sig00000062;
  wire sig00000063;
  wire sig00000064;
  wire sig00000065;
  wire sig00000066;
  wire sig00000067;
  wire sig00000068;
  wire sig00000069;
  wire sig0000006a;
  wire sig0000006b;
  wire sig0000006c;
  wire sig0000006d;
  wire sig0000006e;
  wire sig0000006f;
  wire sig00000070;
  wire sig00000071;
  wire sig00000072;
  wire sig00000073;
  wire sig00000074;
  wire sig00000075;
  wire sig00000076;
  wire sig00000077;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000078;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000079;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000007a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000007b;
  wire sig0000007c;
  wire sig0000007d;
  wire sig0000007e;
  wire sig0000007f;
  wire sig00000080;
  wire sig00000081;
  wire sig00000082;
  wire sig00000083;
  wire sig00000084;
  wire sig00000085;
  wire sig00000086;
  wire sig00000087;
  wire sig00000088;
  wire sig00000089;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000008a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000008b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000008c;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000008d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000008e;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000008f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000090;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000091;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000092;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000093;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000094;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000095;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000096;
  wire sig00000097;
  wire sig00000098;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000099;
  wire sig0000009a;
  wire sig0000009b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000009c;
  wire sig0000009d;
  wire sig0000009e;
  wire sig0000009f;
  wire sig000000a0;
  wire sig000000a1;
  wire sig000000a2;
  wire sig000000a3;
  wire sig000000a4;
  wire sig000000a5;
  wire sig000000a6;
  wire sig000000a7;
  wire sig000000a8;
  wire sig000000a9;
  wire sig000000aa;
  wire sig000000ab;
  wire sig000000ac;
  wire sig000000ad;
  wire sig000000ae;
  wire sig000000af;
  wire sig000000b0;
  wire sig000000b1;
  wire sig000000b2;
  wire sig000000b3;
  wire sig000000b4;
  wire sig000000b5;
  wire sig000000b6;
  wire sig000000b7;
  wire sig000000b8;
  wire sig000000b9;
  wire sig000000ba;
  wire sig000000bb;
  wire sig000000bc;
  wire sig000000bd;
  wire sig000000be;
  wire sig000000bf;
  wire sig000000c0;
  wire sig000000c1;
  wire sig000000c2;
  wire sig000000c3;
  wire sig000000c4;
  wire sig000000c5;
  wire sig000000c6;
  wire sig000000c7;
  wire sig000000c8;
  wire sig000000c9;
  wire sig000000ca;
  wire sig000000cb;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000cc;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000cd;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000ce;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000cf;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000d0;
  wire sig000000d1;
  wire sig000000d2;
  wire sig000000d3;
  wire sig000000d4;
  wire sig000000d5;
  wire sig000000d6;
  wire sig000000d7;
  wire sig000000d8;
  wire sig000000d9;
  wire sig000000da;
  wire sig000000db;
  wire sig000000dc;
  wire sig000000dd;
  wire sig000000de;
  wire sig000000df;
  wire sig000000e0;
  wire sig000000e1;
  wire sig000000e2;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000e3;
  wire sig000000e4;
  wire sig000000e5;
  wire sig000000e6;
  wire sig000000e7;
  wire sig000000e8;
  wire sig000000e9;
  wire sig000000ea;
  wire sig000000eb;
  wire sig000000ed;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000ee;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000ef;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000f0;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000f1;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000f2;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000f3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000f4;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000f5;
  wire sig000000f6;
  wire sig000000f7;
  wire sig000000f8;
  wire sig000000f9;
  wire sig000000fa;
  wire sig000000fb;
  wire sig000000fc;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000fd;
  wire sig000000fe;
  wire sig000000ff;
  wire sig00000100;
  wire sig00000101;
  wire sig00000102;
  wire sig00000103;
  wire sig00000104;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000105;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000106;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000107;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000108;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000109;
  wire sig0000010a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000010b;
  wire sig0000010c;
  wire sig0000010d;
  wire sig0000010e;
  wire sig0000010f;
  wire sig00000110;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000111;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000112;
  wire sig00000113;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000114;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000116;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000117;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000118;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000119;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000011a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000011b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000011c;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000011d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000011e;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000011f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000120;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000121;
  wire sig00000122;
  wire sig00000123;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000124;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000125;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000126;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000127;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000128;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000129;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000012a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000012b;
  wire sig0000012c;
  wire sig0000012d;
  wire sig0000012e;
  wire sig0000012f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000130;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000131;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000132;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000133;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000134;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000135;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000136;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000137;
  wire sig00000138;
  wire sig00000139;
  wire sig0000013a;
  wire sig0000013b;
  wire sig0000013c;
  wire sig0000013d;
  wire sig0000013e;
  wire sig0000013f;
  wire sig00000140;
  wire sig00000141;
  wire sig00000142;
  wire sig00000143;
  wire sig00000144;
  wire sig00000145;
  wire sig00000146;
  wire sig00000147;
  wire sig00000148;
  wire sig00000149;
  wire sig0000014a;
  wire sig0000014b;
  wire sig0000014c;
  wire sig0000014d;
  wire sig0000014e;
  wire sig0000014f;
  wire sig00000150;
  wire sig00000151;
  wire sig00000152;
  wire sig00000153;
  wire sig00000154;
  wire sig00000155;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000156;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000157;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000158;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000159;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000015a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000015b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000015c;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000015d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000015e;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000015f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000160;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000161;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000162;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000163;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000164;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000165;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000166;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000167;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000168;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000169;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000016a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000016b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000016c;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000016d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000016e;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000016f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000170;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000171;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000172;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000173;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000174;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000175;
  wire sig00000176;
  wire sig00000177;
  wire sig00000178;
  wire sig00000179;
  wire sig0000017a;
  wire sig0000017b;
  wire sig0000017c;
  wire sig0000017d;
  wire sig0000017e;
  wire sig0000017f;
  wire sig00000180;
  wire sig00000181;
  wire sig00000182;
  wire sig00000183;
  wire sig00000184;
  wire sig00000185;
  wire sig00000186;
  wire sig00000187;
  wire sig00000188;
  wire sig00000189;
  wire sig0000018a;
  wire sig0000018b;
  wire sig0000018c;
  wire sig0000018d;
  wire sig0000018e;
  wire sig0000018f;
  wire sig00000190;
  wire sig00000191;
  wire sig00000192;
  wire sig00000193;
  wire sig00000194;
  wire sig00000195;
  wire sig00000196;
  wire sig00000197;
  wire sig00000198;
  wire sig00000199;
  wire sig0000019a;
  wire sig0000019b;
  wire sig0000019c;
  wire sig0000019d;
  wire sig0000019e;
  wire sig0000019f;
  wire sig000001a0;
  wire sig000001a1;
  wire sig000001a2;
  wire sig000001a3;
  wire sig000001a4;
  wire sig000001a5;
  wire sig000001a6;
  wire sig000001a7;
  wire sig000001a8;
  wire sig000001a9;
  wire sig000001aa;
  wire sig000001ab;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001ac;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001ad;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001ae;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001af;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001b0;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001b1;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001b2;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001b3;
  wire sig000001b4;
  wire sig000001b5;
  wire sig000001b6;
  wire sig000001b7;
  wire sig000001b8;
  wire sig000001b9;
  wire sig000001ba;
  wire sig000001bb;
  wire sig000001bc;
  wire sig000001bd;
  wire sig000001be;
  wire sig000001bf;
  wire sig000001c0;
  wire sig000001c1;
  wire sig000001c2;
  wire sig000001c3;
  wire sig000001c4;
  wire sig000001c5;
  wire sig000001c6;
  wire sig000001c7;
  wire sig000001c8;
  wire sig000001c9;
  wire sig000001ca;
  wire sig000001cb;
  wire sig000001cc;
  wire sig000001cd;
  wire sig000001ce;
  wire sig000001cf;
  wire sig000001d0;
  wire sig000001d1;
  wire sig000001d2;
  wire sig000001d3;
  wire sig000001d4;
  wire sig000001d5;
  wire sig000001d6;
  wire sig000001d7;
  wire sig000001d8;
  wire sig000001d9;
  wire sig000001da;
  wire sig000001db;
  wire sig000001dc;
  wire sig000001dd;
  wire sig000001de;
  wire sig000001df;
  wire sig000001e0;
  wire sig000001e1;
  wire sig000001e2;
  wire sig000001e3;
  wire sig000001e4;
  wire sig000001e5;
  wire sig000001e6;
  wire sig000001e7;
  wire sig000001e8;
  wire sig000001e9;
  wire sig000001ea;
  wire sig000001eb;
  wire sig000001ec;
  wire sig000001ed;
  wire sig000001ee;
  wire sig000001ef;
  wire sig000001f0;
  wire sig000001f1;
  wire sig000001f2;
  wire sig000001f3;
  wire sig000001f4;
  wire sig000001f5;
  wire sig000001f6;
  wire sig000001f7;
  wire sig000001f8;
  wire sig000001f9;
  wire sig000001fa;
  wire sig000001fb;
  wire sig000001fc;
  wire sig000001fd;
  wire sig000001fe;
  wire sig000001ff;
  wire sig00000200;
  wire sig00000201;
  wire sig00000202;
  wire sig00000203;
  wire sig00000204;
  wire sig00000205;
  wire sig00000206;
  wire sig00000207;
  wire sig00000208;
  wire sig00000209;
  wire sig0000020a;
  wire sig0000020b;
  wire sig0000020c;
  wire sig0000020d;
  wire sig0000020e;
  wire sig0000020f;
  wire sig00000210;
  wire sig00000211;
  wire sig00000212;
  wire sig00000213;
  wire sig00000214;
  wire sig00000215;
  wire sig00000216;
  wire sig00000217;
  wire sig00000218;
  wire sig00000219;
  wire sig0000021a;
  wire sig0000021b;
  wire sig0000021c;
  wire sig0000021d;
  wire sig0000021e;
  wire sig0000021f;
  wire sig00000220;
  wire sig00000221;
  wire sig00000222;
  wire sig00000223;
  wire sig00000224;
  wire sig00000225;
  wire sig00000226;
  wire sig00000227;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000228;
  wire sig00000229;
  wire sig0000022a;
  wire sig0000022b;
  wire sig0000022c;
  wire sig0000022d;
  wire sig0000022e;
  wire sig0000022f;
  wire sig00000230;
  wire sig00000231;
  wire sig00000232;
  wire sig00000233;
  wire sig00000234;
  wire sig00000235;
  wire sig00000236;
  wire sig00000237;
  wire sig00000238;
  wire sig00000239;
  wire sig0000023a;
  wire sig0000023b;
  wire sig0000023c;
  wire sig0000023d;
  wire sig0000023e;
  wire sig0000023f;
  wire sig00000240;
  wire sig00000241;
  wire sig00000242;
  wire sig00000243;
  wire sig00000244;
  wire sig00000245;
  wire sig00000246;
  wire sig00000247;
  wire sig00000248;
  wire sig00000249;
  wire sig0000024a;
  wire sig0000024b;
  wire sig0000024c;
  wire sig0000024d;
  wire sig0000024e;
  wire sig0000024f;
  wire sig00000250;
  wire sig00000251;
  wire sig00000252;
  wire sig00000253;
  wire sig00000254;
  wire sig00000255;
  wire sig00000256;
  wire sig00000257;
  wire sig00000258;
  wire sig00000259;
  wire sig0000025a;
  wire sig0000025b;
  wire sig0000025c;
  wire sig0000025d;
  wire sig0000025e;
  wire sig0000025f;
  wire sig00000260;
  wire sig00000261;
  wire sig00000262;
  wire sig00000263;
  wire sig00000264;
  wire sig00000265;
  wire sig00000266;
  wire sig00000267;
  wire sig00000268;
  wire sig00000269;
  wire sig0000026a;
  wire sig0000026b;
  wire sig0000026c;
  wire sig0000026d;
  wire sig0000026e;
  wire sig0000026f;
  wire sig00000270;
  wire sig00000271;
  wire sig00000272;
  wire sig00000273;
  wire sig00000274;
  wire sig00000275;
  wire sig00000276;
  wire sig00000277;
  wire sig00000278;
  wire sig00000279;
  wire sig0000027a;
  wire sig0000027b;
  wire sig0000027c;
  wire sig0000027d;
  wire sig0000027e;
  wire sig0000027f;
  wire sig00000280;
  wire sig00000281;
  wire sig00000282;
  wire sig00000283;
  wire sig00000284;
  wire sig00000285;
  wire sig00000286;
  wire sig00000287;
  wire sig00000288;
  wire sig00000289;
  wire sig0000028a;
  wire sig0000028b;
  wire sig0000028c;
  wire sig0000028d;
  wire sig0000028e;
  wire sig0000028f;
  wire sig00000290;
  wire sig00000291;
  wire sig00000292;
  wire sig00000293;
  wire sig00000294;
  wire sig00000295;
  wire sig00000296;
  wire sig00000297;
  wire sig00000298;
  wire sig00000299;
  wire sig0000029a;
  wire sig0000029b;
  wire sig0000029c;
  wire sig0000029d;
  wire sig0000029e;
  wire sig0000029f;
  wire sig000002a0;
  wire sig000002a1;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002a2;
  wire sig000002a3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002a4;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002a5;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002a6;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002a7;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002a8;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002a9;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002aa;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002ab;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002ac;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002ad;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002ae;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002af;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002b0;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002b1;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002b2;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002b3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002b4;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002b5;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002b6;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002b7;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002b8;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002b9;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002ba;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002bb;
  wire sig000002bc;
  wire sig000002bd;
  wire sig000002be;
  wire sig000002bf;
  wire sig000002c0;
  wire sig000002c1;
  wire sig000002c2;
  wire sig000002c3;
  wire sig000002c4;
  wire sig000002c5;
  wire sig000002c6;
  wire sig000002c7;
  wire sig000002c8;
  wire sig000002c9;
  wire sig000002ca;
  wire sig000002cb;
  wire sig000002cc;
  wire sig000002cd;
  wire sig000002ce;
  wire sig000002cf;
  wire sig000002d0;
  wire sig000002d1;
  wire sig000002d2;
  wire sig000002d3;
  wire sig000002d4;
  wire sig000002d5;
  wire sig000002d6;
  wire sig000002d7;
  wire sig000002d8;
  wire sig000002d9;
  wire sig000002da;
  wire sig000002db;
  wire sig000002dc;
  wire sig000002dd;
  wire sig000002de;
  wire sig000002df;
  wire sig000002e0;
  wire sig000002e1;
  wire sig000002e2;
  wire sig000002e3;
  wire sig000002e4;
  wire sig000002e5;
  wire sig000002e6;
  wire sig000002e7;
  wire sig000002e8;
  wire sig000002e9;
  wire sig000002ea;
  wire sig000002eb;
  wire sig000002ec;
  wire sig000002ed;
  wire sig000002ee;
  wire sig000002ef;
  wire sig000002f0;
  wire sig000002f1;
  wire sig000002f2;
  wire sig000002f3;
  wire sig000002f4;
  wire sig000002f5;
  wire sig000002f6;
  wire sig000002f7;
  wire sig000002f8;
  wire sig000002f9;
  wire sig000002fa;
  wire sig000002fb;
  wire sig000002fc;
  wire sig000002fd;
  wire sig000002fe;
  wire sig000002ff;
  wire sig00000300;
  wire sig00000301;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000302;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000303;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000304;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000305;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000306;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000307;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000308;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000309;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000030a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000030b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000030c;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000030d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000030e;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000030f;
  wire sig00000310;
  wire sig00000311;
  wire sig00000312;
  wire sig00000313;
  wire sig00000314;
  wire sig00000315;
  wire sig00000316;
  wire sig00000317;
  wire sig00000318;
  wire sig00000319;
  wire sig0000031a;
  wire sig0000031b;
  wire sig0000031c;
  wire sig0000031d;
  wire sig0000031e;
  wire sig0000031f;
  wire sig00000320;
  wire sig00000321;
  wire sig00000322;
  wire sig00000323;
  wire sig00000324;
  wire sig00000325;
  wire sig00000326;
  wire sig00000327;
  wire sig00000328;
  wire sig00000329;
  wire sig0000032a;
  wire sig0000032b;
  wire sig0000032c;
  wire sig0000032d;
  wire sig0000032e;
  wire sig0000032f;
  wire sig00000330;
  wire sig00000331;
  wire sig00000332;
  wire sig00000333;
  wire sig00000334;
  wire sig00000335;
  wire sig00000336;
  wire sig00000337;
  wire sig00000338;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000339;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000033a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000033b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000033c;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000033d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000033e;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000033f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000340;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000341;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000342;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000343;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000344;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000345;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000346;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000347;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000348;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000349;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000034a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000034b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000034c;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000034d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000034e;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000034f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000350;
  wire sig00000351;
  wire sig00000352;
  wire sig00000353;
  wire sig00000354;
  wire sig00000355;
  wire sig00000356;
  wire sig00000357;
  wire sig00000358;
  wire sig00000359;
  wire sig0000035a;
  wire sig0000035b;
  wire sig0000035c;
  wire sig0000035d;
  wire sig0000035e;
  wire sig0000035f;
  wire sig00000360;
  wire sig00000361;
  wire sig00000362;
  wire sig00000363;
  wire sig00000364;
  wire sig00000365;
  wire sig00000366;
  wire sig00000367;
  wire sig00000368;
  wire sig00000369;
  wire sig0000036a;
  wire sig0000036b;
  wire sig0000036c;
  wire sig0000036d;
  wire sig0000036e;
  wire sig0000036f;
  wire sig00000370;
  wire sig00000371;
  wire sig00000372;
  wire sig00000373;
  wire sig00000374;
  wire sig00000375;
  wire sig00000376;
  wire sig00000377;
  wire sig00000378;
  wire sig00000379;
  wire sig0000037a;
  wire sig0000037b;
  wire sig0000037c;
  wire sig0000037d;
  wire sig0000037e;
  wire sig0000037f;
  wire sig00000380;
  wire sig00000381;
  wire sig00000382;
  wire sig00000383;
  wire sig00000384;
  wire sig00000385;
  wire sig00000386;
  wire sig00000387;
  wire sig00000388;
  wire sig00000389;
  wire sig0000038a;
  wire sig0000038b;
  wire sig0000038c;
  wire sig0000038d;
  wire sig0000038e;
  wire sig0000038f;
  wire sig00000390;
  wire sig00000391;
  wire sig00000392;
  wire sig00000393;
  wire sig00000394;
  wire sig00000395;
  wire sig00000396;
  wire sig00000397;
  wire sig00000398;
  wire sig00000399;
  wire sig0000039a;
  wire sig0000039b;
  wire sig0000039c;
  wire sig0000039d;
  wire sig0000039e;
  wire sig0000039f;
  wire sig000003a0;
  wire sig000003a1;
  wire sig000003a2;
  wire sig000003a3;
  wire sig000003a4;
  wire sig000003a5;
  wire sig000003a6;
  wire sig000003a7;
  wire sig000003a8;
  wire sig000003a9;
  wire sig000003aa;
  wire sig000003ab;
  wire sig000003ac;
  wire sig000003ad;
  wire sig000003ae;
  wire sig000003af;
  wire sig000003b0;
  wire sig000003b1;
  wire sig000003b2;
  wire sig000003b3;
  wire sig000003b4;
  wire sig000003b5;
  wire sig000003b6;
  wire sig000003b7;
  wire sig000003b8;
  wire sig000003b9;
  wire sig000003ba;
  wire sig000003bb;
  wire sig000003bc;
  wire sig000003bd;
  wire sig000003be;
  wire sig000003bf;
  wire sig000003c0;
  wire sig000003c1;
  wire sig000003c2;
  wire sig000003c3;
  wire sig000003c4;
  wire sig000003c5;
  wire sig000003c6;
  wire sig000003c7;
  wire sig000003c8;
  wire sig000003c9;
  wire sig000003ca;
  wire sig000003cb;
  wire sig000003cc;
  wire sig000003cd;
  wire sig000003ce;
  wire sig000003cf;
  wire sig000003d0;
  wire sig000003d1;
  wire sig000003d2;
  wire sig000003d3;
  wire sig000003d4;
  wire sig000003d5;
  wire sig000003d6;
  wire sig000003d7;
  wire sig000003d8;
  wire sig000003d9;
  wire sig000003da;
  wire sig000003db;
  wire sig000003dc;
  wire sig000003dd;
  wire sig000003de;
  wire sig000003df;
  wire sig000003e0;
  wire sig000003e1;
  wire sig000003e2;
  wire sig000003e3;
  wire sig000003e4;
  wire sig000003e5;
  wire sig000003e6;
  wire sig000003e7;
  wire sig000003e8;
  wire sig000003e9;
  wire sig000003ea;
  wire sig000003eb;
  wire sig000003ec;
  wire sig000003ed;
  wire sig000003ee;
  wire sig000003ef;
  wire sig000003f0;
  wire sig000003f1;
  wire sig000003f2;
  wire sig000003f3;
  wire sig000003f4;
  wire sig000003f5;
  wire sig000003f6;
  wire sig000003f7;
  wire sig000003f8;
  wire sig000003f9;
  wire sig000003fa;
  wire sig000003fb;
  wire sig000003fc;
  wire sig000003fd;
  wire sig000003fe;
  wire sig000003ff;
  wire sig00000400;
  wire sig00000401;
  wire sig00000402;
  wire sig00000403;
  wire sig00000404;
  wire sig00000405;
  wire sig00000406;
  wire sig00000407;
  wire sig00000408;
  wire sig00000409;
  wire sig0000040a;
  wire sig0000040b;
  wire sig0000040c;
  wire sig0000040d;
  wire sig0000040e;
  wire sig0000040f;
  wire sig00000410;
  wire sig00000411;
  wire sig00000412;
  wire sig00000413;
  wire sig00000414;
  wire sig00000415;
  wire sig00000416;
  wire sig00000417;
  wire sig00000418;
  wire sig00000419;
  wire sig0000041a;
  wire sig0000041b;
  wire sig0000041c;
  wire sig0000041d;
  wire sig0000041e;
  wire sig0000041f;
  wire sig00000420;
  wire sig00000421;
  wire sig00000422;
  wire sig00000423;
  wire sig00000424;
  wire sig00000425;
  wire sig00000426;
  wire sig00000427;
  wire sig00000428;
  wire sig00000429;
  wire sig0000042a;
  wire sig0000042b;
  wire sig0000042c;
  wire sig0000042d;
  wire sig0000042e;
  wire sig0000042f;
  wire sig00000430;
  wire sig00000431;
  wire sig00000432;
  wire sig00000433;
  wire sig00000434;
  wire sig00000435;
  wire sig00000436;
  wire sig00000437;
  wire sig00000438;
  wire sig00000439;
  wire sig0000043a;
  wire sig0000043b;
  wire sig0000043c;
  wire sig0000043d;
  wire sig0000043e;
  wire sig0000043f;
  wire sig00000440;
  wire sig00000441;
  wire sig00000442;
  wire sig00000443;
  wire sig00000444;
  wire sig00000445;
  wire sig00000446;
  wire sig00000447;
  wire sig00000448;
  wire sig00000449;
  wire sig0000044a;
  wire sig0000044b;
  wire sig0000044c;
  wire sig0000044d;
  wire sig0000044e;
  wire sig0000044f;
  wire sig00000450;
  wire sig00000451;
  wire sig00000452;
  wire sig00000453;
  wire sig00000454;
  wire sig00000455;
  wire sig00000456;
  wire sig00000457;
  wire sig00000458;
  wire sig00000459;
  wire sig0000045a;
  wire sig0000045b;
  wire sig0000045c;
  wire sig0000045d;
  wire sig0000045e;
  wire sig0000045f;
  wire sig00000460;
  wire sig00000461;
  wire sig00000462;
  wire sig00000463;
  wire sig00000464;
  wire sig00000465;
  wire sig00000466;
  wire sig00000467;
  wire sig00000468;
  wire sig00000469;
  wire sig0000046a;
  wire sig0000046b;
  wire sig0000046c;
  wire sig0000046d;
  wire sig0000046e;
  wire sig0000046f;
  wire sig00000470;
  wire sig00000471;
  wire sig00000472;
  wire sig00000473;
  wire sig00000474;
  wire sig00000475;
  wire sig00000476;
  wire sig00000477;
  wire sig00000478;
  wire sig00000479;
  wire sig0000047a;
  wire sig0000047b;
  wire sig0000047c;
  wire sig0000047d;
  wire sig0000047e;
  wire sig0000047f;
  wire sig00000480;
  wire sig00000481;
  wire sig00000482;
  wire sig00000483;
  wire sig00000484;
  wire sig00000485;
  wire sig00000486;
  wire sig00000487;
  wire sig00000488;
  wire sig00000489;
  wire sig0000048a;
  wire sig0000048b;
  wire sig0000048c;
  wire sig0000048d;
  wire sig0000048e;
  wire sig0000048f;
  wire sig00000490;
  wire sig00000491;
  wire sig00000492;
  wire sig00000493;
  wire sig00000494;
  wire sig00000495;
  wire sig00000496;
  wire sig00000497;
  wire sig00000498;
  wire sig00000499;
  wire sig0000049a;
  wire sig0000049b;
  wire sig0000049c;
  wire sig0000049d;
  wire sig0000049e;
  wire sig0000049f;
  wire sig000004a0;
  wire sig000004a1;
  wire sig000004a2;
  wire sig000004a3;
  wire sig000004a4;
  wire sig000004a5;
  wire sig000004a6;
  wire sig000004a7;
  wire sig000004a8;
  wire sig000004a9;
  wire sig000004aa;
  wire sig000004ab;
  wire sig000004ac;
  wire sig000004ad;
  wire sig000004ae;
  wire sig000004af;
  wire sig000004b0;
  wire sig000004b1;
  wire sig000004b2;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004b3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004b4;
  wire sig000004b5;
  wire sig000004b6;
  wire sig000004b7;
  wire sig000004b8;
  wire sig000004b9;
  wire sig000004ba;
  wire sig000004bb;
  wire sig000004bc;
  wire sig000004bd;
  wire sig000004be;
  wire sig000004bf;
  wire sig000004c0;
  wire sig000004c1;
  wire sig000004c2;
  wire sig000004c3;
  wire sig000004c4;
  wire sig000004c5;
  wire sig000004c6;
  wire sig000004c7;
  wire sig000004c8;
  wire sig000004c9;
  wire sig000004ca;
  wire sig000004cb;
  wire sig000004cc;
  wire sig000004cd;
  wire sig000004ce;
  wire sig000004cf;
  wire sig000004d0;
  wire sig000004d1;
  wire sig000004d2;
  wire sig000004d3;
  wire sig000004d4;
  wire sig000004d5;
  wire sig000004d6;
  wire sig000004d7;
  wire sig000004d8;
  wire sig000004d9;
  wire sig000004da;
  wire sig000004db;
  wire sig000004dc;
  wire sig000004dd;
  wire sig000004de;
  wire sig000004df;
  wire sig000004e0;
  wire sig000004e1;
  wire sig000004e2;
  wire sig000004e3;
  wire sig000004e4;
  wire sig000004e5;
  wire sig000004e6;
  wire sig000004e7;
  wire sig000004e8;
  wire sig000004e9;
  wire sig000004ea;
  wire sig000004eb;
  wire sig000004ec;
  wire sig000004ed;
  wire sig000004ee;
  wire sig000004ef;
  wire sig000004f0;
  wire sig000004f1;
  wire sig000004f2;
  wire sig000004f3;
  wire sig000004f4;
  wire sig000004f5;
  wire sig000004f6;
  wire sig000004f7;
  wire sig000004f8;
  wire sig000004f9;
  wire sig000004fa;
  wire sig000004fb;
  wire sig000004fc;
  wire sig000004fd;
  wire sig000004fe;
  wire sig000004ff;
  wire sig00000500;
  wire sig00000501;
  wire sig00000502;
  wire sig00000503;
  wire sig00000504;
  wire sig00000505;
  wire sig00000506;
  wire sig00000507;
  wire sig00000508;
  wire sig00000509;
  wire sig0000050a;
  wire sig0000050b;
  wire sig0000050c;
  wire sig0000050d;
  wire sig0000050e;
  wire sig0000050f;
  wire sig00000510;
  wire sig00000511;
  wire sig00000512;
  wire sig00000513;
  wire sig00000514;
  wire sig00000515;
  wire sig00000516;
  wire sig00000517;
  wire sig00000518;
  wire sig00000519;
  wire sig0000051a;
  wire sig0000051b;
  wire sig0000051c;
  wire sig0000051d;
  wire sig0000051e;
  wire sig0000051f;
  wire sig00000520;
  wire sig00000521;
  wire sig00000522;
  wire sig00000523;
  wire sig00000524;
  wire sig00000525;
  wire sig00000526;
  wire sig00000527;
  wire sig00000528;
  wire sig00000529;
  wire sig0000052a;
  wire sig0000052b;
  wire sig0000052c;
  wire sig0000052d;
  wire sig0000052e;
  wire sig0000052f;
  wire sig00000530;
  wire sig00000531;
  wire sig00000532;
  wire sig00000533;
  wire sig00000534;
  wire sig00000535;
  wire sig00000536;
  wire sig00000537;
  wire sig00000538;
  wire sig00000539;
  wire sig0000053a;
  wire sig0000053b;
  wire sig0000053c;
  wire sig0000053d;
  wire sig0000053e;
  wire sig0000053f;
  wire sig00000540;
  wire sig00000541;
  wire sig00000542;
  wire sig00000543;
  wire sig00000544;
  wire sig00000545;
  wire sig00000546;
  wire sig00000547;
  wire sig00000548;
  wire sig00000549;
  wire sig0000054a;
  wire sig0000054b;
  wire sig0000054c;
  wire sig0000054d;
  wire sig0000054e;
  wire sig0000054f;
  wire sig00000550;
  wire sig00000551;
  wire sig00000552;
  wire sig00000553;
  wire sig00000554;
  wire sig00000555;
  wire sig00000556;
  wire sig00000557;
  wire sig00000558;
  wire sig00000559;
  wire sig0000055a;
  wire sig0000055b;
  wire sig0000055c;
  wire sig0000055d;
  wire sig0000055e;
  wire sig0000055f;
  wire sig00000560;
  wire sig00000561;
  wire sig00000562;
  wire sig00000563;
  wire sig00000564;
  wire sig00000565;
  wire sig00000566;
  wire sig00000567;
  wire sig00000568;
  wire sig00000569;
  wire sig0000056a;
  wire sig0000056b;
  wire sig0000056c;
  wire sig0000056d;
  wire sig0000056e;
  wire sig0000056f;
  wire sig00000570;
  wire sig00000571;
  wire sig00000572;
  wire sig00000573;
  wire sig00000574;
  wire sig00000575;
  wire sig00000576;
  wire sig00000577;
  wire sig00000578;
  wire sig00000579;
  wire sig0000057a;
  wire sig0000057b;
  wire sig0000057c;
  wire sig0000057d;
  wire sig0000057e;
  wire sig0000057f;
  wire sig00000580;
  wire sig00000581;
  wire sig00000582;
  wire sig00000583;
  wire sig00000584;
  wire sig00000585;
  wire sig00000586;
  wire sig00000587;
  wire sig00000588;
  wire sig00000589;
  wire sig0000058a;
  wire sig0000058b;
  wire sig0000058c;
  wire sig0000058d;
  wire sig0000058e;
  wire sig0000058f;
  wire sig00000590;
  wire sig00000591;
  wire sig00000592;
  wire sig00000593;
  wire sig00000594;
  wire sig00000595;
  wire sig00000596;
  wire sig00000597;
  wire sig00000598;
  wire sig00000599;
  wire sig0000059a;
  wire sig0000059b;
  wire sig0000059c;
  wire sig0000059d;
  wire sig0000059e;
  wire sig0000059f;
  wire sig000005a0;
  wire sig000005a1;
  wire sig000005a2;
  wire sig000005a3;
  wire sig000005a4;
  wire sig000005a5;
  wire sig000005a6;
  wire sig000005a7;
  wire sig000005a8;
  wire sig000005a9;
  wire sig000005aa;
  wire sig000005ab;
  wire sig000005ac;
  wire sig000005ad;
  wire sig000005ae;
  wire sig000005af;
  wire sig000005b0;
  wire sig000005b1;
  wire sig000005b2;
  wire sig000005b3;
  wire sig000005b4;
  wire sig000005b5;
  wire sig000005b6;
  wire sig000005b7;
  wire sig000005b8;
  wire sig000005b9;
  wire sig000005ba;
  wire sig000005bb;
  wire sig000005bc;
  wire sig000005bd;
  wire sig000005be;
  wire sig000005bf;
  wire sig000005c0;
  wire sig000005c1;
  wire sig000005c2;
  wire sig000005c3;
  wire sig000005c4;
  wire sig000005c5;
  wire sig000005c6;
  wire sig000005c7;
  wire sig000005c8;
  wire sig000005c9;
  wire [3:0]NLW_blk00000008_CARRY4_O_UNCONNECTED;
  wire [3:2]NLW_blk0000000c_CARRY4_CO_UNCONNECTED;
  wire [3:2]NLW_blk0000000c_CARRY4_DI_UNCONNECTED;
  wire [3:0]NLW_blk0000000c_CARRY4_O_UNCONNECTED;
  wire [3:2]NLW_blk0000000c_CARRY4_S_UNCONNECTED;
  wire [3:0]NLW_blk0000000f_CARRY4_O_UNCONNECTED;
  wire [3:2]NLW_blk00000013_CARRY4_CO_UNCONNECTED;
  wire [3:2]NLW_blk00000013_CARRY4_DI_UNCONNECTED;
  wire [3:0]NLW_blk00000013_CARRY4_O_UNCONNECTED;
  wire [3:2]NLW_blk00000013_CARRY4_S_UNCONNECTED;
  wire [3:2]NLW_blk00000016_CARRY4_CO_UNCONNECTED;
  wire [3:2]NLW_blk00000016_CARRY4_DI_UNCONNECTED;
  wire [3:0]NLW_blk00000016_CARRY4_O_UNCONNECTED;
  wire [3:2]NLW_blk00000016_CARRY4_S_UNCONNECTED;
  wire [3:2]NLW_blk00000018_CARRY4_CO_UNCONNECTED;
  wire [3:2]NLW_blk00000018_CARRY4_DI_UNCONNECTED;
  wire [3:0]NLW_blk00000018_CARRY4_O_UNCONNECTED;
  wire [3:2]NLW_blk00000018_CARRY4_S_UNCONNECTED;
  wire [3:2]NLW_blk00000019_CARRY4_CO_UNCONNECTED;
  wire [3:2]NLW_blk00000019_CARRY4_DI_UNCONNECTED;
  wire [3:0]NLW_blk00000019_CARRY4_O_UNCONNECTED;
  wire [3:2]NLW_blk00000019_CARRY4_S_UNCONNECTED;
  wire [3:2]NLW_blk0000001b_CARRY4_CO_UNCONNECTED;
  wire [3:2]NLW_blk0000001b_CARRY4_DI_UNCONNECTED;
  wire [3:0]NLW_blk0000001b_CARRY4_O_UNCONNECTED;
  wire [3:2]NLW_blk0000001b_CARRY4_S_UNCONNECTED;
  wire NLW_blk0000001d_O_UNCONNECTED;
  wire NLW_blk0000001e_O_UNCONNECTED;
  wire NLW_blk0000001f_O_UNCONNECTED;
  wire NLW_blk00000020_O_UNCONNECTED;
  wire NLW_blk00000021_O_UNCONNECTED;
  wire NLW_blk00000024_O5_UNCONNECTED;
  wire NLW_blk00000025_O5_UNCONNECTED;
  wire [3:0]NLW_blk00000060_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_blk00000060_CARRY4_DI_UNCONNECTED;
  wire [3:1]NLW_blk00000060_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk00000060_CARRY4_S_UNCONNECTED;
  wire [0:0]NLW_blk00000070_CARRY4_O_UNCONNECTED;
  wire [3:0]NLW_blk00000071_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_blk00000071_CARRY4_DI_UNCONNECTED;
  wire [3:1]NLW_blk00000071_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk00000071_CARRY4_S_UNCONNECTED;
  wire [0:0]NLW_blk00000081_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk000000b3_CARRY4_CO_UNCONNECTED;
  wire [3:1]NLW_blk000000b3_CARRY4_DI_UNCONNECTED;
  wire [3:2]NLW_blk000000b3_CARRY4_O_UNCONNECTED;
  wire [3:2]NLW_blk000000b3_CARRY4_S_UNCONNECTED;
  wire [0:0]NLW_blk000000c3_CARRY4_O_UNCONNECTED;
  wire [3:3]NLW_blk0000010e_CARRY4_CO_UNCONNECTED;
  wire [3:3]NLW_blk0000010e_CARRY4_DI_UNCONNECTED;
  wire [3:0]NLW_blk0000010e_CARRY4_O_UNCONNECTED;
  wire [3:3]NLW_blk0000010e_CARRY4_S_UNCONNECTED;
  wire [3:0]NLW_blk00000112_CARRY4_O_UNCONNECTED;
  wire [1:0]NLW_blk00000123_CARRY4_O_UNCONNECTED;
  wire [3:0]NLW_blk0000014b_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_blk0000014b_CARRY4_DI_UNCONNECTED;
  wire [3:1]NLW_blk0000014b_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk0000014b_CARRY4_S_UNCONNECTED;
  wire [3:1]NLW_blk0000026c_CARRY4_CO_UNCONNECTED;
  wire [3:1]NLW_blk0000026c_CARRY4_DI_UNCONNECTED;
  wire [3:2]NLW_blk0000026c_CARRY4_O_UNCONNECTED;
  wire [3:2]NLW_blk0000026c_CARRY4_S_UNCONNECTED;
  wire [0:0]NLW_blk0000029b_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk0000029e_CARRY4_CO_UNCONNECTED;
  wire [3:1]NLW_blk0000029e_CARRY4_DI_UNCONNECTED;
  wire [3:2]NLW_blk0000029e_CARRY4_O_UNCONNECTED;
  wire [3:2]NLW_blk0000029e_CARRY4_S_UNCONNECTED;
  wire [0:0]NLW_blk000002cd_CARRY4_O_UNCONNECTED;
  wire NLW_blk000002cf_O_UNCONNECTED;
  wire NLW_blk000002d1_O_UNCONNECTED;
  wire NLW_blk000002d2_O_UNCONNECTED;
  wire NLW_blk000002d3_O_UNCONNECTED;
  wire NLW_blk000002d7_O_UNCONNECTED;
  wire [3:0]NLW_blk000002e7_CARRY4_O_UNCONNECTED;
  wire [3:0]NLW_blk000002eb_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk000002f4_CARRY4_CO_UNCONNECTED;
  wire [3:1]NLW_blk000002f4_CARRY4_DI_UNCONNECTED;
  wire [3:0]NLW_blk000002f4_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk000002f4_CARRY4_S_UNCONNECTED;
  wire [3:0]NLW_blk000002f8_CARRY4_O_UNCONNECTED;
  wire [3:0]NLW_blk00000330_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_blk00000330_CARRY4_DI_UNCONNECTED;
  wire [3:0]NLW_blk00000330_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk00000330_CARRY4_S_UNCONNECTED;
  wire [3:0]NLW_blk00000331_CARRY4_O_UNCONNECTED;
  wire [1:0]NLW_blk00000335_CARRY4_O_UNCONNECTED;
  wire [3:2]NLW_blk0000035e_CARRY4_CO_UNCONNECTED;
  wire [3:2]NLW_blk0000035e_CARRY4_DI_UNCONNECTED;
  wire [3:1]NLW_blk0000035e_CARRY4_O_UNCONNECTED;
  wire [3:2]NLW_blk0000035e_CARRY4_S_UNCONNECTED;

  assign result[31] = \U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/sign_op ;
  assign result[30:23] = \U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/exp_op ;
  assign result[22:0] = \U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/mant_op ;
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000003
       (.C(clk),
        .CE(1'b1),
        .D(sig00000001),
        .Q(sig00000040),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000004
       (.C(clk),
        .CE(1'b1),
        .D(sig00000002),
        .Q(sig0000003f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000005
       (.C(clk),
        .CE(1'b1),
        .D(sig0000005d),
        .Q(sig0000005c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000006
       (.C(clk),
        .CE(1'b1),
        .D(sig0000001e),
        .Q(sig00000041),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000007
       (.C(clk),
        .CE(1'b1),
        .D(sig000000b6),
        .Q(sig0000019b),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000008_CARRY4
       (.CI(1'b0),
        .CO({sig000000b4,sig000000b3,sig000000b2,sig000000b1}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_blk00000008_CARRY4_O_UNCONNECTED[3:0]),
        .S({sig000000c7,sig000000c6,sig000000c5,sig000000c4}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000000c_CARRY4
       (.CI(sig000000b4),
        .CO({NLW_blk0000000c_CARRY4_CO_UNCONNECTED[3:2],sig000000b6,sig000000b5}),
        .CYINIT(1'b0),
        .DI({NLW_blk0000000c_CARRY4_DI_UNCONNECTED[3:2],1'b0,1'b0}),
        .O(NLW_blk0000000c_CARRY4_O_UNCONNECTED[3:0]),
        .S({NLW_blk0000000c_CARRY4_S_UNCONNECTED[3:2],sig000000c3,sig000000c8}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000000e
       (.C(clk),
        .CE(1'b1),
        .D(sig000000bc),
        .Q(sig00000199),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000000f_CARRY4
       (.CI(1'b0),
        .CO({sig000000ba,sig000000b9,sig000000b8,sig000000b7}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_blk0000000f_CARRY4_O_UNCONNECTED[3:0]),
        .S({sig000000c1,sig000000c0,sig000000bf,sig000000be}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000013_CARRY4
       (.CI(sig000000ba),
        .CO({NLW_blk00000013_CARRY4_CO_UNCONNECTED[3:2],sig000000bc,sig000000bb}),
        .CYINIT(1'b0),
        .DI({NLW_blk00000013_CARRY4_DI_UNCONNECTED[3:2],1'b0,1'b0}),
        .O(NLW_blk00000013_CARRY4_O_UNCONNECTED[3:0]),
        .S({NLW_blk00000013_CARRY4_S_UNCONNECTED[3:2],sig000000bd,sig000000c2}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000016_CARRY4
       (.CI(1'b0),
        .CO({NLW_blk00000016_CARRY4_CO_UNCONNECTED[3:2],sig000000d3,sig000000d4}),
        .CYINIT(1'b1),
        .DI({NLW_blk00000016_CARRY4_DI_UNCONNECTED[3:2],1'b0,1'b0}),
        .O(NLW_blk00000016_CARRY4_O_UNCONNECTED[3:0]),
        .S({NLW_blk00000016_CARRY4_S_UNCONNECTED[3:2],sig000000d2,sig000000d1}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000018_CARRY4
       (.CI(1'b0),
        .CO({NLW_blk00000018_CARRY4_CO_UNCONNECTED[3:2],sig000000d7,sig000000d8}),
        .CYINIT(1'b1),
        .DI({NLW_blk00000018_CARRY4_DI_UNCONNECTED[3:2],1'b0,1'b0}),
        .O(NLW_blk00000018_CARRY4_O_UNCONNECTED[3:0]),
        .S({NLW_blk00000018_CARRY4_S_UNCONNECTED[3:2],sig000000d6,sig000000d5}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000019_CARRY4
       (.CI(1'b0),
        .CO({NLW_blk00000019_CARRY4_CO_UNCONNECTED[3:2],sig000000db,sig000000da}),
        .CYINIT(1'b1),
        .DI({NLW_blk00000019_CARRY4_DI_UNCONNECTED[3:2],1'b0,1'b0}),
        .O(NLW_blk00000019_CARRY4_O_UNCONNECTED[3:0]),
        .S({NLW_blk00000019_CARRY4_S_UNCONNECTED[3:2],sig000000e2,sig000000e1}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000001b_CARRY4
       (.CI(1'b0),
        .CO({NLW_blk0000001b_CARRY4_CO_UNCONNECTED[3:2],sig000000de,sig000000dd}),
        .CYINIT(1'b1),
        .DI({NLW_blk0000001b_CARRY4_DI_UNCONNECTED[3:2],1'b0,1'b0}),
        .O(NLW_blk0000001b_CARRY4_O_UNCONNECTED[3:0]),
        .S({NLW_blk0000001b_CARRY4_S_UNCONNECTED[3:2],sig000000e0,sig000000df}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  MUXF7 blk0000001d
       (.I0(1'b0),
        .I1(sig000000fe),
        .O(NLW_blk0000001d_O_UNCONNECTED),
        .S(sig0000013a));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  MUXF7 blk0000001e
       (.I0(1'b0),
        .I1(sig000000ff),
        .O(NLW_blk0000001e_O_UNCONNECTED),
        .S(sig0000013a));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  MUXF7 blk0000001f
       (.I0(1'b0),
        .I1(sig00000100),
        .O(NLW_blk0000001f_O_UNCONNECTED),
        .S(sig0000013a));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  MUXF7 blk00000020
       (.I0(1'b0),
        .I1(sig00000101),
        .O(NLW_blk00000020_O_UNCONNECTED),
        .S(sig0000013a));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  MUXF7 blk00000021
       (.I0(1'b0),
        .I1(1'b0),
        .O(NLW_blk00000021_O_UNCONNECTED),
        .S(sig0000013a));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  MUXF7 blk00000022
       (.I0(sig00000590),
        .I1(sig00000103),
        .O(sig00000106),
        .S(sig0000013a));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  MUXF7 blk00000023
       (.I0(sig00000591),
        .I1(sig00000104),
        .O(sig00000107),
        .S(sig0000013a));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT6_2 #(
    .INIT(64'hF5F9F5F9000C000C)) 
    blk00000024
       (.I0(1'b0),
        .I1(1'b0),
        .I2(1'b0),
        .I3(1'b0),
        .I4(1'b0),
        .I5(1'b1),
        .O5(NLW_blk00000024_O5_UNCONNECTED),
        .O6(sig00000176));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT6_2 #(
    .INIT(64'hF5F9F5F90A0A0A0A)) 
    blk00000025
       (.I0(1'b0),
        .I1(1'b0),
        .I2(1'b0),
        .I3(1'b0),
        .I4(1'b0),
        .I5(1'b1),
        .O5(NLW_blk00000025_O5_UNCONNECTED),
        .O6(sig00000177));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT6_2 #(
    .INIT(64'hFA09FA09FF0CFF0C)) 
    blk00000026
       (.I0(a[30]),
        .I1(b[30]),
        .I2(1'b0),
        .I3(1'b0),
        .I4(1'b0),
        .I5(1'b1),
        .O5(sig00000179),
        .O6(sig00000178));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT6_2 #(
    .INIT(64'hFA09FA09FAFAFAFA)) 
    blk00000027
       (.I0(a[30]),
        .I1(b[30]),
        .I2(1'b0),
        .I3(1'b0),
        .I4(1'b0),
        .I5(1'b1),
        .O5(sig0000017b),
        .O6(sig0000017a));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT6_2 #(
    .INIT(64'hF5F9F5F9000C000C)) 
    blk00000028
       (.I0(a[29]),
        .I1(b[29]),
        .I2(1'b0),
        .I3(1'b0),
        .I4(1'b0),
        .I5(1'b1),
        .O5(sig0000017d),
        .O6(sig0000017c));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT6_2 #(
    .INIT(64'hF5F9F5F90A0A0A0A)) 
    blk00000029
       (.I0(a[29]),
        .I1(b[29]),
        .I2(1'b0),
        .I3(1'b0),
        .I4(1'b0),
        .I5(1'b1),
        .O5(sig0000017f),
        .O6(sig0000017e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT6_2 #(
    .INIT(64'hF5F9F5F9000C000C)) 
    blk0000002a
       (.I0(a[28]),
        .I1(b[28]),
        .I2(1'b0),
        .I3(1'b0),
        .I4(1'b0),
        .I5(1'b1),
        .O5(sig00000181),
        .O6(sig00000180));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT6_2 #(
    .INIT(64'hF5F9F5F90A0A0A0A)) 
    blk0000002b
       (.I0(a[28]),
        .I1(b[28]),
        .I2(1'b0),
        .I3(1'b0),
        .I4(1'b0),
        .I5(1'b1),
        .O5(sig00000183),
        .O6(sig00000182));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT6_2 #(
    .INIT(64'hFA09FA09FF0CFF0C)) 
    blk0000002c
       (.I0(a[27]),
        .I1(b[27]),
        .I2(1'b0),
        .I3(1'b0),
        .I4(1'b0),
        .I5(1'b1),
        .O5(sig00000185),
        .O6(sig00000184));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT6_2 #(
    .INIT(64'hFA09FA09FAFAFAFA)) 
    blk0000002d
       (.I0(a[27]),
        .I1(b[27]),
        .I2(1'b0),
        .I3(1'b0),
        .I4(1'b0),
        .I5(1'b1),
        .O5(sig00000187),
        .O6(sig00000186));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT6_2 #(
    .INIT(64'h0AF90AF9FF0CFF0C)) 
    blk0000002e
       (.I0(a[26]),
        .I1(b[26]),
        .I2(1'b0),
        .I3(1'b0),
        .I4(1'b0),
        .I5(1'b1),
        .O5(sig00000189),
        .O6(sig00000188));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT6_2 #(
    .INIT(64'h0AF90AF90A0A0A0A)) 
    blk0000002f
       (.I0(a[26]),
        .I1(b[26]),
        .I2(1'b0),
        .I3(1'b0),
        .I4(1'b0),
        .I5(1'b1),
        .O5(sig0000018b),
        .O6(sig0000018a));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT6_2 #(
    .INIT(64'hFA09FA09FF0CFF0C)) 
    blk00000030
       (.I0(a[25]),
        .I1(b[25]),
        .I2(1'b0),
        .I3(1'b0),
        .I4(1'b0),
        .I5(1'b1),
        .O5(sig0000018d),
        .O6(sig0000018c));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT6_2 #(
    .INIT(64'hFA09FA09FAFAFAFA)) 
    blk00000031
       (.I0(a[25]),
        .I1(b[25]),
        .I2(1'b0),
        .I3(1'b0),
        .I4(1'b0),
        .I5(1'b1),
        .O5(sig0000018f),
        .O6(sig0000018e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT6_2 #(
    .INIT(64'h05090509000C000C)) 
    blk00000032
       (.I0(a[24]),
        .I1(b[24]),
        .I2(1'b0),
        .I3(1'b0),
        .I4(1'b0),
        .I5(1'b1),
        .O5(sig00000191),
        .O6(sig00000190));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT6_2 #(
    .INIT(64'h05090509FAFAFAFA)) 
    blk00000033
       (.I0(a[24]),
        .I1(b[24]),
        .I2(1'b0),
        .I3(1'b0),
        .I4(1'b0),
        .I5(1'b1),
        .O5(sig00000193),
        .O6(sig00000192));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT6_2 #(
    .INIT(64'h0AF90AF9FF0CFF0C)) 
    blk00000034
       (.I0(a[23]),
        .I1(b[23]),
        .I2(1'b0),
        .I3(1'b0),
        .I4(1'b0),
        .I5(1'b1),
        .O5(sig00000195),
        .O6(sig00000194));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT6_2 #(
    .INIT(64'h0AF90AF90A0A0A0A)) 
    blk00000035
       (.I0(a[23]),
        .I1(b[23]),
        .I2(1'b0),
        .I3(1'b0),
        .I4(1'b0),
        .I5(1'b1),
        .O5(sig00000197),
        .O6(sig00000196));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000036
       (.C(clk),
        .CE(1'b1),
        .D(sig00000107),
        .Q(sig00000113),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000037
       (.C(clk),
        .CE(1'b1),
        .D(sig00000106),
        .Q(sig00000114),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000038
       (.C(clk),
        .CE(1'b1),
        .D(sig00000112),
        .Q(sig00000117),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000039
       (.C(clk),
        .CE(1'b1),
        .D(sig00000122),
        .Q(sig00000119),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000003a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000111),
        .Q(sig00000116),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000003b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000105),
        .Q(sig00000118),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000003c
       (.C(clk),
        .CE(1'b1),
        .D(sig000000e4),
        .Q(sig000000c9),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000003d
       (.C(clk),
        .CE(1'b1),
        .D(sig000000c9),
        .Q(sig00000123),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000003e
       (.C(clk),
        .CE(1'b1),
        .D(sig0000010a),
        .Q(sig000000cb),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000003f
       (.C(clk),
        .CE(1'b1),
        .D(sig000000cb),
        .Q(sig000000ca),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000040
       (.C(clk),
        .CE(1'b1),
        .D(sig000000ca),
        .Q(sig0000009a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000041
       (.C(clk),
        .CE(1'b1),
        .D(sig0000010b),
        .Q(sig000000cc),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000042
       (.C(clk),
        .CE(1'b1),
        .D(sig000000cc),
        .Q(sig0000012d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000043
       (.C(clk),
        .CE(1'b1),
        .D(sig0000012d),
        .Q(sig000000cd),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000044
       (.C(clk),
        .CE(1'b1),
        .D(sig000000cd),
        .Q(sig00000098),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000045
       (.C(clk),
        .CE(1'b1),
        .D(sig00000108),
        .Q(sig000000cf),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000046
       (.C(clk),
        .CE(1'b1),
        .D(sig00000109),
        .Q(sig000000ce),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000047
       (.C(clk),
        .CE(1'b1),
        .D(sig000000cf),
        .Q(sig0000012e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000048
       (.C(clk),
        .CE(1'b1),
        .D(sig000000ce),
        .Q(sig0000012f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000049
       (.C(clk),
        .CE(1'b1),
        .D(1'b1),
        .Q(sig000002cc),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000004a
       (.C(clk),
        .CE(1'b1),
        .D(sig0000001f),
        .Q(sig00000175),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000004b
       (.C(clk),
        .CE(1'b1),
        .D(sig000000fd),
        .Q(sig00000003),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000004c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000102),
        .Q(sig0000009d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000004d
       (.C(clk),
        .CE(1'b1),
        .D(a[31]),
        .Q(sig00000145),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000004e
       (.C(clk),
        .CE(1'b1),
        .D(b[31]),
        .Q(sig00000144),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000004f
       (.C(clk),
        .CE(1'b1),
        .D(sig000000e3),
        .Q(sig000000d0),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000050
       (.C(clk),
        .CE(1'b1),
        .D(sig0000010e),
        .Q(sig00000143),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000051
       (.C(clk),
        .CE(1'b1),
        .D(sig00000110),
        .Q(sig00000142),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000052
       (.C(clk),
        .CE(1'b1),
        .D(sig00000145),
        .Q(sig00000141),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000053
       (.C(clk),
        .CE(1'b1),
        .D(sig00000144),
        .Q(sig00000140),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000054
       (.C(clk),
        .CE(1'b1),
        .D(sig0000009f),
        .Q(sig0000013f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000055
       (.C(clk),
        .CE(1'b1),
        .D(sig0000019a),
        .Q(sig0000013e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000056
       (.C(clk),
        .CE(1'b1),
        .D(sig0000019b),
        .Q(sig0000013d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000057
       (.C(clk),
        .CE(1'b1),
        .D(sig00000198),
        .Q(sig0000013c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000058
       (.C(clk),
        .CE(1'b1),
        .D(sig00000199),
        .Q(sig0000013b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000059
       (.C(clk),
        .CE(1'b1),
        .D(sig00000099),
        .Q(sig00000139),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000005a
       (.C(clk),
        .CE(1'b1),
        .D(sig0000010f),
        .Q(sig00000138),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000005b
       (.C(clk),
        .CE(1'b1),
        .D(sig000000ed),
        .Q(sig0000012c),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000005c
       (.C(clk),
        .CE(1'b1),
        .D(sig000000d3),
        .Q(sig00000198),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000005d
       (.C(clk),
        .CE(1'b1),
        .D(sig000000d7),
        .Q(sig0000019a),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000005e
       (.C(clk),
        .CE(1'b1),
        .D(sig000000db),
        .Q(sig000000d9),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000005f
       (.C(clk),
        .CE(1'b1),
        .D(sig000000de),
        .Q(sig000000dc),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000060_CARRY4
       (.CI(sig0000019c),
        .CO(NLW_blk00000060_CARRY4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI(NLW_blk00000060_CARRY4_DI_UNCONNECTED[3:0]),
        .O({NLW_blk00000060_CARRY4_O_UNCONNECTED[3:1],sig00000165}),
        .S({NLW_blk00000060_CARRY4_S_UNCONNECTED[3:1],sig00000176}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000068_CARRY4
       (.CI(sig000001a0),
        .CO({sig0000019c,sig0000019d,sig0000019e,sig0000019f}),
        .CYINIT(1'b0),
        .DI({sig00000179,sig0000017d,sig00000181,sig00000185}),
        .O({sig00000164,sig00000163,sig00000162,sig00000161}),
        .S({sig00000178,sig0000017c,sig00000180,sig00000184}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000070_CARRY4
       (.CI(1'b0),
        .CO({sig000001a0,sig000001a1,sig000001a2,sig000001a3}),
        .CYINIT(1'b1),
        .DI({sig00000189,sig0000018d,sig00000191,sig00000195}),
        .O({sig00000160,sig0000015f,sig0000015e,NLW_blk00000070_CARRY4_O_UNCONNECTED[0]}),
        .S({sig00000188,sig0000018c,sig00000190,sig00000194}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000071_CARRY4
       (.CI(sig000001a4),
        .CO(NLW_blk00000071_CARRY4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI(NLW_blk00000071_CARRY4_DI_UNCONNECTED[3:0]),
        .O({NLW_blk00000071_CARRY4_O_UNCONNECTED[3:1],sig00000174}),
        .S({NLW_blk00000071_CARRY4_S_UNCONNECTED[3:1],sig00000177}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000079_CARRY4
       (.CI(sig000001a8),
        .CO({sig000001a4,sig000001a5,sig000001a6,sig000001a7}),
        .CYINIT(1'b0),
        .DI({sig0000017b,sig0000017f,sig00000183,sig00000187}),
        .O({sig00000173,sig00000172,sig00000171,sig00000170}),
        .S({sig0000017a,sig0000017e,sig00000182,sig00000186}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000081_CARRY4
       (.CI(1'b0),
        .CO({sig000001a8,sig000001a9,sig000001aa,sig000001ab}),
        .CYINIT(1'b1),
        .DI({sig0000018b,sig0000018f,sig00000193,sig00000197}),
        .O({sig0000016f,sig0000016e,sig0000016d,NLW_blk00000081_CARRY4_O_UNCONNECTED[0]}),
        .S({sig0000018a,sig0000018e,sig00000192,sig00000196}));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000082
       (.C(clk),
        .CE(1'b1),
        .D(sig00000137),
        .Q(sig0000012b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000083
       (.C(clk),
        .CE(1'b1),
        .D(sig00000136),
        .Q(sig0000012a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000084
       (.C(clk),
        .CE(1'b1),
        .D(sig00000135),
        .Q(sig00000129),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000085
       (.C(clk),
        .CE(1'b1),
        .D(sig00000134),
        .Q(sig00000128),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000086
       (.C(clk),
        .CE(1'b1),
        .D(sig00000133),
        .Q(sig00000127),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000087
       (.C(clk),
        .CE(1'b1),
        .D(sig00000132),
        .Q(sig00000126),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000088
       (.C(clk),
        .CE(1'b1),
        .D(sig00000131),
        .Q(sig00000125),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000089
       (.C(clk),
        .CE(1'b1),
        .D(sig00000130),
        .Q(sig00000124),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000008a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000165),
        .Q(sig00000156),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000008b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000164),
        .Q(sig0000015d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000008c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000163),
        .Q(sig0000015c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000008d
       (.C(clk),
        .CE(1'b1),
        .D(sig00000162),
        .Q(sig0000015b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000008e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000161),
        .Q(sig0000015a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000008f
       (.C(clk),
        .CE(1'b1),
        .D(sig00000160),
        .Q(sig00000159),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000090
       (.C(clk),
        .CE(1'b1),
        .D(sig0000015f),
        .Q(sig00000158),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000091
       (.C(clk),
        .CE(1'b1),
        .D(sig0000015e),
        .Q(sig00000157),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000092
       (.C(clk),
        .CE(1'b1),
        .D(sig00000174),
        .Q(sig00000099),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000093
       (.C(clk),
        .CE(1'b1),
        .D(sig00000173),
        .Q(sig0000016c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000094
       (.C(clk),
        .CE(1'b1),
        .D(sig00000172),
        .Q(sig0000016b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000095
       (.C(clk),
        .CE(1'b1),
        .D(sig00000171),
        .Q(sig0000016a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000096
       (.C(clk),
        .CE(1'b1),
        .D(sig00000170),
        .Q(sig00000169),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000097
       (.C(clk),
        .CE(1'b1),
        .D(sig0000016f),
        .Q(sig00000168),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000098
       (.C(clk),
        .CE(1'b1),
        .D(sig0000016e),
        .Q(sig00000167),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000099
       (.C(clk),
        .CE(1'b1),
        .D(sig0000016d),
        .Q(sig00000166),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000009a
       (.C(clk),
        .CE(1'b1),
        .D(sig000000fc),
        .Q(sig000000ae),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000009b
       (.C(clk),
        .CE(1'b1),
        .D(sig000000fb),
        .Q(sig000000ad),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000009c
       (.C(clk),
        .CE(1'b1),
        .D(sig000000fa),
        .Q(sig000000ac),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000009d
       (.C(clk),
        .CE(1'b1),
        .D(sig000000f9),
        .Q(sig000000ab),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000009e
       (.C(clk),
        .CE(1'b1),
        .D(sig000000f8),
        .Q(sig000000aa),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000009f
       (.C(clk),
        .CE(1'b1),
        .D(sig000000f7),
        .Q(sig000000a9),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000a0
       (.C(clk),
        .CE(1'b1),
        .D(sig000000f6),
        .Q(sig000000a8),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000a1
       (.C(clk),
        .CE(1'b1),
        .D(sig000001b3),
        .Q(sig00000137),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000a2
       (.C(clk),
        .CE(1'b1),
        .D(sig000001b2),
        .Q(sig00000136),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000a3
       (.C(clk),
        .CE(1'b1),
        .D(sig000001b1),
        .Q(sig00000135),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000a4
       (.C(clk),
        .CE(1'b1),
        .D(sig000001b0),
        .Q(sig00000134),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000a5
       (.C(clk),
        .CE(1'b1),
        .D(sig000001af),
        .Q(sig00000133),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000a6
       (.C(clk),
        .CE(1'b1),
        .D(sig000001ae),
        .Q(sig00000132),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000a7
       (.C(clk),
        .CE(1'b1),
        .D(sig000001ad),
        .Q(sig00000131),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000a8
       (.C(clk),
        .CE(1'b1),
        .D(sig000001ac),
        .Q(sig00000130),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000a9
       (.C(clk),
        .CE(1'b1),
        .D(sig000000f5),
        .Q(sig000001b3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000aa
       (.C(clk),
        .CE(1'b1),
        .D(sig000000f4),
        .Q(sig000001b2),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000ab
       (.C(clk),
        .CE(1'b1),
        .D(sig000000f3),
        .Q(sig000001b1),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000ac
       (.C(clk),
        .CE(1'b1),
        .D(sig000000f2),
        .Q(sig000001b0),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000ad
       (.C(clk),
        .CE(1'b1),
        .D(sig000000f1),
        .Q(sig000001af),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000ae
       (.C(clk),
        .CE(1'b1),
        .D(sig000000f0),
        .Q(sig000001ae),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000af
       (.C(clk),
        .CE(1'b1),
        .D(sig000000ef),
        .Q(sig000001ad),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000b0
       (.C(clk),
        .CE(1'b1),
        .D(sig000000ee),
        .Q(sig000001ac),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000000b3_CARRY4
       (.CI(sig000001b5),
        .CO({NLW_blk000000b3_CARRY4_CO_UNCONNECTED[3:1],sig000001b4}),
        .CYINIT(1'b0),
        .DI({NLW_blk000000b3_CARRY4_DI_UNCONNECTED[3:1],sig0000012b}),
        .O({NLW_blk000000b3_CARRY4_O_UNCONNECTED[3:2],sig00000122,sig00000121}),
        .S({NLW_blk000000b3_CARRY4_S_UNCONNECTED[3:2],1'b1,sig000000eb}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000000bb_CARRY4
       (.CI(sig000001b9),
        .CO({sig000001b5,sig000001b6,sig000001b7,sig000001b8}),
        .CYINIT(1'b0),
        .DI({sig0000012a,sig00000129,sig00000128,sig00000127}),
        .O({sig00000120,sig0000011f,sig0000011e,sig0000011d}),
        .S({sig000000ea,sig000000e9,sig00000583,sig000000e8}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000000c3_CARRY4
       (.CI(1'b0),
        .CO({sig000001b9,sig000001ba,sig000001bb,sig000001bc}),
        .CYINIT(1'b0),
        .DI({sig00000126,sig00000125,sig00000124,1'b1}),
        .O({sig0000011c,sig0000011b,sig0000011a,NLW_blk000000c3_CARRY4_O_UNCONNECTED[0]}),
        .S({sig000000e7,sig000000e6,sig000000e5,1'b0}));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000c4
       (.C(clk),
        .CE(1'b1),
        .D(sig00000121),
        .Q(sig000000a7),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000c5
       (.C(clk),
        .CE(1'b1),
        .D(sig00000120),
        .Q(sig000000a6),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000c6
       (.C(clk),
        .CE(1'b1),
        .D(sig0000011f),
        .Q(sig000000a5),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000c7
       (.C(clk),
        .CE(1'b1),
        .D(sig0000011e),
        .Q(sig000000a4),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000c8
       (.C(clk),
        .CE(1'b1),
        .D(sig0000011d),
        .Q(sig000000a3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000c9
       (.C(clk),
        .CE(1'b1),
        .D(sig0000011c),
        .Q(sig000000a2),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000ca
       (.C(clk),
        .CE(1'b1),
        .D(sig0000011b),
        .Q(sig000000a1),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000cb
       (.C(clk),
        .CE(1'b1),
        .D(sig0000011a),
        .Q(sig000000a0),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000cc
       (.C(clk),
        .CE(1'b1),
        .D(sig000000a8),
        .Q(sig000001d8),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000cd
       (.C(clk),
        .CE(1'b1),
        .D(sig000000a9),
        .Q(sig000001d7),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000ce
       (.C(clk),
        .CE(1'b1),
        .D(sig0000009e),
        .Q(sig00000227),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000cf
       (.C(clk),
        .CE(1'b1),
        .D(sig00000227),
        .Q(sig000002a3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000d0
       (.C(clk),
        .CE(1'b1),
        .D(sig0000009c),
        .Q(sig000002a2),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000d1
       (.C(clk),
        .CE(1'b1),
        .D(sig00000228),
        .Q(sig00000229),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000d2
       (.C(clk),
        .CE(1'b1),
        .D(sig000002bc),
        .Q(sig0000007c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000d3
       (.C(clk),
        .CE(1'b1),
        .D(sig000001d9),
        .Q(sig000001bd),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000d4
       (.C(clk),
        .CE(1'b1),
        .D(sig000001da),
        .Q(sig000001be),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000d5
       (.C(clk),
        .CE(1'b1),
        .D(sig000001db),
        .Q(sig000001bf),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000d6
       (.C(clk),
        .CE(1'b1),
        .D(sig000001dc),
        .Q(sig000001c0),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000d7
       (.C(clk),
        .CE(1'b1),
        .D(sig000001dd),
        .Q(sig000001c1),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000d8
       (.C(clk),
        .CE(1'b1),
        .D(sig000001de),
        .Q(sig000001c2),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000d9
       (.C(clk),
        .CE(1'b1),
        .D(sig000001df),
        .Q(sig000001c3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000da
       (.C(clk),
        .CE(1'b1),
        .D(sig000001e0),
        .Q(sig000001c4),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000db
       (.C(clk),
        .CE(1'b1),
        .D(sig000001e1),
        .Q(sig000001c5),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000dc
       (.C(clk),
        .CE(1'b1),
        .D(sig000001e2),
        .Q(sig000001c6),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000dd
       (.C(clk),
        .CE(1'b1),
        .D(sig000001e3),
        .Q(sig000001c7),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000de
       (.C(clk),
        .CE(1'b1),
        .D(sig000001e4),
        .Q(sig000001c8),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000df
       (.C(clk),
        .CE(1'b1),
        .D(sig000001e5),
        .Q(sig000001c9),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000e0
       (.C(clk),
        .CE(1'b1),
        .D(sig000001e6),
        .Q(sig000001ca),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000e1
       (.C(clk),
        .CE(1'b1),
        .D(sig000001e7),
        .Q(sig000001cb),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000e2
       (.C(clk),
        .CE(1'b1),
        .D(sig000001e8),
        .Q(sig000001cc),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000e3
       (.C(clk),
        .CE(1'b1),
        .D(sig000001e9),
        .Q(sig000001cd),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000e4
       (.C(clk),
        .CE(1'b1),
        .D(sig000001ea),
        .Q(sig000001ce),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000e5
       (.C(clk),
        .CE(1'b1),
        .D(sig000001eb),
        .Q(sig000001cf),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000e6
       (.C(clk),
        .CE(1'b1),
        .D(sig000001ec),
        .Q(sig000001d0),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000e7
       (.C(clk),
        .CE(1'b1),
        .D(sig000001ed),
        .Q(sig000001d1),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000e8
       (.C(clk),
        .CE(1'b1),
        .D(sig000001ee),
        .Q(sig000001d2),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000e9
       (.C(clk),
        .CE(1'b1),
        .D(sig000001ef),
        .Q(sig000001d3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000ea
       (.C(clk),
        .CE(1'b1),
        .D(sig000001f0),
        .Q(sig000001d4),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000eb
       (.C(clk),
        .CE(1'b1),
        .D(sig000001f1),
        .Q(sig000001d5),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000ec
       (.C(clk),
        .CE(1'b1),
        .D(sig000001f2),
        .Q(sig000001d6),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000ed
       (.C(clk),
        .CE(1'b1),
        .D(sig000001f3),
        .Q(sig0000020d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000ee
       (.C(clk),
        .CE(1'b1),
        .D(sig000001f4),
        .Q(sig0000020e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000ef
       (.C(clk),
        .CE(1'b1),
        .D(sig000001f5),
        .Q(sig0000020f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000f0
       (.C(clk),
        .CE(1'b1),
        .D(sig000001f6),
        .Q(sig00000210),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000f1
       (.C(clk),
        .CE(1'b1),
        .D(sig000001f7),
        .Q(sig00000211),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000f2
       (.C(clk),
        .CE(1'b1),
        .D(sig000001f8),
        .Q(sig00000212),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000f3
       (.C(clk),
        .CE(1'b1),
        .D(sig000001f9),
        .Q(sig00000213),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000f4
       (.C(clk),
        .CE(1'b1),
        .D(sig000001fa),
        .Q(sig00000214),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000f5
       (.C(clk),
        .CE(1'b1),
        .D(sig000001fb),
        .Q(sig00000215),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000f6
       (.C(clk),
        .CE(1'b1),
        .D(sig000001fc),
        .Q(sig00000216),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000f7
       (.C(clk),
        .CE(1'b1),
        .D(sig000001fd),
        .Q(sig00000217),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000f8
       (.C(clk),
        .CE(1'b1),
        .D(sig000001fe),
        .Q(sig00000218),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000f9
       (.C(clk),
        .CE(1'b1),
        .D(sig000001ff),
        .Q(sig00000219),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000fa
       (.C(clk),
        .CE(1'b1),
        .D(sig00000200),
        .Q(sig0000021a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000fb
       (.C(clk),
        .CE(1'b1),
        .D(sig00000201),
        .Q(sig0000021b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000fc
       (.C(clk),
        .CE(1'b1),
        .D(sig00000202),
        .Q(sig0000021c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000fd
       (.C(clk),
        .CE(1'b1),
        .D(sig00000203),
        .Q(sig0000021d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000fe
       (.C(clk),
        .CE(1'b1),
        .D(sig00000204),
        .Q(sig0000021e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000ff
       (.C(clk),
        .CE(1'b1),
        .D(sig00000205),
        .Q(sig0000021f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000100
       (.C(clk),
        .CE(1'b1),
        .D(sig00000206),
        .Q(sig00000220),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000101
       (.C(clk),
        .CE(1'b1),
        .D(sig00000207),
        .Q(sig00000221),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000102
       (.C(clk),
        .CE(1'b1),
        .D(sig00000208),
        .Q(sig00000222),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000103
       (.C(clk),
        .CE(1'b1),
        .D(sig00000209),
        .Q(sig00000223),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000104
       (.C(clk),
        .CE(1'b1),
        .D(sig0000020a),
        .Q(sig00000224),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000105
       (.C(clk),
        .CE(1'b1),
        .D(sig0000020b),
        .Q(sig00000225),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000106
       (.C(clk),
        .CE(1'b1),
        .D(sig0000020c),
        .Q(sig00000226),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  MUXF8 blk00000107
       (.I0(sig000002bf),
        .I1(sig000002be),
        .O(sig000002bd),
        .S(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  MUXF7 blk00000108
       (.I0(1'b1),
        .I1(1'b1),
        .O(sig000002be),
        .S(sig000002c7));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  MUXF7 blk00000109
       (.I0(sig000002c9),
        .I1(sig000002c8),
        .O(sig000002bf),
        .S(sig000002c7));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000010a
       (.C(clk),
        .CE(1'b1),
        .D(sig000000aa),
        .Q(sig000002ca),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000010b
       (.C(clk),
        .CE(1'b1),
        .D(sig000000ab),
        .Q(sig000002c7),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000010e_CARRY4
       (.CI(sig000002e4),
        .CO({NLW_blk0000010e_CARRY4_CO_UNCONNECTED[3],sig000002e1,sig000002e2,sig000002e3}),
        .CYINIT(1'b0),
        .DI({NLW_blk0000010e_CARRY4_DI_UNCONNECTED[3],1'b0,1'b0,1'b0}),
        .O(NLW_blk0000010e_CARRY4_O_UNCONNECTED[3:0]),
        .S({NLW_blk0000010e_CARRY4_S_UNCONNECTED[3],sig000002d9,sig000002da,sig000002db}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000112_CARRY4
       (.CI(1'b0),
        .CO({sig000002e4,sig000002e5,sig000002e6,sig000002e7}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_blk00000112_CARRY4_O_UNCONNECTED[3:0]),
        .S({sig000002dc,sig000002dd,sig000002de,sig000002df}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000113
       (.C(clk),
        .CE(1'b1),
        .D(sig000002e1),
        .Q(sig000002e0),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000114
       (.C(clk),
        .CE(1'b1),
        .D(sig000002e2),
        .Q(sig000002d4),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000115
       (.C(clk),
        .CE(1'b1),
        .D(sig000002e3),
        .Q(sig000002d5),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000116
       (.C(clk),
        .CE(1'b1),
        .D(sig000002e4),
        .Q(sig000002d3),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000117
       (.C(clk),
        .CE(1'b1),
        .D(sig000002e5),
        .Q(sig000002d6),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000118
       (.C(clk),
        .CE(1'b1),
        .D(sig000002e6),
        .Q(sig000002d7),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000119
       (.C(clk),
        .CE(1'b1),
        .D(sig000002e7),
        .Q(sig000002d8),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000011a
       (.C(clk),
        .CE(1'b1),
        .D(sig000002bd),
        .Q(sig000002bc),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000011b
       (.C(clk),
        .CE(1'b1),
        .D(sig000002c0),
        .Q(sig000002cd),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000011c
       (.C(clk),
        .CE(1'b1),
        .D(sig000002c1),
        .Q(sig000002ce),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000011d
       (.C(clk),
        .CE(1'b1),
        .D(sig000002c2),
        .Q(sig000002cb),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000011e
       (.C(clk),
        .CE(1'b1),
        .D(sig000002c3),
        .Q(sig000002d0),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000011f
       (.C(clk),
        .CE(1'b1),
        .D(sig000002c4),
        .Q(sig000002d1),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000120
       (.C(clk),
        .CE(1'b1),
        .D(sig000002c5),
        .Q(sig000002d2),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000121
       (.C(clk),
        .CE(1'b1),
        .D(sig000002c6),
        .Q(sig000002cf),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000123_CARRY4
       (.CI(1'b0),
        .CO({sig00000329,sig0000032b,sig00000311,sig00000312}),
        .CYINIT(sig0000009b),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({sig00000328,sig0000032a,NLW_blk00000123_CARRY4_O_UNCONNECTED[1:0]}),
        .S({sig000002f6,sig000002f5,sig00000584,1'b1}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000129_CARRY4
       (.CI(sig00000319),
        .CO({sig00000338,sig00000310,sig00000315,sig00000317}),
        .CYINIT(1'b0),
        .DI({sig0000024e,sig0000024d,sig0000024c,sig0000024b}),
        .O({sig00000302,sig00000313,sig00000314,sig00000316}),
        .S({sig000002e8,sig00000301,sig00000300,sig000002ff}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000131_CARRY4
       (.CI(sig00000321),
        .CO({sig00000319,sig0000031b,sig0000031d,sig0000031f}),
        .CYINIT(1'b0),
        .DI({sig0000024a,sig00000249,sig00000248,sig00000247}),
        .O({sig00000318,sig0000031a,sig0000031c,sig0000031e}),
        .S({sig000002fe,sig000002fd,sig000002fc,sig000002fb}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000139_CARRY4
       (.CI(sig00000329),
        .CO({sig00000321,sig00000323,sig00000325,sig00000327}),
        .CYINIT(1'b0),
        .DI({sig00000246,sig00000245,sig00000244,sig00000243}),
        .O({sig00000320,sig00000322,sig00000324,sig00000326}),
        .S({sig000002fa,sig000002f9,sig000002f8,sig000002f7}));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000013e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000313),
        .Q(sig00000089),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000013f
       (.C(clk),
        .CE(1'b1),
        .D(sig00000314),
        .Q(sig00000088),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000140
       (.C(clk),
        .CE(1'b1),
        .D(sig00000316),
        .Q(sig00000087),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000141
       (.C(clk),
        .CE(1'b1),
        .D(sig00000318),
        .Q(sig00000086),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000142
       (.C(clk),
        .CE(1'b1),
        .D(sig0000031a),
        .Q(sig00000085),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000143
       (.C(clk),
        .CE(1'b1),
        .D(sig0000031c),
        .Q(sig00000084),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000144
       (.C(clk),
        .CE(1'b1),
        .D(sig0000031e),
        .Q(sig00000083),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000145
       (.C(clk),
        .CE(1'b1),
        .D(sig00000320),
        .Q(sig00000082),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000146
       (.C(clk),
        .CE(1'b1),
        .D(sig00000322),
        .Q(sig00000081),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000147
       (.C(clk),
        .CE(1'b1),
        .D(sig00000324),
        .Q(sig00000080),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000148
       (.C(clk),
        .CE(1'b1),
        .D(sig00000326),
        .Q(sig0000007f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000149
       (.C(clk),
        .CE(1'b1),
        .D(sig00000328),
        .Q(sig0000007e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000014a
       (.C(clk),
        .CE(1'b1),
        .D(sig0000032a),
        .Q(sig0000007d),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000014b_CARRY4
       (.CI(sig0000032c),
        .CO(NLW_blk0000014b_CARRY4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI(NLW_blk0000014b_CARRY4_DI_UNCONNECTED[3:0]),
        .O({NLW_blk0000014b_CARRY4_O_UNCONNECTED[3:1],sig0000030f}),
        .S({NLW_blk0000014b_CARRY4_S_UNCONNECTED[3:1],sig0000058f}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000153_CARRY4
       (.CI(sig00000330),
        .CO({sig0000032c,sig0000032d,sig0000032e,sig0000032f}),
        .CYINIT(1'b0),
        .DI({sig0000025a,sig00000259,sig00000258,sig00000257}),
        .O({sig0000030e,sig0000030d,sig0000030c,sig0000030b}),
        .S({sig000002f4,sig000002f3,sig000002f2,sig000002f1}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000015b_CARRY4
       (.CI(sig00000334),
        .CO({sig00000330,sig00000331,sig00000332,sig00000333}),
        .CYINIT(1'b0),
        .DI({sig00000256,sig00000255,sig00000254,sig00000253}),
        .O({sig0000030a,sig00000309,sig00000308,sig00000307}),
        .S({sig000002f0,sig000002ef,sig000002ee,sig000002ed}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000163_CARRY4
       (.CI(sig00000338),
        .CO({sig00000334,sig00000335,sig00000336,sig00000337}),
        .CYINIT(1'b0),
        .DI({sig00000252,sig00000251,sig00000250,sig0000024f}),
        .O({sig00000306,sig00000305,sig00000304,sig00000303}),
        .S({sig000002ec,sig000002eb,sig000002ea,sig000002e9}));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000166
       (.C(clk),
        .CE(1'b1),
        .D(sig0000030f),
        .Q(sig00000097),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000167
       (.C(clk),
        .CE(1'b1),
        .D(sig0000030e),
        .Q(sig00000096),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000168
       (.C(clk),
        .CE(1'b1),
        .D(sig0000030d),
        .Q(sig00000095),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000169
       (.C(clk),
        .CE(1'b1),
        .D(sig0000030c),
        .Q(sig00000094),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000016a
       (.C(clk),
        .CE(1'b1),
        .D(sig0000030b),
        .Q(sig00000093),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000016b
       (.C(clk),
        .CE(1'b1),
        .D(sig0000030a),
        .Q(sig00000092),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000016c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000309),
        .Q(sig00000091),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000016d
       (.C(clk),
        .CE(1'b1),
        .D(sig00000308),
        .Q(sig00000090),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000016e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000307),
        .Q(sig0000008f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000016f
       (.C(clk),
        .CE(1'b1),
        .D(sig00000306),
        .Q(sig0000008e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000170
       (.C(clk),
        .CE(1'b1),
        .D(sig00000305),
        .Q(sig0000008d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000171
       (.C(clk),
        .CE(1'b1),
        .D(sig00000304),
        .Q(sig0000008c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000172
       (.C(clk),
        .CE(1'b1),
        .D(sig00000303),
        .Q(sig0000008b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000173
       (.C(clk),
        .CE(1'b1),
        .D(sig00000302),
        .Q(sig0000008a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000174
       (.C(clk),
        .CE(1'b1),
        .D(b[22]),
        .Q(sig00000271),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000175
       (.C(clk),
        .CE(1'b1),
        .D(b[21]),
        .Q(sig00000270),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000176
       (.C(clk),
        .CE(1'b1),
        .D(b[20]),
        .Q(sig0000026f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000177
       (.C(clk),
        .CE(1'b1),
        .D(b[19]),
        .Q(sig0000026e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000178
       (.C(clk),
        .CE(1'b1),
        .D(b[18]),
        .Q(sig0000026d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000179
       (.C(clk),
        .CE(1'b1),
        .D(b[17]),
        .Q(sig0000026c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000017a
       (.C(clk),
        .CE(1'b1),
        .D(b[16]),
        .Q(sig0000026b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000017b
       (.C(clk),
        .CE(1'b1),
        .D(b[15]),
        .Q(sig0000026a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000017c
       (.C(clk),
        .CE(1'b1),
        .D(b[14]),
        .Q(sig00000269),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000017d
       (.C(clk),
        .CE(1'b1),
        .D(b[13]),
        .Q(sig00000268),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000017e
       (.C(clk),
        .CE(1'b1),
        .D(b[12]),
        .Q(sig00000267),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000017f
       (.C(clk),
        .CE(1'b1),
        .D(b[11]),
        .Q(sig00000266),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000180
       (.C(clk),
        .CE(1'b1),
        .D(b[10]),
        .Q(sig00000265),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000181
       (.C(clk),
        .CE(1'b1),
        .D(b[9]),
        .Q(sig00000264),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000182
       (.C(clk),
        .CE(1'b1),
        .D(b[8]),
        .Q(sig00000263),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000183
       (.C(clk),
        .CE(1'b1),
        .D(b[7]),
        .Q(sig00000262),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000184
       (.C(clk),
        .CE(1'b1),
        .D(b[6]),
        .Q(sig00000261),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000185
       (.C(clk),
        .CE(1'b1),
        .D(b[5]),
        .Q(sig00000260),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000186
       (.C(clk),
        .CE(1'b1),
        .D(b[4]),
        .Q(sig0000025f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000187
       (.C(clk),
        .CE(1'b1),
        .D(b[3]),
        .Q(sig0000025e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000188
       (.C(clk),
        .CE(1'b1),
        .D(b[2]),
        .Q(sig0000025d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000189
       (.C(clk),
        .CE(1'b1),
        .D(b[1]),
        .Q(sig0000025c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000018a
       (.C(clk),
        .CE(1'b1),
        .D(b[0]),
        .Q(sig0000025b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000018b
       (.C(clk),
        .CE(1'b1),
        .D(a[22]),
        .Q(sig00000288),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000018c
       (.C(clk),
        .CE(1'b1),
        .D(a[21]),
        .Q(sig00000287),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000018d
       (.C(clk),
        .CE(1'b1),
        .D(a[20]),
        .Q(sig00000286),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000018e
       (.C(clk),
        .CE(1'b1),
        .D(a[19]),
        .Q(sig00000285),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000018f
       (.C(clk),
        .CE(1'b1),
        .D(a[18]),
        .Q(sig00000284),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000190
       (.C(clk),
        .CE(1'b1),
        .D(a[17]),
        .Q(sig00000283),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000191
       (.C(clk),
        .CE(1'b1),
        .D(a[16]),
        .Q(sig00000282),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000192
       (.C(clk),
        .CE(1'b1),
        .D(a[15]),
        .Q(sig00000281),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000193
       (.C(clk),
        .CE(1'b1),
        .D(a[14]),
        .Q(sig00000280),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000194
       (.C(clk),
        .CE(1'b1),
        .D(a[13]),
        .Q(sig0000027f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000195
       (.C(clk),
        .CE(1'b1),
        .D(a[12]),
        .Q(sig0000027e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000196
       (.C(clk),
        .CE(1'b1),
        .D(a[11]),
        .Q(sig0000027d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000197
       (.C(clk),
        .CE(1'b1),
        .D(a[10]),
        .Q(sig0000027c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000198
       (.C(clk),
        .CE(1'b1),
        .D(a[9]),
        .Q(sig0000027b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000199
       (.C(clk),
        .CE(1'b1),
        .D(a[8]),
        .Q(sig0000027a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000019a
       (.C(clk),
        .CE(1'b1),
        .D(a[7]),
        .Q(sig00000279),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000019b
       (.C(clk),
        .CE(1'b1),
        .D(a[6]),
        .Q(sig00000278),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000019c
       (.C(clk),
        .CE(1'b1),
        .D(a[5]),
        .Q(sig00000277),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000019d
       (.C(clk),
        .CE(1'b1),
        .D(a[4]),
        .Q(sig00000276),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000019e
       (.C(clk),
        .CE(1'b1),
        .D(a[3]),
        .Q(sig00000275),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000019f
       (.C(clk),
        .CE(1'b1),
        .D(a[2]),
        .Q(sig00000274),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001a0
       (.C(clk),
        .CE(1'b1),
        .D(a[1]),
        .Q(sig00000273),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001a1
       (.C(clk),
        .CE(1'b1),
        .D(a[0]),
        .Q(sig00000272),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001a2
       (.C(clk),
        .CE(1'b1),
        .D(sig000002bb),
        .Q(sig00000350),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001a3
       (.C(clk),
        .CE(1'b1),
        .D(sig000002ba),
        .Q(sig0000034f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001a4
       (.C(clk),
        .CE(1'b1),
        .D(sig000002b9),
        .Q(sig0000034e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001a5
       (.C(clk),
        .CE(1'b1),
        .D(sig000002b8),
        .Q(sig0000034d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001a6
       (.C(clk),
        .CE(1'b1),
        .D(sig000002b7),
        .Q(sig0000034c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001a7
       (.C(clk),
        .CE(1'b1),
        .D(sig000002b6),
        .Q(sig0000034b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001a8
       (.C(clk),
        .CE(1'b1),
        .D(sig000002b5),
        .Q(sig0000034a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001a9
       (.C(clk),
        .CE(1'b1),
        .D(sig000002b4),
        .Q(sig00000349),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001aa
       (.C(clk),
        .CE(1'b1),
        .D(sig000002b3),
        .Q(sig00000348),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001ab
       (.C(clk),
        .CE(1'b1),
        .D(sig000002b2),
        .Q(sig00000347),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001ac
       (.C(clk),
        .CE(1'b1),
        .D(sig000002b1),
        .Q(sig00000346),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001ad
       (.C(clk),
        .CE(1'b1),
        .D(sig000002b0),
        .Q(sig00000345),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001ae
       (.C(clk),
        .CE(1'b1),
        .D(sig000002af),
        .Q(sig00000344),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001af
       (.C(clk),
        .CE(1'b1),
        .D(sig000002ae),
        .Q(sig00000343),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001b0
       (.C(clk),
        .CE(1'b1),
        .D(sig000002ad),
        .Q(sig00000342),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001b1
       (.C(clk),
        .CE(1'b1),
        .D(sig000002ac),
        .Q(sig00000341),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001b2
       (.C(clk),
        .CE(1'b1),
        .D(sig000002ab),
        .Q(sig00000340),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001b3
       (.C(clk),
        .CE(1'b1),
        .D(sig000002aa),
        .Q(sig0000033f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001b4
       (.C(clk),
        .CE(1'b1),
        .D(sig000002a9),
        .Q(sig0000033e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001b5
       (.C(clk),
        .CE(1'b1),
        .D(sig000002a8),
        .Q(sig0000033d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001b6
       (.C(clk),
        .CE(1'b1),
        .D(sig000002a7),
        .Q(sig0000033c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001b7
       (.C(clk),
        .CE(1'b1),
        .D(sig000002a6),
        .Q(sig0000033b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001b8
       (.C(clk),
        .CE(1'b1),
        .D(sig000002a5),
        .Q(sig0000033a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001b9
       (.C(clk),
        .CE(1'b1),
        .D(sig000002a4),
        .Q(sig00000339),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001ba
       (.C(clk),
        .CE(1'b1),
        .D(sig000002a1),
        .Q(sig00000242),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001bb
       (.C(clk),
        .CE(1'b1),
        .D(sig000002a0),
        .Q(sig00000241),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001bc
       (.C(clk),
        .CE(1'b1),
        .D(sig0000029f),
        .Q(sig00000240),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001bd
       (.C(clk),
        .CE(1'b1),
        .D(sig0000029e),
        .Q(sig0000023f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001be
       (.C(clk),
        .CE(1'b1),
        .D(sig0000029d),
        .Q(sig0000023e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001bf
       (.C(clk),
        .CE(1'b1),
        .D(sig0000029c),
        .Q(sig0000023d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001c0
       (.C(clk),
        .CE(1'b1),
        .D(sig0000029b),
        .Q(sig0000023c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001c1
       (.C(clk),
        .CE(1'b1),
        .D(sig0000029a),
        .Q(sig0000023b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001c2
       (.C(clk),
        .CE(1'b1),
        .D(sig00000299),
        .Q(sig0000023a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001c3
       (.C(clk),
        .CE(1'b1),
        .D(sig00000298),
        .Q(sig00000239),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001c4
       (.C(clk),
        .CE(1'b1),
        .D(sig00000297),
        .Q(sig00000238),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001c5
       (.C(clk),
        .CE(1'b1),
        .D(sig00000296),
        .Q(sig00000237),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001c6
       (.C(clk),
        .CE(1'b1),
        .D(sig00000295),
        .Q(sig00000236),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001c7
       (.C(clk),
        .CE(1'b1),
        .D(sig00000294),
        .Q(sig00000235),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001c8
       (.C(clk),
        .CE(1'b1),
        .D(sig00000293),
        .Q(sig00000234),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001c9
       (.C(clk),
        .CE(1'b1),
        .D(sig00000292),
        .Q(sig00000233),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001ca
       (.C(clk),
        .CE(1'b1),
        .D(sig00000291),
        .Q(sig00000232),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001cb
       (.C(clk),
        .CE(1'b1),
        .D(sig00000290),
        .Q(sig00000231),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001cc
       (.C(clk),
        .CE(1'b1),
        .D(sig0000028f),
        .Q(sig00000230),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001cd
       (.C(clk),
        .CE(1'b1),
        .D(sig0000028e),
        .Q(sig0000022f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001ce
       (.C(clk),
        .CE(1'b1),
        .D(sig0000028d),
        .Q(sig0000022e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001cf
       (.C(clk),
        .CE(1'b1),
        .D(sig0000028c),
        .Q(sig0000022d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001d0
       (.C(clk),
        .CE(1'b1),
        .D(sig0000028b),
        .Q(sig0000022c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001d1
       (.C(clk),
        .CE(1'b1),
        .D(sig0000028a),
        .Q(sig0000022b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001d2
       (.C(clk),
        .CE(1'b1),
        .D(sig00000289),
        .Q(sig0000022a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001d3
       (.C(clk),
        .CE(1'b1),
        .D(sig0000044c),
        .Q(sig00000465),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001d4
       (.C(clk),
        .CE(1'b1),
        .D(sig0000044d),
        .Q(sig00000466),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001d5
       (.C(clk),
        .CE(1'b1),
        .D(sig0000044e),
        .Q(sig00000467),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001d6
       (.C(clk),
        .CE(1'b1),
        .D(sig0000044f),
        .Q(sig00000468),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001d7
       (.C(clk),
        .CE(1'b1),
        .D(sig00000450),
        .Q(sig00000469),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001d8
       (.C(clk),
        .CE(1'b1),
        .D(sig00000451),
        .Q(sig0000046a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001d9
       (.C(clk),
        .CE(1'b1),
        .D(sig00000452),
        .Q(sig0000046b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001da
       (.C(clk),
        .CE(1'b1),
        .D(sig00000453),
        .Q(sig0000046c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001db
       (.C(clk),
        .CE(1'b1),
        .D(sig00000454),
        .Q(sig0000046d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001dc
       (.C(clk),
        .CE(1'b1),
        .D(sig00000455),
        .Q(sig0000046e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001dd
       (.C(clk),
        .CE(1'b1),
        .D(sig00000456),
        .Q(sig0000046f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001de
       (.C(clk),
        .CE(1'b1),
        .D(sig00000457),
        .Q(sig00000470),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001df
       (.C(clk),
        .CE(1'b1),
        .D(sig00000458),
        .Q(sig00000471),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001e0
       (.C(clk),
        .CE(1'b1),
        .D(sig00000459),
        .Q(sig00000472),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001e1
       (.C(clk),
        .CE(1'b1),
        .D(sig0000045a),
        .Q(sig00000473),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001e2
       (.C(clk),
        .CE(1'b1),
        .D(sig0000045b),
        .Q(sig00000474),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001e3
       (.C(clk),
        .CE(1'b1),
        .D(sig0000045c),
        .Q(sig00000475),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001e4
       (.C(clk),
        .CE(1'b1),
        .D(sig0000045d),
        .Q(sig00000476),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001e5
       (.C(clk),
        .CE(1'b1),
        .D(sig0000045e),
        .Q(sig00000477),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001e6
       (.C(clk),
        .CE(1'b1),
        .D(sig0000045f),
        .Q(sig00000478),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001e7
       (.C(clk),
        .CE(1'b1),
        .D(sig00000460),
        .Q(sig00000479),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001e8
       (.C(clk),
        .CE(1'b1),
        .D(sig00000461),
        .Q(sig0000047a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001e9
       (.C(clk),
        .CE(1'b1),
        .D(sig00000462),
        .Q(sig0000047b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001ea
       (.C(clk),
        .CE(1'b1),
        .D(sig00000463),
        .Q(sig0000047c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001eb
       (.C(clk),
        .CE(1'b1),
        .D(sig00000464),
        .Q(sig0000047d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001ec
       (.C(clk),
        .CE(1'b1),
        .D(sig00000419),
        .Q(sig0000047e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001ed
       (.C(clk),
        .CE(1'b1),
        .D(sig0000041a),
        .Q(sig0000047f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001ee
       (.C(clk),
        .CE(1'b1),
        .D(sig0000041b),
        .Q(sig00000480),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001ef
       (.C(clk),
        .CE(1'b1),
        .D(sig0000041c),
        .Q(sig00000481),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001f0
       (.C(clk),
        .CE(1'b1),
        .D(sig0000041d),
        .Q(sig00000482),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001f1
       (.C(clk),
        .CE(1'b1),
        .D(sig0000041e),
        .Q(sig00000483),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001f2
       (.C(clk),
        .CE(1'b1),
        .D(sig0000041f),
        .Q(sig00000484),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001f3
       (.C(clk),
        .CE(1'b1),
        .D(sig00000420),
        .Q(sig00000485),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001f4
       (.C(clk),
        .CE(1'b1),
        .D(sig00000421),
        .Q(sig00000486),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001f5
       (.C(clk),
        .CE(1'b1),
        .D(sig00000422),
        .Q(sig00000487),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001f6
       (.C(clk),
        .CE(1'b1),
        .D(sig00000423),
        .Q(sig00000488),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001f7
       (.C(clk),
        .CE(1'b1),
        .D(sig00000424),
        .Q(sig00000489),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001f8
       (.C(clk),
        .CE(1'b1),
        .D(sig00000425),
        .Q(sig0000048a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001f9
       (.C(clk),
        .CE(1'b1),
        .D(sig00000426),
        .Q(sig0000048b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001fa
       (.C(clk),
        .CE(1'b1),
        .D(sig00000427),
        .Q(sig0000048c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001fb
       (.C(clk),
        .CE(1'b1),
        .D(sig00000428),
        .Q(sig0000048d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001fc
       (.C(clk),
        .CE(1'b1),
        .D(sig00000429),
        .Q(sig0000048e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001fd
       (.C(clk),
        .CE(1'b1),
        .D(sig0000042a),
        .Q(sig0000048f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001fe
       (.C(clk),
        .CE(1'b1),
        .D(sig0000042b),
        .Q(sig00000490),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001ff
       (.C(clk),
        .CE(1'b1),
        .D(sig0000042c),
        .Q(sig00000491),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000200
       (.C(clk),
        .CE(1'b1),
        .D(sig0000042d),
        .Q(sig00000492),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000201
       (.C(clk),
        .CE(1'b1),
        .D(sig0000042e),
        .Q(sig00000493),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000202
       (.C(clk),
        .CE(1'b1),
        .D(sig0000042f),
        .Q(sig00000494),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000203
       (.C(clk),
        .CE(1'b1),
        .D(sig00000430),
        .Q(sig00000495),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000204
       (.C(clk),
        .CE(1'b1),
        .D(sig00000431),
        .Q(sig00000496),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000205
       (.C(clk),
        .CE(1'b1),
        .D(sig00000433),
        .Q(sig00000497),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000206
       (.C(clk),
        .CE(1'b1),
        .D(sig00000434),
        .Q(sig00000498),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000207
       (.C(clk),
        .CE(1'b1),
        .D(sig00000435),
        .Q(sig00000499),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000208
       (.C(clk),
        .CE(1'b1),
        .D(sig00000436),
        .Q(sig0000049a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000209
       (.C(clk),
        .CE(1'b1),
        .D(sig00000437),
        .Q(sig0000049b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000020a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000438),
        .Q(sig0000049c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000020b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000439),
        .Q(sig0000049d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000020c
       (.C(clk),
        .CE(1'b1),
        .D(sig0000043a),
        .Q(sig0000049e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000020d
       (.C(clk),
        .CE(1'b1),
        .D(sig0000043b),
        .Q(sig0000049f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000020e
       (.C(clk),
        .CE(1'b1),
        .D(sig0000043c),
        .Q(sig000004a0),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000020f
       (.C(clk),
        .CE(1'b1),
        .D(sig0000043d),
        .Q(sig000004a1),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000210
       (.C(clk),
        .CE(1'b1),
        .D(sig0000043e),
        .Q(sig000004a2),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000211
       (.C(clk),
        .CE(1'b1),
        .D(sig0000043f),
        .Q(sig000004a3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000212
       (.C(clk),
        .CE(1'b1),
        .D(sig00000440),
        .Q(sig000004a4),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000213
       (.C(clk),
        .CE(1'b1),
        .D(sig00000441),
        .Q(sig000004a5),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000214
       (.C(clk),
        .CE(1'b1),
        .D(sig00000442),
        .Q(sig000004a6),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000215
       (.C(clk),
        .CE(1'b1),
        .D(sig00000443),
        .Q(sig000004a7),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000216
       (.C(clk),
        .CE(1'b1),
        .D(sig00000444),
        .Q(sig000004a8),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000217
       (.C(clk),
        .CE(1'b1),
        .D(sig00000445),
        .Q(sig000004a9),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000218
       (.C(clk),
        .CE(1'b1),
        .D(sig00000446),
        .Q(sig000004aa),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000219
       (.C(clk),
        .CE(1'b1),
        .D(sig00000447),
        .Q(sig000004ab),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000021a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000448),
        .Q(sig000004ac),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000021b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000449),
        .Q(sig000004ad),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000021c
       (.C(clk),
        .CE(1'b1),
        .D(sig0000044a),
        .Q(sig000004ae),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000021d
       (.C(clk),
        .CE(1'b1),
        .D(sig0000044b),
        .Q(sig0000005e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000021e
       (.C(clk),
        .CE(1'b1),
        .D(sig0000022a),
        .Q(sig00000414),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000021f
       (.C(clk),
        .CE(1'b1),
        .D(sig00000465),
        .Q(sig00000413),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000220
       (.C(clk),
        .CE(1'b1),
        .D(sig00000466),
        .Q(sig00000412),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000221
       (.C(clk),
        .CE(1'b1),
        .D(sig00000467),
        .Q(sig00000411),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000222
       (.C(clk),
        .CE(1'b1),
        .D(sig00000468),
        .Q(sig00000410),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000223
       (.C(clk),
        .CE(1'b1),
        .D(sig00000469),
        .Q(sig0000040f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000224
       (.C(clk),
        .CE(1'b1),
        .D(sig0000046a),
        .Q(sig0000040e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000225
       (.C(clk),
        .CE(1'b1),
        .D(sig0000046b),
        .Q(sig0000040d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000226
       (.C(clk),
        .CE(1'b1),
        .D(sig0000046c),
        .Q(sig0000040c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000227
       (.C(clk),
        .CE(1'b1),
        .D(sig0000046d),
        .Q(sig0000040b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000228
       (.C(clk),
        .CE(1'b1),
        .D(sig0000046e),
        .Q(sig0000040a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000229
       (.C(clk),
        .CE(1'b1),
        .D(sig0000046f),
        .Q(sig00000409),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000022a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000470),
        .Q(sig00000408),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000022b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000471),
        .Q(sig00000407),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000022c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000472),
        .Q(sig00000406),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000022d
       (.C(clk),
        .CE(1'b1),
        .D(sig00000473),
        .Q(sig00000405),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000022e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000474),
        .Q(sig00000404),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000022f
       (.C(clk),
        .CE(1'b1),
        .D(sig00000475),
        .Q(sig00000403),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000230
       (.C(clk),
        .CE(1'b1),
        .D(sig00000476),
        .Q(sig00000402),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000231
       (.C(clk),
        .CE(1'b1),
        .D(sig00000477),
        .Q(sig00000401),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000232
       (.C(clk),
        .CE(1'b1),
        .D(sig00000478),
        .Q(sig00000400),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000233
       (.C(clk),
        .CE(1'b1),
        .D(sig00000479),
        .Q(sig000003ff),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000234
       (.C(clk),
        .CE(1'b1),
        .D(sig0000047a),
        .Q(sig000003fe),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000235
       (.C(clk),
        .CE(1'b1),
        .D(sig0000047b),
        .Q(sig000003fd),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000236
       (.C(clk),
        .CE(1'b1),
        .D(sig0000047c),
        .Q(sig000003fc),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000237
       (.C(clk),
        .CE(1'b1),
        .D(sig0000047d),
        .Q(sig000003fb),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000238
       (.C(clk),
        .CE(1'b1),
        .D(sig000003e1),
        .Q(sig000003c8),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000239
       (.C(clk),
        .CE(1'b1),
        .D(sig000003e0),
        .Q(sig000004db),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000023a
       (.C(clk),
        .CE(1'b1),
        .D(sig000003df),
        .Q(sig000003c7),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000023b
       (.C(clk),
        .CE(1'b1),
        .D(sig000003de),
        .Q(sig000004da),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000023c
       (.C(clk),
        .CE(1'b1),
        .D(sig000003dd),
        .Q(sig000003c6),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000023d
       (.C(clk),
        .CE(1'b1),
        .D(sig000003dc),
        .Q(sig000004d9),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000023e
       (.C(clk),
        .CE(1'b1),
        .D(sig000003db),
        .Q(sig000003c5),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000023f
       (.C(clk),
        .CE(1'b1),
        .D(sig000003da),
        .Q(sig000003c4),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000240
       (.C(clk),
        .CE(1'b1),
        .D(sig000003d9),
        .Q(sig000003c3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000241
       (.C(clk),
        .CE(1'b1),
        .D(sig000003d8),
        .Q(sig000003c2),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000242
       (.C(clk),
        .CE(1'b1),
        .D(sig000003d7),
        .Q(sig000003c1),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000243
       (.C(clk),
        .CE(1'b1),
        .D(sig000003d6),
        .Q(sig000003c0),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000244
       (.C(clk),
        .CE(1'b1),
        .D(sig000003d5),
        .Q(sig000003bf),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000245
       (.C(clk),
        .CE(1'b1),
        .D(sig000003d4),
        .Q(sig000003be),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000246
       (.C(clk),
        .CE(1'b1),
        .D(sig000003d3),
        .Q(sig000003bd),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000247
       (.C(clk),
        .CE(1'b1),
        .D(sig000003d2),
        .Q(sig000003bc),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000248
       (.C(clk),
        .CE(1'b1),
        .D(sig000003d1),
        .Q(sig000003bb),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000249
       (.C(clk),
        .CE(1'b1),
        .D(sig000003d0),
        .Q(sig000003ba),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000024a
       (.C(clk),
        .CE(1'b1),
        .D(sig000003cf),
        .Q(sig000003b9),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000024b
       (.C(clk),
        .CE(1'b1),
        .D(sig000003ce),
        .Q(sig000003b8),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000024c
       (.C(clk),
        .CE(1'b1),
        .D(sig000003cd),
        .Q(sig000003b7),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000024d
       (.C(clk),
        .CE(1'b1),
        .D(sig000003cc),
        .Q(sig000003b6),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000024e
       (.C(clk),
        .CE(1'b1),
        .D(sig000003cb),
        .Q(sig000003b5),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000024f
       (.C(clk),
        .CE(1'b1),
        .D(sig000003ca),
        .Q(sig000003b4),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000250
       (.C(clk),
        .CE(1'b1),
        .D(sig000003c9),
        .Q(sig000003b3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000251
       (.C(clk),
        .CE(1'b1),
        .D(sig000003fa),
        .Q(sig00000077),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000252
       (.C(clk),
        .CE(1'b1),
        .D(sig000003f9),
        .Q(sig00000076),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000253
       (.C(clk),
        .CE(1'b1),
        .D(sig000003f8),
        .Q(sig00000075),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000254
       (.C(clk),
        .CE(1'b1),
        .D(sig000003f7),
        .Q(sig00000074),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000255
       (.C(clk),
        .CE(1'b1),
        .D(sig000003f6),
        .Q(sig00000073),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000256
       (.C(clk),
        .CE(1'b1),
        .D(sig000003f5),
        .Q(sig00000072),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000257
       (.C(clk),
        .CE(1'b1),
        .D(sig000003f4),
        .Q(sig00000071),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000258
       (.C(clk),
        .CE(1'b1),
        .D(sig000003f3),
        .Q(sig00000070),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000259
       (.C(clk),
        .CE(1'b1),
        .D(sig000003f2),
        .Q(sig0000006f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000025a
       (.C(clk),
        .CE(1'b1),
        .D(sig000003f1),
        .Q(sig0000006e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000025b
       (.C(clk),
        .CE(1'b1),
        .D(sig000003f0),
        .Q(sig0000006d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000025c
       (.C(clk),
        .CE(1'b1),
        .D(sig000003ef),
        .Q(sig0000006c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000025d
       (.C(clk),
        .CE(1'b1),
        .D(sig000003ee),
        .Q(sig0000006b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000025e
       (.C(clk),
        .CE(1'b1),
        .D(sig000003ed),
        .Q(sig0000006a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000025f
       (.C(clk),
        .CE(1'b1),
        .D(sig000003ec),
        .Q(sig00000069),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000260
       (.C(clk),
        .CE(1'b1),
        .D(sig000003eb),
        .Q(sig00000068),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000261
       (.C(clk),
        .CE(1'b1),
        .D(sig000003ea),
        .Q(sig00000067),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000262
       (.C(clk),
        .CE(1'b1),
        .D(sig000003e9),
        .Q(sig00000066),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000263
       (.C(clk),
        .CE(1'b1),
        .D(sig000003e8),
        .Q(sig00000065),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000264
       (.C(clk),
        .CE(1'b1),
        .D(sig000003e7),
        .Q(sig00000064),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000265
       (.C(clk),
        .CE(1'b1),
        .D(sig000003e6),
        .Q(sig00000063),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000266
       (.C(clk),
        .CE(1'b1),
        .D(sig000003e5),
        .Q(sig00000062),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000267
       (.C(clk),
        .CE(1'b1),
        .D(sig000003e4),
        .Q(sig00000061),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000268
       (.C(clk),
        .CE(1'b1),
        .D(sig000003e3),
        .Q(sig00000060),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000269
       (.C(clk),
        .CE(1'b1),
        .D(sig000003e2),
        .Q(sig0000005f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000026c_CARRY4
       (.CI(sig00000352),
        .CO({NLW_blk0000026c_CARRY4_CO_UNCONNECTED[3:1],sig00000351}),
        .CYINIT(1'b0),
        .DI({NLW_blk0000026c_CARRY4_DI_UNCONNECTED[3:1],1'b1}),
        .O({NLW_blk0000026c_CARRY4_O_UNCONNECTED[3:2],sig00000431,sig00000430}),
        .S({NLW_blk0000026c_CARRY4_S_UNCONNECTED[3:2],1'b1,sig00000585}));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000274_CARRY4
       (.CI(sig0000035a),
        .CO({sig00000352,sig00000354,sig00000356,sig00000358}),
        .CYINIT(1'b0),
        .DI(b[22:19]),
        .O({sig0000042f,sig0000042e,sig0000042d,sig0000042c}),
        .S({sig00000353,sig00000355,sig00000357,sig00000359}));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000027c_CARRY4
       (.CI(sig00000362),
        .CO({sig0000035a,sig0000035c,sig0000035e,sig00000360}),
        .CYINIT(1'b0),
        .DI(b[18:15]),
        .O({sig0000042b,sig0000042a,sig00000429,sig00000428}),
        .S({sig0000035b,sig0000035d,sig0000035f,sig00000361}));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000284_CARRY4
       (.CI(sig0000036a),
        .CO({sig00000362,sig00000364,sig00000366,sig00000368}),
        .CYINIT(1'b0),
        .DI(b[14:11]),
        .O({sig00000427,sig00000426,sig00000425,sig00000424}),
        .S({sig00000363,sig00000365,sig00000367,sig00000369}));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000028c_CARRY4
       (.CI(sig00000372),
        .CO({sig0000036a,sig0000036c,sig0000036e,sig00000370}),
        .CYINIT(1'b0),
        .DI(b[10:7]),
        .O({sig00000423,sig00000422,sig00000421,sig00000420}),
        .S({sig0000036b,sig0000036d,sig0000036f,sig00000371}));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000294_CARRY4
       (.CI(sig0000037a),
        .CO({sig00000372,sig00000374,sig00000376,sig00000378}),
        .CYINIT(1'b0),
        .DI(b[6:3]),
        .O({sig0000041f,sig0000041e,sig0000041d,sig0000041c}),
        .S({sig00000373,sig00000375,sig00000377,sig00000379}));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000029b_CARRY4
       (.CI(1'b0),
        .CO({sig0000037a,sig0000037c,sig0000037e,sig00000380}),
        .CYINIT(1'b1),
        .DI({b[2:0],1'b0}),
        .O({sig0000041b,sig0000041a,sig00000419,NLW_blk0000029b_CARRY4_O_UNCONNECTED[0]}),
        .S({sig0000037b,sig0000037d,sig0000037f,sig00000381}));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000029e_CARRY4
       (.CI(sig00000383),
        .CO({NLW_blk0000029e_CARRY4_CO_UNCONNECTED[3:1],sig00000382}),
        .CYINIT(1'b0),
        .DI({NLW_blk0000029e_CARRY4_DI_UNCONNECTED[3:1],1'b1}),
        .O({NLW_blk0000029e_CARRY4_O_UNCONNECTED[3:2],sig0000044b,sig0000044a}),
        .S({NLW_blk0000029e_CARRY4_S_UNCONNECTED[3:2],1'b1,sig00000432}));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000002a6_CARRY4
       (.CI(sig0000038b),
        .CO({sig00000383,sig00000385,sig00000387,sig00000389}),
        .CYINIT(1'b0),
        .DI(a[22:19]),
        .O({sig00000449,sig00000448,sig00000447,sig00000446}),
        .S({sig00000384,sig00000386,sig00000388,sig0000038a}));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000002ae_CARRY4
       (.CI(sig00000393),
        .CO({sig0000038b,sig0000038d,sig0000038f,sig00000391}),
        .CYINIT(1'b0),
        .DI(a[18:15]),
        .O({sig00000445,sig00000444,sig00000443,sig00000442}),
        .S({sig0000038c,sig0000038e,sig00000390,sig00000392}));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000002b6_CARRY4
       (.CI(sig0000039b),
        .CO({sig00000393,sig00000395,sig00000397,sig00000399}),
        .CYINIT(1'b0),
        .DI(a[14:11]),
        .O({sig00000441,sig00000440,sig0000043f,sig0000043e}),
        .S({sig00000394,sig00000396,sig00000398,sig0000039a}));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000002be_CARRY4
       (.CI(sig000003a3),
        .CO({sig0000039b,sig0000039d,sig0000039f,sig000003a1}),
        .CYINIT(1'b0),
        .DI(a[10:7]),
        .O({sig0000043d,sig0000043c,sig0000043b,sig0000043a}),
        .S({sig0000039c,sig0000039e,sig000003a0,sig000003a2}));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000002c6_CARRY4
       (.CI(sig000003ab),
        .CO({sig000003a3,sig000003a5,sig000003a7,sig000003a9}),
        .CYINIT(1'b0),
        .DI(a[6:3]),
        .O({sig00000439,sig00000438,sig00000437,sig00000436}),
        .S({sig000003a4,sig000003a6,sig000003a8,sig000003aa}));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000002cd_CARRY4
       (.CI(1'b0),
        .CO({sig000003ab,sig000003ad,sig000003af,sig000003b1}),
        .CYINIT(1'b1),
        .DI({a[2:0],1'b0}),
        .O({sig00000435,sig00000434,sig00000433,NLW_blk000002cd_CARRY4_O_UNCONNECTED[0]}),
        .S({sig000003ac,sig000003ae,sig000003b0,sig000003b2}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  MUXF7 blk000002ce
       (.I0(sig000004af),
        .I1(sig000004b0),
        .O(sig000004b1),
        .S(sig00000417));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  MUXF7 blk000002cf
       (.I0(sig000004b2),
        .I1(1'b0),
        .O(NLW_blk000002cf_O_UNCONNECTED),
        .S(sig00000417));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  MUXF7 blk000002d0
       (.I0(sig000004b5),
        .I1(sig000004b9),
        .O(sig000004bd),
        .S(sig00000415));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  MUXF7 blk000002d1
       (.I0(sig000004b6),
        .I1(sig000004ba),
        .O(NLW_blk000002d1_O_UNCONNECTED),
        .S(sig00000415));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  MUXF7 blk000002d2
       (.I0(sig000004b7),
        .I1(sig000004bb),
        .O(NLW_blk000002d2_O_UNCONNECTED),
        .S(sig00000415));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  MUXF7 blk000002d3
       (.I0(sig000004b8),
        .I1(sig000004bc),
        .O(NLW_blk000002d3_O_UNCONNECTED),
        .S(sig00000415));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  MUXF7 blk000002d4
       (.I0(sig000004be),
        .I1(sig000004c2),
        .O(sig000004c5),
        .S(sig00000415));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  MUXF7 blk000002d5
       (.I0(sig000004bf),
        .I1(sig000004c3),
        .O(sig000004c6),
        .S(sig00000415));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  MUXF7 blk000002d6
       (.I0(sig000004c0),
        .I1(sig000004c4),
        .O(sig000004c7),
        .S(sig00000415));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  MUXF7 blk000002d7
       (.I0(sig000004c1),
        .I1(1'b0),
        .O(NLW_blk000002d7_O_UNCONNECTED),
        .S(sig00000415));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002d8
       (.C(clk),
        .CE(1'b1),
        .D(sig000004b1),
        .Q(sig000004d6),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002d9
       (.C(clk),
        .CE(1'b1),
        .D(sig00000415),
        .Q(sig000004b4),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002da
       (.C(clk),
        .CE(1'b1),
        .D(sig00000416),
        .Q(sig000004b3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002db
       (.C(clk),
        .CE(1'b1),
        .D(sig000004b4),
        .Q(sig0000007b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002dc
       (.C(clk),
        .CE(1'b1),
        .D(sig000004b3),
        .Q(sig0000007a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002dd
       (.C(clk),
        .CE(1'b1),
        .D(sig000004c5),
        .Q(sig000004d8),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002de
       (.C(clk),
        .CE(1'b1),
        .D(sig000004c6),
        .Q(sig00000417),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002df
       (.C(clk),
        .CE(1'b1),
        .D(sig000004c7),
        .Q(sig000004d7),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002e0
       (.C(clk),
        .CE(1'b1),
        .D(sig000004bd),
        .Q(sig000004dc),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002e1
       (.C(clk),
        .CE(1'b1),
        .D(sig00000417),
        .Q(sig00000079),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002e2
       (.C(clk),
        .CE(1'b1),
        .D(sig00000418),
        .Q(sig00000078),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002e3
       (.C(clk),
        .CE(1'b1),
        .D(sig000004c8),
        .Q(sig0000005d),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000002e7_CARRY4
       (.CI(sig000004ed),
        .CO({sig000004e9,sig000004ea,sig000004eb,sig000004ec}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_blk000002e7_CARRY4_O_UNCONNECTED[3:0]),
        .S({sig000004d0,sig000004cf,sig000004ce,sig000004cd}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000002eb_CARRY4
       (.CI(1'b0),
        .CO({sig000004ed,sig000004ee,sig000004ef,sig000004f0}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_blk000002eb_CARRY4_O_UNCONNECTED[3:0]),
        .S({sig000004cc,sig000004cb,sig000004ca,sig000004c9}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002ec
       (.C(clk),
        .CE(1'b1),
        .D(sig000004e9),
        .Q(sig00000415),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002ed
       (.C(clk),
        .CE(1'b1),
        .D(sig000004ea),
        .Q(sig000004e4),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002ee
       (.C(clk),
        .CE(1'b1),
        .D(sig000004eb),
        .Q(sig000004e3),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002ef
       (.C(clk),
        .CE(1'b1),
        .D(sig000004ec),
        .Q(sig000004e2),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002f0
       (.C(clk),
        .CE(1'b1),
        .D(sig000004ed),
        .Q(sig000004e8),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002f1
       (.C(clk),
        .CE(1'b1),
        .D(sig000004ee),
        .Q(sig000004e7),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002f2
       (.C(clk),
        .CE(1'b1),
        .D(sig000004ef),
        .Q(sig000004e6),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002f3
       (.C(clk),
        .CE(1'b1),
        .D(sig000004f0),
        .Q(sig000004e5),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000002f4_CARRY4
       (.CI(sig000004f2),
        .CO({NLW_blk000002f4_CARRY4_CO_UNCONNECTED[3:1],sig000004f1}),
        .CYINIT(1'b0),
        .DI({NLW_blk000002f4_CARRY4_DI_UNCONNECTED[3:1],1'b0}),
        .O(NLW_blk000002f4_CARRY4_O_UNCONNECTED[3:0]),
        .S({NLW_blk000002f4_CARRY4_S_UNCONNECTED[3:1],sig000004d5}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000002f8_CARRY4
       (.CI(1'b0),
        .CO({sig000004f2,sig000004f3,sig000004f4,sig000004f5}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_blk000002f8_CARRY4_O_UNCONNECTED[3:0]),
        .S({sig000004d4,sig000004d3,sig000004d2,sig000004d1}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002f9
       (.C(clk),
        .CE(1'b1),
        .D(sig000004f1),
        .Q(sig000004e1),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002fa
       (.C(clk),
        .CE(1'b1),
        .D(sig000004f2),
        .Q(sig000004e0),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002fb
       (.C(clk),
        .CE(1'b1),
        .D(sig000004f3),
        .Q(sig000004df),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002fc
       (.C(clk),
        .CE(1'b1),
        .D(sig000004f4),
        .Q(sig000004de),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002fd
       (.C(clk),
        .CE(1'b1),
        .D(sig000004f5),
        .Q(sig000004dd),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002fe
       (.C(clk),
        .CE(1'b1),
        .D(sig0000001b),
        .Q(sig0000005b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000002ff
       (.C(clk),
        .CE(1'b1),
        .D(sig0000001a),
        .Q(sig0000005a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000300
       (.C(clk),
        .CE(1'b1),
        .D(sig00000019),
        .Q(sig00000059),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000301
       (.C(clk),
        .CE(1'b1),
        .D(sig00000018),
        .Q(sig00000058),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000302
       (.C(clk),
        .CE(1'b1),
        .D(sig00000017),
        .Q(sig00000057),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000303
       (.C(clk),
        .CE(1'b1),
        .D(sig00000016),
        .Q(sig00000056),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000304
       (.C(clk),
        .CE(1'b1),
        .D(sig00000015),
        .Q(sig00000055),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000305
       (.C(clk),
        .CE(1'b1),
        .D(sig00000014),
        .Q(sig00000054),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000306
       (.C(clk),
        .CE(1'b1),
        .D(sig00000013),
        .Q(sig00000053),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000307
       (.C(clk),
        .CE(1'b1),
        .D(sig00000012),
        .Q(sig00000052),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000308
       (.C(clk),
        .CE(1'b1),
        .D(sig00000011),
        .Q(sig00000051),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000309
       (.C(clk),
        .CE(1'b1),
        .D(sig00000010),
        .Q(sig00000050),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000030a
       (.C(clk),
        .CE(1'b1),
        .D(sig0000000f),
        .Q(sig0000004f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000030b
       (.C(clk),
        .CE(1'b1),
        .D(sig0000000e),
        .Q(sig0000004e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000030c
       (.C(clk),
        .CE(1'b1),
        .D(sig0000000d),
        .Q(sig0000004d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000030d
       (.C(clk),
        .CE(1'b1),
        .D(sig0000000c),
        .Q(sig0000004c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000030e
       (.C(clk),
        .CE(1'b1),
        .D(sig0000000b),
        .Q(sig0000004b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000030f
       (.C(clk),
        .CE(1'b1),
        .D(sig0000000a),
        .Q(sig0000004a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000310
       (.C(clk),
        .CE(1'b1),
        .D(sig00000009),
        .Q(sig00000049),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000311
       (.C(clk),
        .CE(1'b1),
        .D(sig00000008),
        .Q(sig00000048),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000312
       (.C(clk),
        .CE(1'b1),
        .D(sig00000007),
        .Q(sig00000047),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000313
       (.C(clk),
        .CE(1'b1),
        .D(sig00000006),
        .Q(sig00000046),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000314
       (.C(clk),
        .CE(1'b1),
        .D(sig00000005),
        .Q(sig00000045),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000315
       (.C(clk),
        .CE(1'b1),
        .D(sig00000004),
        .Q(sig00000044),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000316
       (.C(clk),
        .CE(1'b1),
        .D(sig0000001c),
        .Q(sig00000043),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000317
       (.C(clk),
        .CE(1'b1),
        .D(sig0000001d),
        .Q(sig00000042),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000318
       (.C(clk),
        .CE(1'b1),
        .D(sig000000a0),
        .Q(sig00000515),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000319
       (.C(clk),
        .CE(1'b1),
        .D(sig000000a1),
        .Q(sig00000516),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000031a
       (.C(clk),
        .CE(1'b1),
        .D(sig000000a2),
        .Q(sig00000517),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000031b
       (.C(clk),
        .CE(1'b1),
        .D(sig000000a3),
        .Q(sig00000518),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000031c
       (.C(clk),
        .CE(1'b1),
        .D(sig000000a4),
        .Q(sig00000519),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000031d
       (.C(clk),
        .CE(1'b1),
        .D(sig000000a5),
        .Q(sig0000051a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000031e
       (.C(clk),
        .CE(1'b1),
        .D(sig000000a6),
        .Q(sig0000051b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000031f
       (.C(clk),
        .CE(1'b1),
        .D(sig000000a7),
        .Q(sig0000051c),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000320_CARRY4
       (.CI(1'b0),
        .CO({sig000004f9,sig000004f8,sig000004f7,sig000004f6}),
        .CYINIT(sig0000051d),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({sig00000023,sig00000022,sig00000021,sig00000020}),
        .S({sig00000589,sig00000588,sig00000587,sig00000586}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000328_CARRY4
       (.CI(sig000004f9),
        .CO({sig000004fd,sig000004fc,sig000004fb,sig000004fa}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({sig00000027,sig00000026,sig00000025,sig00000024}),
        .S({sig0000058d,sig0000058c,sig0000058b,sig0000058a}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000330_CARRY4
       (.CI(sig000004fd),
        .CO(NLW_blk00000330_CARRY4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI(NLW_blk00000330_CARRY4_DI_UNCONNECTED[3:0]),
        .O(NLW_blk00000330_CARRY4_O_UNCONNECTED[3:0]),
        .S({NLW_blk00000330_CARRY4_S_UNCONNECTED[3:1],1'b0}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000331_CARRY4
       (.CI(1'b0),
        .CO({sig00000523,sig00000522,sig00000521,sig00000520}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b1,1'b1,1'b0}),
        .O(NLW_blk00000331_CARRY4_O_UNCONNECTED[3:0]),
        .S({sig00000526,sig0000058e,sig00000525,sig00000527}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000335_CARRY4
       (.CI(sig00000523),
        .CO({sig0000053c,sig0000053e,sig0000051f,sig00000524}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b1,1'b0}),
        .O({sig0000053b,sig0000053d,NLW_blk00000335_CARRY4_O_UNCONNECTED[1:0]}),
        .S({sig0000050a,sig00000509,1'b1,1'b1}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000033a_CARRY4
       (.CI(sig0000052c),
        .CO({sig00000553,sig00000555,sig0000051e,sig0000052a}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({sig00000552,sig00000554,sig00000528,sig00000529}),
        .S({sig000004ff,sig000004fe,sig00000514,sig00000513}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000342_CARRY4
       (.CI(sig00000534),
        .CO({sig0000052c,sig0000052e,sig00000530,sig00000532}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({sig0000052b,sig0000052d,sig0000052f,sig00000531}),
        .S({sig00000512,sig00000511,sig00000510,sig0000050f}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000034a_CARRY4
       (.CI(sig0000053c),
        .CO({sig00000534,sig00000536,sig00000538,sig0000053a}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({sig00000533,sig00000535,sig00000537,sig00000539}),
        .S({sig0000050e,sig0000050d,sig0000050c,sig0000050b}));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000034f
       (.C(clk),
        .CE(1'b1),
        .D(sig0000053d),
        .Q(sig00000028),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000350
       (.C(clk),
        .CE(1'b1),
        .D(sig0000053b),
        .Q(sig00000029),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000351
       (.C(clk),
        .CE(1'b1),
        .D(sig00000539),
        .Q(sig0000002a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000352
       (.C(clk),
        .CE(1'b1),
        .D(sig00000537),
        .Q(sig0000002b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000353
       (.C(clk),
        .CE(1'b1),
        .D(sig00000535),
        .Q(sig0000002c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000354
       (.C(clk),
        .CE(1'b1),
        .D(sig00000533),
        .Q(sig0000002d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000355
       (.C(clk),
        .CE(1'b1),
        .D(sig00000531),
        .Q(sig0000002e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000356
       (.C(clk),
        .CE(1'b1),
        .D(sig0000052f),
        .Q(sig0000002f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000357
       (.C(clk),
        .CE(1'b1),
        .D(sig0000052d),
        .Q(sig00000030),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000358
       (.C(clk),
        .CE(1'b1),
        .D(sig0000052b),
        .Q(sig00000031),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000359
       (.C(clk),
        .CE(1'b1),
        .D(sig00000529),
        .Q(sig00000032),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000035a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000528),
        .Q(sig00000033),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000035e_CARRY4
       (.CI(sig00000543),
        .CO({NLW_blk0000035e_CARRY4_CO_UNCONNECTED[3:2],sig0000053f,sig00000541}),
        .CYINIT(1'b0),
        .DI({NLW_blk0000035e_CARRY4_DI_UNCONNECTED[3:2],1'b1,1'b0}),
        .O({NLW_blk0000035e_CARRY4_O_UNCONNECTED[3:1],sig00000540}),
        .S({NLW_blk0000035e_CARRY4_S_UNCONNECTED[3:2],1'b1,sig00000508}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000366_CARRY4
       (.CI(sig0000054b),
        .CO({sig00000543,sig00000545,sig00000547,sig00000549}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({sig00000542,sig00000544,sig00000546,sig00000548}),
        .S({sig00000507,sig00000506,sig00000505,sig00000504}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000036e_CARRY4
       (.CI(sig00000553),
        .CO({sig0000054b,sig0000054d,sig0000054f,sig00000551}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({sig0000054a,sig0000054c,sig0000054e,sig00000550}),
        .S({sig00000503,sig00000502,sig00000501,sig00000500}));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000373
       (.C(clk),
        .CE(1'b1),
        .D(sig00000554),
        .Q(sig00000034),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000374
       (.C(clk),
        .CE(1'b1),
        .D(sig00000552),
        .Q(sig00000035),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000375
       (.C(clk),
        .CE(1'b1),
        .D(sig00000550),
        .Q(sig00000036),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000376
       (.C(clk),
        .CE(1'b1),
        .D(sig0000054e),
        .Q(sig00000037),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000377
       (.C(clk),
        .CE(1'b1),
        .D(sig0000054c),
        .Q(sig00000038),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000378
       (.C(clk),
        .CE(1'b1),
        .D(sig0000054a),
        .Q(sig00000039),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000379
       (.C(clk),
        .CE(1'b1),
        .D(sig00000548),
        .Q(sig0000003a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000037a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000546),
        .Q(sig0000003b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000037b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000544),
        .Q(sig0000003c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000037c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000542),
        .Q(sig0000003d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000037d
       (.C(clk),
        .CE(1'b1),
        .D(sig00000540),
        .Q(sig0000003e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000037e
       (.C(clk),
        .CE(1'b1),
        .D(sig0000053f),
        .Q(sig0000051d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000037f
       (.C(clk),
        .CE(1'b1),
        .D(sig0000056c),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/mant_op [22]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000380
       (.C(clk),
        .CE(1'b1),
        .D(sig0000056b),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/mant_op [21]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000381
       (.C(clk),
        .CE(1'b1),
        .D(sig0000056a),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/mant_op [20]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000382
       (.C(clk),
        .CE(1'b1),
        .D(sig00000569),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/mant_op [19]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000383
       (.C(clk),
        .CE(1'b1),
        .D(sig00000568),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/mant_op [18]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000384
       (.C(clk),
        .CE(1'b1),
        .D(sig00000567),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/mant_op [17]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000385
       (.C(clk),
        .CE(1'b1),
        .D(sig00000566),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/mant_op [16]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000386
       (.C(clk),
        .CE(1'b1),
        .D(sig00000565),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/mant_op [15]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000387
       (.C(clk),
        .CE(1'b1),
        .D(sig00000564),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/mant_op [14]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000388
       (.C(clk),
        .CE(1'b1),
        .D(sig00000563),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/mant_op [13]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000389
       (.C(clk),
        .CE(1'b1),
        .D(sig00000562),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/mant_op [12]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000038a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000561),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/mant_op [11]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000038b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000560),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/mant_op [10]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000038c
       (.C(clk),
        .CE(1'b1),
        .D(sig0000055f),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/mant_op [9]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000038d
       (.C(clk),
        .CE(1'b1),
        .D(sig0000055e),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/mant_op [8]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000038e
       (.C(clk),
        .CE(1'b1),
        .D(sig0000055d),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/mant_op [7]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000038f
       (.C(clk),
        .CE(1'b1),
        .D(sig0000055c),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/mant_op [6]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000390
       (.C(clk),
        .CE(1'b1),
        .D(sig0000055b),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/mant_op [5]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000391
       (.C(clk),
        .CE(1'b1),
        .D(sig0000055a),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/mant_op [4]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000392
       (.C(clk),
        .CE(1'b1),
        .D(sig00000559),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/mant_op [3]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000393
       (.C(clk),
        .CE(1'b1),
        .D(sig00000558),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/mant_op [2]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000394
       (.C(clk),
        .CE(1'b1),
        .D(sig00000557),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/mant_op [1]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000395
       (.C(clk),
        .CE(1'b1),
        .D(sig00000556),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/mant_op [0]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000396
       (.C(clk),
        .CE(1'b1),
        .D(sig00000574),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/exp_op [7]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000397
       (.C(clk),
        .CE(1'b1),
        .D(sig00000573),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/exp_op [6]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000398
       (.C(clk),
        .CE(1'b1),
        .D(sig00000572),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/exp_op [5]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000399
       (.C(clk),
        .CE(1'b1),
        .D(sig00000571),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/exp_op [4]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000039a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000570),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/exp_op [3]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000039b
       (.C(clk),
        .CE(1'b1),
        .D(sig0000056f),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/exp_op [2]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000039c
       (.C(clk),
        .CE(1'b1),
        .D(sig0000056e),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/exp_op [1]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000039d
       (.C(clk),
        .CE(1'b1),
        .D(sig0000056d),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/exp_op [0]),
        .R(1'b0));
  (* PK_HLUTNM = "___XLNM___11___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_norm_dist_lsbs_up_sel11" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h2722)) 
    blk0000039e
       (.I0(sig0000009a),
        .I1(sig000004d6),
        .I2(sig00000097),
        .I3(sig00000096),
        .O(sig00000001));
  (* PK_HLUTNM = "___XLNM___11___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_norm_dist_lsbs_up_sel11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h01)) 
    blk0000039f
       (.I0(sig0000009a),
        .I1(sig00000097),
        .I2(sig00000096),
        .O(sig00000002));
  (* PK_HLUTNM = "___XLNM___56___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>110" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk000003a0
       (.I0(sig0000009a),
        .I1(sig0000007d),
        .O(sig0000001d));
  (* PK_HLUTNM = "___XLNM___61___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>27" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003a1
       (.I0(sig0000009a),
        .I1(sig00000087),
        .I2(sig00000068),
        .O(sig0000000c));
  (* PK_HLUTNM = "___XLNM___60___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>31" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003a2
       (.I0(sig0000009a),
        .I1(sig00000088),
        .I2(sig00000069),
        .O(sig0000000d));
  (* PK_HLUTNM = "___XLNM___60___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>31" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003a3
       (.I0(sig0000009a),
        .I1(sig00000089),
        .I2(sig0000006a),
        .O(sig0000000e));
  (* PK_HLUTNM = "___XLNM___59___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>51" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003a4
       (.I0(sig0000009a),
        .I1(sig0000008a),
        .I2(sig0000006b),
        .O(sig0000000f));
  (* PK_HLUTNM = "___XLNM___59___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>51" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003a5
       (.I0(sig0000009a),
        .I1(sig0000008b),
        .I2(sig0000006c),
        .O(sig00000010));
  (* PK_HLUTNM = "___XLNM___58___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>71" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003a6
       (.I0(sig0000009a),
        .I1(sig0000008c),
        .I2(sig0000006d),
        .O(sig00000011));
  (* PK_HLUTNM = "___XLNM___58___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>71" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003a7
       (.I0(sig0000009a),
        .I1(sig0000008d),
        .I2(sig0000006e),
        .O(sig00000012));
  (* PK_HLUTNM = "___XLNM___57___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>91" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003a8
       (.I0(sig0000009a),
        .I1(sig0000008e),
        .I2(sig0000006f),
        .O(sig00000013));
  (* PK_HLUTNM = "___XLNM___56___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>110" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003a9
       (.I0(sig0000009a),
        .I1(sig0000008f),
        .I2(sig00000070),
        .O(sig00000014));
  (* PK_HLUTNM = "___XLNM___55___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>111" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003aa
       (.I0(sig0000009a),
        .I1(sig00000090),
        .I2(sig00000071),
        .O(sig00000015));
  (* PK_HLUTNM = "___XLNM___55___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>111" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003ab
       (.I0(sig0000009a),
        .I1(sig0000007e),
        .I2(sig0000005f),
        .O(sig0000001c));
  (* PK_HLUTNM = "___XLNM___54___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>131" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003ac
       (.I0(sig0000009a),
        .I1(sig00000091),
        .I2(sig00000072),
        .O(sig00000016));
  (* PK_HLUTNM = "___XLNM___54___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>131" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003ad
       (.I0(sig0000009a),
        .I1(sig00000092),
        .I2(sig00000073),
        .O(sig00000017));
  (* PK_HLUTNM = "___XLNM___53___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>151" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003ae
       (.I0(sig0000009a),
        .I1(sig00000093),
        .I2(sig00000074),
        .O(sig00000018));
  (* PK_HLUTNM = "___XLNM___53___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>151" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003af
       (.I0(sig0000009a),
        .I1(sig00000094),
        .I2(sig00000075),
        .O(sig00000019));
  (* PK_HLUTNM = "___XLNM___52___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>171" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003b0
       (.I0(sig0000009a),
        .I1(sig00000095),
        .I2(sig00000076),
        .O(sig0000001a));
  (* PK_HLUTNM = "___XLNM___61___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>27" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003b1
       (.I0(sig0000009a),
        .I1(sig00000096),
        .I2(sig00000077),
        .O(sig0000001b));
  (* PK_HLUTNM = "___XLNM___52___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>171" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003b2
       (.I0(sig0000009a),
        .I1(sig0000007f),
        .I2(sig00000060),
        .O(sig00000004));
  (* PK_HLUTNM = "___XLNM___57___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>91" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003b3
       (.I0(sig0000009a),
        .I1(sig00000080),
        .I2(sig00000061),
        .O(sig00000005));
  (* PK_HLUTNM = "___XLNM___51___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>211" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003b4
       (.I0(sig0000009a),
        .I1(sig00000081),
        .I2(sig00000062),
        .O(sig00000006));
  (* PK_HLUTNM = "___XLNM___51___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>211" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003b5
       (.I0(sig0000009a),
        .I1(sig00000082),
        .I2(sig00000063),
        .O(sig00000007));
  (* PK_HLUTNM = "___XLNM___50___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>231" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003b6
       (.I0(sig0000009a),
        .I1(sig00000083),
        .I2(sig00000064),
        .O(sig00000008));
  (* PK_HLUTNM = "___XLNM___50___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>231" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003b7
       (.I0(sig0000009a),
        .I1(sig00000084),
        .I2(sig00000065),
        .O(sig00000009));
  (* PK_HLUTNM = "___XLNM___49___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>251" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003b8
       (.I0(sig0000009a),
        .I1(sig00000085),
        .I2(sig00000066),
        .O(sig0000000a));
  (* PK_HLUTNM = "___XLNM___49___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_part_norm_shift_sel<25:0>251" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003b9
       (.I0(sig0000009a),
        .I1(sig00000086),
        .I2(sig00000067),
        .O(sig0000000b));
  (* PK_HLUTNM = "___XLNM___62___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_zeros_sel11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'hE)) 
    blk000003ba
       (.I0(sig0000009a),
        .I1(sig0000007c),
        .O(sig0000001e));
  (* PK_HLUTNM = "___XLNM___62___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/Mmux_zeros_sel11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000003bb
       (.I0(sig0000009a),
        .I1(sig0000005c),
        .O(sig0000001f));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hD78282D7)) 
    blk000003bc
       (.I0(sig00000139),
        .I1(sig00000149),
        .I2(sig000000af),
        .I3(sig00000151),
        .I4(sig000000b0),
        .O(sig000000f1));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h7F)) 
    blk000003bd
       (.I0(sig00000146),
        .I1(sig00000147),
        .I2(sig00000148),
        .O(sig000000af));
  (* PK_HLUTNM = "___XLNM___24___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/EXP/exp_align<3>21" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h7F)) 
    blk000003be
       (.I0(sig0000014e),
        .I1(sig0000014f),
        .I2(sig00000150),
        .O(sig000000b0));
  (* PK_HLUTNM = "___XLNM___45___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/EXP/Mmux_add_sign_mux11" *) 
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEEFE2202)) 
    blk000003bf
       (.I0(sig00000145),
        .I1(sig00000099),
        .I2(sig0000005e),
        .I3(sig00000156),
        .I4(sig00000144),
        .O(sig00000110));
  (* PK_HLUTNM = "___XLNM___10___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/EXP/Madd_exp_align_xor<1>11" *) 
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h287D7D28)) 
    blk000003c0
       (.I0(sig00000139),
        .I1(sig00000146),
        .I2(sig00000147),
        .I3(sig0000014e),
        .I4(sig0000014f),
        .O(sig000000ef));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h54)) 
    blk000003c1
       (.I0(sig0000013f),
        .I1(sig0000013e),
        .I2(sig0000013c),
        .O(sig00000108));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h95)) 
    blk000003c2
       (.I0(sig00000126),
        .I1(sig00000079),
        .I2(sig0000009a),
        .O(sig000000e7));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h95)) 
    blk000003c3
       (.I0(sig00000127),
        .I1(sig0000007a),
        .I2(sig0000009a),
        .O(sig000000e8));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h2AAA)) 
    blk000003c4
       (.I0(sig00000098),
        .I1(sig0000013a),
        .I2(sig00000175),
        .I3(sig00000123),
        .O(sig000000fd));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h4444444E4444444C)) 
    blk000003c5
       (.I0(sig00000123),
        .I1(sig0000010d),
        .I2(sig00000175),
        .I3(sig00000119),
        .I4(sig00000118),
        .I5(sig00000117),
        .O(sig00000104));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFFFFFFFFAAAAAAA8)) 
    blk000003c6
       (.I0(sig00000123),
        .I1(sig00000175),
        .I2(sig00000117),
        .I3(sig00000119),
        .I4(sig00000118),
        .I5(sig0000010c),
        .O(sig00000103));
  (* PK_HLUTNM = "___XLNM___10___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/EXP/Madd_exp_align_xor<1>11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h1B)) 
    blk000003c7
       (.I0(sig00000139),
        .I1(sig0000014e),
        .I2(sig00000146),
        .O(sig000000ee));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk000003c8
       (.I0(sig000000d0),
        .I1(sig000000dc),
        .I2(sig000000d9),
        .O(sig0000010e));
  (* PK_HLUTNM = "___XLNM___45___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/EXP/Mmux_add_sign_mux11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000003c9
       (.I0(sig00000145),
        .I1(sig00000144),
        .O(sig0000010f));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h01)) 
    blk000003ca
       (.I0(b[20]),
        .I1(b[21]),
        .I2(b[22]),
        .O(sig000000bd));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h0001)) 
    blk000003cb
       (.I0(b[0]),
        .I1(b[1]),
        .I2(b[2]),
        .I3(b[3]),
        .O(sig000000be));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h0001)) 
    blk000003cc
       (.I0(b[4]),
        .I1(b[5]),
        .I2(b[6]),
        .I3(b[7]),
        .O(sig000000bf));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h0001)) 
    blk000003cd
       (.I0(b[8]),
        .I1(b[9]),
        .I2(b[10]),
        .I3(b[11]),
        .O(sig000000c0));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h0001)) 
    blk000003ce
       (.I0(b[12]),
        .I1(b[13]),
        .I2(b[14]),
        .I3(b[15]),
        .O(sig000000c1));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h0001)) 
    blk000003cf
       (.I0(b[16]),
        .I1(b[17]),
        .I2(b[18]),
        .I3(b[19]),
        .O(sig000000c2));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h01)) 
    blk000003d0
       (.I0(a[20]),
        .I1(a[21]),
        .I2(a[22]),
        .O(sig000000c3));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h0001)) 
    blk000003d1
       (.I0(a[0]),
        .I1(a[1]),
        .I2(a[2]),
        .I3(a[3]),
        .O(sig000000c4));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h0001)) 
    blk000003d2
       (.I0(a[4]),
        .I1(a[5]),
        .I2(a[6]),
        .I3(a[7]),
        .O(sig000000c5));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h0001)) 
    blk000003d3
       (.I0(a[8]),
        .I1(a[9]),
        .I2(a[10]),
        .I3(a[11]),
        .O(sig000000c6));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h0001)) 
    blk000003d4
       (.I0(a[12]),
        .I1(a[13]),
        .I2(a[14]),
        .I3(a[15]),
        .O(sig000000c7));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h0001)) 
    blk000003d5
       (.I0(a[16]),
        .I1(a[17]),
        .I2(a[18]),
        .I3(a[19]),
        .O(sig000000c8));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003d6
       (.I0(sig00000099),
        .I1(sig00000166),
        .I2(sig00000157),
        .O(sig000000f6));
  (* PK_HLUTNM = "___XLNM___68___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/EXP/Mmux_abs_exp_mux31" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003d7
       (.I0(sig00000099),
        .I1(sig00000167),
        .I2(sig00000158),
        .O(sig000000f7));
  (* PK_HLUTNM = "___XLNM___68___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/EXP/Mmux_abs_exp_mux31" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003d8
       (.I0(sig00000099),
        .I1(sig00000168),
        .I2(sig00000159),
        .O(sig000000f8));
  (* PK_HLUTNM = "___XLNM___67___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/EXP/Mmux_abs_exp_mux51" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003d9
       (.I0(sig00000099),
        .I1(sig00000169),
        .I2(sig0000015a),
        .O(sig000000f9));
  (* PK_HLUTNM = "___XLNM___67___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/EXP/Mmux_abs_exp_mux51" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003da
       (.I0(sig00000099),
        .I1(sig0000016a),
        .I2(sig0000015b),
        .O(sig000000fa));
  (* PK_HLUTNM = "___XLNM___66___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/EXP/Mmux_abs_exp_mux71" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003db
       (.I0(sig00000099),
        .I1(sig0000016b),
        .I2(sig0000015c),
        .O(sig000000fb));
  (* PK_HLUTNM = "___XLNM___66___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/EXP/Mmux_abs_exp_mux71" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000003dc
       (.I0(sig00000099),
        .I1(sig0000016c),
        .I2(sig0000015d),
        .O(sig000000fc));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h20)) 
    blk000003dd
       (.I0(sig00000123),
        .I1(sig00000175),
        .I2(sig00000117),
        .O(sig00000101));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h20)) 
    blk000003de
       (.I0(sig00000123),
        .I1(sig00000175),
        .I2(sig00000119),
        .O(sig00000100));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h20)) 
    blk000003df
       (.I0(sig00000123),
        .I1(sig00000175),
        .I2(sig00000116),
        .O(sig000000ff));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h20)) 
    blk000003e0
       (.I0(sig00000123),
        .I1(sig00000175),
        .I2(sig00000118),
        .O(sig000000fe));
  (* PK_HLUTNM = "___XLNM___69___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/EXP/Mxor_subtract_ip_xo<0>1" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk000003e1
       (.I0(a[23]),
        .I1(b[23]),
        .O(sig00000102));
  (* PK_HLUTNM = "___XLNM___69___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/EXP/Mxor_subtract_ip_xo<0>1" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk000003e2
       (.I0(a[31]),
        .I1(b[31]),
        .O(sig000000e3));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h8000)) 
    blk000003e3
       (.I0(b[23]),
        .I1(b[24]),
        .I2(b[25]),
        .I3(b[26]),
        .O(sig000000d1));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h8000)) 
    blk000003e4
       (.I0(b[27]),
        .I1(b[28]),
        .I2(b[29]),
        .I3(b[30]),
        .O(sig000000d2));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h8000)) 
    blk000003e5
       (.I0(a[23]),
        .I1(a[24]),
        .I2(a[25]),
        .I3(a[26]),
        .O(sig000000d5));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h8000)) 
    blk000003e6
       (.I0(a[27]),
        .I1(a[28]),
        .I2(a[29]),
        .I3(a[30]),
        .O(sig000000d6));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h0001)) 
    blk000003e7
       (.I0(b[23]),
        .I1(b[24]),
        .I2(b[25]),
        .I3(b[26]),
        .O(sig000000df));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h0001)) 
    blk000003e8
       (.I0(b[27]),
        .I1(b[28]),
        .I2(b[29]),
        .I3(b[30]),
        .O(sig000000e0));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h0001)) 
    blk000003e9
       (.I0(a[23]),
        .I1(a[24]),
        .I2(a[25]),
        .I3(a[26]),
        .O(sig000000e1));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h0001)) 
    blk000003ea
       (.I0(a[27]),
        .I1(a[28]),
        .I2(a[29]),
        .I3(a[30]),
        .O(sig000000e2));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h1)) 
    blk000003eb
       (.I0(sig0000012f),
        .I1(sig0000012e),
        .O(sig000000e4));
  (* PK_HLUTNM = "___XLNM___46___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/EXP/ZERO_SMALLEST1" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'hE)) 
    blk000003ec
       (.I0(sig000000dc),
        .I1(sig000000d9),
        .O(sig0000009e));
  (* PK_HLUTNM = "___XLNM___46___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/EXP/ZERO_SMALLEST1" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000003ed
       (.I0(sig000000dc),
        .I1(sig000000d9),
        .O(sig0000009f));
  (* PK_HLUTNM = "___XLNM___0___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[0].shifted_temp110" *) 
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hE6C4A280)) 
    blk000003ee
       (.I0(sig000000ab),
        .I1(sig000000aa),
        .I2(sig00000241),
        .I3(sig00000239),
        .I4(sig00000231),
        .O(sig000001f2));
  (* PK_HLUTNM = "___XLNM___13___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[0].shifted_temp81" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h5410)) 
    blk000003ef
       (.I0(sig000000ab),
        .I1(sig000000aa),
        .I2(sig00000239),
        .I3(sig00000241),
        .O(sig000001e2));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk000003f0
       (.I0(sig000000aa),
        .I1(sig000000ab),
        .I2(sig00000232),
        .I3(sig00000242),
        .I4(sig0000023a),
        .I5(sig0000022a),
        .O(sig000001f1));
  (* PK_HLUTNM = "___XLNM___3___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[0].shifted_temp91" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h5410)) 
    blk000003f1
       (.I0(sig000000ab),
        .I1(sig000000aa),
        .I2(sig0000023a),
        .I3(sig00000242),
        .O(sig000001e1));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk000003f2
       (.I0(sig0000009d),
        .I1(sig00000099),
        .I2(sig0000026c),
        .I3(sig00000283),
        .I4(sig00000282),
        .I5(sig0000026b),
        .O(sig0000029a));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk000003f3
       (.I0(sig0000009d),
        .I1(sig00000099),
        .I2(sig0000026d),
        .I3(sig00000284),
        .I4(sig00000283),
        .I5(sig0000026c),
        .O(sig0000029b));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk000003f4
       (.I0(sig0000009d),
        .I1(sig00000099),
        .I2(sig0000026b),
        .I3(sig00000282),
        .I4(sig00000281),
        .I5(sig0000026a),
        .O(sig00000299));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk000003f5
       (.I0(sig0000009d),
        .I1(sig00000099),
        .I2(sig0000026a),
        .I3(sig00000281),
        .I4(sig00000280),
        .I5(sig00000269),
        .O(sig00000298));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk000003f6
       (.I0(sig0000009d),
        .I1(sig00000099),
        .I2(sig0000025c),
        .I3(sig00000273),
        .I4(sig00000272),
        .I5(sig0000025b),
        .O(sig0000028a));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk000003f7
       (.I0(sig0000009d),
        .I1(sig00000099),
        .I2(sig0000025d),
        .I3(sig00000274),
        .I4(sig00000273),
        .I5(sig0000025c),
        .O(sig0000028b));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk000003f8
       (.I0(sig0000009d),
        .I1(sig00000099),
        .I2(sig00000269),
        .I3(sig00000280),
        .I4(sig0000027f),
        .I5(sig00000268),
        .O(sig00000297));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk000003f9
       (.I0(sig0000009d),
        .I1(sig00000099),
        .I2(sig00000268),
        .I3(sig0000027f),
        .I4(sig0000027e),
        .I5(sig00000267),
        .O(sig00000296));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk000003fa
       (.I0(sig0000009d),
        .I1(sig00000099),
        .I2(sig00000267),
        .I3(sig0000027e),
        .I4(sig0000027d),
        .I5(sig00000266),
        .O(sig00000295));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk000003fb
       (.I0(sig0000009d),
        .I1(sig00000099),
        .I2(sig00000265),
        .I3(sig0000027c),
        .I4(sig0000027b),
        .I5(sig00000264),
        .O(sig00000293));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk000003fc
       (.I0(sig0000009d),
        .I1(sig00000099),
        .I2(sig00000266),
        .I3(sig0000027d),
        .I4(sig0000027c),
        .I5(sig00000265),
        .O(sig00000294));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk000003fd
       (.I0(sig0000009d),
        .I1(sig00000099),
        .I2(sig00000264),
        .I3(sig0000027b),
        .I4(sig0000027a),
        .I5(sig00000263),
        .O(sig00000292));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk000003fe
       (.I0(sig0000009d),
        .I1(sig00000099),
        .I2(sig00000263),
        .I3(sig0000027a),
        .I4(sig00000279),
        .I5(sig00000262),
        .O(sig00000291));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk000003ff
       (.I0(sig0000009d),
        .I1(sig00000099),
        .I2(sig00000262),
        .I3(sig00000279),
        .I4(sig00000278),
        .I5(sig00000261),
        .O(sig00000290));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk00000400
       (.I0(sig0000009d),
        .I1(sig00000099),
        .I2(sig00000261),
        .I3(sig00000278),
        .I4(sig00000277),
        .I5(sig00000260),
        .O(sig0000028f));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk00000401
       (.I0(sig0000009d),
        .I1(sig00000099),
        .I2(sig00000260),
        .I3(sig00000277),
        .I4(sig00000276),
        .I5(sig0000025f),
        .O(sig0000028e));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'hA820)) 
    blk00000402
       (.I0(sig0000009d),
        .I1(sig00000099),
        .I2(sig0000025b),
        .I3(sig00000272),
        .O(sig00000289));
  (* PK_HLUTNM = "___XLNM___29___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/Mmux_smallest_z_mux161" *) 
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hFBEA5140)) 
    blk00000403
       (.I0(sig0000009d),
        .I1(sig00000099),
        .I2(sig00000288),
        .I3(sig00000271),
        .I4(sig000002cc),
        .O(sig000002a0));
  (* PK_HLUTNM = "___XLNM___29___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/Mmux_smallest_z_mux161" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk00000404
       (.I0(sig0000009d),
        .I1(sig000002cc),
        .O(sig000002a1));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk00000405
       (.I0(sig0000009d),
        .I1(sig00000099),
        .I2(sig00000271),
        .I3(sig00000288),
        .I4(sig00000287),
        .I5(sig00000270),
        .O(sig0000029f));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk00000406
       (.I0(sig0000009d),
        .I1(sig00000099),
        .I2(sig00000270),
        .I3(sig00000287),
        .I4(sig00000286),
        .I5(sig0000026f),
        .O(sig0000029e));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk00000407
       (.I0(sig0000009d),
        .I1(sig00000099),
        .I2(sig0000026f),
        .I3(sig00000286),
        .I4(sig00000285),
        .I5(sig0000026e),
        .O(sig0000029d));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk00000408
       (.I0(sig0000009d),
        .I1(sig00000099),
        .I2(sig0000025f),
        .I3(sig00000276),
        .I4(sig00000275),
        .I5(sig0000025e),
        .O(sig0000028d));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk00000409
       (.I0(sig0000009d),
        .I1(sig00000099),
        .I2(sig0000026e),
        .I3(sig00000285),
        .I4(sig00000284),
        .I5(sig0000026d),
        .O(sig0000029c));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk0000040a
       (.I0(sig0000009d),
        .I1(sig00000099),
        .I2(sig0000025e),
        .I3(sig00000275),
        .I4(sig00000274),
        .I5(sig0000025d),
        .O(sig0000028c));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk0000040b
       (.I0(sig000001d8),
        .I1(sig000001d7),
        .I2(sig000001c3),
        .I3(sig000001bf),
        .I4(sig000001c1),
        .I5(sig000001c5),
        .O(sig000001fb));
  (* PK_HLUTNM = "___XLNM___2___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[1].shifted_temp141" *) 
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h73625140)) 
    blk0000040c
       (.I0(sig000001d7),
        .I1(sig000001d8),
        .I2(sig000001bf),
        .I3(sig000001c1),
        .I4(sig000001bd),
        .O(sig000001f7));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk0000040d
       (.I0(sig000001d8),
        .I1(sig000001d7),
        .I2(sig000001c4),
        .I3(sig000001c0),
        .I4(sig000001c2),
        .I5(sig000001c6),
        .O(sig000001fc));
  (* PK_HLUTNM = "___XLNM___1___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[1].shifted_temp131" *) 
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h73625140)) 
    blk0000040e
       (.I0(sig000001d7),
        .I1(sig000001d8),
        .I2(sig000001c0),
        .I3(sig000001c2),
        .I4(sig000001be),
        .O(sig000001f8));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk0000040f
       (.I0(sig000001d8),
        .I1(sig000001d7),
        .I2(sig000001c5),
        .I3(sig000001c1),
        .I4(sig000001c3),
        .I5(sig000001c7),
        .O(sig000001fd));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk00000410
       (.I0(sig000001d8),
        .I1(sig000001d7),
        .I2(sig000001c1),
        .I3(sig000001bd),
        .I4(sig000001bf),
        .I5(sig000001c3),
        .O(sig000001f9));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk00000411
       (.I0(sig000001d8),
        .I1(sig000001d7),
        .I2(sig000001c6),
        .I3(sig000001c2),
        .I4(sig000001c4),
        .I5(sig000001c8),
        .O(sig000001fe));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk00000412
       (.I0(sig000001d8),
        .I1(sig000001d7),
        .I2(sig000001c2),
        .I3(sig000001be),
        .I4(sig000001c0),
        .I5(sig000001c4),
        .O(sig000001fa));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk00000413
       (.I0(sig000001d8),
        .I1(sig000001d7),
        .I2(sig000001c7),
        .I3(sig000001c3),
        .I4(sig000001c5),
        .I5(sig000001c9),
        .O(sig000001ff));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk00000414
       (.I0(sig000001d8),
        .I1(sig000001d7),
        .I2(sig000001c8),
        .I3(sig000001c4),
        .I4(sig000001c6),
        .I5(sig000001ca),
        .O(sig00000200));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk00000415
       (.I0(sig000001d8),
        .I1(sig000001d7),
        .I2(sig000001c9),
        .I3(sig000001c5),
        .I4(sig000001c7),
        .I5(sig000001cb),
        .O(sig00000201));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk00000416
       (.I0(sig000001d8),
        .I1(sig000001d7),
        .I2(sig000001d0),
        .I3(sig000001cc),
        .I4(sig000001ce),
        .I5(sig000001d2),
        .O(sig00000208));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk00000417
       (.I0(sig000001d8),
        .I1(sig000001d7),
        .I2(sig000001d4),
        .I3(sig000001d0),
        .I4(sig000001d2),
        .I5(sig000001d6),
        .O(sig0000020c));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk00000418
       (.I0(sig000001d8),
        .I1(sig000001d7),
        .I2(sig000001cb),
        .I3(sig000001c7),
        .I4(sig000001c9),
        .I5(sig000001cd),
        .O(sig00000203));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk00000419
       (.I0(sig000001d8),
        .I1(sig000001d7),
        .I2(sig000001ca),
        .I3(sig000001c6),
        .I4(sig000001c8),
        .I5(sig000001cc),
        .O(sig00000202));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk0000041a
       (.I0(sig000001d8),
        .I1(sig000001d7),
        .I2(sig000001cc),
        .I3(sig000001c8),
        .I4(sig000001ca),
        .I5(sig000001ce),
        .O(sig00000204));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk0000041b
       (.I0(sig000001d8),
        .I1(sig000001d7),
        .I2(sig000001cd),
        .I3(sig000001c9),
        .I4(sig000001cb),
        .I5(sig000001cf),
        .O(sig00000205));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk0000041c
       (.I0(sig000001d8),
        .I1(sig000001d7),
        .I2(sig000001ce),
        .I3(sig000001ca),
        .I4(sig000001cc),
        .I5(sig000001d0),
        .O(sig00000206));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk0000041d
       (.I0(sig000001d8),
        .I1(sig000001d7),
        .I2(sig000001cf),
        .I3(sig000001cb),
        .I4(sig000001cd),
        .I5(sig000001d1),
        .O(sig00000207));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk0000041e
       (.I0(sig000001d8),
        .I1(sig000001d7),
        .I2(sig000001d1),
        .I3(sig000001cd),
        .I4(sig000001cf),
        .I5(sig000001d3),
        .O(sig00000209));
  (* PK_HLUTNM = "___XLNM___2___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[1].shifted_temp141" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h5410)) 
    blk0000041f
       (.I0(sig000001d7),
        .I1(sig000001d8),
        .I2(sig000001bf),
        .I3(sig000001bd),
        .O(sig000001f5));
  (* PK_HLUTNM = "___XLNM___1___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[1].shifted_temp131" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h5410)) 
    blk00000420
       (.I0(sig000001d7),
        .I1(sig000001d8),
        .I2(sig000001c0),
        .I3(sig000001be),
        .O(sig000001f6));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk00000421
       (.I0(sig000001d8),
        .I1(sig000001d7),
        .I2(sig000001d2),
        .I3(sig000001ce),
        .I4(sig000001d0),
        .I5(sig000001d4),
        .O(sig0000020a));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk00000422
       (.I0(sig000001d8),
        .I1(sig000001d7),
        .I2(sig000001d3),
        .I3(sig000001cf),
        .I4(sig000001d1),
        .I5(sig000001d5),
        .O(sig0000020b));
  (* PK_HLUTNM = "___XLNM___9___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[0].shifted_temp27" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h5410)) 
    blk00000423
       (.I0(sig000000ab),
        .I1(sig000000aa),
        .I2(sig00000233),
        .I3(sig0000023b),
        .O(sig000001e8));
  (* PK_HLUTNM = "___XLNM___8___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[0].shifted_temp31" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h5410)) 
    blk00000424
       (.I0(sig000000ab),
        .I1(sig000000aa),
        .I2(sig00000234),
        .I3(sig0000023c),
        .O(sig000001e7));
  (* PK_HLUTNM = "___XLNM___7___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[0].shifted_temp41" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h5410)) 
    blk00000425
       (.I0(sig000000ab),
        .I1(sig000000aa),
        .I2(sig00000235),
        .I3(sig0000023d),
        .O(sig000001e6));
  (* PK_HLUTNM = "___XLNM___6___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[0].shifted_temp51" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h5410)) 
    blk00000426
       (.I0(sig000000ab),
        .I1(sig000000aa),
        .I2(sig00000236),
        .I3(sig0000023e),
        .O(sig000001e5));
  (* PK_HLUTNM = "___XLNM___5___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[0].shifted_temp61" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h5410)) 
    blk00000427
       (.I0(sig000000ab),
        .I1(sig000000aa),
        .I2(sig00000237),
        .I3(sig0000023f),
        .O(sig000001e4));
  (* PK_HLUTNM = "___XLNM___4___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[0].shifted_temp71" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h5410)) 
    blk00000428
       (.I0(sig000000ab),
        .I1(sig000000aa),
        .I2(sig00000238),
        .I3(sig00000240),
        .O(sig000001e3));
  (* PK_HLUTNM = "___XLNM___9___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[0].shifted_temp27" *) 
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h73625140)) 
    blk00000429
       (.I0(sig000000ab),
        .I1(sig000000aa),
        .I2(sig00000233),
        .I3(sig0000022b),
        .I4(sig0000023b),
        .O(sig000001f0));
  (* PK_HLUTNM = "___XLNM___8___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[0].shifted_temp31" *) 
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h73625140)) 
    blk0000042a
       (.I0(sig000000ab),
        .I1(sig000000aa),
        .I2(sig00000234),
        .I3(sig0000022c),
        .I4(sig0000023c),
        .O(sig000001ef));
  (* PK_HLUTNM = "___XLNM___7___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[0].shifted_temp41" *) 
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h73625140)) 
    blk0000042b
       (.I0(sig000000ab),
        .I1(sig000000aa),
        .I2(sig00000235),
        .I3(sig0000022d),
        .I4(sig0000023d),
        .O(sig000001ee));
  (* PK_HLUTNM = "___XLNM___6___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[0].shifted_temp51" *) 
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h73625140)) 
    blk0000042c
       (.I0(sig000000ab),
        .I1(sig000000aa),
        .I2(sig00000236),
        .I3(sig0000022e),
        .I4(sig0000023e),
        .O(sig000001ed));
  (* PK_HLUTNM = "___XLNM___5___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[0].shifted_temp61" *) 
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h73625140)) 
    blk0000042d
       (.I0(sig000000ab),
        .I1(sig000000aa),
        .I2(sig00000237),
        .I3(sig0000022f),
        .I4(sig0000023f),
        .O(sig000001ec));
  (* PK_HLUTNM = "___XLNM___4___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[0].shifted_temp71" *) 
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h73625140)) 
    blk0000042e
       (.I0(sig000000ab),
        .I1(sig000000aa),
        .I2(sig00000238),
        .I3(sig00000230),
        .I4(sig00000240),
        .O(sig000001eb));
  (* PK_HLUTNM = "___XLNM___0___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[0].shifted_temp110" *) 
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h73625140)) 
    blk0000042f
       (.I0(sig000000ab),
        .I1(sig000000aa),
        .I2(sig00000239),
        .I3(sig00000231),
        .I4(sig00000241),
        .O(sig000001ea));
  (* PK_HLUTNM = "___XLNM___3___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[0].shifted_temp91" *) 
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h73625140)) 
    blk00000430
       (.I0(sig000000ab),
        .I1(sig000000aa),
        .I2(sig0000023a),
        .I3(sig00000232),
        .I4(sig00000242),
        .O(sig000001e9));
  (* PK_HLUTNM = "___XLNM___25___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[1].shifted_temp171" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk00000431
       (.I0(sig000001be),
        .I1(sig000001d7),
        .I2(sig000001d8),
        .O(sig000001f4));
  (* PK_HLUTNM = "___XLNM___25___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[1].shifted_temp171" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk00000432
       (.I0(sig000001bd),
        .I1(sig000001d7),
        .I2(sig000001d8),
        .O(sig000001f3));
  (* PK_HLUTNM = "___XLNM___27___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[0].shifted_temp101" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk00000433
       (.I0(sig0000023b),
        .I1(sig000000ab),
        .I2(sig000000aa),
        .O(sig000001e0));
  (* PK_HLUTNM = "___XLNM___27___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[0].shifted_temp101" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk00000434
       (.I0(sig0000023c),
        .I1(sig000000ab),
        .I2(sig000000aa),
        .O(sig000001df));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk00000435
       (.I0(sig0000023d),
        .I1(sig000000ab),
        .I2(sig000000aa),
        .O(sig000001de));
  (* PK_HLUTNM = "___XLNM___28___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[0].shifted_temp141" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk00000436
       (.I0(sig0000023e),
        .I1(sig000000ab),
        .I2(sig000000aa),
        .O(sig000001dd));
  (* PK_HLUTNM = "___XLNM___26___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[0].shifted_temp151" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk00000437
       (.I0(sig0000023f),
        .I1(sig000000ab),
        .I2(sig000000aa),
        .O(sig000001dc));
  (* PK_HLUTNM = "___XLNM___26___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[0].shifted_temp151" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk00000438
       (.I0(sig00000240),
        .I1(sig000000ab),
        .I2(sig000000aa),
        .O(sig000001db));
  (* PK_HLUTNM = "___XLNM___13___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[0].shifted_temp81" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk00000439
       (.I0(sig00000241),
        .I1(sig000000ab),
        .I2(sig000000aa),
        .O(sig000001da));
  (* PK_HLUTNM = "___XLNM___28___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_SHIFT/Mmux_MUX_LOOP[0].shifted_temp141" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk0000043a
       (.I0(sig00000242),
        .I1(sig000000ab),
        .I2(sig000000aa),
        .O(sig000001d9));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'hE)) 
    blk0000043b
       (.I0(sig000002a2),
        .I1(sig000002a3),
        .O(sig00000228));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h1F)) 
    blk0000043c
       (.I0(sig00000242),
        .I1(sig00000241),
        .I2(sig000000a8),
        .O(sig000002c0));
  (* PK_HLUTNM = "___XLNM___65___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_Z_D/Mmux_zero_det_unreg<0><5>11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h1F)) 
    blk0000043d
       (.I0(sig0000023e),
        .I1(sig0000023d),
        .I2(sig000000a8),
        .O(sig000002c1));
  (* PK_HLUTNM = "___XLNM___65___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_Z_D/Mmux_zero_det_unreg<0><5>11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h1F)) 
    blk0000043e
       (.I0(sig0000023a),
        .I1(sig00000239),
        .I2(sig000000a8),
        .O(sig000002c2));
  (* PK_HLUTNM = "___XLNM___64___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_Z_D/Mmux_zero_det_unreg<0><3>11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h1F)) 
    blk0000043f
       (.I0(sig00000236),
        .I1(sig00000235),
        .I2(sig000000a8),
        .O(sig000002c3));
  (* PK_HLUTNM = "___XLNM___64___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_Z_D/Mmux_zero_det_unreg<0><3>11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h1F)) 
    blk00000440
       (.I0(sig00000232),
        .I1(sig00000231),
        .I2(sig000000a8),
        .O(sig000002c4));
  (* PK_HLUTNM = "___XLNM___63___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_Z_D/Mmux_zero_det_unreg<0><1>11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h1F)) 
    blk00000441
       (.I0(sig0000022e),
        .I1(sig0000022d),
        .I2(sig000000a8),
        .O(sig000002c5));
  (* PK_HLUTNM = "___XLNM___63___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/ALIGN/ALIGN_SHIFT/ALIGN_Z_D/Mmux_zero_det_unreg<0><1>11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h7)) 
    blk00000442
       (.I0(sig000000a8),
        .I1(sig0000022a),
        .O(sig000002c6));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h1)) 
    blk00000443
       (.I0(sig00000241),
        .I1(sig00000242),
        .O(sig000002d9));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h0001)) 
    blk00000444
       (.I0(sig0000023d),
        .I1(sig0000023e),
        .I2(sig0000023f),
        .I3(sig00000240),
        .O(sig000002da));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h0001)) 
    blk00000445
       (.I0(sig00000239),
        .I1(sig0000023a),
        .I2(sig0000023b),
        .I3(sig0000023c),
        .O(sig000002db));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h0001)) 
    blk00000446
       (.I0(sig00000235),
        .I1(sig00000236),
        .I2(sig00000237),
        .I3(sig00000238),
        .O(sig000002dc));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h0001)) 
    blk00000447
       (.I0(sig00000231),
        .I1(sig00000232),
        .I2(sig00000233),
        .I3(sig00000234),
        .O(sig000002dd));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h0001)) 
    blk00000448
       (.I0(sig0000022d),
        .I1(sig0000022e),
        .I2(sig0000022f),
        .I3(sig00000230),
        .O(sig000002de));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h01)) 
    blk00000449
       (.I0(sig0000022a),
        .I1(sig0000022b),
        .I2(sig0000022c),
        .O(sig000002df));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h39C6)) 
    blk0000044a
       (.I0(sig00000224),
        .I1(sig00000243),
        .I2(sig00000229),
        .I3(sig0000009b),
        .O(sig000002f7));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h39C6)) 
    blk0000044b
       (.I0(sig00000223),
        .I1(sig00000244),
        .I2(sig00000229),
        .I3(sig0000009b),
        .O(sig000002f8));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h39C6)) 
    blk0000044c
       (.I0(sig00000222),
        .I1(sig00000245),
        .I2(sig00000229),
        .I3(sig0000009b),
        .O(sig000002f9));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h39C6)) 
    blk0000044d
       (.I0(sig00000221),
        .I1(sig00000246),
        .I2(sig00000229),
        .I3(sig0000009b),
        .O(sig000002fa));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h39C6)) 
    blk0000044e
       (.I0(sig00000220),
        .I1(sig00000247),
        .I2(sig00000229),
        .I3(sig0000009b),
        .O(sig000002fb));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h39C6)) 
    blk0000044f
       (.I0(sig0000021f),
        .I1(sig00000248),
        .I2(sig00000229),
        .I3(sig0000009b),
        .O(sig000002fc));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h39C6)) 
    blk00000450
       (.I0(sig0000021e),
        .I1(sig00000249),
        .I2(sig00000229),
        .I3(sig0000009b),
        .O(sig000002fd));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h39C6)) 
    blk00000451
       (.I0(sig0000021d),
        .I1(sig0000024a),
        .I2(sig00000229),
        .I3(sig0000009b),
        .O(sig000002fe));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h39C6)) 
    blk00000452
       (.I0(sig0000021c),
        .I1(sig0000024b),
        .I2(sig00000229),
        .I3(sig0000009b),
        .O(sig000002ff));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h39C6)) 
    blk00000453
       (.I0(sig0000021b),
        .I1(sig0000024c),
        .I2(sig00000229),
        .I3(sig0000009b),
        .O(sig00000300));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h39C6)) 
    blk00000454
       (.I0(sig0000021a),
        .I1(sig0000024d),
        .I2(sig00000229),
        .I3(sig0000009b),
        .O(sig00000301));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h39C6)) 
    blk00000455
       (.I0(sig00000219),
        .I1(sig0000024e),
        .I2(sig00000229),
        .I3(sig0000009b),
        .O(sig000002e8));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h39C6)) 
    blk00000456
       (.I0(sig00000218),
        .I1(sig0000024f),
        .I2(sig00000229),
        .I3(sig0000009b),
        .O(sig000002e9));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h39C6)) 
    blk00000457
       (.I0(sig00000217),
        .I1(sig00000250),
        .I2(sig00000229),
        .I3(sig0000009b),
        .O(sig000002ea));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h39C6)) 
    blk00000458
       (.I0(sig00000216),
        .I1(sig00000251),
        .I2(sig00000229),
        .I3(sig0000009b),
        .O(sig000002eb));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h39C6)) 
    blk00000459
       (.I0(sig00000215),
        .I1(sig00000252),
        .I2(sig00000229),
        .I3(sig0000009b),
        .O(sig000002ec));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h39C6)) 
    blk0000045a
       (.I0(sig00000214),
        .I1(sig00000253),
        .I2(sig00000229),
        .I3(sig0000009b),
        .O(sig000002ed));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h6696)) 
    blk0000045b
       (.I0(sig00000254),
        .I1(sig0000009b),
        .I2(sig00000213),
        .I3(sig00000229),
        .O(sig000002ee));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h6696)) 
    blk0000045c
       (.I0(sig00000255),
        .I1(sig0000009b),
        .I2(sig00000212),
        .I3(sig00000229),
        .O(sig000002ef));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h6696)) 
    blk0000045d
       (.I0(sig00000256),
        .I1(sig0000009b),
        .I2(sig00000211),
        .I3(sig00000229),
        .O(sig000002f0));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h6696)) 
    blk0000045e
       (.I0(sig00000257),
        .I1(sig0000009b),
        .I2(sig00000210),
        .I3(sig00000229),
        .O(sig000002f1));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h6696)) 
    blk0000045f
       (.I0(sig00000258),
        .I1(sig0000009b),
        .I2(sig0000020f),
        .I3(sig00000229),
        .O(sig000002f2));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h6696)) 
    blk00000460
       (.I0(sig00000259),
        .I1(sig0000009b),
        .I2(sig0000020e),
        .I3(sig00000229),
        .O(sig000002f3));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h6696)) 
    blk00000461
       (.I0(sig0000025a),
        .I1(sig0000009b),
        .I2(sig0000020d),
        .I3(sig00000229),
        .O(sig000002f4));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hD2)) 
    blk00000462
       (.I0(sig00000226),
        .I1(sig00000229),
        .I2(sig0000009b),
        .O(sig000002f5));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hD2)) 
    blk00000463
       (.I0(sig00000225),
        .I1(sig00000229),
        .I2(sig0000009b),
        .O(sig000002f6));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk00000464
       (.I0(sig00000416),
        .I1(sig00000415),
        .I2(sig00000404),
        .I3(sig00000414),
        .I4(sig0000040c),
        .I5(sig000003fc),
        .O(sig000003e1));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk00000465
       (.I0(sig000003bb),
        .I1(sig000003b7),
        .I2(sig000003b5),
        .I3(sig000003b9),
        .I4(sig00000417),
        .I5(sig00000418),
        .O(sig000003ea));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk00000466
       (.I0(sig000003bc),
        .I1(sig000003b8),
        .I2(sig000003b6),
        .I3(sig000003ba),
        .I4(sig00000417),
        .I5(sig00000418),
        .O(sig000003eb));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk00000467
       (.I0(sig000003bd),
        .I1(sig000003b9),
        .I2(sig000003b7),
        .I3(sig000003bb),
        .I4(sig00000417),
        .I5(sig00000418),
        .O(sig000003ec));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk00000468
       (.I0(sig000003b9),
        .I1(sig000003b5),
        .I2(sig000003b3),
        .I3(sig000003b7),
        .I4(sig00000417),
        .I5(sig00000418),
        .O(sig000003e8));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk00000469
       (.I0(sig000003be),
        .I1(sig000003ba),
        .I2(sig000003b8),
        .I3(sig000003bc),
        .I4(sig00000417),
        .I5(sig00000418),
        .O(sig000003ed));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk0000046a
       (.I0(sig000003ba),
        .I1(sig000003b6),
        .I2(sig000003b4),
        .I3(sig000003b8),
        .I4(sig00000417),
        .I5(sig00000418),
        .O(sig000003e9));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk0000046b
       (.I0(sig000003bf),
        .I1(sig000003bb),
        .I2(sig000003b9),
        .I3(sig000003bd),
        .I4(sig00000417),
        .I5(sig00000418),
        .O(sig000003ee));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk0000046c
       (.I0(sig000003c0),
        .I1(sig000003bc),
        .I2(sig000003ba),
        .I3(sig000003be),
        .I4(sig00000417),
        .I5(sig00000418),
        .O(sig000003ef));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk0000046d
       (.I0(sig000003c1),
        .I1(sig000003bd),
        .I2(sig000003bb),
        .I3(sig000003bf),
        .I4(sig00000417),
        .I5(sig00000418),
        .O(sig000003f0));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk0000046e
       (.I0(sig000004da),
        .I1(sig000003c4),
        .I2(sig000003c2),
        .I3(sig000004d9),
        .I4(sig00000417),
        .I5(sig00000418),
        .O(sig000003f7));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk0000046f
       (.I0(sig000003c3),
        .I1(sig000003bf),
        .I2(sig000003bd),
        .I3(sig000003c1),
        .I4(sig00000417),
        .I5(sig00000418),
        .O(sig000003f2));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk00000470
       (.I0(sig000003c2),
        .I1(sig000003be),
        .I2(sig000003bc),
        .I3(sig000003c0),
        .I4(sig00000417),
        .I5(sig00000418),
        .O(sig000003f1));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk00000471
       (.I0(sig000003c4),
        .I1(sig000003c0),
        .I2(sig000003be),
        .I3(sig000003c2),
        .I4(sig00000417),
        .I5(sig00000418),
        .O(sig000003f3));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk00000472
       (.I0(sig000003c5),
        .I1(sig000003c1),
        .I2(sig000003bf),
        .I3(sig000003c3),
        .I4(sig00000417),
        .I5(sig00000418),
        .O(sig000003f4));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk00000473
       (.I0(sig000004d9),
        .I1(sig000003c2),
        .I2(sig000003c0),
        .I3(sig000003c4),
        .I4(sig00000417),
        .I5(sig00000418),
        .O(sig000003f5));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk00000474
       (.I0(sig000003c6),
        .I1(sig000003c3),
        .I2(sig000003c1),
        .I3(sig000003c5),
        .I4(sig00000417),
        .I5(sig00000418),
        .O(sig000003f6));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFF00CCCCF0F0AAAA)) 
    blk00000475
       (.I0(sig000003c7),
        .I1(sig000003c6),
        .I2(sig000003c5),
        .I3(sig000003c3),
        .I4(sig00000417),
        .I5(sig00000418),
        .O(sig000003f8));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFF00CCCCF0F0AAAA)) 
    blk00000476
       (.I0(sig000004db),
        .I1(sig000004da),
        .I2(sig000004d9),
        .I3(sig000003c4),
        .I4(sig00000417),
        .I5(sig00000418),
        .O(sig000003f9));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFF00CCCCF0F0AAAA)) 
    blk00000477
       (.I0(sig000003c8),
        .I1(sig000003c7),
        .I2(sig000003c6),
        .I3(sig000003c5),
        .I4(sig00000417),
        .I5(sig00000418),
        .O(sig000003fa));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk00000478
       (.I0(sig000004e8),
        .I1(sig000003fb),
        .I2(sig00000403),
        .O(sig000004b5));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk00000479
       (.I0(sig000004e8),
        .I1(sig000003fd),
        .I2(sig00000405),
        .O(sig000004b6));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk0000047a
       (.I0(sig000004e8),
        .I1(sig000003ff),
        .I2(sig00000407),
        .O(sig000004b7));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk0000047b
       (.I0(sig000004e8),
        .I1(sig00000401),
        .I2(sig00000409),
        .O(sig000004b8));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk0000047c
       (.I0(sig000004e0),
        .I1(sig0000040b),
        .I2(sig00000413),
        .O(sig000004b9));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk0000047d
       (.I0(sig000004e0),
        .I1(sig0000040d),
        .O(sig000004ba));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk0000047e
       (.I0(sig000004e0),
        .I1(sig0000040f),
        .O(sig000004bb));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk0000047f
       (.I0(sig000004e0),
        .I1(sig00000411),
        .O(sig000004bc));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk00000480
       (.I0(sig000004e8),
        .I1(sig000004e5),
        .I2(sig000004e2),
        .O(sig000004be));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk00000481
       (.I0(sig000004e8),
        .I1(sig000004e6),
        .I2(sig000004e3),
        .O(sig000004bf));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk00000482
       (.I0(sig000004e8),
        .I1(sig000004e7),
        .I2(sig000004e4),
        .O(sig000004c0));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000483
       (.I0(sig000004e8),
        .I1(sig00000415),
        .O(sig000004c1));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk00000484
       (.I0(sig000004e0),
        .I1(sig000004dd),
        .I2(sig000004e1),
        .O(sig000004c2));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk00000485
       (.I0(sig000004e0),
        .I1(sig000004de),
        .O(sig000004c3));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk00000486
       (.I0(sig000004e0),
        .I1(sig000004df),
        .O(sig000004c4));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk00000487
       (.I0(sig00000415),
        .I1(sig000004e8),
        .I2(sig000004e0),
        .O(sig00000416));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hAC)) 
    blk00000488
       (.I0(sig000004d7),
        .I1(sig000004d8),
        .I2(sig00000417),
        .O(sig00000418));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk00000489
       (.I0(sig000004d8),
        .I1(sig000004dc),
        .I2(sig000004db),
        .O(sig000004af));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk0000048a
       (.I0(sig000004d7),
        .I1(sig000004da),
        .I2(sig000004d9),
        .O(sig000004b0));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000048b
       (.I0(sig00000417),
        .I1(sig000004d8),
        .O(sig000004b2));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000048c
       (.I0(sig00000415),
        .I1(sig000004e1),
        .O(sig000004c8));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h1)) 
    blk0000048d
       (.I0(sig0000047d),
        .I1(sig0000047c),
        .O(sig000004c9));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h1)) 
    blk0000048e
       (.I0(sig0000047b),
        .I1(sig0000047a),
        .O(sig000004ca));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h1)) 
    blk0000048f
       (.I0(sig00000479),
        .I1(sig00000478),
        .O(sig000004cb));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h1)) 
    blk00000490
       (.I0(sig00000477),
        .I1(sig00000476),
        .O(sig000004cc));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h1)) 
    blk00000491
       (.I0(sig00000475),
        .I1(sig00000474),
        .O(sig000004cd));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h1)) 
    blk00000492
       (.I0(sig00000473),
        .I1(sig00000472),
        .O(sig000004ce));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h1)) 
    blk00000493
       (.I0(sig00000471),
        .I1(sig00000470),
        .O(sig000004cf));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h1)) 
    blk00000494
       (.I0(sig0000046f),
        .I1(sig0000046e),
        .O(sig000004d0));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h1)) 
    blk00000495
       (.I0(sig0000046d),
        .I1(sig0000046c),
        .O(sig000004d1));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h1)) 
    blk00000496
       (.I0(sig0000046b),
        .I1(sig0000046a),
        .O(sig000004d2));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h1)) 
    blk00000497
       (.I0(sig00000469),
        .I1(sig00000468),
        .O(sig000004d3));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h1)) 
    blk00000498
       (.I0(sig00000467),
        .I1(sig00000466),
        .O(sig000004d4));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h1)) 
    blk00000499
       (.I0(sig00000465),
        .I1(sig0000022a),
        .O(sig000004d5));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk0000049a
       (.I0(sig00000059),
        .I1(sig00000057),
        .I2(sig00000056),
        .I3(sig00000058),
        .I4(sig0000003f),
        .I5(sig00000040),
        .O(sig00000506));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFF00CCCCF0F0AAAA)) 
    blk0000049b
       (.I0(sig0000005a),
        .I1(sig00000059),
        .I2(sig00000058),
        .I3(sig00000057),
        .I4(sig0000003f),
        .I5(sig00000040),
        .O(sig00000507));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk0000049c
       (.I0(sig00000058),
        .I1(sig00000056),
        .I2(sig00000055),
        .I3(sig00000057),
        .I4(sig0000003f),
        .I5(sig00000040),
        .O(sig00000505));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk0000049d
       (.I0(sig00000057),
        .I1(sig00000055),
        .I2(sig00000054),
        .I3(sig00000056),
        .I4(sig0000003f),
        .I5(sig00000040),
        .O(sig00000504));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk0000049e
       (.I0(sig00000056),
        .I1(sig00000054),
        .I2(sig00000053),
        .I3(sig00000055),
        .I4(sig0000003f),
        .I5(sig00000040),
        .O(sig00000503));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk0000049f
       (.I0(sig00000055),
        .I1(sig00000053),
        .I2(sig00000052),
        .I3(sig00000054),
        .I4(sig0000003f),
        .I5(sig00000040),
        .O(sig00000502));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk000004a0
       (.I0(sig00000054),
        .I1(sig00000052),
        .I2(sig00000051),
        .I3(sig00000053),
        .I4(sig0000003f),
        .I5(sig00000040),
        .O(sig00000501));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk000004a1
       (.I0(sig00000053),
        .I1(sig00000051),
        .I2(sig00000050),
        .I3(sig00000052),
        .I4(sig0000003f),
        .I5(sig00000040),
        .O(sig00000500));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk000004a2
       (.I0(sig00000052),
        .I1(sig00000050),
        .I2(sig0000004f),
        .I3(sig00000051),
        .I4(sig0000003f),
        .I5(sig00000040),
        .O(sig000004ff));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFD75B931EC64A820)) 
    blk000004a3
       (.I0(sig00000040),
        .I1(sig0000003f),
        .I2(sig0000005a),
        .I3(sig00000058),
        .I4(sig00000059),
        .I5(sig0000005b),
        .O(sig00000508));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk000004a4
       (.I0(sig00000051),
        .I1(sig0000004f),
        .I2(sig0000004e),
        .I3(sig00000050),
        .I4(sig0000003f),
        .I5(sig00000040),
        .O(sig000004fe));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk000004a5
       (.I0(sig0000004a),
        .I1(sig00000048),
        .I2(sig00000047),
        .I3(sig00000049),
        .I4(sig0000003f),
        .I5(sig00000040),
        .O(sig0000050e));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk000004a6
       (.I0(sig0000004b),
        .I1(sig00000049),
        .I2(sig00000048),
        .I3(sig0000004a),
        .I4(sig0000003f),
        .I5(sig00000040),
        .O(sig0000050f));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk000004a7
       (.I0(sig00000049),
        .I1(sig00000047),
        .I2(sig00000046),
        .I3(sig00000048),
        .I4(sig0000003f),
        .I5(sig00000040),
        .O(sig0000050d));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    blk000004a8
       (.I0(sig00000048),
        .I1(sig00000046),
        .I2(sig00000047),
        .I3(sig00000045),
        .I4(sig0000003f),
        .I5(sig00000040),
        .O(sig0000050c));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFF00CCCCF0F0AAAA)) 
    blk000004a9
       (.I0(sig00000047),
        .I1(sig00000046),
        .I2(sig00000045),
        .I3(sig00000044),
        .I4(sig0000003f),
        .I5(sig00000040),
        .O(sig0000050b));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk000004aa
       (.I0(sig00000046),
        .I1(sig00000044),
        .I2(sig00000043),
        .I3(sig00000045),
        .I4(sig0000003f),
        .I5(sig00000040),
        .O(sig0000050a));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk000004ab
       (.I0(sig00000050),
        .I1(sig0000004e),
        .I2(sig0000004d),
        .I3(sig0000004f),
        .I4(sig0000003f),
        .I5(sig00000040),
        .O(sig00000514));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk000004ac
       (.I0(sig0000004f),
        .I1(sig0000004d),
        .I2(sig0000004c),
        .I3(sig0000004e),
        .I4(sig0000003f),
        .I5(sig00000040),
        .O(sig00000513));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hAAAAFF00F0F0CCCC)) 
    blk000004ad
       (.I0(sig00000042),
        .I1(sig00000045),
        .I2(sig00000043),
        .I3(sig00000044),
        .I4(sig0000003f),
        .I5(sig00000040),
        .O(sig00000509));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk000004ae
       (.I0(sig0000004e),
        .I1(sig0000004c),
        .I2(sig0000004b),
        .I3(sig0000004d),
        .I4(sig0000003f),
        .I5(sig00000040),
        .O(sig00000512));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk000004af
       (.I0(sig0000004d),
        .I1(sig0000004b),
        .I2(sig0000004a),
        .I3(sig0000004c),
        .I4(sig0000003f),
        .I5(sig00000040),
        .O(sig00000511));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0F0FF00CCCCAAAA)) 
    blk000004b0
       (.I0(sig0000004c),
        .I1(sig0000004a),
        .I2(sig00000049),
        .I3(sig0000004b),
        .I4(sig0000003f),
        .I5(sig00000040),
        .O(sig00000510));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF7E6B3A2D5C49180)) 
    blk000004b1
       (.I0(sig00000596),
        .I1(sig00000597),
        .I2(sig00000042),
        .I3(sig00000045),
        .I4(sig00000043),
        .I5(sig00000044),
        .O(sig00000527));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h00AAF0CC)) 
    blk000004b2
       (.I0(sig00000042),
        .I1(sig00000044),
        .I2(sig00000043),
        .I3(sig00000040),
        .I4(sig00000597),
        .O(sig00000526));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'hF5F1)) 
    blk000004b3
       (.I0(sig00000042),
        .I1(sig00000043),
        .I2(sig0000003f),
        .I3(sig00000040),
        .O(sig00000525));
  (* PK_HLUTNM = "___XLNM___36___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_mant_op[22]_GND_396_o_MUX_376_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h54)) 
    blk000004b4
       (.I0(sig00000114),
        .I1(sig0000003e),
        .I2(sig00000113),
        .O(sig0000056c));
  (* PK_HLUTNM = "___XLNM___44___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_exp_op[0]_GND_396_o_MUX_373_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hF4)) 
    blk000004b5
       (.I0(sig00000114),
        .I1(sig00000020),
        .I2(sig00000113),
        .O(sig0000056d));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h90000090)) 
    blk000004b6
       (.I0(sig00000127),
        .I1(sig0000007a),
        .I2(sig00000595),
        .I3(sig00000126),
        .I4(sig00000079),
        .O(sig00000578));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h82)) 
    blk000004b7
       (.I0(sig0000013d),
        .I1(sig00000140),
        .I2(sig00000141),
        .O(sig00000579));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFFFFD858FFFF8808)) 
    blk000004b8
       (.I0(sig0000013c),
        .I1(sig0000013b),
        .I2(sig0000013e),
        .I3(sig00000579),
        .I4(sig0000013f),
        .I5(sig0000013d),
        .O(sig00000109));
  (* PK_HLUTNM = "___XLNM___24___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/EXP/exp_align<3>21" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h7)) 
    blk000004b9
       (.I0(sig0000014e),
        .I1(sig0000014f),
        .O(sig0000057a));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h7DDD288828887DDD)) 
    blk000004ba
       (.I0(sig00000139),
        .I1(sig00000148),
        .I2(sig00000147),
        .I3(sig00000146),
        .I4(sig00000150),
        .I5(sig0000057a),
        .O(sig000000f0));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h8080008000800080)) 
    blk000004bb
       (.I0(sig0000013c),
        .I1(sig0000013b),
        .I2(sig00000140),
        .I3(sig0000013e),
        .I4(sig00000141),
        .I5(sig0000013d),
        .O(sig0000057b));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h54101010)) 
    blk000004bc
       (.I0(sig0000013c),
        .I1(sig0000013e),
        .I2(sig00000142),
        .I3(sig00000141),
        .I4(sig0000013d),
        .O(sig0000057c));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'hFE54)) 
    blk000004bd
       (.I0(sig0000013f),
        .I1(sig0000057b),
        .I2(sig0000057c),
        .I3(sig00000138),
        .O(sig0000010b));
  (* PK_HLUTNM = "___XLNM___47___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/EXP/zero_int_align1_SW0" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'hE)) 
    blk000004be
       (.I0(sig000000ad),
        .I1(sig000000ac),
        .O(sig0000057d));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF8880)) 
    blk000004bf
       (.I0(sig000000ab),
        .I1(sig000000aa),
        .I2(sig000000a8),
        .I3(sig000000a9),
        .I4(sig0000057d),
        .I5(sig000000ae),
        .O(sig0000009c));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h80)) 
    blk000004c0
       (.I0(sig00000132),
        .I1(sig00000131),
        .I2(sig00000130),
        .O(sig0000057e));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    blk000004c1
       (.I0(sig00000137),
        .I1(sig00000136),
        .I2(sig00000135),
        .I3(sig00000134),
        .I4(sig00000133),
        .I5(sig0000057e),
        .O(sig000000ed));
  (* PK_HLUTNM = "___XLNM___47___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/EXP/zero_int_align1_SW0" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hFE)) 
    blk000004c2
       (.I0(sig000000ad),
        .I1(sig000000ab),
        .I2(sig000000ac),
        .O(sig0000057f));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h0000000000000004)) 
    blk000004c3
       (.I0(sig000000a8),
        .I1(sig00000143),
        .I2(sig000000a9),
        .I3(sig000000aa),
        .I4(sig000000ae),
        .I5(sig0000057f),
        .O(sig0000010a));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h8888F000)) 
    blk000004c4
       (.I0(sig000002d6),
        .I1(sig000002d0),
        .I2(sig000002d8),
        .I3(sig000002d2),
        .I4(sig000002ca),
        .O(sig00000580));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFBBBEAAA51114000)) 
    blk000004c5
       (.I0(sig000001d7),
        .I1(sig000002ca),
        .I2(sig000002d1),
        .I3(sig000002d7),
        .I4(sig000002cf),
        .I5(sig00000580),
        .O(sig000002c9));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEA404040)) 
    blk000004c6
       (.I0(sig000002ca),
        .I1(sig000002ce),
        .I2(sig000002d5),
        .I3(sig000002cc),
        .I4(sig000002e0),
        .O(sig00000581));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h8888F000)) 
    blk000004c7
       (.I0(sig000002d4),
        .I1(sig000002cd),
        .I2(sig000002d3),
        .I3(sig000002cb),
        .I4(sig000002ca),
        .O(sig00000582));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000004c8
       (.I0(sig000001d7),
        .I1(sig00000582),
        .I2(sig00000581),
        .O(sig000002c8));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h95)) 
    blk000004c9
       (.I0(sig00000128),
        .I1(sig0000007b),
        .I2(sig0000009a),
        .O(sig00000583));
  (* XSTLIB *) 
  LUT1 #(
    .INIT(2'h2)) 
    blk000004ca
       (.I0(sig000002bc),
        .O(sig00000584));
  (* XSTLIB *) 
  LUT1 #(
    .INIT(2'h2)) 
    blk000004cb
       (.I0(sig00000515),
        .O(sig00000586));
  (* XSTLIB *) 
  LUT1 #(
    .INIT(2'h2)) 
    blk000004cc
       (.I0(sig00000516),
        .O(sig00000587));
  (* XSTLIB *) 
  LUT1 #(
    .INIT(2'h2)) 
    blk000004cd
       (.I0(sig00000517),
        .O(sig00000588));
  (* XSTLIB *) 
  LUT1 #(
    .INIT(2'h2)) 
    blk000004ce
       (.I0(sig00000518),
        .O(sig00000589));
  (* XSTLIB *) 
  LUT1 #(
    .INIT(2'h2)) 
    blk000004cf
       (.I0(sig00000519),
        .O(sig0000058a));
  (* XSTLIB *) 
  LUT1 #(
    .INIT(2'h2)) 
    blk000004d0
       (.I0(sig0000051a),
        .O(sig0000058b));
  (* XSTLIB *) 
  LUT1 #(
    .INIT(2'h2)) 
    blk000004d1
       (.I0(sig0000051b),
        .O(sig0000058c));
  (* XSTLIB *) 
  LUT1 #(
    .INIT(2'h2)) 
    blk000004d2
       (.I0(sig0000051c),
        .O(sig0000058d));
  (* XSTLIB *) 
  LUT1 #(
    .INIT(2'h2)) 
    blk000004d3
       (.I0(sig00000041),
        .O(sig0000058e));
  (* XSTLIB *) 
  LUT1 #(
    .INIT(2'h2)) 
    blk000004d4
       (.I0(sig0000009b),
        .O(sig0000058f));
  (* XSTLIB *) 
  LUT1 #(
    .INIT(2'h2)) 
    blk000004d5
       (.I0(sig0000010c),
        .O(sig00000590));
  (* XSTLIB *) 
  LUT1 #(
    .INIT(2'h2)) 
    blk000004d6
       (.I0(sig0000010d),
        .O(sig00000591));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004d7
       (.C(clk),
        .CE(1'b1),
        .D(sig00000003),
        .Q(\U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/sign_op ),
        .R(1'b0));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h56559A99)) 
    blk000004d8
       (.I0(sig00000124),
        .I1(sig0000009a),
        .I2(sig00000097),
        .I3(sig00000096),
        .I4(sig000004d6),
        .O(sig000000e5));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h999A5556)) 
    blk000004d9
       (.I0(sig00000125),
        .I1(sig0000009a),
        .I2(sig00000096),
        .I3(sig00000097),
        .I4(sig00000078),
        .O(sig000000e6));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h0100000100010001)) 
    blk000004da
       (.I0(sig0000012b),
        .I1(sig00000129),
        .I2(sig0000012a),
        .I3(sig00000128),
        .I4(sig0000009a),
        .I5(sig0000007b),
        .O(sig00000575));
  (* PK_HLUTNM = "___XLNM___48___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/EXP/flow_sel<3>92" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h1E)) 
    blk000004db
       (.I0(sig00000097),
        .I1(sig00000096),
        .I2(sig00000125),
        .O(sig00000576));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h0001000101000001)) 
    blk000004dc
       (.I0(sig00000127),
        .I1(sig0000009a),
        .I2(sig00000126),
        .I3(sig00000124),
        .I4(sig00000096),
        .I5(sig00000097),
        .O(sig00000577));
  (* PK_HLUTNM = "___XLNM___42___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_exp_op[7]_GND_396_o_MUX_364_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hBA)) 
    blk000004dd
       (.I0(sig00000113),
        .I1(sig00000114),
        .I2(sig00000027),
        .O(sig00000574));
  (* PK_HLUTNM = "___XLNM___41___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_exp_op[6]_GND_396_o_MUX_365_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hBA)) 
    blk000004de
       (.I0(sig00000113),
        .I1(sig00000114),
        .I2(sig00000026),
        .O(sig00000573));
  (* PK_HLUTNM = "___XLNM___44___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_exp_op[0]_GND_396_o_MUX_373_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hBA)) 
    blk000004df
       (.I0(sig00000113),
        .I1(sig00000114),
        .I2(sig00000025),
        .O(sig00000572));
  (* PK_HLUTNM = "___XLNM___43___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_exp_op[4]_GND_396_o_MUX_367_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hBA)) 
    blk000004e0
       (.I0(sig00000113),
        .I1(sig00000114),
        .I2(sig00000024),
        .O(sig00000571));
  (* PK_HLUTNM = "___XLNM___43___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_exp_op[4]_GND_396_o_MUX_367_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hBA)) 
    blk000004e1
       (.I0(sig00000113),
        .I1(sig00000114),
        .I2(sig00000023),
        .O(sig00000570));
  (* XSTLIB *) 
  MUXF7 blk000004e2
       (.I0(sig00000592),
        .I1(sig00000593),
        .O(sig000000f5),
        .S(sig00000139));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hAAAA6AAAAAAAAAAA)) 
    blk000004e3
       (.I0(sig00000155),
        .I1(sig00000154),
        .I2(sig00000151),
        .I3(sig00000153),
        .I4(sig000000b0),
        .I5(sig00000152),
        .O(sig00000592));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hAAAA6AAAAAAAAAAA)) 
    blk000004e4
       (.I0(sig0000014d),
        .I1(sig0000014c),
        .I2(sig00000149),
        .I3(sig0000014b),
        .I4(sig000000af),
        .I5(sig0000014a),
        .O(sig00000593));
  (* PK_HLUTNM = "___XLNM___48___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/EXP/flow_sel<3>92" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h90)) 
    blk000004e5
       (.I0(sig00000078),
        .I1(sig00000125),
        .I2(sig00000578),
        .O(sig00000594));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF6006600F0000000)) 
    blk000004e6
       (.I0(sig000004d6),
        .I1(sig00000124),
        .I2(sig00000576),
        .I3(sig00000575),
        .I4(sig00000577),
        .I5(sig00000594),
        .O(sig00000105));
  (* PK_HLUTNM = "___XLNM___17___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/NORM/NORM/NORM_SHIFT/Mmux_MUX_LOOP[0].shifted_temp81" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h5410)) 
    blk000004e7
       (.I0(sig00000415),
        .I1(sig000004e8),
        .I2(sig0000040b),
        .I3(sig00000413),
        .O(sig000003d2));
  (* PK_HLUTNM = "___XLNM___16___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/NORM/NORM/NORM_SHIFT/Mmux_MUX_LOOP[0].shifted_temp91" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h5410)) 
    blk000004e8
       (.I0(sig00000415),
        .I1(sig000004e8),
        .I2(sig0000040c),
        .I3(sig00000414),
        .O(sig000003d1));
  (* PK_HLUTNM = "___XLNM___14___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/NORM/NORM/NORM_SHIFT/Mmux_MUX_LOOP[1].shifted_temp161" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h5410)) 
    blk000004e9
       (.I0(sig00000417),
        .I1(sig000004d8),
        .I2(sig000003b5),
        .I3(sig000003b3),
        .O(sig000003e4));
  (* PK_HLUTNM = "___XLNM___15___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/NORM/NORM/NORM_SHIFT/Mmux_MUX_LOOP[1].shifted_temp151" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h5410)) 
    blk000004ea
       (.I0(sig00000417),
        .I1(sig000004d8),
        .I2(sig000003b6),
        .I3(sig000003b4),
        .O(sig000003e5));
  (* PK_HLUTNM = "___XLNM___23___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/NORM/NORM/NORM_SHIFT/Mmux_MUX_LOOP[0].shifted_temp27" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h5410)) 
    blk000004eb
       (.I0(sig00000415),
        .I1(sig000004e8),
        .I2(sig00000405),
        .I3(sig0000040d),
        .O(sig000003d8));
  (* PK_HLUTNM = "___XLNM___22___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/NORM/NORM/NORM_SHIFT/Mmux_MUX_LOOP[0].shifted_temp31" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h5410)) 
    blk000004ec
       (.I0(sig00000415),
        .I1(sig000004e8),
        .I2(sig00000406),
        .I3(sig0000040e),
        .O(sig000003d7));
  (* PK_HLUTNM = "___XLNM___21___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/NORM/NORM/NORM_SHIFT/Mmux_MUX_LOOP[0].shifted_temp41" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h5410)) 
    blk000004ed
       (.I0(sig00000415),
        .I1(sig000004e8),
        .I2(sig00000407),
        .I3(sig0000040f),
        .O(sig000003d6));
  (* PK_HLUTNM = "___XLNM___20___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/NORM/NORM/NORM_SHIFT/Mmux_MUX_LOOP[0].shifted_temp51" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h5410)) 
    blk000004ee
       (.I0(sig00000415),
        .I1(sig000004e8),
        .I2(sig00000408),
        .I3(sig00000410),
        .O(sig000003d5));
  (* PK_HLUTNM = "___XLNM___19___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/NORM/NORM/NORM_SHIFT/Mmux_MUX_LOOP[0].shifted_temp61" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h5410)) 
    blk000004ef
       (.I0(sig00000415),
        .I1(sig000004e8),
        .I2(sig00000409),
        .I3(sig00000411),
        .O(sig000003d4));
  (* PK_HLUTNM = "___XLNM___18___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/NORM/NORM/NORM_SHIFT/Mmux_MUX_LOOP[0].shifted_temp71" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h5410)) 
    blk000004f0
       (.I0(sig00000415),
        .I1(sig000004e8),
        .I2(sig0000040a),
        .I3(sig00000412),
        .O(sig000003d3));
  (* PK_HLUTNM = "___XLNM___15___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/NORM/NORM/NORM_SHIFT/Mmux_MUX_LOOP[1].shifted_temp151" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk000004f1
       (.I0(sig000003b4),
        .I1(sig00000417),
        .I2(sig000004d8),
        .O(sig000003e3));
  (* PK_HLUTNM = "___XLNM___14___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/NORM/NORM/NORM_SHIFT/Mmux_MUX_LOOP[1].shifted_temp161" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk000004f2
       (.I0(sig000003b3),
        .I1(sig00000417),
        .I2(sig000004d8),
        .O(sig000003e2));
  (* PK_HLUTNM = "___XLNM___23___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/NORM/NORM/NORM_SHIFT/Mmux_MUX_LOOP[0].shifted_temp27" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk000004f3
       (.I0(sig0000040d),
        .I1(sig00000415),
        .I2(sig000004e8),
        .O(sig000003d0));
  (* PK_HLUTNM = "___XLNM___22___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/NORM/NORM/NORM_SHIFT/Mmux_MUX_LOOP[0].shifted_temp31" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk000004f4
       (.I0(sig0000040e),
        .I1(sig00000415),
        .I2(sig000004e8),
        .O(sig000003cf));
  (* PK_HLUTNM = "___XLNM___21___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/NORM/NORM/NORM_SHIFT/Mmux_MUX_LOOP[0].shifted_temp41" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk000004f5
       (.I0(sig0000040f),
        .I1(sig00000415),
        .I2(sig000004e8),
        .O(sig000003ce));
  (* PK_HLUTNM = "___XLNM___20___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/NORM/NORM/NORM_SHIFT/Mmux_MUX_LOOP[0].shifted_temp51" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk000004f6
       (.I0(sig00000410),
        .I1(sig00000415),
        .I2(sig000004e8),
        .O(sig000003cd));
  (* PK_HLUTNM = "___XLNM___19___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/NORM/NORM/NORM_SHIFT/Mmux_MUX_LOOP[0].shifted_temp61" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk000004f7
       (.I0(sig00000411),
        .I1(sig00000415),
        .I2(sig000004e8),
        .O(sig000003cc));
  (* PK_HLUTNM = "___XLNM___18___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/NORM/NORM/NORM_SHIFT/Mmux_MUX_LOOP[0].shifted_temp71" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk000004f8
       (.I0(sig00000412),
        .I1(sig00000415),
        .I2(sig000004e8),
        .O(sig000003cb));
  (* PK_HLUTNM = "___XLNM___17___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/NORM/NORM/NORM_SHIFT/Mmux_MUX_LOOP[0].shifted_temp81" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk000004f9
       (.I0(sig00000413),
        .I1(sig00000415),
        .I2(sig000004e8),
        .O(sig000003ca));
  (* PK_HLUTNM = "___XLNM___16___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/NORM/NORM/NORM_SHIFT/Mmux_MUX_LOOP[0].shifted_temp91" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk000004fa
       (.I0(sig00000414),
        .I1(sig00000415),
        .I2(sig000004e8),
        .O(sig000003c9));
  (* PK_HLUTNM = "___XLNM___12___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/EXP/flow_sel<2><0>1" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'hAA20)) 
    blk000004fb
       (.I0(sig0000012c),
        .I1(sig00000097),
        .I2(sig00000096),
        .I3(sig0000009a),
        .O(sig00000111));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h5410FEBA54105410)) 
    blk000004fc
       (.I0(sig00000417),
        .I1(sig000004d8),
        .I2(sig000003b7),
        .I3(sig000003b5),
        .I4(sig000004d7),
        .I5(sig000003b3),
        .O(sig000003e6));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h5410FEBA54105410)) 
    blk000004fd
       (.I0(sig00000417),
        .I1(sig000004d8),
        .I2(sig000003b8),
        .I3(sig000003b6),
        .I4(sig000004d7),
        .I5(sig000003b4),
        .O(sig000003e7));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h5410FEBA54105410)) 
    blk000004fe
       (.I0(sig00000415),
        .I1(sig000004e8),
        .I2(sig000003fd),
        .I3(sig00000405),
        .I4(sig000004e0),
        .I5(sig0000040d),
        .O(sig000003e0));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h5410FEBA54105410)) 
    blk000004ff
       (.I0(sig00000415),
        .I1(sig000004e8),
        .I2(sig000003fe),
        .I3(sig00000406),
        .I4(sig000004e0),
        .I5(sig0000040e),
        .O(sig000003df));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h5410FEBA54105410)) 
    blk00000500
       (.I0(sig00000415),
        .I1(sig000004e8),
        .I2(sig000003ff),
        .I3(sig00000407),
        .I4(sig000004e0),
        .I5(sig0000040f),
        .O(sig000003de));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h5410FEBA54105410)) 
    blk00000501
       (.I0(sig00000415),
        .I1(sig000004e8),
        .I2(sig00000400),
        .I3(sig00000408),
        .I4(sig000004e0),
        .I5(sig00000410),
        .O(sig000003dd));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h5410FEBA54105410)) 
    blk00000502
       (.I0(sig00000415),
        .I1(sig000004e8),
        .I2(sig00000401),
        .I3(sig00000409),
        .I4(sig000004e0),
        .I5(sig00000411),
        .O(sig000003dc));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h5410FEBA54105410)) 
    blk00000503
       (.I0(sig00000415),
        .I1(sig000004e8),
        .I2(sig00000402),
        .I3(sig0000040a),
        .I4(sig000004e0),
        .I5(sig00000412),
        .O(sig000003db));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h5410FEBA54105410)) 
    blk00000504
       (.I0(sig00000415),
        .I1(sig000004e8),
        .I2(sig00000403),
        .I3(sig0000040b),
        .I4(sig000004e0),
        .I5(sig00000413),
        .O(sig000003da));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h5410FEBA54105410)) 
    blk00000505
       (.I0(sig00000415),
        .I1(sig000004e8),
        .I2(sig00000404),
        .I3(sig0000040c),
        .I4(sig000004e0),
        .I5(sig00000414),
        .O(sig000003d9));
  (* PK_HLUTNM = "___XLNM___12___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/EXP/flow_sel<2><0>1" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h20)) 
    blk00000506
       (.I0(sig0000012c),
        .I1(sig0000009a),
        .I2(sig00000097),
        .O(sig00000112));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h77700700)) 
    blk00000507
       (.I0(sig000000dc),
        .I1(sig000000d9),
        .I2(sig00000099),
        .I3(sig00000272),
        .I4(sig0000025b),
        .O(sig000002a4));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h77700700)) 
    blk00000508
       (.I0(sig000000dc),
        .I1(sig000000d9),
        .I2(sig00000099),
        .I3(sig0000027c),
        .I4(sig00000265),
        .O(sig000002ae));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h77700700)) 
    blk00000509
       (.I0(sig000000dc),
        .I1(sig000000d9),
        .I2(sig00000099),
        .I3(sig0000027d),
        .I4(sig00000266),
        .O(sig000002af));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h77700700)) 
    blk0000050a
       (.I0(sig000000dc),
        .I1(sig000000d9),
        .I2(sig00000099),
        .I3(sig0000027e),
        .I4(sig00000267),
        .O(sig000002b0));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h77700700)) 
    blk0000050b
       (.I0(sig000000dc),
        .I1(sig000000d9),
        .I2(sig00000099),
        .I3(sig0000027f),
        .I4(sig00000268),
        .O(sig000002b1));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h77700700)) 
    blk0000050c
       (.I0(sig000000dc),
        .I1(sig000000d9),
        .I2(sig00000099),
        .I3(sig00000280),
        .I4(sig00000269),
        .O(sig000002b2));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h77700700)) 
    blk0000050d
       (.I0(sig000000dc),
        .I1(sig000000d9),
        .I2(sig00000099),
        .I3(sig00000281),
        .I4(sig0000026a),
        .O(sig000002b3));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h77700700)) 
    blk0000050e
       (.I0(sig000000dc),
        .I1(sig000000d9),
        .I2(sig00000099),
        .I3(sig00000282),
        .I4(sig0000026b),
        .O(sig000002b4));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h77700700)) 
    blk0000050f
       (.I0(sig000000dc),
        .I1(sig000000d9),
        .I2(sig00000099),
        .I3(sig00000283),
        .I4(sig0000026c),
        .O(sig000002b5));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h77700700)) 
    blk00000510
       (.I0(sig000000dc),
        .I1(sig000000d9),
        .I2(sig00000099),
        .I3(sig00000284),
        .I4(sig0000026d),
        .O(sig000002b6));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h77700700)) 
    blk00000511
       (.I0(sig000000dc),
        .I1(sig000000d9),
        .I2(sig00000099),
        .I3(sig00000285),
        .I4(sig0000026e),
        .O(sig000002b7));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h77700700)) 
    blk00000512
       (.I0(sig000000dc),
        .I1(sig000000d9),
        .I2(sig00000099),
        .I3(sig00000273),
        .I4(sig0000025c),
        .O(sig000002a5));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h77700700)) 
    blk00000513
       (.I0(sig000000dc),
        .I1(sig000000d9),
        .I2(sig00000099),
        .I3(sig00000286),
        .I4(sig0000026f),
        .O(sig000002b8));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h77700700)) 
    blk00000514
       (.I0(sig000000dc),
        .I1(sig000000d9),
        .I2(sig00000099),
        .I3(sig00000287),
        .I4(sig00000270),
        .O(sig000002b9));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h77700700)) 
    blk00000515
       (.I0(sig000000dc),
        .I1(sig000000d9),
        .I2(sig00000099),
        .I3(sig00000288),
        .I4(sig00000271),
        .O(sig000002ba));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h2A)) 
    blk00000516
       (.I0(sig000002cc),
        .I1(sig000000dc),
        .I2(sig000000d9),
        .O(sig000002bb));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h77700700)) 
    blk00000517
       (.I0(sig000000dc),
        .I1(sig000000d9),
        .I2(sig00000099),
        .I3(sig00000274),
        .I4(sig0000025d),
        .O(sig000002a6));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h77700700)) 
    blk00000518
       (.I0(sig000000dc),
        .I1(sig000000d9),
        .I2(sig00000099),
        .I3(sig00000275),
        .I4(sig0000025e),
        .O(sig000002a7));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h77700700)) 
    blk00000519
       (.I0(sig000000dc),
        .I1(sig000000d9),
        .I2(sig00000099),
        .I3(sig00000276),
        .I4(sig0000025f),
        .O(sig000002a8));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h77700700)) 
    blk0000051a
       (.I0(sig000000dc),
        .I1(sig000000d9),
        .I2(sig00000099),
        .I3(sig00000277),
        .I4(sig00000260),
        .O(sig000002a9));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h77700700)) 
    blk0000051b
       (.I0(sig000000dc),
        .I1(sig000000d9),
        .I2(sig00000099),
        .I3(sig00000278),
        .I4(sig00000261),
        .O(sig000002aa));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h77700700)) 
    blk0000051c
       (.I0(sig000000dc),
        .I1(sig000000d9),
        .I2(sig00000099),
        .I3(sig00000279),
        .I4(sig00000262),
        .O(sig000002ab));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h77700700)) 
    blk0000051d
       (.I0(sig000000dc),
        .I1(sig000000d9),
        .I2(sig00000099),
        .I3(sig0000027a),
        .I4(sig00000263),
        .O(sig000002ac));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h77700700)) 
    blk0000051e
       (.I0(sig000000dc),
        .I1(sig000000d9),
        .I2(sig00000099),
        .I3(sig0000027b),
        .I4(sig00000264),
        .O(sig000002ad));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEEFE2202)) 
    blk0000051f
       (.I0(sig000004a0),
        .I1(sig00000099),
        .I2(sig0000005e),
        .I3(sig00000156),
        .I4(sig00000487),
        .O(sig00000455));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEEFE2202)) 
    blk00000520
       (.I0(sig000004a1),
        .I1(sig00000099),
        .I2(sig0000005e),
        .I3(sig00000156),
        .I4(sig00000488),
        .O(sig00000456));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEEFE2202)) 
    blk00000521
       (.I0(sig000004a2),
        .I1(sig00000099),
        .I2(sig0000005e),
        .I3(sig00000156),
        .I4(sig00000489),
        .O(sig00000457));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEEFE2202)) 
    blk00000522
       (.I0(sig000004a3),
        .I1(sig00000099),
        .I2(sig0000005e),
        .I3(sig00000156),
        .I4(sig0000048a),
        .O(sig00000458));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEEFE2202)) 
    blk00000523
       (.I0(sig000004a4),
        .I1(sig00000099),
        .I2(sig0000005e),
        .I3(sig00000156),
        .I4(sig0000048b),
        .O(sig00000459));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEEFE2202)) 
    blk00000524
       (.I0(sig000004a5),
        .I1(sig00000099),
        .I2(sig0000005e),
        .I3(sig00000156),
        .I4(sig0000048c),
        .O(sig0000045a));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEEFE2202)) 
    blk00000525
       (.I0(sig000004a6),
        .I1(sig00000099),
        .I2(sig0000005e),
        .I3(sig00000156),
        .I4(sig0000048d),
        .O(sig0000045b));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEEFE2202)) 
    blk00000526
       (.I0(sig000004a7),
        .I1(sig00000099),
        .I2(sig0000005e),
        .I3(sig00000156),
        .I4(sig0000048e),
        .O(sig0000045c));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEEFE2202)) 
    blk00000527
       (.I0(sig000004a8),
        .I1(sig00000099),
        .I2(sig0000005e),
        .I3(sig00000156),
        .I4(sig0000048f),
        .O(sig0000045d));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEEFE2202)) 
    blk00000528
       (.I0(sig000004a9),
        .I1(sig00000099),
        .I2(sig0000005e),
        .I3(sig00000156),
        .I4(sig00000490),
        .O(sig0000045e));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEEFE2202)) 
    blk00000529
       (.I0(sig00000497),
        .I1(sig00000099),
        .I2(sig0000005e),
        .I3(sig00000156),
        .I4(sig0000047e),
        .O(sig0000044c));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEEFE2202)) 
    blk0000052a
       (.I0(sig000004aa),
        .I1(sig00000099),
        .I2(sig0000005e),
        .I3(sig00000156),
        .I4(sig00000491),
        .O(sig0000045f));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEEFE2202)) 
    blk0000052b
       (.I0(sig000004ab),
        .I1(sig00000099),
        .I2(sig0000005e),
        .I3(sig00000156),
        .I4(sig00000492),
        .O(sig00000460));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEEFE2202)) 
    blk0000052c
       (.I0(sig000004ac),
        .I1(sig00000099),
        .I2(sig0000005e),
        .I3(sig00000156),
        .I4(sig00000493),
        .O(sig00000461));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEEFE2202)) 
    blk0000052d
       (.I0(sig000004ad),
        .I1(sig00000099),
        .I2(sig0000005e),
        .I3(sig00000156),
        .I4(sig00000494),
        .O(sig00000462));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEEFE2202)) 
    blk0000052e
       (.I0(sig000004ae),
        .I1(sig00000099),
        .I2(sig0000005e),
        .I3(sig00000156),
        .I4(sig00000495),
        .O(sig00000463));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'hAA20)) 
    blk0000052f
       (.I0(sig00000496),
        .I1(sig00000156),
        .I2(sig0000005e),
        .I3(sig00000099),
        .O(sig00000464));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEEFE2202)) 
    blk00000530
       (.I0(sig00000498),
        .I1(sig00000099),
        .I2(sig0000005e),
        .I3(sig00000156),
        .I4(sig0000047f),
        .O(sig0000044d));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEEFE2202)) 
    blk00000531
       (.I0(sig00000499),
        .I1(sig00000099),
        .I2(sig0000005e),
        .I3(sig00000156),
        .I4(sig00000480),
        .O(sig0000044e));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEEFE2202)) 
    blk00000532
       (.I0(sig0000049a),
        .I1(sig00000099),
        .I2(sig0000005e),
        .I3(sig00000156),
        .I4(sig00000481),
        .O(sig0000044f));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEEFE2202)) 
    blk00000533
       (.I0(sig0000049b),
        .I1(sig00000099),
        .I2(sig0000005e),
        .I3(sig00000156),
        .I4(sig00000482),
        .O(sig00000450));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEEFE2202)) 
    blk00000534
       (.I0(sig0000049c),
        .I1(sig00000099),
        .I2(sig0000005e),
        .I3(sig00000156),
        .I4(sig00000483),
        .O(sig00000451));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEEFE2202)) 
    blk00000535
       (.I0(sig0000049d),
        .I1(sig00000099),
        .I2(sig0000005e),
        .I3(sig00000156),
        .I4(sig00000484),
        .O(sig00000452));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEEFE2202)) 
    blk00000536
       (.I0(sig0000049e),
        .I1(sig00000099),
        .I2(sig0000005e),
        .I3(sig00000156),
        .I4(sig00000485),
        .O(sig00000453));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hEEFE2202)) 
    blk00000537
       (.I0(sig0000049f),
        .I1(sig00000099),
        .I2(sig0000005e),
        .I3(sig00000156),
        .I4(sig00000486),
        .O(sig00000454));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk00000538
       (.I0(sig00000029),
        .I1(sig00000113),
        .I2(sig00000114),
        .O(sig00000557));
  (* PK_HLUTNM = "___XLNM___36___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_mant_op[22]_GND_396_o_MUX_376_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk00000539
       (.I0(sig0000002a),
        .I1(sig00000113),
        .I2(sig00000114),
        .O(sig00000558));
  (* PK_HLUTNM = "___XLNM___40___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_mant_op[0]_GND_396_o_MUX_442_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk0000053a
       (.I0(sig00000028),
        .I1(sig00000113),
        .I2(sig00000114),
        .O(sig00000556));
  (* PK_HLUTNM = "___XLNM___40___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_mant_op[0]_GND_396_o_MUX_442_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk0000053b
       (.I0(sig0000002b),
        .I1(sig00000113),
        .I2(sig00000114),
        .O(sig00000559));
  (* PK_HLUTNM = "___XLNM___39___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_mant_op[4]_GND_396_o_MUX_438_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk0000053c
       (.I0(sig0000002c),
        .I1(sig00000113),
        .I2(sig00000114),
        .O(sig0000055a));
  (* PK_HLUTNM = "___XLNM___39___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_mant_op[4]_GND_396_o_MUX_438_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk0000053d
       (.I0(sig0000002d),
        .I1(sig00000113),
        .I2(sig00000114),
        .O(sig0000055b));
  (* PK_HLUTNM = "___XLNM___38___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_mant_op[6]_GND_396_o_MUX_436_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk0000053e
       (.I0(sig0000002e),
        .I1(sig00000113),
        .I2(sig00000114),
        .O(sig0000055c));
  (* PK_HLUTNM = "___XLNM___38___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_mant_op[6]_GND_396_o_MUX_436_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk0000053f
       (.I0(sig0000002f),
        .I1(sig00000113),
        .I2(sig00000114),
        .O(sig0000055d));
  (* PK_HLUTNM = "___XLNM___37___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_mant_op[8]_GND_396_o_MUX_434_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk00000540
       (.I0(sig00000030),
        .I1(sig00000113),
        .I2(sig00000114),
        .O(sig0000055e));
  (* PK_HLUTNM = "___XLNM___37___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_mant_op[8]_GND_396_o_MUX_434_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk00000541
       (.I0(sig00000031),
        .I1(sig00000113),
        .I2(sig00000114),
        .O(sig0000055f));
  (* PK_HLUTNM = "___XLNM___35___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_mant_op[10]_GND_396_o_MUX_432_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk00000542
       (.I0(sig00000032),
        .I1(sig00000113),
        .I2(sig00000114),
        .O(sig00000560));
  (* PK_HLUTNM = "___XLNM___35___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_mant_op[10]_GND_396_o_MUX_432_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk00000543
       (.I0(sig00000033),
        .I1(sig00000113),
        .I2(sig00000114),
        .O(sig00000561));
  (* PK_HLUTNM = "___XLNM___34___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_mant_op[12]_GND_396_o_MUX_430_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk00000544
       (.I0(sig00000034),
        .I1(sig00000113),
        .I2(sig00000114),
        .O(sig00000562));
  (* PK_HLUTNM = "___XLNM___34___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_mant_op[12]_GND_396_o_MUX_430_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk00000545
       (.I0(sig00000035),
        .I1(sig00000113),
        .I2(sig00000114),
        .O(sig00000563));
  (* PK_HLUTNM = "___XLNM___33___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_mant_op[14]_GND_396_o_MUX_428_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk00000546
       (.I0(sig00000036),
        .I1(sig00000113),
        .I2(sig00000114),
        .O(sig00000564));
  (* PK_HLUTNM = "___XLNM___33___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_mant_op[14]_GND_396_o_MUX_428_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk00000547
       (.I0(sig00000037),
        .I1(sig00000113),
        .I2(sig00000114),
        .O(sig00000565));
  (* PK_HLUTNM = "___XLNM___32___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_mant_op[16]_GND_396_o_MUX_426_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk00000548
       (.I0(sig00000038),
        .I1(sig00000113),
        .I2(sig00000114),
        .O(sig00000566));
  (* PK_HLUTNM = "___XLNM___32___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_mant_op[16]_GND_396_o_MUX_426_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk00000549
       (.I0(sig00000039),
        .I1(sig00000113),
        .I2(sig00000114),
        .O(sig00000567));
  (* PK_HLUTNM = "___XLNM___31___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_mant_op[18]_GND_396_o_MUX_424_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk0000054a
       (.I0(sig0000003a),
        .I1(sig00000113),
        .I2(sig00000114),
        .O(sig00000568));
  (* PK_HLUTNM = "___XLNM___31___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_mant_op[18]_GND_396_o_MUX_424_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk0000054b
       (.I0(sig0000003b),
        .I1(sig00000113),
        .I2(sig00000114),
        .O(sig00000569));
  (* PK_HLUTNM = "___XLNM___30___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_mant_op[20]_GND_396_o_MUX_422_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk0000054c
       (.I0(sig0000003c),
        .I1(sig00000113),
        .I2(sig00000114),
        .O(sig0000056a));
  (* PK_HLUTNM = "___XLNM___30___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_mant_op[20]_GND_396_o_MUX_422_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h02)) 
    blk0000054d
       (.I0(sig0000003d),
        .I1(sig00000113),
        .I2(sig00000114),
        .O(sig0000056b));
  (* PK_HLUTNM = "___XLNM___42___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_exp_op[7]_GND_396_o_MUX_364_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hBA)) 
    blk0000054e
       (.I0(sig00000113),
        .I1(sig00000114),
        .I2(sig00000022),
        .O(sig0000056f));
  (* PK_HLUTNM = "___XLNM___41___U0/op_inst/FLT_PT_OP/ADDSUB_OP.LOW_LAT.OP/OP/Mmux_exp_op[6]_GND_396_o_MUX_365_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hBA)) 
    blk0000054f
       (.I0(sig00000113),
        .I1(sig00000114),
        .I2(sig00000021),
        .O(sig0000056e));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000550
       (.I0(a[23]),
        .I1(b[23]),
        .O(sig00000432));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000551
       (.I0(a[23]),
        .I1(b[23]),
        .O(sig00000585));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'hAA69)) 
    blk00000552
       (.I0(b[22]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(a[22]),
        .O(sig00000353));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000553
       (.I0(b[21]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(a[21]),
        .I4(a[22]),
        .O(sig00000355));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000554
       (.I0(b[20]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(a[20]),
        .I4(a[21]),
        .O(sig00000357));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000555
       (.I0(b[19]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(a[19]),
        .I4(a[20]),
        .O(sig00000359));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000556
       (.I0(b[18]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(a[18]),
        .I4(a[19]),
        .O(sig0000035b));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000557
       (.I0(b[17]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(a[17]),
        .I4(a[18]),
        .O(sig0000035d));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000558
       (.I0(b[16]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(a[16]),
        .I4(a[17]),
        .O(sig0000035f));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000559
       (.I0(b[15]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(a[15]),
        .I4(a[16]),
        .O(sig00000361));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk0000055a
       (.I0(b[14]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(a[14]),
        .I4(a[15]),
        .O(sig00000363));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk0000055b
       (.I0(b[13]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(a[13]),
        .I4(a[14]),
        .O(sig00000365));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk0000055c
       (.I0(b[12]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(a[12]),
        .I4(a[13]),
        .O(sig00000367));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk0000055d
       (.I0(b[11]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(a[11]),
        .I4(a[12]),
        .O(sig00000369));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk0000055e
       (.I0(b[10]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(a[10]),
        .I4(a[11]),
        .O(sig0000036b));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk0000055f
       (.I0(b[9]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(a[9]),
        .I4(a[10]),
        .O(sig0000036d));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000560
       (.I0(b[8]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(a[8]),
        .I4(a[9]),
        .O(sig0000036f));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000561
       (.I0(b[7]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(a[7]),
        .I4(a[8]),
        .O(sig00000371));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000562
       (.I0(b[6]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(a[6]),
        .I4(a[7]),
        .O(sig00000373));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000563
       (.I0(b[5]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(a[5]),
        .I4(a[6]),
        .O(sig00000375));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000564
       (.I0(b[4]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(a[4]),
        .I4(a[5]),
        .O(sig00000377));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000565
       (.I0(b[3]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(a[3]),
        .I4(a[4]),
        .O(sig00000379));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000566
       (.I0(b[2]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(a[2]),
        .I4(a[3]),
        .O(sig0000037b));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000567
       (.I0(b[1]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(a[1]),
        .I4(a[2]),
        .O(sig0000037d));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000568
       (.I0(b[0]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(a[0]),
        .I4(a[1]),
        .O(sig0000037f));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h9F)) 
    blk00000569
       (.I0(a[23]),
        .I1(b[23]),
        .I2(a[0]),
        .O(sig00000381));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'hAA69)) 
    blk0000056a
       (.I0(a[22]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(b[22]),
        .O(sig00000384));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk0000056b
       (.I0(a[21]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(b[21]),
        .I4(b[22]),
        .O(sig00000386));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk0000056c
       (.I0(a[20]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(b[20]),
        .I4(b[21]),
        .O(sig00000388));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk0000056d
       (.I0(a[19]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(b[19]),
        .I4(b[20]),
        .O(sig0000038a));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk0000056e
       (.I0(a[18]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(b[18]),
        .I4(b[19]),
        .O(sig0000038c));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk0000056f
       (.I0(a[17]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(b[17]),
        .I4(b[18]),
        .O(sig0000038e));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000570
       (.I0(a[16]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(b[16]),
        .I4(b[17]),
        .O(sig00000390));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000571
       (.I0(a[15]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(b[15]),
        .I4(b[16]),
        .O(sig00000392));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000572
       (.I0(a[14]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(b[14]),
        .I4(b[15]),
        .O(sig00000394));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000573
       (.I0(a[13]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(b[13]),
        .I4(b[14]),
        .O(sig00000396));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000574
       (.I0(a[12]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(b[12]),
        .I4(b[13]),
        .O(sig00000398));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000575
       (.I0(a[11]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(b[11]),
        .I4(b[12]),
        .O(sig0000039a));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000576
       (.I0(a[10]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(b[10]),
        .I4(b[11]),
        .O(sig0000039c));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000577
       (.I0(a[9]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(b[9]),
        .I4(b[10]),
        .O(sig0000039e));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000578
       (.I0(a[8]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(b[8]),
        .I4(b[9]),
        .O(sig000003a0));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000579
       (.I0(a[7]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(b[7]),
        .I4(b[8]),
        .O(sig000003a2));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk0000057a
       (.I0(a[6]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(b[6]),
        .I4(b[7]),
        .O(sig000003a4));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk0000057b
       (.I0(a[5]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(b[5]),
        .I4(b[6]),
        .O(sig000003a6));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk0000057c
       (.I0(a[4]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(b[4]),
        .I4(b[5]),
        .O(sig000003a8));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk0000057d
       (.I0(a[3]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(b[3]),
        .I4(b[4]),
        .O(sig000003aa));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk0000057e
       (.I0(a[2]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(b[2]),
        .I4(b[3]),
        .O(sig000003ac));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk0000057f
       (.I0(a[1]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(b[1]),
        .I4(b[2]),
        .O(sig000003ae));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hAA699655)) 
    blk00000580
       (.I0(a[0]),
        .I1(a[23]),
        .I2(b[23]),
        .I3(b[0]),
        .I4(b[1]),
        .O(sig000003b0));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h9F)) 
    blk00000581
       (.I0(a[23]),
        .I1(b[23]),
        .I2(b[0]),
        .O(sig000003b2));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000582
       (.C(clk),
        .CE(1'b1),
        .D(sig000000ca),
        .Q(sig00000595),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000583
       (.C(clk),
        .CE(1'b1),
        .D(sig00000001),
        .Q(sig00000596),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000584
       (.C(clk),
        .CE(1'b1),
        .D(sig00000002),
        .Q(sig00000597),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "INV" *) 
  (* XILINX_TRANSFORM_PINMAP = "I:I0" *) 
  (* XSTLIB *) 
  LUT1 #(
    .INIT(2'h1)) 
    blk00000585
       (.I0(sig00000129),
        .O(sig000000e9));
  (* XILINX_LEGACY_PRIM = "INV" *) 
  (* XILINX_TRANSFORM_PINMAP = "I:I0" *) 
  (* XSTLIB *) 
  LUT1 #(
    .INIT(2'h1)) 
    blk00000586
       (.I0(sig0000012a),
        .O(sig000000ea));
  (* XILINX_LEGACY_PRIM = "INV" *) 
  (* XILINX_TRANSFORM_PINMAP = "I:I0" *) 
  (* XSTLIB *) 
  LUT1 #(
    .INIT(2'h1)) 
    blk00000587
       (.I0(sig0000012b),
        .O(sig000000eb));
  (* XSTLIB *) 
  MUXF7 blk00000588
       (.I0(sig00000598),
        .I1(sig00000599),
        .O(sig000000f2),
        .S(sig00000139));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    blk00000589
       (.I0(sig00000152),
        .I1(sig00000150),
        .I2(sig0000014f),
        .I3(sig0000014e),
        .I4(sig00000151),
        .O(sig00000598));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    blk0000058a
       (.I0(sig0000014a),
        .I1(sig00000149),
        .I2(sig00000146),
        .I3(sig00000147),
        .I4(sig00000148),
        .O(sig00000599));
  (* XSTLIB *) 
  MUXF7 blk0000058b
       (.I0(sig0000059a),
        .I1(sig0000059b),
        .O(sig000000f3),
        .S(sig00000139));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
    blk0000058c
       (.I0(sig00000153),
        .I1(sig0000014f),
        .I2(sig0000014e),
        .I3(sig00000150),
        .I4(sig00000152),
        .I5(sig00000151),
        .O(sig0000059a));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
    blk0000058d
       (.I0(sig0000014b),
        .I1(sig0000014a),
        .I2(sig00000149),
        .I3(sig00000146),
        .I4(sig00000147),
        .I5(sig00000148),
        .O(sig0000059b));
  (* XSTLIB *) 
  MUXF7 blk0000058e
       (.I0(sig0000059c),
        .I1(sig0000059d),
        .O(sig000000f4),
        .S(sig00000139));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hBFFF4000)) 
    blk0000058f
       (.I0(sig000000b0),
        .I1(sig00000152),
        .I2(sig00000151),
        .I3(sig00000153),
        .I4(sig00000154),
        .O(sig0000059c));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hBFFF4000)) 
    blk00000590
       (.I0(sig000000af),
        .I1(sig0000014a),
        .I2(sig00000149),
        .I3(sig0000014b),
        .I4(sig0000014c),
        .O(sig0000059d));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk00000591
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig000002cc),
        .Q(sig0000059e));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000592
       (.C(clk),
        .CE(1'b1),
        .D(sig0000059e),
        .Q(sig0000013a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk00000593
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig0000012e),
        .Q(sig0000059f));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000594
       (.C(clk),
        .CE(1'b1),
        .D(sig0000059f),
        .Q(sig0000010d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk00000595
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig0000012f),
        .Q(sig000005a0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000596
       (.C(clk),
        .CE(1'b1),
        .D(sig000005a0),
        .Q(sig0000010c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk00000597
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(b[29]),
        .Q(sig000005a1));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000598
       (.C(clk),
        .CE(1'b1),
        .D(sig000005a1),
        .Q(sig0000014c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk00000599
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig000000d0),
        .Q(sig000005a2));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000059a
       (.C(clk),
        .CE(1'b1),
        .D(sig000005a2),
        .Q(sig0000009b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk0000059b
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(b[30]),
        .Q(sig000005a3));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000059c
       (.C(clk),
        .CE(1'b1),
        .D(sig000005a3),
        .Q(sig0000014d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk0000059d
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(b[26]),
        .Q(sig000005a4));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000059e
       (.C(clk),
        .CE(1'b1),
        .D(sig000005a4),
        .Q(sig00000149),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk0000059f
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(b[28]),
        .Q(sig000005a5));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005a0
       (.C(clk),
        .CE(1'b1),
        .D(sig000005a5),
        .Q(sig0000014b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005a1
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(b[27]),
        .Q(sig000005a6));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005a2
       (.C(clk),
        .CE(1'b1),
        .D(sig000005a6),
        .Q(sig0000014a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005a3
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(b[25]),
        .Q(sig000005a7));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005a4
       (.C(clk),
        .CE(1'b1),
        .D(sig000005a7),
        .Q(sig00000148),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005a5
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(b[24]),
        .Q(sig000005a8));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005a6
       (.C(clk),
        .CE(1'b1),
        .D(sig000005a8),
        .Q(sig00000147),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005a7
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(a[29]),
        .Q(sig000005a9));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005a8
       (.C(clk),
        .CE(1'b1),
        .D(sig000005a9),
        .Q(sig00000154),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005a9
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(b[23]),
        .Q(sig000005aa));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005aa
       (.C(clk),
        .CE(1'b1),
        .D(sig000005aa),
        .Q(sig00000146),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005ab
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(a[30]),
        .Q(sig000005ab));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005ac
       (.C(clk),
        .CE(1'b1),
        .D(sig000005ab),
        .Q(sig00000155),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005ad
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(a[26]),
        .Q(sig000005ac));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005ae
       (.C(clk),
        .CE(1'b1),
        .D(sig000005ac),
        .Q(sig00000151),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005af
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(a[28]),
        .Q(sig000005ad));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005b0
       (.C(clk),
        .CE(1'b1),
        .D(sig000005ad),
        .Q(sig00000153),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005b1
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(a[27]),
        .Q(sig000005ae));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005b2
       (.C(clk),
        .CE(1'b1),
        .D(sig000005ae),
        .Q(sig00000152),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005b3
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(a[23]),
        .Q(sig000005af));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005b4
       (.C(clk),
        .CE(1'b1),
        .D(sig000005af),
        .Q(sig0000014e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005b5
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(a[25]),
        .Q(sig000005b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005b6
       (.C(clk),
        .CE(1'b1),
        .D(sig000005b0),
        .Q(sig00000150),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005b7
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(a[24]),
        .Q(sig000005b1));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005b8
       (.C(clk),
        .CE(1'b1),
        .D(sig000005b1),
        .Q(sig0000014f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005b9
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig00000350),
        .Q(sig000005b2));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005ba
       (.C(clk),
        .CE(1'b1),
        .D(sig000005b2),
        .Q(sig0000025a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005bb
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig0000034f),
        .Q(sig000005b3));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005bc
       (.C(clk),
        .CE(1'b1),
        .D(sig000005b3),
        .Q(sig00000259),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005bd
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig0000034c),
        .Q(sig000005b4));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005be
       (.C(clk),
        .CE(1'b1),
        .D(sig000005b4),
        .Q(sig00000256),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005bf
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig0000034e),
        .Q(sig000005b5));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005c0
       (.C(clk),
        .CE(1'b1),
        .D(sig000005b5),
        .Q(sig00000258),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005c1
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig0000034d),
        .Q(sig000005b6));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005c2
       (.C(clk),
        .CE(1'b1),
        .D(sig000005b6),
        .Q(sig00000257),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005c3
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig00000349),
        .Q(sig000005b7));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005c4
       (.C(clk),
        .CE(1'b1),
        .D(sig000005b7),
        .Q(sig00000253),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005c5
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig0000034b),
        .Q(sig000005b8));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005c6
       (.C(clk),
        .CE(1'b1),
        .D(sig000005b8),
        .Q(sig00000255),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005c7
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig0000034a),
        .Q(sig000005b9));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005c8
       (.C(clk),
        .CE(1'b1),
        .D(sig000005b9),
        .Q(sig00000254),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005c9
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig00000346),
        .Q(sig000005ba));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005ca
       (.C(clk),
        .CE(1'b1),
        .D(sig000005ba),
        .Q(sig00000250),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005cb
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig00000348),
        .Q(sig000005bb));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005cc
       (.C(clk),
        .CE(1'b1),
        .D(sig000005bb),
        .Q(sig00000252),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005cd
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig00000347),
        .Q(sig000005bc));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005ce
       (.C(clk),
        .CE(1'b1),
        .D(sig000005bc),
        .Q(sig00000251),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005cf
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig00000345),
        .Q(sig000005bd));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005d0
       (.C(clk),
        .CE(1'b1),
        .D(sig000005bd),
        .Q(sig0000024f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005d1
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig00000344),
        .Q(sig000005be));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005d2
       (.C(clk),
        .CE(1'b1),
        .D(sig000005be),
        .Q(sig0000024e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005d3
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig00000341),
        .Q(sig000005bf));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005d4
       (.C(clk),
        .CE(1'b1),
        .D(sig000005bf),
        .Q(sig0000024b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005d5
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig00000343),
        .Q(sig000005c0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005d6
       (.C(clk),
        .CE(1'b1),
        .D(sig000005c0),
        .Q(sig0000024d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005d7
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig00000342),
        .Q(sig000005c1));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005d8
       (.C(clk),
        .CE(1'b1),
        .D(sig000005c1),
        .Q(sig0000024c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005d9
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig0000033e),
        .Q(sig000005c2));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005da
       (.C(clk),
        .CE(1'b1),
        .D(sig000005c2),
        .Q(sig00000248),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005db
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig00000340),
        .Q(sig000005c3));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005dc
       (.C(clk),
        .CE(1'b1),
        .D(sig000005c3),
        .Q(sig0000024a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005dd
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig0000033f),
        .Q(sig000005c4));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005de
       (.C(clk),
        .CE(1'b1),
        .D(sig000005c4),
        .Q(sig00000249),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005df
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig0000033b),
        .Q(sig000005c5));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005e0
       (.C(clk),
        .CE(1'b1),
        .D(sig000005c5),
        .Q(sig00000245),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005e1
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig0000033d),
        .Q(sig000005c6));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005e2
       (.C(clk),
        .CE(1'b1),
        .D(sig000005c6),
        .Q(sig00000247),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005e3
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig0000033c),
        .Q(sig000005c7));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005e4
       (.C(clk),
        .CE(1'b1),
        .D(sig000005c7),
        .Q(sig00000246),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005e5
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig0000033a),
        .Q(sig000005c8));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005e6
       (.C(clk),
        .CE(1'b1),
        .D(sig000005c8),
        .Q(sig00000244),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000005e7
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig00000339),
        .Q(sig000005c9));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000005e8
       (.C(clk),
        .CE(1'b1),
        .D(sig000005c9),
        .Q(sig00000243),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "softmax_adder_wrapper" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_softmax_adder_wrapper
   (ila_smax_aw_sum,
    ila_smax_aw_addend,
    ila_smax_aw_augend,
    ila_smax_aw_summing_complete,
    Q,
    \ila_smax_aw_fsm_state[1] ,
    \ila_smax_aw_sum_counter[15] ,
    ila_smax_exp_mux_wr_en,
    ila_smax_aw_rd_en,
    ila_smax_aw_sum_reg,
    D,
    m00_axi_aclk,
    \num_elements_reg[7] ,
    \num_elements_reg[15] ,
    m00_axi_aresetn,
    \FSM_sequential_current_state_reg[2] ,
    ila_smax_ctrlr_exp_fifo_select,
    empty_fwft_i_reg,
    \current_state_reg[0]_0 ,
    \current_state_reg[1]_0 ,
    ila_smax_exp_fifo_wr_en,
    \FSM_sequential_current_state_reg[1] ,
    division_complete_reg,
    \num_elements_reg[15]_0 ,
    dout,
    m00_axi_aresetn_0,
    m00_axi_aresetn_1,
    m00_axi_aresetn_2,
    m00_axi_aresetn_3,
    m00_axi_aresetn_4);
  output [31:0]ila_smax_aw_sum;
  output [31:0]ila_smax_aw_addend;
  output [31:0]ila_smax_aw_augend;
  output ila_smax_aw_summing_complete;
  output [3:0]Q;
  output [1:0]\ila_smax_aw_fsm_state[1] ;
  output [15:0]\ila_smax_aw_sum_counter[15] ;
  output ila_smax_exp_mux_wr_en;
  output ila_smax_aw_rd_en;
  output [31:0]ila_smax_aw_sum_reg;
  output [31:0]D;
  input m00_axi_aclk;
  input [3:0]\num_elements_reg[7] ;
  input [3:0]\num_elements_reg[15] ;
  input m00_axi_aresetn;
  input \FSM_sequential_current_state_reg[2] ;
  input ila_smax_ctrlr_exp_fifo_select;
  input empty_fwft_i_reg;
  input \current_state_reg[0]_0 ;
  input [1:0]\current_state_reg[1]_0 ;
  input ila_smax_exp_fifo_wr_en;
  input \FSM_sequential_current_state_reg[1] ;
  input division_complete_reg;
  input [15:0]\num_elements_reg[15]_0 ;
  input [31:0]dout;
  input m00_axi_aresetn_0;
  input m00_axi_aresetn_1;
  input m00_axi_aresetn_2;
  input m00_axi_aresetn_3;
  input m00_axi_aresetn_4;

  wire [31:0]D;
  wire \FSM_sequential_current_state_reg[1] ;
  wire \FSM_sequential_current_state_reg[2] ;
  wire [3:0]Q;
  wire \addend[0]_i_1__0_n_0 ;
  wire \addend[10]_i_1__0_n_0 ;
  wire \addend[11]_i_1__0_n_0 ;
  wire \addend[12]_i_1__0_n_0 ;
  wire \addend[13]_i_1__0_n_0 ;
  wire \addend[14]_i_1__0_n_0 ;
  wire \addend[15]_i_1__0_n_0 ;
  wire \addend[16]_i_1__0_n_0 ;
  wire \addend[17]_i_1__0_n_0 ;
  wire \addend[18]_i_1__0_n_0 ;
  wire \addend[19]_i_1__0_n_0 ;
  wire \addend[1]_i_1__0_n_0 ;
  wire \addend[20]_i_1__0_n_0 ;
  wire \addend[21]_i_1__0_n_0 ;
  wire \addend[22]_i_1__0_n_0 ;
  wire \addend[23]_i_1__0_n_0 ;
  wire \addend[24]_i_1__0_n_0 ;
  wire \addend[25]_i_1__0_n_0 ;
  wire \addend[26]_i_1__0_n_0 ;
  wire \addend[27]_i_1__0_n_0 ;
  wire \addend[28]_i_1__0_n_0 ;
  wire \addend[29]_i_1__0_n_0 ;
  wire \addend[2]_i_1__0_n_0 ;
  wire \addend[30]_i_1__0_n_0 ;
  wire \addend[31]_i_2_n_0 ;
  wire \addend[3]_i_1__0_n_0 ;
  wire \addend[4]_i_1__0_n_0 ;
  wire \addend[5]_i_1__0_n_0 ;
  wire \addend[6]_i_1__0_n_0 ;
  wire \addend[7]_i_1__0_n_0 ;
  wire \addend[8]_i_1__0_n_0 ;
  wire \addend[9]_i_1__0_n_0 ;
  wire augend;
  wire \augend[0]_i_1__0_n_0 ;
  wire \augend[10]_i_1__0_n_0 ;
  wire \augend[11]_i_1__0_n_0 ;
  wire \augend[12]_i_1__0_n_0 ;
  wire \augend[13]_i_1__0_n_0 ;
  wire \augend[14]_i_1__0_n_0 ;
  wire \augend[15]_i_1__0_n_0 ;
  wire \augend[16]_i_1__0_n_0 ;
  wire \augend[17]_i_1__0_n_0 ;
  wire \augend[18]_i_1__0_n_0 ;
  wire \augend[19]_i_1__0_n_0 ;
  wire \augend[1]_i_1__0_n_0 ;
  wire \augend[20]_i_1__0_n_0 ;
  wire \augend[21]_i_1__0_n_0 ;
  wire \augend[22]_i_1__0_n_0 ;
  wire \augend[23]_i_1__0_n_0 ;
  wire \augend[24]_i_1__0_n_0 ;
  wire \augend[25]_i_1__0_n_0 ;
  wire \augend[26]_i_1__0_n_0 ;
  wire \augend[27]_i_1__0_n_0 ;
  wire \augend[28]_i_1__0_n_0 ;
  wire \augend[29]_i_1__0_n_0 ;
  wire \augend[2]_i_1__0_n_0 ;
  wire \augend[30]_i_1__0_n_0 ;
  wire \augend[31]_i_1__0_n_0 ;
  wire \augend[3]_i_1__0_n_0 ;
  wire \augend[4]_i_1__0_n_0 ;
  wire \augend[5]_i_1__0_n_0 ;
  wire \augend[6]_i_1__0_n_0 ;
  wire \augend[7]_i_1__0_n_0 ;
  wire \augend[8]_i_1__0_n_0 ;
  wire \augend[9]_i_1__0_n_0 ;
  wire \current_state_reg[0]_0 ;
  wire [1:0]\current_state_reg[1]_0 ;
  wire division_complete_reg;
  wire [31:0]dout;
  wire empty_fwft_i_reg;
  wire \hold_counter[0]_i_1__1_n_0 ;
  wire \hold_counter[3]_i_1__0_n_0 ;
  wire i__carry__0_i_5__0_n_0;
  wire i__carry__0_i_6__0_n_0;
  wire i__carry__0_i_7__0_n_0;
  wire i__carry__0_i_8__0_n_0;
  wire i__carry_i_5__0_n_0;
  wire i__carry_i_6__0_n_0;
  wire i__carry_i_7__0_n_0;
  wire i__carry_i_8__0_n_0;
  wire [31:0]ila_smax_aw_addend;
  wire [31:0]ila_smax_aw_augend;
  wire [1:0]\ila_smax_aw_fsm_state[1] ;
  wire ila_smax_aw_rd_en;
  wire [31:0]ila_smax_aw_sum;
  wire [15:0]\ila_smax_aw_sum_counter[15] ;
  wire [31:0]ila_smax_aw_sum_reg;
  wire ila_smax_aw_summing_complete;
  wire ila_smax_ctrlr_exp_fifo_select;
  wire ila_smax_exp_fifo_wr_en;
  wire ila_smax_exp_mux_wr_en;
  wire m00_axi_aclk;
  wire m00_axi_aresetn;
  wire m00_axi_aresetn_0;
  wire m00_axi_aresetn_1;
  wire m00_axi_aresetn_2;
  wire m00_axi_aresetn_3;
  wire m00_axi_aresetn_4;
  wire [1:0]next_state;
  wire \next_state1_inferred__0/i__carry__0_n_1 ;
  wire \next_state1_inferred__0/i__carry__0_n_2 ;
  wire \next_state1_inferred__0/i__carry__0_n_3 ;
  wire \next_state1_inferred__0/i__carry_n_0 ;
  wire \next_state1_inferred__0/i__carry_n_1 ;
  wire \next_state1_inferred__0/i__carry_n_2 ;
  wire \next_state1_inferred__0/i__carry_n_3 ;
  wire [3:0]\num_elements_reg[15] ;
  wire [15:0]\num_elements_reg[15]_0 ;
  wire [3:0]\num_elements_reg[7] ;
  wire [3:1]p_1_in;
  wire sel;
  wire \sum_counter[0]_i_1__0_n_0 ;
  wire \sum_counter[10]_i_1_n_0 ;
  wire \sum_counter[11]_i_1_n_0 ;
  wire \sum_counter[12]_i_1_n_0 ;
  wire \sum_counter[12]_i_3_n_0 ;
  wire \sum_counter[12]_i_4_n_0 ;
  wire \sum_counter[12]_i_5_n_0 ;
  wire \sum_counter[12]_i_6_n_0 ;
  wire \sum_counter[13]_i_1_n_0 ;
  wire \sum_counter[14]_i_1_n_0 ;
  wire \sum_counter[15]_i_1_n_0 ;
  wire \sum_counter[15]_i_4_n_0 ;
  wire \sum_counter[15]_i_5_n_0 ;
  wire \sum_counter[15]_i_6_n_0 ;
  wire \sum_counter[1]_i_1__0_n_0 ;
  wire \sum_counter[2]_i_1__0_n_0 ;
  wire \sum_counter[3]_i_1__0_n_0 ;
  wire \sum_counter[4]_i_1_n_0 ;
  wire \sum_counter[4]_i_3__0_n_0 ;
  wire \sum_counter[4]_i_4_n_0 ;
  wire \sum_counter[4]_i_5_n_0 ;
  wire \sum_counter[4]_i_6_n_0 ;
  wire \sum_counter[5]_i_1_n_0 ;
  wire \sum_counter[6]_i_1_n_0 ;
  wire \sum_counter[7]_i_1_n_0 ;
  wire \sum_counter[8]_i_1_n_0 ;
  wire \sum_counter[8]_i_3_n_0 ;
  wire \sum_counter[8]_i_4_n_0 ;
  wire \sum_counter[8]_i_5_n_0 ;
  wire \sum_counter[8]_i_6_n_0 ;
  wire \sum_counter[9]_i_1_n_0 ;
  wire \sum_counter_reg[12]_i_2_n_0 ;
  wire \sum_counter_reg[12]_i_2_n_1 ;
  wire \sum_counter_reg[12]_i_2_n_2 ;
  wire \sum_counter_reg[12]_i_2_n_3 ;
  wire \sum_counter_reg[12]_i_2_n_4 ;
  wire \sum_counter_reg[12]_i_2_n_5 ;
  wire \sum_counter_reg[12]_i_2_n_6 ;
  wire \sum_counter_reg[12]_i_2_n_7 ;
  wire \sum_counter_reg[15]_i_3_n_2 ;
  wire \sum_counter_reg[15]_i_3_n_3 ;
  wire \sum_counter_reg[15]_i_3_n_5 ;
  wire \sum_counter_reg[15]_i_3_n_6 ;
  wire \sum_counter_reg[15]_i_3_n_7 ;
  wire \sum_counter_reg[4]_i_2_n_0 ;
  wire \sum_counter_reg[4]_i_2_n_1 ;
  wire \sum_counter_reg[4]_i_2_n_2 ;
  wire \sum_counter_reg[4]_i_2_n_3 ;
  wire \sum_counter_reg[4]_i_2_n_4 ;
  wire \sum_counter_reg[4]_i_2_n_5 ;
  wire \sum_counter_reg[4]_i_2_n_6 ;
  wire \sum_counter_reg[4]_i_2_n_7 ;
  wire \sum_counter_reg[8]_i_2_n_0 ;
  wire \sum_counter_reg[8]_i_2_n_1 ;
  wire \sum_counter_reg[8]_i_2_n_2 ;
  wire \sum_counter_reg[8]_i_2_n_3 ;
  wire \sum_counter_reg[8]_i_2_n_4 ;
  wire \sum_counter_reg[8]_i_2_n_5 ;
  wire \sum_counter_reg[8]_i_2_n_6 ;
  wire \sum_counter_reg[8]_i_2_n_7 ;
  wire \sum_reg[0]_i_1_n_0 ;
  wire \sum_reg[10]_i_1_n_0 ;
  wire \sum_reg[11]_i_1_n_0 ;
  wire \sum_reg[12]_i_1_n_0 ;
  wire \sum_reg[13]_i_1_n_0 ;
  wire \sum_reg[14]_i_1_n_0 ;
  wire \sum_reg[15]_i_1_n_0 ;
  wire \sum_reg[16]_i_1_n_0 ;
  wire \sum_reg[17]_i_1_n_0 ;
  wire \sum_reg[18]_i_1_n_0 ;
  wire \sum_reg[19]_i_1_n_0 ;
  wire \sum_reg[1]_i_1_n_0 ;
  wire \sum_reg[20]_i_1_n_0 ;
  wire \sum_reg[21]_i_1_n_0 ;
  wire \sum_reg[22]_i_1_n_0 ;
  wire \sum_reg[23]_i_1_n_0 ;
  wire \sum_reg[24]_i_1_n_0 ;
  wire \sum_reg[25]_i_1_n_0 ;
  wire \sum_reg[26]_i_1_n_0 ;
  wire \sum_reg[27]_i_1_n_0 ;
  wire \sum_reg[28]_i_1_n_0 ;
  wire \sum_reg[29]_i_1_n_0 ;
  wire \sum_reg[2]_i_1_n_0 ;
  wire \sum_reg[30]_i_1_n_0 ;
  wire \sum_reg[31]_i_1_n_0 ;
  wire \sum_reg[3]_i_1_n_0 ;
  wire \sum_reg[4]_i_1_n_0 ;
  wire \sum_reg[5]_i_1_n_0 ;
  wire \sum_reg[6]_i_1_n_0 ;
  wire \sum_reg[7]_i_1_n_0 ;
  wire \sum_reg[8]_i_1_n_0 ;
  wire \sum_reg[9]_i_1_n_0 ;
  wire summing_complete_i_1_n_0;
  wire summing_complete_i_2_n_0;
  wire [3:0]\NLW_next_state1_inferred__0/i__carry_O_UNCONNECTED ;
  wire [3:0]\NLW_next_state1_inferred__0/i__carry__0_O_UNCONNECTED ;
  wire [3:2]\NLW_sum_counter_reg[15]_i_3_CO_UNCONNECTED ;
  wire [3:3]\NLW_sum_counter_reg[15]_i_3_O_UNCONNECTED ;

  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \addend[0]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(dout[0]),
        .O(\addend[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \addend[10]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(dout[10]),
        .O(\addend[10]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \addend[11]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(dout[11]),
        .O(\addend[11]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \addend[12]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(dout[12]),
        .O(\addend[12]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \addend[13]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(dout[13]),
        .O(\addend[13]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \addend[14]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(dout[14]),
        .O(\addend[14]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \addend[15]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(dout[15]),
        .O(\addend[15]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \addend[16]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(dout[16]),
        .O(\addend[16]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \addend[17]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(dout[17]),
        .O(\addend[17]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \addend[18]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(dout[18]),
        .O(\addend[18]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \addend[19]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(dout[19]),
        .O(\addend[19]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \addend[1]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(dout[1]),
        .O(\addend[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \addend[20]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(dout[20]),
        .O(\addend[20]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \addend[21]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(dout[21]),
        .O(\addend[21]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \addend[22]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(dout[22]),
        .O(\addend[22]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \addend[23]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(dout[23]),
        .O(\addend[23]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \addend[24]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(dout[24]),
        .O(\addend[24]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \addend[25]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(dout[25]),
        .O(\addend[25]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \addend[26]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(dout[26]),
        .O(\addend[26]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \addend[27]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(dout[27]),
        .O(\addend[27]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \addend[28]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(dout[28]),
        .O(\addend[28]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \addend[29]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(dout[29]),
        .O(\addend[29]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \addend[2]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(dout[2]),
        .O(\addend[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \addend[30]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(dout[30]),
        .O(\addend[30]_i_1__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \addend[31]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [1]),
        .O(augend));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \addend[31]_i_2 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(dout[31]),
        .O(\addend[31]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \addend[3]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(dout[3]),
        .O(\addend[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \addend[4]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(dout[4]),
        .O(\addend[4]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \addend[5]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(dout[5]),
        .O(\addend[5]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \addend[6]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(dout[6]),
        .O(\addend[6]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \addend[7]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(dout[7]),
        .O(\addend[7]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \addend[8]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(dout[8]),
        .O(\addend[8]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \addend[9]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(dout[9]),
        .O(\addend[9]_i_1__0_n_0 ));
  FDCE \addend_reg[0] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\addend[0]_i_1__0_n_0 ),
        .Q(ila_smax_aw_addend[0]));
  FDCE \addend_reg[10] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\addend[10]_i_1__0_n_0 ),
        .Q(ila_smax_aw_addend[10]));
  FDCE \addend_reg[11] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\addend[11]_i_1__0_n_0 ),
        .Q(ila_smax_aw_addend[11]));
  FDCE \addend_reg[12] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\addend[12]_i_1__0_n_0 ),
        .Q(ila_smax_aw_addend[12]));
  FDCE \addend_reg[13] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\addend[13]_i_1__0_n_0 ),
        .Q(ila_smax_aw_addend[13]));
  FDCE \addend_reg[14] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\addend[14]_i_1__0_n_0 ),
        .Q(ila_smax_aw_addend[14]));
  FDCE \addend_reg[15] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\addend[15]_i_1__0_n_0 ),
        .Q(ila_smax_aw_addend[15]));
  FDCE \addend_reg[16] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\addend[16]_i_1__0_n_0 ),
        .Q(ila_smax_aw_addend[16]));
  FDCE \addend_reg[17] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\addend[17]_i_1__0_n_0 ),
        .Q(ila_smax_aw_addend[17]));
  FDCE \addend_reg[18] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\addend[18]_i_1__0_n_0 ),
        .Q(ila_smax_aw_addend[18]));
  FDCE \addend_reg[19] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\addend[19]_i_1__0_n_0 ),
        .Q(ila_smax_aw_addend[19]));
  FDCE \addend_reg[1] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\addend[1]_i_1__0_n_0 ),
        .Q(ila_smax_aw_addend[1]));
  FDCE \addend_reg[20] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\addend[20]_i_1__0_n_0 ),
        .Q(ila_smax_aw_addend[20]));
  FDCE \addend_reg[21] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\addend[21]_i_1__0_n_0 ),
        .Q(ila_smax_aw_addend[21]));
  FDCE \addend_reg[22] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\addend[22]_i_1__0_n_0 ),
        .Q(ila_smax_aw_addend[22]));
  FDCE \addend_reg[23] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\addend[23]_i_1__0_n_0 ),
        .Q(ila_smax_aw_addend[23]));
  FDCE \addend_reg[24] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\addend[24]_i_1__0_n_0 ),
        .Q(ila_smax_aw_addend[24]));
  FDCE \addend_reg[25] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\addend[25]_i_1__0_n_0 ),
        .Q(ila_smax_aw_addend[25]));
  FDCE \addend_reg[26] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\addend[26]_i_1__0_n_0 ),
        .Q(ila_smax_aw_addend[26]));
  FDCE \addend_reg[27] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\addend[27]_i_1__0_n_0 ),
        .Q(ila_smax_aw_addend[27]));
  FDCE \addend_reg[28] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\addend[28]_i_1__0_n_0 ),
        .Q(ila_smax_aw_addend[28]));
  FDCE \addend_reg[29] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\addend[29]_i_1__0_n_0 ),
        .Q(ila_smax_aw_addend[29]));
  FDCE \addend_reg[2] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\addend[2]_i_1__0_n_0 ),
        .Q(ila_smax_aw_addend[2]));
  FDCE \addend_reg[30] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\addend[30]_i_1__0_n_0 ),
        .Q(ila_smax_aw_addend[30]));
  FDCE \addend_reg[31] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\addend[31]_i_2_n_0 ),
        .Q(ila_smax_aw_addend[31]));
  FDCE \addend_reg[3] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\addend[3]_i_1__0_n_0 ),
        .Q(ila_smax_aw_addend[3]));
  FDCE \addend_reg[4] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\addend[4]_i_1__0_n_0 ),
        .Q(ila_smax_aw_addend[4]));
  FDCE \addend_reg[5] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\addend[5]_i_1__0_n_0 ),
        .Q(ila_smax_aw_addend[5]));
  FDCE \addend_reg[6] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\addend[6]_i_1__0_n_0 ),
        .Q(ila_smax_aw_addend[6]));
  FDCE \addend_reg[7] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\addend[7]_i_1__0_n_0 ),
        .Q(ila_smax_aw_addend[7]));
  FDCE \addend_reg[8] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\addend[8]_i_1__0_n_0 ),
        .Q(ila_smax_aw_addend[8]));
  FDCE \addend_reg[9] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\addend[9]_i_1__0_n_0 ),
        .Q(ila_smax_aw_addend[9]));
  final_accelerator_Softmax_Layer_32bit_0_0_softmax_adder_32bit adder
       (.a(ila_smax_aw_addend),
        .b(ila_smax_aw_augend),
        .clk(m00_axi_aclk),
        .result(ila_smax_aw_sum));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \augend[0]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(ila_smax_aw_sum_reg[0]),
        .O(\augend[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \augend[10]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(ila_smax_aw_sum_reg[10]),
        .O(\augend[10]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \augend[11]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(ila_smax_aw_sum_reg[11]),
        .O(\augend[11]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \augend[12]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(ila_smax_aw_sum_reg[12]),
        .O(\augend[12]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \augend[13]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(ila_smax_aw_sum_reg[13]),
        .O(\augend[13]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \augend[14]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(ila_smax_aw_sum_reg[14]),
        .O(\augend[14]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \augend[15]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(ila_smax_aw_sum_reg[15]),
        .O(\augend[15]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \augend[16]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(ila_smax_aw_sum_reg[16]),
        .O(\augend[16]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \augend[17]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(ila_smax_aw_sum_reg[17]),
        .O(\augend[17]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \augend[18]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(ila_smax_aw_sum_reg[18]),
        .O(\augend[18]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \augend[19]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(ila_smax_aw_sum_reg[19]),
        .O(\augend[19]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \augend[1]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(ila_smax_aw_sum_reg[1]),
        .O(\augend[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \augend[20]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(ila_smax_aw_sum_reg[20]),
        .O(\augend[20]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \augend[21]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(ila_smax_aw_sum_reg[21]),
        .O(\augend[21]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \augend[22]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(ila_smax_aw_sum_reg[22]),
        .O(\augend[22]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \augend[23]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(ila_smax_aw_sum_reg[23]),
        .O(\augend[23]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \augend[24]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(ila_smax_aw_sum_reg[24]),
        .O(\augend[24]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \augend[25]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(ila_smax_aw_sum_reg[25]),
        .O(\augend[25]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \augend[26]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(ila_smax_aw_sum_reg[26]),
        .O(\augend[26]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \augend[27]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(ila_smax_aw_sum_reg[27]),
        .O(\augend[27]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \augend[28]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(ila_smax_aw_sum_reg[28]),
        .O(\augend[28]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \augend[29]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(ila_smax_aw_sum_reg[29]),
        .O(\augend[29]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \augend[2]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(ila_smax_aw_sum_reg[2]),
        .O(\augend[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \augend[30]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(ila_smax_aw_sum_reg[30]),
        .O(\augend[30]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \augend[31]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(ila_smax_aw_sum_reg[31]),
        .O(\augend[31]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \augend[3]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(ila_smax_aw_sum_reg[3]),
        .O(\augend[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \augend[4]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(ila_smax_aw_sum_reg[4]),
        .O(\augend[4]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \augend[5]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(ila_smax_aw_sum_reg[5]),
        .O(\augend[5]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \augend[6]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(ila_smax_aw_sum_reg[6]),
        .O(\augend[6]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \augend[7]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(ila_smax_aw_sum_reg[7]),
        .O(\augend[7]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \augend[8]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(ila_smax_aw_sum_reg[8]),
        .O(\augend[8]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \augend[9]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(ila_smax_aw_sum_reg[9]),
        .O(\augend[9]_i_1__0_n_0 ));
  FDCE \augend_reg[0] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\augend[0]_i_1__0_n_0 ),
        .Q(ila_smax_aw_augend[0]));
  FDCE \augend_reg[10] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\augend[10]_i_1__0_n_0 ),
        .Q(ila_smax_aw_augend[10]));
  FDCE \augend_reg[11] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\augend[11]_i_1__0_n_0 ),
        .Q(ila_smax_aw_augend[11]));
  FDCE \augend_reg[12] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\augend[12]_i_1__0_n_0 ),
        .Q(ila_smax_aw_augend[12]));
  FDCE \augend_reg[13] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\augend[13]_i_1__0_n_0 ),
        .Q(ila_smax_aw_augend[13]));
  FDCE \augend_reg[14] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\augend[14]_i_1__0_n_0 ),
        .Q(ila_smax_aw_augend[14]));
  FDCE \augend_reg[15] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\augend[15]_i_1__0_n_0 ),
        .Q(ila_smax_aw_augend[15]));
  FDCE \augend_reg[16] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\augend[16]_i_1__0_n_0 ),
        .Q(ila_smax_aw_augend[16]));
  FDCE \augend_reg[17] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\augend[17]_i_1__0_n_0 ),
        .Q(ila_smax_aw_augend[17]));
  FDCE \augend_reg[18] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\augend[18]_i_1__0_n_0 ),
        .Q(ila_smax_aw_augend[18]));
  FDCE \augend_reg[19] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\augend[19]_i_1__0_n_0 ),
        .Q(ila_smax_aw_augend[19]));
  FDCE \augend_reg[1] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\augend[1]_i_1__0_n_0 ),
        .Q(ila_smax_aw_augend[1]));
  FDCE \augend_reg[20] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\augend[20]_i_1__0_n_0 ),
        .Q(ila_smax_aw_augend[20]));
  FDCE \augend_reg[21] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\augend[21]_i_1__0_n_0 ),
        .Q(ila_smax_aw_augend[21]));
  FDCE \augend_reg[22] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\augend[22]_i_1__0_n_0 ),
        .Q(ila_smax_aw_augend[22]));
  FDCE \augend_reg[23] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\augend[23]_i_1__0_n_0 ),
        .Q(ila_smax_aw_augend[23]));
  FDCE \augend_reg[24] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\augend[24]_i_1__0_n_0 ),
        .Q(ila_smax_aw_augend[24]));
  FDCE \augend_reg[25] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\augend[25]_i_1__0_n_0 ),
        .Q(ila_smax_aw_augend[25]));
  FDCE \augend_reg[26] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\augend[26]_i_1__0_n_0 ),
        .Q(ila_smax_aw_augend[26]));
  FDCE \augend_reg[27] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\augend[27]_i_1__0_n_0 ),
        .Q(ila_smax_aw_augend[27]));
  FDCE \augend_reg[28] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\augend[28]_i_1__0_n_0 ),
        .Q(ila_smax_aw_augend[28]));
  FDCE \augend_reg[29] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\augend[29]_i_1__0_n_0 ),
        .Q(ila_smax_aw_augend[29]));
  FDCE \augend_reg[2] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\augend[2]_i_1__0_n_0 ),
        .Q(ila_smax_aw_augend[2]));
  FDCE \augend_reg[30] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\augend[30]_i_1__0_n_0 ),
        .Q(ila_smax_aw_augend[30]));
  FDCE \augend_reg[31] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\augend[31]_i_1__0_n_0 ),
        .Q(ila_smax_aw_augend[31]));
  FDCE \augend_reg[3] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\augend[3]_i_1__0_n_0 ),
        .Q(ila_smax_aw_augend[3]));
  FDCE \augend_reg[4] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\augend[4]_i_1__0_n_0 ),
        .Q(ila_smax_aw_augend[4]));
  FDCE \augend_reg[5] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\augend[5]_i_1__0_n_0 ),
        .Q(ila_smax_aw_augend[5]));
  FDCE \augend_reg[6] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\augend[6]_i_1__0_n_0 ),
        .Q(ila_smax_aw_augend[6]));
  FDCE \augend_reg[7] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\augend[7]_i_1__0_n_0 ),
        .Q(ila_smax_aw_augend[7]));
  FDCE \augend_reg[8] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\augend[8]_i_1__0_n_0 ),
        .Q(ila_smax_aw_augend[8]));
  FDCE \augend_reg[9] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_4),
        .D(\augend[9]_i_1__0_n_0 ),
        .Q(ila_smax_aw_augend[9]));
  LUT6 #(
    .INIT(64'h7474747400003300)) 
    \current_state[0]_i_1__0 
       (.I0(\FSM_sequential_current_state_reg[2] ),
        .I1(\ila_smax_aw_fsm_state[1] [0]),
        .I2(Q[3]),
        .I3(ila_smax_ctrlr_exp_fifo_select),
        .I4(empty_fwft_i_reg),
        .I5(\ila_smax_aw_fsm_state[1] [1]),
        .O(next_state[0]));
  LUT6 #(
    .INIT(64'h07F0F7F0F7F0F7F0)) 
    \current_state[1]_i_1__0 
       (.I0(Q[3]),
        .I1(sel),
        .I2(\ila_smax_aw_fsm_state[1] [0]),
        .I3(\ila_smax_aw_fsm_state[1] [1]),
        .I4(\FSM_sequential_current_state_reg[1] ),
        .I5(division_complete_reg),
        .O(next_state[1]));
  FDCE \current_state_reg[0] 
       (.C(m00_axi_aclk),
        .CE(1'b1),
        .CLR(m00_axi_aresetn_0),
        .D(next_state[0]),
        .Q(\ila_smax_aw_fsm_state[1] [0]));
  FDCE \current_state_reg[1] 
       (.C(m00_axi_aclk),
        .CE(1'b1),
        .CLR(m00_axi_aresetn),
        .D(next_state[1]),
        .Q(\ila_smax_aw_fsm_state[1] [1]));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \divisor[0]_i_1 
       (.I0(ila_smax_aw_sum_reg[0]),
        .I1(\current_state_reg[1]_0 [0]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \divisor[10]_i_1 
       (.I0(ila_smax_aw_sum_reg[10]),
        .I1(\current_state_reg[1]_0 [0]),
        .O(D[10]));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \divisor[11]_i_1 
       (.I0(ila_smax_aw_sum_reg[11]),
        .I1(\current_state_reg[1]_0 [0]),
        .O(D[11]));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \divisor[12]_i_1 
       (.I0(ila_smax_aw_sum_reg[12]),
        .I1(\current_state_reg[1]_0 [0]),
        .O(D[12]));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \divisor[13]_i_1 
       (.I0(ila_smax_aw_sum_reg[13]),
        .I1(\current_state_reg[1]_0 [0]),
        .O(D[13]));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \divisor[14]_i_1 
       (.I0(ila_smax_aw_sum_reg[14]),
        .I1(\current_state_reg[1]_0 [0]),
        .O(D[14]));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \divisor[15]_i_1 
       (.I0(ila_smax_aw_sum_reg[15]),
        .I1(\current_state_reg[1]_0 [0]),
        .O(D[15]));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \divisor[16]_i_1 
       (.I0(ila_smax_aw_sum_reg[16]),
        .I1(\current_state_reg[1]_0 [0]),
        .O(D[16]));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \divisor[17]_i_1 
       (.I0(ila_smax_aw_sum_reg[17]),
        .I1(\current_state_reg[1]_0 [0]),
        .O(D[17]));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \divisor[18]_i_1 
       (.I0(ila_smax_aw_sum_reg[18]),
        .I1(\current_state_reg[1]_0 [0]),
        .O(D[18]));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \divisor[19]_i_1 
       (.I0(ila_smax_aw_sum_reg[19]),
        .I1(\current_state_reg[1]_0 [0]),
        .O(D[19]));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \divisor[1]_i_1 
       (.I0(ila_smax_aw_sum_reg[1]),
        .I1(\current_state_reg[1]_0 [0]),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \divisor[20]_i_1 
       (.I0(ila_smax_aw_sum_reg[20]),
        .I1(\current_state_reg[1]_0 [0]),
        .O(D[20]));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \divisor[21]_i_1 
       (.I0(ila_smax_aw_sum_reg[21]),
        .I1(\current_state_reg[1]_0 [0]),
        .O(D[21]));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \divisor[22]_i_1 
       (.I0(ila_smax_aw_sum_reg[22]),
        .I1(\current_state_reg[1]_0 [0]),
        .O(D[22]));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \divisor[23]_i_1 
       (.I0(ila_smax_aw_sum_reg[23]),
        .I1(\current_state_reg[1]_0 [0]),
        .O(D[23]));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \divisor[24]_i_1 
       (.I0(ila_smax_aw_sum_reg[24]),
        .I1(\current_state_reg[1]_0 [0]),
        .O(D[24]));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \divisor[25]_i_1 
       (.I0(ila_smax_aw_sum_reg[25]),
        .I1(\current_state_reg[1]_0 [0]),
        .O(D[25]));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \divisor[26]_i_1 
       (.I0(ila_smax_aw_sum_reg[26]),
        .I1(\current_state_reg[1]_0 [0]),
        .O(D[26]));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \divisor[27]_i_1 
       (.I0(ila_smax_aw_sum_reg[27]),
        .I1(\current_state_reg[1]_0 [0]),
        .O(D[27]));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \divisor[28]_i_1 
       (.I0(ila_smax_aw_sum_reg[28]),
        .I1(\current_state_reg[1]_0 [0]),
        .O(D[28]));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \divisor[29]_i_1 
       (.I0(ila_smax_aw_sum_reg[29]),
        .I1(\current_state_reg[1]_0 [0]),
        .O(D[29]));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \divisor[2]_i_1 
       (.I0(ila_smax_aw_sum_reg[2]),
        .I1(\current_state_reg[1]_0 [0]),
        .O(D[2]));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \divisor[30]_i_1 
       (.I0(ila_smax_aw_sum_reg[30]),
        .I1(\current_state_reg[1]_0 [0]),
        .O(D[30]));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \divisor[31]_i_2 
       (.I0(ila_smax_aw_sum_reg[31]),
        .I1(\current_state_reg[1]_0 [0]),
        .O(D[31]));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \divisor[3]_i_1 
       (.I0(ila_smax_aw_sum_reg[3]),
        .I1(\current_state_reg[1]_0 [0]),
        .O(D[3]));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \divisor[4]_i_1 
       (.I0(ila_smax_aw_sum_reg[4]),
        .I1(\current_state_reg[1]_0 [0]),
        .O(D[4]));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \divisor[5]_i_1 
       (.I0(ila_smax_aw_sum_reg[5]),
        .I1(\current_state_reg[1]_0 [0]),
        .O(D[5]));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \divisor[6]_i_1 
       (.I0(ila_smax_aw_sum_reg[6]),
        .I1(\current_state_reg[1]_0 [0]),
        .O(D[6]));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \divisor[7]_i_1 
       (.I0(ila_smax_aw_sum_reg[7]),
        .I1(\current_state_reg[1]_0 [0]),
        .O(D[7]));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \divisor[8]_i_1 
       (.I0(ila_smax_aw_sum_reg[8]),
        .I1(\current_state_reg[1]_0 [0]),
        .O(D[8]));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \divisor[9]_i_1 
       (.I0(ila_smax_aw_sum_reg[9]),
        .I1(\current_state_reg[1]_0 [0]),
        .O(D[9]));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \hold_counter[0]_i_1__1 
       (.I0(Q[0]),
        .I1(\ila_smax_aw_fsm_state[1] [1]),
        .I2(Q[3]),
        .O(\hold_counter[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT4 #(
    .INIT(16'h0220)) 
    \hold_counter[1]_i_1__1 
       (.I0(\ila_smax_aw_fsm_state[1] [1]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[0]),
        .O(p_1_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT5 #(
    .INIT(32'h00007800)) 
    \hold_counter[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(\ila_smax_aw_fsm_state[1] [1]),
        .I4(Q[3]),
        .O(p_1_in[2]));
  LUT1 #(
    .INIT(2'h1)) 
    \hold_counter[3]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .O(\hold_counter[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT5 #(
    .INIT(32'h20000000)) 
    \hold_counter[3]_i_2__0 
       (.I0(\ila_smax_aw_fsm_state[1] [1]),
        .I1(Q[3]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(Q[2]),
        .O(p_1_in[3]));
  FDCE \hold_counter_reg[0] 
       (.C(m00_axi_aclk),
        .CE(\hold_counter[3]_i_1__0_n_0 ),
        .CLR(m00_axi_aresetn),
        .D(\hold_counter[0]_i_1__1_n_0 ),
        .Q(Q[0]));
  FDCE \hold_counter_reg[1] 
       (.C(m00_axi_aclk),
        .CE(\hold_counter[3]_i_1__0_n_0 ),
        .CLR(m00_axi_aresetn),
        .D(p_1_in[1]),
        .Q(Q[1]));
  FDCE \hold_counter_reg[2] 
       (.C(m00_axi_aclk),
        .CE(\hold_counter[3]_i_1__0_n_0 ),
        .CLR(m00_axi_aresetn),
        .D(p_1_in[2]),
        .Q(Q[2]));
  FDCE \hold_counter_reg[3] 
       (.C(m00_axi_aclk),
        .CE(\hold_counter[3]_i_1__0_n_0 ),
        .CLR(m00_axi_aresetn),
        .D(p_1_in[3]),
        .Q(Q[3]));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_5__0
       (.I0(\ila_smax_aw_sum_counter[15] [15]),
        .I1(\num_elements_reg[15]_0 [15]),
        .I2(\ila_smax_aw_sum_counter[15] [14]),
        .I3(\num_elements_reg[15]_0 [14]),
        .O(i__carry__0_i_5__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_6__0
       (.I0(\ila_smax_aw_sum_counter[15] [13]),
        .I1(\num_elements_reg[15]_0 [13]),
        .I2(\ila_smax_aw_sum_counter[15] [12]),
        .I3(\num_elements_reg[15]_0 [12]),
        .O(i__carry__0_i_6__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_7__0
       (.I0(\ila_smax_aw_sum_counter[15] [11]),
        .I1(\num_elements_reg[15]_0 [11]),
        .I2(\ila_smax_aw_sum_counter[15] [10]),
        .I3(\num_elements_reg[15]_0 [10]),
        .O(i__carry__0_i_7__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_8__0
       (.I0(\ila_smax_aw_sum_counter[15] [9]),
        .I1(\num_elements_reg[15]_0 [9]),
        .I2(\ila_smax_aw_sum_counter[15] [8]),
        .I3(\num_elements_reg[15]_0 [8]),
        .O(i__carry__0_i_8__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_5__0
       (.I0(\ila_smax_aw_sum_counter[15] [7]),
        .I1(\num_elements_reg[15]_0 [7]),
        .I2(\ila_smax_aw_sum_counter[15] [6]),
        .I3(\num_elements_reg[15]_0 [6]),
        .O(i__carry_i_5__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_6__0
       (.I0(\ila_smax_aw_sum_counter[15] [5]),
        .I1(\num_elements_reg[15]_0 [5]),
        .I2(\ila_smax_aw_sum_counter[15] [4]),
        .I3(\num_elements_reg[15]_0 [4]),
        .O(i__carry_i_6__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_7__0
       (.I0(\ila_smax_aw_sum_counter[15] [3]),
        .I1(\num_elements_reg[15]_0 [3]),
        .I2(\ila_smax_aw_sum_counter[15] [2]),
        .I3(\num_elements_reg[15]_0 [2]),
        .O(i__carry_i_7__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_8__0
       (.I0(\ila_smax_aw_sum_counter[15] [1]),
        .I1(\num_elements_reg[15]_0 [1]),
        .I2(\ila_smax_aw_sum_counter[15] [0]),
        .I3(\num_elements_reg[15]_0 [0]),
        .O(i__carry_i_8__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT2 #(
    .INIT(4'h2)) 
    ila_smax_aw_rd_en_INST_0
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(\ila_smax_aw_fsm_state[1] [1]),
        .O(ila_smax_aw_rd_en));
  LUT6 #(
    .INIT(64'h1F11FFFF1F110000)) 
    ila_smax_exp_mux_wr_en_INST_0
       (.I0(\current_state_reg[0]_0 ),
        .I1(\current_state_reg[1]_0 [1]),
        .I2(\ila_smax_aw_fsm_state[1] [1]),
        .I3(\ila_smax_aw_fsm_state[1] [0]),
        .I4(ila_smax_ctrlr_exp_fifo_select),
        .I5(ila_smax_exp_fifo_wr_en),
        .O(ila_smax_exp_mux_wr_en));
  CARRY4 \next_state1_inferred__0/i__carry 
       (.CI(1'b0),
        .CO({\next_state1_inferred__0/i__carry_n_0 ,\next_state1_inferred__0/i__carry_n_1 ,\next_state1_inferred__0/i__carry_n_2 ,\next_state1_inferred__0/i__carry_n_3 }),
        .CYINIT(1'b0),
        .DI(\num_elements_reg[7] ),
        .O(\NLW_next_state1_inferred__0/i__carry_O_UNCONNECTED [3:0]),
        .S({i__carry_i_5__0_n_0,i__carry_i_6__0_n_0,i__carry_i_7__0_n_0,i__carry_i_8__0_n_0}));
  CARRY4 \next_state1_inferred__0/i__carry__0 
       (.CI(\next_state1_inferred__0/i__carry_n_0 ),
        .CO({sel,\next_state1_inferred__0/i__carry__0_n_1 ,\next_state1_inferred__0/i__carry__0_n_2 ,\next_state1_inferred__0/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI(\num_elements_reg[15] ),
        .O(\NLW_next_state1_inferred__0/i__carry__0_O_UNCONNECTED [3:0]),
        .S({i__carry__0_i_5__0_n_0,i__carry__0_i_6__0_n_0,i__carry__0_i_7__0_n_0,i__carry__0_i_8__0_n_0}));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \sum_counter[0]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(\ila_smax_aw_sum_counter[15] [0]),
        .O(\sum_counter[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sum_counter[10]_i_1 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(\sum_counter_reg[12]_i_2_n_6 ),
        .O(\sum_counter[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sum_counter[11]_i_1 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(\sum_counter_reg[12]_i_2_n_5 ),
        .O(\sum_counter[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sum_counter[12]_i_1 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(\sum_counter_reg[12]_i_2_n_4 ),
        .O(\sum_counter[12]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sum_counter[12]_i_3 
       (.I0(\ila_smax_aw_sum_counter[15] [12]),
        .O(\sum_counter[12]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sum_counter[12]_i_4 
       (.I0(\ila_smax_aw_sum_counter[15] [11]),
        .O(\sum_counter[12]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sum_counter[12]_i_5 
       (.I0(\ila_smax_aw_sum_counter[15] [10]),
        .O(\sum_counter[12]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sum_counter[12]_i_6 
       (.I0(\ila_smax_aw_sum_counter[15] [9]),
        .O(\sum_counter[12]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sum_counter[13]_i_1 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(\sum_counter_reg[15]_i_3_n_7 ),
        .O(\sum_counter[13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sum_counter[14]_i_1 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(\sum_counter_reg[15]_i_3_n_6 ),
        .O(\sum_counter[14]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sum_counter[15]_i_1 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(\sum_counter_reg[15]_i_3_n_5 ),
        .O(\sum_counter[15]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sum_counter[15]_i_4 
       (.I0(\ila_smax_aw_sum_counter[15] [15]),
        .O(\sum_counter[15]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sum_counter[15]_i_5 
       (.I0(\ila_smax_aw_sum_counter[15] [14]),
        .O(\sum_counter[15]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sum_counter[15]_i_6 
       (.I0(\ila_smax_aw_sum_counter[15] [13]),
        .O(\sum_counter[15]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sum_counter[1]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(\sum_counter_reg[4]_i_2_n_7 ),
        .O(\sum_counter[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sum_counter[2]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(\sum_counter_reg[4]_i_2_n_6 ),
        .O(\sum_counter[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sum_counter[3]_i_1__0 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(\sum_counter_reg[4]_i_2_n_5 ),
        .O(\sum_counter[3]_i_1__0_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \sum_counter[4]_i_1 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(\sum_counter_reg[4]_i_2_n_4 ),
        .O(\sum_counter[4]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sum_counter[4]_i_3__0 
       (.I0(\ila_smax_aw_sum_counter[15] [4]),
        .O(\sum_counter[4]_i_3__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sum_counter[4]_i_4 
       (.I0(\ila_smax_aw_sum_counter[15] [3]),
        .O(\sum_counter[4]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sum_counter[4]_i_5 
       (.I0(\ila_smax_aw_sum_counter[15] [2]),
        .O(\sum_counter[4]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sum_counter[4]_i_6 
       (.I0(\ila_smax_aw_sum_counter[15] [1]),
        .O(\sum_counter[4]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sum_counter[5]_i_1 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(\sum_counter_reg[8]_i_2_n_7 ),
        .O(\sum_counter[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sum_counter[6]_i_1 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(\sum_counter_reg[8]_i_2_n_6 ),
        .O(\sum_counter[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sum_counter[7]_i_1 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(\sum_counter_reg[8]_i_2_n_5 ),
        .O(\sum_counter[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sum_counter[8]_i_1 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(\sum_counter_reg[8]_i_2_n_4 ),
        .O(\sum_counter[8]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sum_counter[8]_i_3 
       (.I0(\ila_smax_aw_sum_counter[15] [8]),
        .O(\sum_counter[8]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sum_counter[8]_i_4 
       (.I0(\ila_smax_aw_sum_counter[15] [7]),
        .O(\sum_counter[8]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sum_counter[8]_i_5 
       (.I0(\ila_smax_aw_sum_counter[15] [6]),
        .O(\sum_counter[8]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sum_counter[8]_i_6 
       (.I0(\ila_smax_aw_sum_counter[15] [5]),
        .O(\sum_counter[8]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sum_counter[9]_i_1 
       (.I0(\ila_smax_aw_fsm_state[1] [0]),
        .I1(\sum_counter_reg[12]_i_2_n_7 ),
        .O(\sum_counter[9]_i_1_n_0 ));
  FDCE \sum_counter_reg[0] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_3),
        .D(\sum_counter[0]_i_1__0_n_0 ),
        .Q(\ila_smax_aw_sum_counter[15] [0]));
  FDCE \sum_counter_reg[10] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_1),
        .D(\sum_counter[10]_i_1_n_0 ),
        .Q(\ila_smax_aw_sum_counter[15] [10]));
  FDCE \sum_counter_reg[11] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_1),
        .D(\sum_counter[11]_i_1_n_0 ),
        .Q(\ila_smax_aw_sum_counter[15] [11]));
  FDCE \sum_counter_reg[12] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_1),
        .D(\sum_counter[12]_i_1_n_0 ),
        .Q(\ila_smax_aw_sum_counter[15] [12]));
  CARRY4 \sum_counter_reg[12]_i_2 
       (.CI(\sum_counter_reg[8]_i_2_n_0 ),
        .CO({\sum_counter_reg[12]_i_2_n_0 ,\sum_counter_reg[12]_i_2_n_1 ,\sum_counter_reg[12]_i_2_n_2 ,\sum_counter_reg[12]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\sum_counter_reg[12]_i_2_n_4 ,\sum_counter_reg[12]_i_2_n_5 ,\sum_counter_reg[12]_i_2_n_6 ,\sum_counter_reg[12]_i_2_n_7 }),
        .S({\sum_counter[12]_i_3_n_0 ,\sum_counter[12]_i_4_n_0 ,\sum_counter[12]_i_5_n_0 ,\sum_counter[12]_i_6_n_0 }));
  FDCE \sum_counter_reg[13] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_1),
        .D(\sum_counter[13]_i_1_n_0 ),
        .Q(\ila_smax_aw_sum_counter[15] [13]));
  FDCE \sum_counter_reg[14] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_1),
        .D(\sum_counter[14]_i_1_n_0 ),
        .Q(\ila_smax_aw_sum_counter[15] [14]));
  FDCE \sum_counter_reg[15] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_1),
        .D(\sum_counter[15]_i_1_n_0 ),
        .Q(\ila_smax_aw_sum_counter[15] [15]));
  CARRY4 \sum_counter_reg[15]_i_3 
       (.CI(\sum_counter_reg[12]_i_2_n_0 ),
        .CO({\NLW_sum_counter_reg[15]_i_3_CO_UNCONNECTED [3:2],\sum_counter_reg[15]_i_3_n_2 ,\sum_counter_reg[15]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_sum_counter_reg[15]_i_3_O_UNCONNECTED [3],\sum_counter_reg[15]_i_3_n_5 ,\sum_counter_reg[15]_i_3_n_6 ,\sum_counter_reg[15]_i_3_n_7 }),
        .S({1'b0,\sum_counter[15]_i_4_n_0 ,\sum_counter[15]_i_5_n_0 ,\sum_counter[15]_i_6_n_0 }));
  FDCE \sum_counter_reg[1] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_3),
        .D(\sum_counter[1]_i_1__0_n_0 ),
        .Q(\ila_smax_aw_sum_counter[15] [1]));
  FDCE \sum_counter_reg[2] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_2),
        .D(\sum_counter[2]_i_1__0_n_0 ),
        .Q(\ila_smax_aw_sum_counter[15] [2]));
  FDCE \sum_counter_reg[3] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_2),
        .D(\sum_counter[3]_i_1__0_n_0 ),
        .Q(\ila_smax_aw_sum_counter[15] [3]));
  FDCE \sum_counter_reg[4] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_1),
        .D(\sum_counter[4]_i_1_n_0 ),
        .Q(\ila_smax_aw_sum_counter[15] [4]));
  CARRY4 \sum_counter_reg[4]_i_2 
       (.CI(1'b0),
        .CO({\sum_counter_reg[4]_i_2_n_0 ,\sum_counter_reg[4]_i_2_n_1 ,\sum_counter_reg[4]_i_2_n_2 ,\sum_counter_reg[4]_i_2_n_3 }),
        .CYINIT(\ila_smax_aw_sum_counter[15] [0]),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\sum_counter_reg[4]_i_2_n_4 ,\sum_counter_reg[4]_i_2_n_5 ,\sum_counter_reg[4]_i_2_n_6 ,\sum_counter_reg[4]_i_2_n_7 }),
        .S({\sum_counter[4]_i_3__0_n_0 ,\sum_counter[4]_i_4_n_0 ,\sum_counter[4]_i_5_n_0 ,\sum_counter[4]_i_6_n_0 }));
  FDCE \sum_counter_reg[5] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_1),
        .D(\sum_counter[5]_i_1_n_0 ),
        .Q(\ila_smax_aw_sum_counter[15] [5]));
  FDCE \sum_counter_reg[6] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_1),
        .D(\sum_counter[6]_i_1_n_0 ),
        .Q(\ila_smax_aw_sum_counter[15] [6]));
  FDCE \sum_counter_reg[7] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_1),
        .D(\sum_counter[7]_i_1_n_0 ),
        .Q(\ila_smax_aw_sum_counter[15] [7]));
  FDCE \sum_counter_reg[8] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_1),
        .D(\sum_counter[8]_i_1_n_0 ),
        .Q(\ila_smax_aw_sum_counter[15] [8]));
  CARRY4 \sum_counter_reg[8]_i_2 
       (.CI(\sum_counter_reg[4]_i_2_n_0 ),
        .CO({\sum_counter_reg[8]_i_2_n_0 ,\sum_counter_reg[8]_i_2_n_1 ,\sum_counter_reg[8]_i_2_n_2 ,\sum_counter_reg[8]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\sum_counter_reg[8]_i_2_n_4 ,\sum_counter_reg[8]_i_2_n_5 ,\sum_counter_reg[8]_i_2_n_6 ,\sum_counter_reg[8]_i_2_n_7 }),
        .S({\sum_counter[8]_i_3_n_0 ,\sum_counter[8]_i_4_n_0 ,\sum_counter[8]_i_5_n_0 ,\sum_counter[8]_i_6_n_0 }));
  FDCE \sum_counter_reg[9] 
       (.C(m00_axi_aclk),
        .CE(augend),
        .CLR(m00_axi_aresetn_1),
        .D(\sum_counter[9]_i_1_n_0 ),
        .Q(\ila_smax_aw_sum_counter[15] [9]));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sum_reg[0]_i_1 
       (.I0(\ila_smax_aw_fsm_state[1] [1]),
        .I1(ila_smax_aw_sum[0]),
        .O(\sum_reg[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sum_reg[10]_i_1 
       (.I0(\ila_smax_aw_fsm_state[1] [1]),
        .I1(ila_smax_aw_sum[10]),
        .O(\sum_reg[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sum_reg[11]_i_1 
       (.I0(\ila_smax_aw_fsm_state[1] [1]),
        .I1(ila_smax_aw_sum[11]),
        .O(\sum_reg[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sum_reg[12]_i_1 
       (.I0(\ila_smax_aw_fsm_state[1] [1]),
        .I1(ila_smax_aw_sum[12]),
        .O(\sum_reg[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sum_reg[13]_i_1 
       (.I0(\ila_smax_aw_fsm_state[1] [1]),
        .I1(ila_smax_aw_sum[13]),
        .O(\sum_reg[13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sum_reg[14]_i_1 
       (.I0(\ila_smax_aw_fsm_state[1] [1]),
        .I1(ila_smax_aw_sum[14]),
        .O(\sum_reg[14]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sum_reg[15]_i_1 
       (.I0(\ila_smax_aw_fsm_state[1] [1]),
        .I1(ila_smax_aw_sum[15]),
        .O(\sum_reg[15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sum_reg[16]_i_1 
       (.I0(\ila_smax_aw_fsm_state[1] [1]),
        .I1(ila_smax_aw_sum[16]),
        .O(\sum_reg[16]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sum_reg[17]_i_1 
       (.I0(\ila_smax_aw_fsm_state[1] [1]),
        .I1(ila_smax_aw_sum[17]),
        .O(\sum_reg[17]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sum_reg[18]_i_1 
       (.I0(\ila_smax_aw_fsm_state[1] [1]),
        .I1(ila_smax_aw_sum[18]),
        .O(\sum_reg[18]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sum_reg[19]_i_1 
       (.I0(\ila_smax_aw_fsm_state[1] [1]),
        .I1(ila_smax_aw_sum[19]),
        .O(\sum_reg[19]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sum_reg[1]_i_1 
       (.I0(\ila_smax_aw_fsm_state[1] [1]),
        .I1(ila_smax_aw_sum[1]),
        .O(\sum_reg[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sum_reg[20]_i_1 
       (.I0(\ila_smax_aw_fsm_state[1] [1]),
        .I1(ila_smax_aw_sum[20]),
        .O(\sum_reg[20]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sum_reg[21]_i_1 
       (.I0(\ila_smax_aw_fsm_state[1] [1]),
        .I1(ila_smax_aw_sum[21]),
        .O(\sum_reg[21]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sum_reg[22]_i_1 
       (.I0(\ila_smax_aw_fsm_state[1] [1]),
        .I1(ila_smax_aw_sum[22]),
        .O(\sum_reg[22]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sum_reg[23]_i_1 
       (.I0(\ila_smax_aw_fsm_state[1] [1]),
        .I1(ila_smax_aw_sum[23]),
        .O(\sum_reg[23]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sum_reg[24]_i_1 
       (.I0(\ila_smax_aw_fsm_state[1] [1]),
        .I1(ila_smax_aw_sum[24]),
        .O(\sum_reg[24]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sum_reg[25]_i_1 
       (.I0(\ila_smax_aw_fsm_state[1] [1]),
        .I1(ila_smax_aw_sum[25]),
        .O(\sum_reg[25]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sum_reg[26]_i_1 
       (.I0(\ila_smax_aw_fsm_state[1] [1]),
        .I1(ila_smax_aw_sum[26]),
        .O(\sum_reg[26]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sum_reg[27]_i_1 
       (.I0(\ila_smax_aw_fsm_state[1] [1]),
        .I1(ila_smax_aw_sum[27]),
        .O(\sum_reg[27]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sum_reg[28]_i_1 
       (.I0(\ila_smax_aw_fsm_state[1] [1]),
        .I1(ila_smax_aw_sum[28]),
        .O(\sum_reg[28]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sum_reg[29]_i_1 
       (.I0(\ila_smax_aw_fsm_state[1] [1]),
        .I1(ila_smax_aw_sum[29]),
        .O(\sum_reg[29]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sum_reg[2]_i_1 
       (.I0(\ila_smax_aw_fsm_state[1] [1]),
        .I1(ila_smax_aw_sum[2]),
        .O(\sum_reg[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sum_reg[30]_i_1 
       (.I0(\ila_smax_aw_fsm_state[1] [1]),
        .I1(ila_smax_aw_sum[30]),
        .O(\sum_reg[30]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sum_reg[31]_i_1 
       (.I0(\ila_smax_aw_fsm_state[1] [1]),
        .I1(ila_smax_aw_sum[31]),
        .O(\sum_reg[31]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sum_reg[3]_i_1 
       (.I0(\ila_smax_aw_fsm_state[1] [1]),
        .I1(ila_smax_aw_sum[3]),
        .O(\sum_reg[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sum_reg[4]_i_1 
       (.I0(\ila_smax_aw_fsm_state[1] [1]),
        .I1(ila_smax_aw_sum[4]),
        .O(\sum_reg[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sum_reg[5]_i_1 
       (.I0(\ila_smax_aw_fsm_state[1] [1]),
        .I1(ila_smax_aw_sum[5]),
        .O(\sum_reg[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sum_reg[6]_i_1 
       (.I0(\ila_smax_aw_fsm_state[1] [1]),
        .I1(ila_smax_aw_sum[6]),
        .O(\sum_reg[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sum_reg[7]_i_1 
       (.I0(\ila_smax_aw_fsm_state[1] [1]),
        .I1(ila_smax_aw_sum[7]),
        .O(\sum_reg[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sum_reg[8]_i_1 
       (.I0(\ila_smax_aw_fsm_state[1] [1]),
        .I1(ila_smax_aw_sum[8]),
        .O(\sum_reg[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sum_reg[9]_i_1 
       (.I0(\ila_smax_aw_fsm_state[1] [1]),
        .I1(ila_smax_aw_sum[9]),
        .O(\sum_reg[9]_i_1_n_0 ));
  FDCE \sum_reg_reg[0] 
       (.C(m00_axi_aclk),
        .CE(summing_complete_i_1_n_0),
        .CLR(m00_axi_aresetn_0),
        .D(\sum_reg[0]_i_1_n_0 ),
        .Q(ila_smax_aw_sum_reg[0]));
  FDCE \sum_reg_reg[10] 
       (.C(m00_axi_aclk),
        .CE(summing_complete_i_1_n_0),
        .CLR(m00_axi_aresetn_0),
        .D(\sum_reg[10]_i_1_n_0 ),
        .Q(ila_smax_aw_sum_reg[10]));
  FDCE \sum_reg_reg[11] 
       (.C(m00_axi_aclk),
        .CE(summing_complete_i_1_n_0),
        .CLR(m00_axi_aresetn_0),
        .D(\sum_reg[11]_i_1_n_0 ),
        .Q(ila_smax_aw_sum_reg[11]));
  FDCE \sum_reg_reg[12] 
       (.C(m00_axi_aclk),
        .CE(summing_complete_i_1_n_0),
        .CLR(m00_axi_aresetn_0),
        .D(\sum_reg[12]_i_1_n_0 ),
        .Q(ila_smax_aw_sum_reg[12]));
  FDCE \sum_reg_reg[13] 
       (.C(m00_axi_aclk),
        .CE(summing_complete_i_1_n_0),
        .CLR(m00_axi_aresetn_0),
        .D(\sum_reg[13]_i_1_n_0 ),
        .Q(ila_smax_aw_sum_reg[13]));
  FDCE \sum_reg_reg[14] 
       (.C(m00_axi_aclk),
        .CE(summing_complete_i_1_n_0),
        .CLR(m00_axi_aresetn_0),
        .D(\sum_reg[14]_i_1_n_0 ),
        .Q(ila_smax_aw_sum_reg[14]));
  FDCE \sum_reg_reg[15] 
       (.C(m00_axi_aclk),
        .CE(summing_complete_i_1_n_0),
        .CLR(m00_axi_aresetn_0),
        .D(\sum_reg[15]_i_1_n_0 ),
        .Q(ila_smax_aw_sum_reg[15]));
  FDCE \sum_reg_reg[16] 
       (.C(m00_axi_aclk),
        .CE(summing_complete_i_1_n_0),
        .CLR(m00_axi_aresetn_0),
        .D(\sum_reg[16]_i_1_n_0 ),
        .Q(ila_smax_aw_sum_reg[16]));
  FDCE \sum_reg_reg[17] 
       (.C(m00_axi_aclk),
        .CE(summing_complete_i_1_n_0),
        .CLR(m00_axi_aresetn_0),
        .D(\sum_reg[17]_i_1_n_0 ),
        .Q(ila_smax_aw_sum_reg[17]));
  FDCE \sum_reg_reg[18] 
       (.C(m00_axi_aclk),
        .CE(summing_complete_i_1_n_0),
        .CLR(m00_axi_aresetn_0),
        .D(\sum_reg[18]_i_1_n_0 ),
        .Q(ila_smax_aw_sum_reg[18]));
  FDCE \sum_reg_reg[19] 
       (.C(m00_axi_aclk),
        .CE(summing_complete_i_1_n_0),
        .CLR(m00_axi_aresetn_0),
        .D(\sum_reg[19]_i_1_n_0 ),
        .Q(ila_smax_aw_sum_reg[19]));
  FDCE \sum_reg_reg[1] 
       (.C(m00_axi_aclk),
        .CE(summing_complete_i_1_n_0),
        .CLR(m00_axi_aresetn_0),
        .D(\sum_reg[1]_i_1_n_0 ),
        .Q(ila_smax_aw_sum_reg[1]));
  FDCE \sum_reg_reg[20] 
       (.C(m00_axi_aclk),
        .CE(summing_complete_i_1_n_0),
        .CLR(m00_axi_aresetn_0),
        .D(\sum_reg[20]_i_1_n_0 ),
        .Q(ila_smax_aw_sum_reg[20]));
  FDCE \sum_reg_reg[21] 
       (.C(m00_axi_aclk),
        .CE(summing_complete_i_1_n_0),
        .CLR(m00_axi_aresetn_0),
        .D(\sum_reg[21]_i_1_n_0 ),
        .Q(ila_smax_aw_sum_reg[21]));
  FDCE \sum_reg_reg[22] 
       (.C(m00_axi_aclk),
        .CE(summing_complete_i_1_n_0),
        .CLR(m00_axi_aresetn_0),
        .D(\sum_reg[22]_i_1_n_0 ),
        .Q(ila_smax_aw_sum_reg[22]));
  FDCE \sum_reg_reg[23] 
       (.C(m00_axi_aclk),
        .CE(summing_complete_i_1_n_0),
        .CLR(m00_axi_aresetn_0),
        .D(\sum_reg[23]_i_1_n_0 ),
        .Q(ila_smax_aw_sum_reg[23]));
  FDCE \sum_reg_reg[24] 
       (.C(m00_axi_aclk),
        .CE(summing_complete_i_1_n_0),
        .CLR(m00_axi_aresetn_0),
        .D(\sum_reg[24]_i_1_n_0 ),
        .Q(ila_smax_aw_sum_reg[24]));
  FDCE \sum_reg_reg[25] 
       (.C(m00_axi_aclk),
        .CE(summing_complete_i_1_n_0),
        .CLR(m00_axi_aresetn_0),
        .D(\sum_reg[25]_i_1_n_0 ),
        .Q(ila_smax_aw_sum_reg[25]));
  FDCE \sum_reg_reg[26] 
       (.C(m00_axi_aclk),
        .CE(summing_complete_i_1_n_0),
        .CLR(m00_axi_aresetn_0),
        .D(\sum_reg[26]_i_1_n_0 ),
        .Q(ila_smax_aw_sum_reg[26]));
  FDCE \sum_reg_reg[27] 
       (.C(m00_axi_aclk),
        .CE(summing_complete_i_1_n_0),
        .CLR(m00_axi_aresetn_0),
        .D(\sum_reg[27]_i_1_n_0 ),
        .Q(ila_smax_aw_sum_reg[27]));
  FDCE \sum_reg_reg[28] 
       (.C(m00_axi_aclk),
        .CE(summing_complete_i_1_n_0),
        .CLR(m00_axi_aresetn_0),
        .D(\sum_reg[28]_i_1_n_0 ),
        .Q(ila_smax_aw_sum_reg[28]));
  FDCE \sum_reg_reg[29] 
       (.C(m00_axi_aclk),
        .CE(summing_complete_i_1_n_0),
        .CLR(m00_axi_aresetn_0),
        .D(\sum_reg[29]_i_1_n_0 ),
        .Q(ila_smax_aw_sum_reg[29]));
  FDCE \sum_reg_reg[2] 
       (.C(m00_axi_aclk),
        .CE(summing_complete_i_1_n_0),
        .CLR(m00_axi_aresetn_0),
        .D(\sum_reg[2]_i_1_n_0 ),
        .Q(ila_smax_aw_sum_reg[2]));
  FDCE \sum_reg_reg[30] 
       (.C(m00_axi_aclk),
        .CE(summing_complete_i_1_n_0),
        .CLR(m00_axi_aresetn_0),
        .D(\sum_reg[30]_i_1_n_0 ),
        .Q(ila_smax_aw_sum_reg[30]));
  FDCE \sum_reg_reg[31] 
       (.C(m00_axi_aclk),
        .CE(summing_complete_i_1_n_0),
        .CLR(m00_axi_aresetn_0),
        .D(\sum_reg[31]_i_1_n_0 ),
        .Q(ila_smax_aw_sum_reg[31]));
  FDCE \sum_reg_reg[3] 
       (.C(m00_axi_aclk),
        .CE(summing_complete_i_1_n_0),
        .CLR(m00_axi_aresetn_0),
        .D(\sum_reg[3]_i_1_n_0 ),
        .Q(ila_smax_aw_sum_reg[3]));
  FDCE \sum_reg_reg[4] 
       (.C(m00_axi_aclk),
        .CE(summing_complete_i_1_n_0),
        .CLR(m00_axi_aresetn_0),
        .D(\sum_reg[4]_i_1_n_0 ),
        .Q(ila_smax_aw_sum_reg[4]));
  FDCE \sum_reg_reg[5] 
       (.C(m00_axi_aclk),
        .CE(summing_complete_i_1_n_0),
        .CLR(m00_axi_aresetn_0),
        .D(\sum_reg[5]_i_1_n_0 ),
        .Q(ila_smax_aw_sum_reg[5]));
  FDCE \sum_reg_reg[6] 
       (.C(m00_axi_aclk),
        .CE(summing_complete_i_1_n_0),
        .CLR(m00_axi_aresetn_0),
        .D(\sum_reg[6]_i_1_n_0 ),
        .Q(ila_smax_aw_sum_reg[6]));
  FDCE \sum_reg_reg[7] 
       (.C(m00_axi_aclk),
        .CE(summing_complete_i_1_n_0),
        .CLR(m00_axi_aresetn_0),
        .D(\sum_reg[7]_i_1_n_0 ),
        .Q(ila_smax_aw_sum_reg[7]));
  FDCE \sum_reg_reg[8] 
       (.C(m00_axi_aclk),
        .CE(summing_complete_i_1_n_0),
        .CLR(m00_axi_aresetn_0),
        .D(\sum_reg[8]_i_1_n_0 ),
        .Q(ila_smax_aw_sum_reg[8]));
  FDCE \sum_reg_reg[9] 
       (.C(m00_axi_aclk),
        .CE(summing_complete_i_1_n_0),
        .CLR(m00_axi_aresetn_0),
        .D(\sum_reg[9]_i_1_n_0 ),
        .Q(ila_smax_aw_sum_reg[9]));
  LUT3 #(
    .INIT(8'h0D)) 
    summing_complete_i_1
       (.I0(\ila_smax_aw_fsm_state[1] [1]),
        .I1(Q[3]),
        .I2(\ila_smax_aw_fsm_state[1] [0]),
        .O(summing_complete_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    summing_complete_i_2
       (.I0(\ila_smax_aw_fsm_state[1] [1]),
        .I1(sel),
        .O(summing_complete_i_2_n_0));
  FDCE summing_complete_reg
       (.C(m00_axi_aclk),
        .CE(summing_complete_i_1_n_0),
        .CLR(m00_axi_aresetn),
        .D(summing_complete_i_2_n_0),
        .Q(ila_smax_aw_summing_complete));
endmodule

(* ORIG_REF_NAME = "softmax_controller" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_softmax_controller
   (ila_smax_outbuff_wr_en,
    ila_smax_ctrlr_exp_input_valid,
    out,
    \epoch_reg[63] ,
    ila_smax_ctrlr_fsm_state,
    \ila_smax_ctrlr_element_counter[15] ,
    \element_counter_reg[15]_0 ,
    ila_smax_exp_mux_data,
    \current_state_reg[0] ,
    start_reg,
    ila_smax_ctrlr_controller_ready,
    ila_smax_inbuff_rd_en,
    ila_smax_ctrlr_busy,
    ila_smax_ctrlr_exp_fifo_select,
    ila_smax_ctrlr_clear_all,
    D,
    ila_smax_ctrlr_exp_input,
    next_state0,
    \current_state_reg[0]_0 ,
    ila_smax_outbuff_din,
    outbuff_din1,
    m00_axi_aclk,
    m00_axi_aresetn_0,
    DI,
    \num_elements_reg[15] ,
    empty,
    \FSM_sequential_current_state_reg[2]_0 ,
    \FSM_sequential_current_state_reg[1]_0 ,
    \FSM_sequential_current_state_reg[2]_1 ,
    \cycle_reg[62] ,
    m00_axi_aresetn,
    dout,
    ila_smax_exp_fifo_data,
    division_complete_reg,
    \num_elements_reg[15]_0 ,
    next_state1,
    \start_reg_reg[1] ,
    start,
    ila_smax_inbuff_dout,
    ila_smax_data_loaded,
    summing_complete_reg,
    start_reg_0,
    ila_smax_exp_exp_done,
    \FSM_sequential_current_state_reg[0]_0 ,
    \step_counter_reg[4] ,
    Q,
    m00_axi_aresetn_1,
    m00_axi_aresetn_2,
    \division_reg_reg[31] );
  output ila_smax_outbuff_wr_en;
  output ila_smax_ctrlr_exp_input_valid;
  output [1:0]out;
  output \epoch_reg[63] ;
  output [2:0]ila_smax_ctrlr_fsm_state;
  output [15:0]\ila_smax_ctrlr_element_counter[15] ;
  output \element_counter_reg[15]_0 ;
  output [31:0]ila_smax_exp_mux_data;
  output \current_state_reg[0] ;
  output start_reg;
  output ila_smax_ctrlr_controller_ready;
  output ila_smax_inbuff_rd_en;
  output ila_smax_ctrlr_busy;
  output ila_smax_ctrlr_exp_fifo_select;
  output ila_smax_ctrlr_clear_all;
  output [31:0]D;
  output [31:0]ila_smax_ctrlr_exp_input;
  output next_state0;
  output \current_state_reg[0]_0 ;
  output [31:0]ila_smax_outbuff_din;
  input outbuff_din1;
  input m00_axi_aclk;
  input m00_axi_aresetn_0;
  input [3:0]DI;
  input [3:0]\num_elements_reg[15] ;
  input empty;
  input \FSM_sequential_current_state_reg[2]_0 ;
  input \FSM_sequential_current_state_reg[1]_0 ;
  input [1:0]\FSM_sequential_current_state_reg[2]_1 ;
  input [0:0]\cycle_reg[62] ;
  input m00_axi_aresetn;
  input [31:0]dout;
  input [31:0]ila_smax_exp_fifo_data;
  input division_complete_reg;
  input [15:0]\num_elements_reg[15]_0 ;
  input next_state1;
  input [1:0]\start_reg_reg[1] ;
  input start;
  input [31:0]ila_smax_inbuff_dout;
  input ila_smax_data_loaded;
  input summing_complete_reg;
  input start_reg_0;
  input ila_smax_exp_exp_done;
  input [0:0]\FSM_sequential_current_state_reg[0]_0 ;
  input \step_counter_reg[4] ;
  input [0:0]Q;
  input m00_axi_aresetn_1;
  input m00_axi_aresetn_2;
  input [31:0]\division_reg_reg[31] ;

  wire [31:0]D;
  wire [3:0]DI;
  wire \FSM_sequential_current_state[0]_i_1__0_n_0 ;
  wire \FSM_sequential_current_state[0]_i_2__0_n_0 ;
  wire \FSM_sequential_current_state[1]_i_1__0_n_0 ;
  wire \FSM_sequential_current_state[1]_i_2_n_0 ;
  wire \FSM_sequential_current_state[2]_i_1__0_n_0 ;
  wire [0:0]\FSM_sequential_current_state_reg[0]_0 ;
  wire \FSM_sequential_current_state_reg[1]_0 ;
  wire \FSM_sequential_current_state_reg[2]_0 ;
  wire [1:0]\FSM_sequential_current_state_reg[2]_1 ;
  wire [0:0]Q;
  (* RTL_KEEP = "yes" *) wire [2:2]current_state;
  wire \current_state[0]_i_3_n_0 ;
  wire \current_state_reg[0] ;
  wire \current_state_reg[0]_0 ;
  wire [0:0]\cycle_reg[62] ;
  wire division_complete_reg;
  wire [31:0]\division_reg_reg[31] ;
  wire [31:0]dout;
  wire [15:0]element_counter;
  wire \element_counter[12]_i_3_n_0 ;
  wire \element_counter[12]_i_4_n_0 ;
  wire \element_counter[12]_i_5_n_0 ;
  wire \element_counter[12]_i_6_n_0 ;
  wire \element_counter[15]_i_1_n_0 ;
  wire \element_counter[15]_i_4_n_0 ;
  wire \element_counter[15]_i_5_n_0 ;
  wire \element_counter[15]_i_6_n_0 ;
  wire \element_counter[4]_i_3_n_0 ;
  wire \element_counter[4]_i_4_n_0 ;
  wire \element_counter[4]_i_5_n_0 ;
  wire \element_counter[4]_i_6_n_0 ;
  wire \element_counter[8]_i_3_n_0 ;
  wire \element_counter[8]_i_4_n_0 ;
  wire \element_counter[8]_i_5_n_0 ;
  wire \element_counter[8]_i_6_n_0 ;
  wire \element_counter_reg[12]_i_2_n_0 ;
  wire \element_counter_reg[12]_i_2_n_1 ;
  wire \element_counter_reg[12]_i_2_n_2 ;
  wire \element_counter_reg[12]_i_2_n_3 ;
  wire \element_counter_reg[12]_i_2_n_4 ;
  wire \element_counter_reg[12]_i_2_n_5 ;
  wire \element_counter_reg[12]_i_2_n_6 ;
  wire \element_counter_reg[12]_i_2_n_7 ;
  wire \element_counter_reg[15]_0 ;
  wire \element_counter_reg[15]_i_3_n_2 ;
  wire \element_counter_reg[15]_i_3_n_3 ;
  wire \element_counter_reg[15]_i_3_n_5 ;
  wire \element_counter_reg[15]_i_3_n_6 ;
  wire \element_counter_reg[15]_i_3_n_7 ;
  wire \element_counter_reg[4]_i_2_n_0 ;
  wire \element_counter_reg[4]_i_2_n_1 ;
  wire \element_counter_reg[4]_i_2_n_2 ;
  wire \element_counter_reg[4]_i_2_n_3 ;
  wire \element_counter_reg[4]_i_2_n_4 ;
  wire \element_counter_reg[4]_i_2_n_5 ;
  wire \element_counter_reg[4]_i_2_n_6 ;
  wire \element_counter_reg[4]_i_2_n_7 ;
  wire \element_counter_reg[8]_i_2_n_0 ;
  wire \element_counter_reg[8]_i_2_n_1 ;
  wire \element_counter_reg[8]_i_2_n_2 ;
  wire \element_counter_reg[8]_i_2_n_3 ;
  wire \element_counter_reg[8]_i_2_n_4 ;
  wire \element_counter_reg[8]_i_2_n_5 ;
  wire \element_counter_reg[8]_i_2_n_6 ;
  wire \element_counter_reg[8]_i_2_n_7 ;
  wire empty;
  wire \epoch_reg[63] ;
  wire [31:0]exp_input;
  wire \exp_input[31]_i_1_n_0 ;
  wire exp_input_valid_i_1_n_0;
  wire i__carry__0_i_5_n_0;
  wire i__carry__0_i_6_n_0;
  wire i__carry__0_i_7_n_0;
  wire i__carry__0_i_8_n_0;
  wire i__carry_i_5_n_0;
  wire i__carry_i_6_n_0;
  wire i__carry_i_7_n_0;
  wire i__carry_i_8_n_0;
  wire ila_smax_ctrlr_busy;
  wire ila_smax_ctrlr_clear_all;
  wire ila_smax_ctrlr_controller_ready;
  wire [15:0]\ila_smax_ctrlr_element_counter[15] ;
  wire ila_smax_ctrlr_exp_fifo_select;
  wire [31:0]ila_smax_ctrlr_exp_input;
  wire ila_smax_ctrlr_exp_input_valid;
  wire [2:0]ila_smax_ctrlr_fsm_state;
  wire ila_smax_data_loaded;
  wire ila_smax_exp_exp_done;
  wire [31:0]ila_smax_exp_fifo_data;
  wire [31:0]ila_smax_exp_mux_data;
  wire [31:0]ila_smax_inbuff_dout;
  wire ila_smax_inbuff_rd_en;
  wire [31:0]ila_smax_outbuff_din;
  wire ila_smax_outbuff_wr_en;
  wire m00_axi_aclk;
  wire m00_axi_aresetn;
  wire m00_axi_aresetn_0;
  wire m00_axi_aresetn_1;
  wire m00_axi_aresetn_2;
  wire next_state0;
  wire next_state1;
  wire \next_state1_inferred__1/i__carry__0_n_0 ;
  wire \next_state1_inferred__1/i__carry__0_n_1 ;
  wire \next_state1_inferred__1/i__carry__0_n_2 ;
  wire \next_state1_inferred__1/i__carry__0_n_3 ;
  wire \next_state1_inferred__1/i__carry_n_0 ;
  wire \next_state1_inferred__1/i__carry_n_1 ;
  wire \next_state1_inferred__1/i__carry_n_2 ;
  wire \next_state1_inferred__1/i__carry_n_3 ;
  wire [3:0]\num_elements_reg[15] ;
  wire [15:0]\num_elements_reg[15]_0 ;
  (* RTL_KEEP = "yes" *) wire [1:0]out;
  wire outbuff_din;
  wire outbuff_din1;
  wire start;
  wire start_reg;
  wire start_reg_0;
  wire [1:0]\start_reg_reg[1] ;
  wire \step_counter_reg[4] ;
  wire summing_complete_reg;
  wire [3:2]\NLW_element_counter_reg[15]_i_3_CO_UNCONNECTED ;
  wire [3:3]\NLW_element_counter_reg[15]_i_3_O_UNCONNECTED ;
  wire [3:0]\NLW_next_state1_inferred__1/i__carry_O_UNCONNECTED ;
  wire [3:0]\NLW_next_state1_inferred__1/i__carry__0_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hBFFF0000)) 
    \FSM_sequential_current_state[0]_i_1__0 
       (.I0(out[1]),
        .I1(next_state1),
        .I2(out[0]),
        .I3(\next_state1_inferred__1/i__carry__0_n_0 ),
        .I4(\FSM_sequential_current_state[0]_i_2__0_n_0 ),
        .O(\FSM_sequential_current_state[0]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h02FF0200)) 
    \FSM_sequential_current_state[0]_i_2__0 
       (.I0(division_complete_reg),
        .I1(out[1]),
        .I2(out[0]),
        .I3(current_state),
        .I4(start_reg_0),
        .O(\FSM_sequential_current_state[0]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'h000000F8)) 
    \FSM_sequential_current_state[1]_i_1__0 
       (.I0(out[0]),
        .I1(next_state1),
        .I2(out[1]),
        .I3(current_state),
        .I4(\FSM_sequential_current_state[1]_i_2_n_0 ),
        .O(\FSM_sequential_current_state[1]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h8888F000)) 
    \FSM_sequential_current_state[1]_i_2 
       (.I0(out[1]),
        .I1(summing_complete_reg),
        .I2(ila_smax_exp_exp_done),
        .I3(\next_state1_inferred__1/i__carry__0_n_0 ),
        .I4(out[0]),
        .O(\FSM_sequential_current_state[1]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h4202)) 
    \FSM_sequential_current_state[2]_i_1__0 
       (.I0(current_state),
        .I1(out[1]),
        .I2(out[0]),
        .I3(summing_complete_reg),
        .O(\FSM_sequential_current_state[2]_i_1__0_n_0 ));
  (* KEEP = "yes" *) 
  FDCE \FSM_sequential_current_state_reg[0] 
       (.C(m00_axi_aclk),
        .CE(1'b1),
        .CLR(m00_axi_aresetn_1),
        .D(\FSM_sequential_current_state[0]_i_1__0_n_0 ),
        .Q(out[0]));
  (* KEEP = "yes" *) 
  FDCE \FSM_sequential_current_state_reg[1] 
       (.C(m00_axi_aclk),
        .CE(1'b1),
        .CLR(m00_axi_aresetn_1),
        .D(\FSM_sequential_current_state[1]_i_1__0_n_0 ),
        .Q(out[1]));
  (* KEEP = "yes" *) 
  FDCE \FSM_sequential_current_state_reg[2] 
       (.C(m00_axi_aclk),
        .CE(1'b1),
        .CLR(m00_axi_aresetn_1),
        .D(\FSM_sequential_current_state[2]_i_1__0_n_0 ),
        .Q(current_state));
  LUT6 #(
    .INIT(64'h8888888888B8B8B8)) 
    \current_state[0]_i_2 
       (.I0(\step_counter_reg[4] ),
        .I1(Q),
        .I2(ila_smax_ctrlr_exp_input_valid),
        .I3(out[0]),
        .I4(\current_state[0]_i_3_n_0 ),
        .I5(current_state),
        .O(\current_state_reg[0]_0 ));
  LUT4 #(
    .INIT(16'h0800)) 
    \current_state[0]_i_2__0 
       (.I0(current_state),
        .I1(out[0]),
        .I2(out[1]),
        .I3(division_complete_reg),
        .O(\current_state_reg[0] ));
  LUT6 #(
    .INIT(64'hEFEFEFEFAFEFEFEF)) 
    \current_state[0]_i_3 
       (.I0(out[1]),
        .I1(empty),
        .I2(\FSM_sequential_current_state_reg[2]_0 ),
        .I3(\FSM_sequential_current_state_reg[1]_0 ),
        .I4(\FSM_sequential_current_state_reg[2]_1 [1]),
        .I5(\FSM_sequential_current_state_reg[2]_1 [0]),
        .O(\current_state[0]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT3 #(
    .INIT(8'hC8)) 
    \data_reg[0]_i_1 
       (.I0(\FSM_sequential_current_state_reg[0]_0 ),
        .I1(ila_smax_ctrlr_exp_input[0]),
        .I2(next_state0),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT3 #(
    .INIT(8'hC8)) 
    \data_reg[10]_i_1 
       (.I0(\FSM_sequential_current_state_reg[0]_0 ),
        .I1(ila_smax_ctrlr_exp_input[10]),
        .I2(next_state0),
        .O(D[10]));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT3 #(
    .INIT(8'hC8)) 
    \data_reg[11]_i_1 
       (.I0(\FSM_sequential_current_state_reg[0]_0 ),
        .I1(ila_smax_ctrlr_exp_input[11]),
        .I2(next_state0),
        .O(D[11]));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT3 #(
    .INIT(8'hC8)) 
    \data_reg[12]_i_1 
       (.I0(\FSM_sequential_current_state_reg[0]_0 ),
        .I1(ila_smax_ctrlr_exp_input[12]),
        .I2(next_state0),
        .O(D[12]));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT3 #(
    .INIT(8'hC8)) 
    \data_reg[13]_i_1 
       (.I0(\FSM_sequential_current_state_reg[0]_0 ),
        .I1(ila_smax_ctrlr_exp_input[13]),
        .I2(next_state0),
        .O(D[13]));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT3 #(
    .INIT(8'hC8)) 
    \data_reg[14]_i_1 
       (.I0(\FSM_sequential_current_state_reg[0]_0 ),
        .I1(ila_smax_ctrlr_exp_input[14]),
        .I2(next_state0),
        .O(D[14]));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT3 #(
    .INIT(8'hC8)) 
    \data_reg[15]_i_1 
       (.I0(\FSM_sequential_current_state_reg[0]_0 ),
        .I1(ila_smax_ctrlr_exp_input[15]),
        .I2(next_state0),
        .O(D[15]));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT3 #(
    .INIT(8'hC8)) 
    \data_reg[16]_i_1 
       (.I0(\FSM_sequential_current_state_reg[0]_0 ),
        .I1(ila_smax_ctrlr_exp_input[16]),
        .I2(next_state0),
        .O(D[16]));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT3 #(
    .INIT(8'hC8)) 
    \data_reg[17]_i_1 
       (.I0(\FSM_sequential_current_state_reg[0]_0 ),
        .I1(ila_smax_ctrlr_exp_input[17]),
        .I2(next_state0),
        .O(D[17]));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT3 #(
    .INIT(8'hC8)) 
    \data_reg[18]_i_1 
       (.I0(\FSM_sequential_current_state_reg[0]_0 ),
        .I1(ila_smax_ctrlr_exp_input[18]),
        .I2(next_state0),
        .O(D[18]));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT3 #(
    .INIT(8'hC8)) 
    \data_reg[19]_i_1 
       (.I0(\FSM_sequential_current_state_reg[0]_0 ),
        .I1(ila_smax_ctrlr_exp_input[19]),
        .I2(next_state0),
        .O(D[19]));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT3 #(
    .INIT(8'hC8)) 
    \data_reg[1]_i_1 
       (.I0(\FSM_sequential_current_state_reg[0]_0 ),
        .I1(ila_smax_ctrlr_exp_input[1]),
        .I2(next_state0),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT3 #(
    .INIT(8'hC8)) 
    \data_reg[20]_i_1 
       (.I0(\FSM_sequential_current_state_reg[0]_0 ),
        .I1(ila_smax_ctrlr_exp_input[20]),
        .I2(next_state0),
        .O(D[20]));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT3 #(
    .INIT(8'hC8)) 
    \data_reg[21]_i_1 
       (.I0(\FSM_sequential_current_state_reg[0]_0 ),
        .I1(ila_smax_ctrlr_exp_input[21]),
        .I2(next_state0),
        .O(D[21]));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT3 #(
    .INIT(8'hC8)) 
    \data_reg[22]_i_1 
       (.I0(\FSM_sequential_current_state_reg[0]_0 ),
        .I1(ila_smax_ctrlr_exp_input[22]),
        .I2(next_state0),
        .O(D[22]));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT3 #(
    .INIT(8'hC8)) 
    \data_reg[23]_i_1 
       (.I0(\FSM_sequential_current_state_reg[0]_0 ),
        .I1(ila_smax_ctrlr_exp_input[23]),
        .I2(next_state0),
        .O(D[23]));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT3 #(
    .INIT(8'hC8)) 
    \data_reg[24]_i_1 
       (.I0(\FSM_sequential_current_state_reg[0]_0 ),
        .I1(ila_smax_ctrlr_exp_input[24]),
        .I2(next_state0),
        .O(D[24]));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT3 #(
    .INIT(8'hC8)) 
    \data_reg[25]_i_1 
       (.I0(\FSM_sequential_current_state_reg[0]_0 ),
        .I1(ila_smax_ctrlr_exp_input[25]),
        .I2(next_state0),
        .O(D[25]));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT3 #(
    .INIT(8'hC8)) 
    \data_reg[26]_i_1 
       (.I0(\FSM_sequential_current_state_reg[0]_0 ),
        .I1(ila_smax_ctrlr_exp_input[26]),
        .I2(next_state0),
        .O(D[26]));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT3 #(
    .INIT(8'hC8)) 
    \data_reg[27]_i_1 
       (.I0(\FSM_sequential_current_state_reg[0]_0 ),
        .I1(ila_smax_ctrlr_exp_input[27]),
        .I2(next_state0),
        .O(D[27]));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT3 #(
    .INIT(8'hC8)) 
    \data_reg[28]_i_1 
       (.I0(\FSM_sequential_current_state_reg[0]_0 ),
        .I1(ila_smax_ctrlr_exp_input[28]),
        .I2(next_state0),
        .O(D[28]));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT3 #(
    .INIT(8'hC8)) 
    \data_reg[29]_i_1 
       (.I0(\FSM_sequential_current_state_reg[0]_0 ),
        .I1(ila_smax_ctrlr_exp_input[29]),
        .I2(next_state0),
        .O(D[29]));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT3 #(
    .INIT(8'hC8)) 
    \data_reg[2]_i_1 
       (.I0(\FSM_sequential_current_state_reg[0]_0 ),
        .I1(ila_smax_ctrlr_exp_input[2]),
        .I2(next_state0),
        .O(D[2]));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT3 #(
    .INIT(8'hC8)) 
    \data_reg[30]_i_1 
       (.I0(\FSM_sequential_current_state_reg[0]_0 ),
        .I1(ila_smax_ctrlr_exp_input[30]),
        .I2(next_state0),
        .O(D[30]));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT3 #(
    .INIT(8'hC8)) 
    \data_reg[31]_i_2 
       (.I0(\FSM_sequential_current_state_reg[0]_0 ),
        .I1(ila_smax_ctrlr_exp_input[31]),
        .I2(next_state0),
        .O(D[31]));
  LUT5 #(
    .INIT(32'h000022A2)) 
    \data_reg[31]_i_3 
       (.I0(ila_smax_ctrlr_exp_input_valid),
        .I1(out[0]),
        .I2(next_state1),
        .I3(out[1]),
        .I4(current_state),
        .O(next_state0));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT3 #(
    .INIT(8'hC8)) 
    \data_reg[3]_i_1 
       (.I0(\FSM_sequential_current_state_reg[0]_0 ),
        .I1(ila_smax_ctrlr_exp_input[3]),
        .I2(next_state0),
        .O(D[3]));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT3 #(
    .INIT(8'hC8)) 
    \data_reg[4]_i_1 
       (.I0(\FSM_sequential_current_state_reg[0]_0 ),
        .I1(ila_smax_ctrlr_exp_input[4]),
        .I2(next_state0),
        .O(D[4]));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT3 #(
    .INIT(8'hC8)) 
    \data_reg[5]_i_1 
       (.I0(\FSM_sequential_current_state_reg[0]_0 ),
        .I1(ila_smax_ctrlr_exp_input[5]),
        .I2(next_state0),
        .O(D[5]));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT3 #(
    .INIT(8'hC8)) 
    \data_reg[6]_i_1 
       (.I0(\FSM_sequential_current_state_reg[0]_0 ),
        .I1(ila_smax_ctrlr_exp_input[6]),
        .I2(next_state0),
        .O(D[6]));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT3 #(
    .INIT(8'hC8)) 
    \data_reg[7]_i_1 
       (.I0(\FSM_sequential_current_state_reg[0]_0 ),
        .I1(ila_smax_ctrlr_exp_input[7]),
        .I2(next_state0),
        .O(D[7]));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT3 #(
    .INIT(8'hC8)) 
    \data_reg[8]_i_1 
       (.I0(\FSM_sequential_current_state_reg[0]_0 ),
        .I1(ila_smax_ctrlr_exp_input[8]),
        .I2(next_state0),
        .O(D[8]));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT3 #(
    .INIT(8'hC8)) 
    \data_reg[9]_i_1 
       (.I0(\FSM_sequential_current_state_reg[0]_0 ),
        .I1(ila_smax_ctrlr_exp_input[9]),
        .I2(next_state0),
        .O(D[9]));
  LUT4 #(
    .INIT(16'h0020)) 
    \element_counter[0]_i_1 
       (.I0(\next_state1_inferred__1/i__carry__0_n_0 ),
        .I1(\ila_smax_ctrlr_element_counter[15] [0]),
        .I2(out[0]),
        .I3(current_state),
        .O(element_counter[0]));
  LUT4 #(
    .INIT(16'h0080)) 
    \element_counter[10]_i_1 
       (.I0(\next_state1_inferred__1/i__carry__0_n_0 ),
        .I1(\element_counter_reg[12]_i_2_n_6 ),
        .I2(out[0]),
        .I3(current_state),
        .O(element_counter[10]));
  LUT4 #(
    .INIT(16'h0080)) 
    \element_counter[11]_i_1 
       (.I0(\next_state1_inferred__1/i__carry__0_n_0 ),
        .I1(\element_counter_reg[12]_i_2_n_5 ),
        .I2(out[0]),
        .I3(current_state),
        .O(element_counter[11]));
  LUT4 #(
    .INIT(16'h0080)) 
    \element_counter[12]_i_1 
       (.I0(\next_state1_inferred__1/i__carry__0_n_0 ),
        .I1(\element_counter_reg[12]_i_2_n_4 ),
        .I2(out[0]),
        .I3(current_state),
        .O(element_counter[12]));
  LUT1 #(
    .INIT(2'h2)) 
    \element_counter[12]_i_3 
       (.I0(\ila_smax_ctrlr_element_counter[15] [12]),
        .O(\element_counter[12]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \element_counter[12]_i_4 
       (.I0(\ila_smax_ctrlr_element_counter[15] [11]),
        .O(\element_counter[12]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \element_counter[12]_i_5 
       (.I0(\ila_smax_ctrlr_element_counter[15] [10]),
        .O(\element_counter[12]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \element_counter[12]_i_6 
       (.I0(\ila_smax_ctrlr_element_counter[15] [9]),
        .O(\element_counter[12]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h0080)) 
    \element_counter[13]_i_1 
       (.I0(\next_state1_inferred__1/i__carry__0_n_0 ),
        .I1(\element_counter_reg[15]_i_3_n_7 ),
        .I2(out[0]),
        .I3(current_state),
        .O(element_counter[13]));
  LUT4 #(
    .INIT(16'h0080)) 
    \element_counter[14]_i_1 
       (.I0(\next_state1_inferred__1/i__carry__0_n_0 ),
        .I1(\element_counter_reg[15]_i_3_n_6 ),
        .I2(out[0]),
        .I3(current_state),
        .O(element_counter[14]));
  LUT4 #(
    .INIT(16'h000D)) 
    \element_counter[15]_i_1 
       (.I0(out[0]),
        .I1(next_state1),
        .I2(current_state),
        .I3(out[1]),
        .O(\element_counter[15]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0080)) 
    \element_counter[15]_i_2 
       (.I0(\next_state1_inferred__1/i__carry__0_n_0 ),
        .I1(\element_counter_reg[15]_i_3_n_5 ),
        .I2(out[0]),
        .I3(current_state),
        .O(element_counter[15]));
  LUT1 #(
    .INIT(2'h2)) 
    \element_counter[15]_i_4 
       (.I0(\ila_smax_ctrlr_element_counter[15] [15]),
        .O(\element_counter[15]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \element_counter[15]_i_5 
       (.I0(\ila_smax_ctrlr_element_counter[15] [14]),
        .O(\element_counter[15]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \element_counter[15]_i_6 
       (.I0(\ila_smax_ctrlr_element_counter[15] [13]),
        .O(\element_counter[15]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h0080)) 
    \element_counter[1]_i_1 
       (.I0(\next_state1_inferred__1/i__carry__0_n_0 ),
        .I1(\element_counter_reg[4]_i_2_n_7 ),
        .I2(out[0]),
        .I3(current_state),
        .O(element_counter[1]));
  LUT4 #(
    .INIT(16'h0080)) 
    \element_counter[2]_i_1 
       (.I0(\next_state1_inferred__1/i__carry__0_n_0 ),
        .I1(\element_counter_reg[4]_i_2_n_6 ),
        .I2(out[0]),
        .I3(current_state),
        .O(element_counter[2]));
  LUT4 #(
    .INIT(16'h0080)) 
    \element_counter[3]_i_1 
       (.I0(\next_state1_inferred__1/i__carry__0_n_0 ),
        .I1(\element_counter_reg[4]_i_2_n_5 ),
        .I2(out[0]),
        .I3(current_state),
        .O(element_counter[3]));
  LUT4 #(
    .INIT(16'h0080)) 
    \element_counter[4]_i_1 
       (.I0(\next_state1_inferred__1/i__carry__0_n_0 ),
        .I1(\element_counter_reg[4]_i_2_n_4 ),
        .I2(out[0]),
        .I3(current_state),
        .O(element_counter[4]));
  LUT1 #(
    .INIT(2'h2)) 
    \element_counter[4]_i_3 
       (.I0(\ila_smax_ctrlr_element_counter[15] [4]),
        .O(\element_counter[4]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \element_counter[4]_i_4 
       (.I0(\ila_smax_ctrlr_element_counter[15] [3]),
        .O(\element_counter[4]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \element_counter[4]_i_5 
       (.I0(\ila_smax_ctrlr_element_counter[15] [2]),
        .O(\element_counter[4]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \element_counter[4]_i_6 
       (.I0(\ila_smax_ctrlr_element_counter[15] [1]),
        .O(\element_counter[4]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h0080)) 
    \element_counter[5]_i_1 
       (.I0(\next_state1_inferred__1/i__carry__0_n_0 ),
        .I1(\element_counter_reg[8]_i_2_n_7 ),
        .I2(out[0]),
        .I3(current_state),
        .O(element_counter[5]));
  LUT4 #(
    .INIT(16'h0080)) 
    \element_counter[6]_i_1 
       (.I0(\next_state1_inferred__1/i__carry__0_n_0 ),
        .I1(\element_counter_reg[8]_i_2_n_6 ),
        .I2(out[0]),
        .I3(current_state),
        .O(element_counter[6]));
  LUT4 #(
    .INIT(16'h0080)) 
    \element_counter[7]_i_1 
       (.I0(\next_state1_inferred__1/i__carry__0_n_0 ),
        .I1(\element_counter_reg[8]_i_2_n_5 ),
        .I2(out[0]),
        .I3(current_state),
        .O(element_counter[7]));
  LUT4 #(
    .INIT(16'h0080)) 
    \element_counter[8]_i_1 
       (.I0(\next_state1_inferred__1/i__carry__0_n_0 ),
        .I1(\element_counter_reg[8]_i_2_n_4 ),
        .I2(out[0]),
        .I3(current_state),
        .O(element_counter[8]));
  LUT1 #(
    .INIT(2'h2)) 
    \element_counter[8]_i_3 
       (.I0(\ila_smax_ctrlr_element_counter[15] [8]),
        .O(\element_counter[8]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \element_counter[8]_i_4 
       (.I0(\ila_smax_ctrlr_element_counter[15] [7]),
        .O(\element_counter[8]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \element_counter[8]_i_5 
       (.I0(\ila_smax_ctrlr_element_counter[15] [6]),
        .O(\element_counter[8]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \element_counter[8]_i_6 
       (.I0(\ila_smax_ctrlr_element_counter[15] [5]),
        .O(\element_counter[8]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h0080)) 
    \element_counter[9]_i_1 
       (.I0(\next_state1_inferred__1/i__carry__0_n_0 ),
        .I1(\element_counter_reg[12]_i_2_n_7 ),
        .I2(out[0]),
        .I3(current_state),
        .O(element_counter[9]));
  FDCE \element_counter_reg[0] 
       (.C(m00_axi_aclk),
        .CE(\element_counter[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_0),
        .D(element_counter[0]),
        .Q(\ila_smax_ctrlr_element_counter[15] [0]));
  FDCE \element_counter_reg[10] 
       (.C(m00_axi_aclk),
        .CE(\element_counter[15]_i_1_n_0 ),
        .CLR(\element_counter_reg[15]_0 ),
        .D(element_counter[10]),
        .Q(\ila_smax_ctrlr_element_counter[15] [10]));
  FDCE \element_counter_reg[11] 
       (.C(m00_axi_aclk),
        .CE(\element_counter[15]_i_1_n_0 ),
        .CLR(\element_counter_reg[15]_0 ),
        .D(element_counter[11]),
        .Q(\ila_smax_ctrlr_element_counter[15] [11]));
  FDCE \element_counter_reg[12] 
       (.C(m00_axi_aclk),
        .CE(\element_counter[15]_i_1_n_0 ),
        .CLR(\element_counter_reg[15]_0 ),
        .D(element_counter[12]),
        .Q(\ila_smax_ctrlr_element_counter[15] [12]));
  CARRY4 \element_counter_reg[12]_i_2 
       (.CI(\element_counter_reg[8]_i_2_n_0 ),
        .CO({\element_counter_reg[12]_i_2_n_0 ,\element_counter_reg[12]_i_2_n_1 ,\element_counter_reg[12]_i_2_n_2 ,\element_counter_reg[12]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\element_counter_reg[12]_i_2_n_4 ,\element_counter_reg[12]_i_2_n_5 ,\element_counter_reg[12]_i_2_n_6 ,\element_counter_reg[12]_i_2_n_7 }),
        .S({\element_counter[12]_i_3_n_0 ,\element_counter[12]_i_4_n_0 ,\element_counter[12]_i_5_n_0 ,\element_counter[12]_i_6_n_0 }));
  FDCE \element_counter_reg[13] 
       (.C(m00_axi_aclk),
        .CE(\element_counter[15]_i_1_n_0 ),
        .CLR(\element_counter_reg[15]_0 ),
        .D(element_counter[13]),
        .Q(\ila_smax_ctrlr_element_counter[15] [13]));
  FDCE \element_counter_reg[14] 
       (.C(m00_axi_aclk),
        .CE(\element_counter[15]_i_1_n_0 ),
        .CLR(\element_counter_reg[15]_0 ),
        .D(element_counter[14]),
        .Q(\ila_smax_ctrlr_element_counter[15] [14]));
  FDCE \element_counter_reg[15] 
       (.C(m00_axi_aclk),
        .CE(\element_counter[15]_i_1_n_0 ),
        .CLR(\element_counter_reg[15]_0 ),
        .D(element_counter[15]),
        .Q(\ila_smax_ctrlr_element_counter[15] [15]));
  CARRY4 \element_counter_reg[15]_i_3 
       (.CI(\element_counter_reg[12]_i_2_n_0 ),
        .CO({\NLW_element_counter_reg[15]_i_3_CO_UNCONNECTED [3:2],\element_counter_reg[15]_i_3_n_2 ,\element_counter_reg[15]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_element_counter_reg[15]_i_3_O_UNCONNECTED [3],\element_counter_reg[15]_i_3_n_5 ,\element_counter_reg[15]_i_3_n_6 ,\element_counter_reg[15]_i_3_n_7 }),
        .S({1'b0,\element_counter[15]_i_4_n_0 ,\element_counter[15]_i_5_n_0 ,\element_counter[15]_i_6_n_0 }));
  FDCE \element_counter_reg[1] 
       (.C(m00_axi_aclk),
        .CE(\element_counter[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_0),
        .D(element_counter[1]),
        .Q(\ila_smax_ctrlr_element_counter[15] [1]));
  FDCE \element_counter_reg[2] 
       (.C(m00_axi_aclk),
        .CE(\element_counter[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_2),
        .D(element_counter[2]),
        .Q(\ila_smax_ctrlr_element_counter[15] [2]));
  FDCE \element_counter_reg[3] 
       (.C(m00_axi_aclk),
        .CE(\element_counter[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_2),
        .D(element_counter[3]),
        .Q(\ila_smax_ctrlr_element_counter[15] [3]));
  FDCE \element_counter_reg[4] 
       (.C(m00_axi_aclk),
        .CE(\element_counter[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_2),
        .D(element_counter[4]),
        .Q(\ila_smax_ctrlr_element_counter[15] [4]));
  CARRY4 \element_counter_reg[4]_i_2 
       (.CI(1'b0),
        .CO({\element_counter_reg[4]_i_2_n_0 ,\element_counter_reg[4]_i_2_n_1 ,\element_counter_reg[4]_i_2_n_2 ,\element_counter_reg[4]_i_2_n_3 }),
        .CYINIT(\ila_smax_ctrlr_element_counter[15] [0]),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\element_counter_reg[4]_i_2_n_4 ,\element_counter_reg[4]_i_2_n_5 ,\element_counter_reg[4]_i_2_n_6 ,\element_counter_reg[4]_i_2_n_7 }),
        .S({\element_counter[4]_i_3_n_0 ,\element_counter[4]_i_4_n_0 ,\element_counter[4]_i_5_n_0 ,\element_counter[4]_i_6_n_0 }));
  FDCE \element_counter_reg[5] 
       (.C(m00_axi_aclk),
        .CE(\element_counter[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_2),
        .D(element_counter[5]),
        .Q(\ila_smax_ctrlr_element_counter[15] [5]));
  FDCE \element_counter_reg[6] 
       (.C(m00_axi_aclk),
        .CE(\element_counter[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(element_counter[6]),
        .Q(\ila_smax_ctrlr_element_counter[15] [6]));
  FDCE \element_counter_reg[7] 
       (.C(m00_axi_aclk),
        .CE(\element_counter[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(element_counter[7]),
        .Q(\ila_smax_ctrlr_element_counter[15] [7]));
  FDCE \element_counter_reg[8] 
       (.C(m00_axi_aclk),
        .CE(\element_counter[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(element_counter[8]),
        .Q(\ila_smax_ctrlr_element_counter[15] [8]));
  CARRY4 \element_counter_reg[8]_i_2 
       (.CI(\element_counter_reg[4]_i_2_n_0 ),
        .CO({\element_counter_reg[8]_i_2_n_0 ,\element_counter_reg[8]_i_2_n_1 ,\element_counter_reg[8]_i_2_n_2 ,\element_counter_reg[8]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\element_counter_reg[8]_i_2_n_4 ,\element_counter_reg[8]_i_2_n_5 ,\element_counter_reg[8]_i_2_n_6 ,\element_counter_reg[8]_i_2_n_7 }),
        .S({\element_counter[8]_i_3_n_0 ,\element_counter[8]_i_4_n_0 ,\element_counter[8]_i_5_n_0 ,\element_counter[8]_i_6_n_0 }));
  FDCE \element_counter_reg[9] 
       (.C(m00_axi_aclk),
        .CE(\element_counter[15]_i_1_n_0 ),
        .CLR(\element_counter_reg[15]_0 ),
        .D(element_counter[9]),
        .Q(\ila_smax_ctrlr_element_counter[15] [9]));
  LUT4 #(
    .INIT(16'h005E)) 
    \epoch[63]_i_1 
       (.I0(current_state),
        .I1(out[0]),
        .I2(out[1]),
        .I3(\cycle_reg[62] ),
        .O(\epoch_reg[63] ));
  LUT1 #(
    .INIT(2'h1)) 
    \epoch[63]_i_3 
       (.I0(m00_axi_aresetn),
        .O(\element_counter_reg[15]_0 ));
  LUT4 #(
    .INIT(16'h0080)) 
    \exp_input[0]_i_1 
       (.I0(next_state1),
        .I1(ila_smax_inbuff_dout[0]),
        .I2(out[0]),
        .I3(current_state),
        .O(exp_input[0]));
  LUT4 #(
    .INIT(16'h0080)) 
    \exp_input[10]_i_1 
       (.I0(next_state1),
        .I1(ila_smax_inbuff_dout[10]),
        .I2(out[0]),
        .I3(current_state),
        .O(exp_input[10]));
  LUT4 #(
    .INIT(16'h0080)) 
    \exp_input[11]_i_1 
       (.I0(next_state1),
        .I1(ila_smax_inbuff_dout[11]),
        .I2(out[0]),
        .I3(current_state),
        .O(exp_input[11]));
  LUT4 #(
    .INIT(16'h0080)) 
    \exp_input[12]_i_1 
       (.I0(next_state1),
        .I1(ila_smax_inbuff_dout[12]),
        .I2(out[0]),
        .I3(current_state),
        .O(exp_input[12]));
  LUT4 #(
    .INIT(16'h0080)) 
    \exp_input[13]_i_1 
       (.I0(next_state1),
        .I1(ila_smax_inbuff_dout[13]),
        .I2(out[0]),
        .I3(current_state),
        .O(exp_input[13]));
  LUT4 #(
    .INIT(16'h0080)) 
    \exp_input[14]_i_1 
       (.I0(next_state1),
        .I1(ila_smax_inbuff_dout[14]),
        .I2(out[0]),
        .I3(current_state),
        .O(exp_input[14]));
  LUT4 #(
    .INIT(16'h0080)) 
    \exp_input[15]_i_1 
       (.I0(next_state1),
        .I1(ila_smax_inbuff_dout[15]),
        .I2(out[0]),
        .I3(current_state),
        .O(exp_input[15]));
  LUT4 #(
    .INIT(16'h0080)) 
    \exp_input[16]_i_1 
       (.I0(next_state1),
        .I1(ila_smax_inbuff_dout[16]),
        .I2(out[0]),
        .I3(current_state),
        .O(exp_input[16]));
  LUT4 #(
    .INIT(16'h0080)) 
    \exp_input[17]_i_1 
       (.I0(next_state1),
        .I1(ila_smax_inbuff_dout[17]),
        .I2(out[0]),
        .I3(current_state),
        .O(exp_input[17]));
  LUT4 #(
    .INIT(16'h0080)) 
    \exp_input[18]_i_1 
       (.I0(next_state1),
        .I1(ila_smax_inbuff_dout[18]),
        .I2(out[0]),
        .I3(current_state),
        .O(exp_input[18]));
  LUT4 #(
    .INIT(16'h0080)) 
    \exp_input[19]_i_1 
       (.I0(next_state1),
        .I1(ila_smax_inbuff_dout[19]),
        .I2(out[0]),
        .I3(current_state),
        .O(exp_input[19]));
  LUT4 #(
    .INIT(16'h0080)) 
    \exp_input[1]_i_1 
       (.I0(next_state1),
        .I1(ila_smax_inbuff_dout[1]),
        .I2(out[0]),
        .I3(current_state),
        .O(exp_input[1]));
  LUT4 #(
    .INIT(16'h0080)) 
    \exp_input[20]_i_1 
       (.I0(next_state1),
        .I1(ila_smax_inbuff_dout[20]),
        .I2(out[0]),
        .I3(current_state),
        .O(exp_input[20]));
  LUT4 #(
    .INIT(16'h0080)) 
    \exp_input[21]_i_1 
       (.I0(next_state1),
        .I1(ila_smax_inbuff_dout[21]),
        .I2(out[0]),
        .I3(current_state),
        .O(exp_input[21]));
  LUT4 #(
    .INIT(16'h0080)) 
    \exp_input[22]_i_1 
       (.I0(next_state1),
        .I1(ila_smax_inbuff_dout[22]),
        .I2(out[0]),
        .I3(current_state),
        .O(exp_input[22]));
  LUT4 #(
    .INIT(16'h0080)) 
    \exp_input[23]_i_1 
       (.I0(next_state1),
        .I1(ila_smax_inbuff_dout[23]),
        .I2(out[0]),
        .I3(current_state),
        .O(exp_input[23]));
  LUT4 #(
    .INIT(16'h0080)) 
    \exp_input[24]_i_1 
       (.I0(next_state1),
        .I1(ila_smax_inbuff_dout[24]),
        .I2(out[0]),
        .I3(current_state),
        .O(exp_input[24]));
  LUT4 #(
    .INIT(16'h0080)) 
    \exp_input[25]_i_1 
       (.I0(next_state1),
        .I1(ila_smax_inbuff_dout[25]),
        .I2(out[0]),
        .I3(current_state),
        .O(exp_input[25]));
  LUT4 #(
    .INIT(16'h0080)) 
    \exp_input[26]_i_1 
       (.I0(next_state1),
        .I1(ila_smax_inbuff_dout[26]),
        .I2(out[0]),
        .I3(current_state),
        .O(exp_input[26]));
  LUT4 #(
    .INIT(16'h0080)) 
    \exp_input[27]_i_1 
       (.I0(next_state1),
        .I1(ila_smax_inbuff_dout[27]),
        .I2(out[0]),
        .I3(current_state),
        .O(exp_input[27]));
  LUT4 #(
    .INIT(16'h0080)) 
    \exp_input[28]_i_1 
       (.I0(next_state1),
        .I1(ila_smax_inbuff_dout[28]),
        .I2(out[0]),
        .I3(current_state),
        .O(exp_input[28]));
  LUT4 #(
    .INIT(16'h0080)) 
    \exp_input[29]_i_1 
       (.I0(next_state1),
        .I1(ila_smax_inbuff_dout[29]),
        .I2(out[0]),
        .I3(current_state),
        .O(exp_input[29]));
  LUT4 #(
    .INIT(16'h0080)) 
    \exp_input[2]_i_1 
       (.I0(next_state1),
        .I1(ila_smax_inbuff_dout[2]),
        .I2(out[0]),
        .I3(current_state),
        .O(exp_input[2]));
  LUT4 #(
    .INIT(16'h0080)) 
    \exp_input[30]_i_1 
       (.I0(next_state1),
        .I1(ila_smax_inbuff_dout[30]),
        .I2(out[0]),
        .I3(current_state),
        .O(exp_input[30]));
  LUT2 #(
    .INIT(4'h1)) 
    \exp_input[31]_i_1 
       (.I0(out[1]),
        .I1(current_state),
        .O(\exp_input[31]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0080)) 
    \exp_input[31]_i_2 
       (.I0(next_state1),
        .I1(ila_smax_inbuff_dout[31]),
        .I2(out[0]),
        .I3(current_state),
        .O(exp_input[31]));
  LUT4 #(
    .INIT(16'h0080)) 
    \exp_input[3]_i_1 
       (.I0(next_state1),
        .I1(ila_smax_inbuff_dout[3]),
        .I2(out[0]),
        .I3(current_state),
        .O(exp_input[3]));
  LUT4 #(
    .INIT(16'h0080)) 
    \exp_input[4]_i_1 
       (.I0(next_state1),
        .I1(ila_smax_inbuff_dout[4]),
        .I2(out[0]),
        .I3(current_state),
        .O(exp_input[4]));
  LUT4 #(
    .INIT(16'h0080)) 
    \exp_input[5]_i_1 
       (.I0(next_state1),
        .I1(ila_smax_inbuff_dout[5]),
        .I2(out[0]),
        .I3(current_state),
        .O(exp_input[5]));
  LUT4 #(
    .INIT(16'h0080)) 
    \exp_input[6]_i_1 
       (.I0(next_state1),
        .I1(ila_smax_inbuff_dout[6]),
        .I2(out[0]),
        .I3(current_state),
        .O(exp_input[6]));
  LUT4 #(
    .INIT(16'h0080)) 
    \exp_input[7]_i_1 
       (.I0(next_state1),
        .I1(ila_smax_inbuff_dout[7]),
        .I2(out[0]),
        .I3(current_state),
        .O(exp_input[7]));
  LUT4 #(
    .INIT(16'h0080)) 
    \exp_input[8]_i_1 
       (.I0(next_state1),
        .I1(ila_smax_inbuff_dout[8]),
        .I2(out[0]),
        .I3(current_state),
        .O(exp_input[8]));
  LUT4 #(
    .INIT(16'h0080)) 
    \exp_input[9]_i_1 
       (.I0(next_state1),
        .I1(ila_smax_inbuff_dout[9]),
        .I2(out[0]),
        .I3(current_state),
        .O(exp_input[9]));
  FDCE \exp_input_reg[0] 
       (.C(m00_axi_aclk),
        .CE(\exp_input[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(exp_input[0]),
        .Q(ila_smax_ctrlr_exp_input[0]));
  FDCE \exp_input_reg[10] 
       (.C(m00_axi_aclk),
        .CE(\exp_input[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(exp_input[10]),
        .Q(ila_smax_ctrlr_exp_input[10]));
  FDCE \exp_input_reg[11] 
       (.C(m00_axi_aclk),
        .CE(\exp_input[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(exp_input[11]),
        .Q(ila_smax_ctrlr_exp_input[11]));
  FDCE \exp_input_reg[12] 
       (.C(m00_axi_aclk),
        .CE(\exp_input[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(exp_input[12]),
        .Q(ila_smax_ctrlr_exp_input[12]));
  FDCE \exp_input_reg[13] 
       (.C(m00_axi_aclk),
        .CE(\exp_input[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(exp_input[13]),
        .Q(ila_smax_ctrlr_exp_input[13]));
  FDCE \exp_input_reg[14] 
       (.C(m00_axi_aclk),
        .CE(\exp_input[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(exp_input[14]),
        .Q(ila_smax_ctrlr_exp_input[14]));
  FDCE \exp_input_reg[15] 
       (.C(m00_axi_aclk),
        .CE(\exp_input[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(exp_input[15]),
        .Q(ila_smax_ctrlr_exp_input[15]));
  FDCE \exp_input_reg[16] 
       (.C(m00_axi_aclk),
        .CE(\exp_input[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(exp_input[16]),
        .Q(ila_smax_ctrlr_exp_input[16]));
  FDCE \exp_input_reg[17] 
       (.C(m00_axi_aclk),
        .CE(\exp_input[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(exp_input[17]),
        .Q(ila_smax_ctrlr_exp_input[17]));
  FDCE \exp_input_reg[18] 
       (.C(m00_axi_aclk),
        .CE(\exp_input[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(exp_input[18]),
        .Q(ila_smax_ctrlr_exp_input[18]));
  FDCE \exp_input_reg[19] 
       (.C(m00_axi_aclk),
        .CE(\exp_input[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(exp_input[19]),
        .Q(ila_smax_ctrlr_exp_input[19]));
  FDCE \exp_input_reg[1] 
       (.C(m00_axi_aclk),
        .CE(\exp_input[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(exp_input[1]),
        .Q(ila_smax_ctrlr_exp_input[1]));
  FDCE \exp_input_reg[20] 
       (.C(m00_axi_aclk),
        .CE(\exp_input[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(exp_input[20]),
        .Q(ila_smax_ctrlr_exp_input[20]));
  FDCE \exp_input_reg[21] 
       (.C(m00_axi_aclk),
        .CE(\exp_input[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(exp_input[21]),
        .Q(ila_smax_ctrlr_exp_input[21]));
  FDCE \exp_input_reg[22] 
       (.C(m00_axi_aclk),
        .CE(\exp_input[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(exp_input[22]),
        .Q(ila_smax_ctrlr_exp_input[22]));
  FDCE \exp_input_reg[23] 
       (.C(m00_axi_aclk),
        .CE(\exp_input[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(exp_input[23]),
        .Q(ila_smax_ctrlr_exp_input[23]));
  FDCE \exp_input_reg[24] 
       (.C(m00_axi_aclk),
        .CE(\exp_input[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(exp_input[24]),
        .Q(ila_smax_ctrlr_exp_input[24]));
  FDCE \exp_input_reg[25] 
       (.C(m00_axi_aclk),
        .CE(\exp_input[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(exp_input[25]),
        .Q(ila_smax_ctrlr_exp_input[25]));
  FDCE \exp_input_reg[26] 
       (.C(m00_axi_aclk),
        .CE(\exp_input[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(exp_input[26]),
        .Q(ila_smax_ctrlr_exp_input[26]));
  FDCE \exp_input_reg[27] 
       (.C(m00_axi_aclk),
        .CE(\exp_input[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(exp_input[27]),
        .Q(ila_smax_ctrlr_exp_input[27]));
  FDCE \exp_input_reg[28] 
       (.C(m00_axi_aclk),
        .CE(\exp_input[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(exp_input[28]),
        .Q(ila_smax_ctrlr_exp_input[28]));
  FDCE \exp_input_reg[29] 
       (.C(m00_axi_aclk),
        .CE(\exp_input[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(exp_input[29]),
        .Q(ila_smax_ctrlr_exp_input[29]));
  FDCE \exp_input_reg[2] 
       (.C(m00_axi_aclk),
        .CE(\exp_input[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(exp_input[2]),
        .Q(ila_smax_ctrlr_exp_input[2]));
  FDCE \exp_input_reg[30] 
       (.C(m00_axi_aclk),
        .CE(\exp_input[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(exp_input[30]),
        .Q(ila_smax_ctrlr_exp_input[30]));
  FDCE \exp_input_reg[31] 
       (.C(m00_axi_aclk),
        .CE(\exp_input[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(exp_input[31]),
        .Q(ila_smax_ctrlr_exp_input[31]));
  FDCE \exp_input_reg[3] 
       (.C(m00_axi_aclk),
        .CE(\exp_input[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(exp_input[3]),
        .Q(ila_smax_ctrlr_exp_input[3]));
  FDCE \exp_input_reg[4] 
       (.C(m00_axi_aclk),
        .CE(\exp_input[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(exp_input[4]),
        .Q(ila_smax_ctrlr_exp_input[4]));
  FDCE \exp_input_reg[5] 
       (.C(m00_axi_aclk),
        .CE(\exp_input[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(exp_input[5]),
        .Q(ila_smax_ctrlr_exp_input[5]));
  FDCE \exp_input_reg[6] 
       (.C(m00_axi_aclk),
        .CE(\exp_input[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(exp_input[6]),
        .Q(ila_smax_ctrlr_exp_input[6]));
  FDCE \exp_input_reg[7] 
       (.C(m00_axi_aclk),
        .CE(\exp_input[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(exp_input[7]),
        .Q(ila_smax_ctrlr_exp_input[7]));
  FDCE \exp_input_reg[8] 
       (.C(m00_axi_aclk),
        .CE(\exp_input[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(exp_input[8]),
        .Q(ila_smax_ctrlr_exp_input[8]));
  FDCE \exp_input_reg[9] 
       (.C(m00_axi_aclk),
        .CE(\exp_input[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_1),
        .D(exp_input[9]),
        .Q(ila_smax_ctrlr_exp_input[9]));
  LUT6 #(
    .INIT(64'hFFFFF02000000020)) 
    exp_input_valid_i_1
       (.I0(next_state1),
        .I1(empty),
        .I2(out[0]),
        .I3(out[1]),
        .I4(current_state),
        .I5(ila_smax_ctrlr_exp_input_valid),
        .O(exp_input_valid_i_1_n_0));
  FDCE exp_input_valid_reg
       (.C(m00_axi_aclk),
        .CE(1'b1),
        .CLR(m00_axi_aresetn_0),
        .D(exp_input_valid_i_1_n_0),
        .Q(ila_smax_ctrlr_exp_input_valid));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_5
       (.I0(\ila_smax_ctrlr_element_counter[15] [15]),
        .I1(\num_elements_reg[15]_0 [15]),
        .I2(\ila_smax_ctrlr_element_counter[15] [14]),
        .I3(\num_elements_reg[15]_0 [14]),
        .O(i__carry__0_i_5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_6
       (.I0(\ila_smax_ctrlr_element_counter[15] [13]),
        .I1(\num_elements_reg[15]_0 [13]),
        .I2(\ila_smax_ctrlr_element_counter[15] [12]),
        .I3(\num_elements_reg[15]_0 [12]),
        .O(i__carry__0_i_6_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_7
       (.I0(\ila_smax_ctrlr_element_counter[15] [11]),
        .I1(\num_elements_reg[15]_0 [11]),
        .I2(\ila_smax_ctrlr_element_counter[15] [10]),
        .I3(\num_elements_reg[15]_0 [10]),
        .O(i__carry__0_i_7_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_8
       (.I0(\ila_smax_ctrlr_element_counter[15] [9]),
        .I1(\num_elements_reg[15]_0 [9]),
        .I2(\ila_smax_ctrlr_element_counter[15] [8]),
        .I3(\num_elements_reg[15]_0 [8]),
        .O(i__carry__0_i_8_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_5
       (.I0(\ila_smax_ctrlr_element_counter[15] [7]),
        .I1(\num_elements_reg[15]_0 [7]),
        .I2(\ila_smax_ctrlr_element_counter[15] [6]),
        .I3(\num_elements_reg[15]_0 [6]),
        .O(i__carry_i_5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_6
       (.I0(\ila_smax_ctrlr_element_counter[15] [5]),
        .I1(\num_elements_reg[15]_0 [5]),
        .I2(\ila_smax_ctrlr_element_counter[15] [4]),
        .I3(\num_elements_reg[15]_0 [4]),
        .O(i__carry_i_6_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_7
       (.I0(\ila_smax_ctrlr_element_counter[15] [3]),
        .I1(\num_elements_reg[15]_0 [3]),
        .I2(\ila_smax_ctrlr_element_counter[15] [2]),
        .I3(\num_elements_reg[15]_0 [2]),
        .O(i__carry_i_7_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_8
       (.I0(\ila_smax_ctrlr_element_counter[15] [1]),
        .I1(\num_elements_reg[15]_0 [1]),
        .I2(\ila_smax_ctrlr_element_counter[15] [0]),
        .I3(\num_elements_reg[15]_0 [0]),
        .O(i__carry_i_8_n_0));
  LUT3 #(
    .INIT(8'h5E)) 
    ila_smax_ctrlr_busy_INST_0
       (.I0(out[1]),
        .I1(out[0]),
        .I2(current_state),
        .O(ila_smax_ctrlr_busy));
  LUT3 #(
    .INIT(8'h40)) 
    ila_smax_ctrlr_clear_all_INST_0
       (.I0(out[1]),
        .I1(out[0]),
        .I2(current_state),
        .O(ila_smax_ctrlr_clear_all));
  LUT6 #(
    .INIT(64'h1100010055555555)) 
    ila_smax_ctrlr_controller_ready_INST_0
       (.I0(current_state),
        .I1(out[1]),
        .I2(empty),
        .I3(\FSM_sequential_current_state_reg[2]_0 ),
        .I4(ila_smax_data_loaded),
        .I5(out[0]),
        .O(ila_smax_ctrlr_controller_ready));
  LUT3 #(
    .INIT(8'h40)) 
    ila_smax_ctrlr_exp_complete_INST_0
       (.I0(current_state),
        .I1(out[0]),
        .I2(out[1]),
        .O(ila_smax_ctrlr_exp_fifo_select));
  LUT3 #(
    .INIT(8'h2A)) 
    \ila_smax_ctrlr_fsm_state[0]_INST_0 
       (.I0(out[0]),
        .I1(current_state),
        .I2(out[1]),
        .O(ila_smax_ctrlr_fsm_state[0]));
  LUT2 #(
    .INIT(4'h2)) 
    \ila_smax_ctrlr_fsm_state[1]_INST_0 
       (.I0(out[1]),
        .I1(current_state),
        .O(ila_smax_ctrlr_fsm_state[1]));
  LUT2 #(
    .INIT(4'h2)) 
    \ila_smax_ctrlr_fsm_state[2]_INST_0 
       (.I0(current_state),
        .I1(out[1]),
        .O(ila_smax_ctrlr_fsm_state[2]));
  LUT5 #(
    .INIT(32'hEFFF2000)) 
    \ila_smax_exp_mux_data[0]_INST_0 
       (.I0(dout[0]),
        .I1(current_state),
        .I2(out[0]),
        .I3(out[1]),
        .I4(ila_smax_exp_fifo_data[0]),
        .O(ila_smax_exp_mux_data[0]));
  LUT5 #(
    .INIT(32'hEFFF2000)) 
    \ila_smax_exp_mux_data[10]_INST_0 
       (.I0(dout[10]),
        .I1(current_state),
        .I2(out[0]),
        .I3(out[1]),
        .I4(ila_smax_exp_fifo_data[10]),
        .O(ila_smax_exp_mux_data[10]));
  LUT5 #(
    .INIT(32'hEFFF2000)) 
    \ila_smax_exp_mux_data[11]_INST_0 
       (.I0(dout[11]),
        .I1(current_state),
        .I2(out[0]),
        .I3(out[1]),
        .I4(ila_smax_exp_fifo_data[11]),
        .O(ila_smax_exp_mux_data[11]));
  LUT5 #(
    .INIT(32'hEFFF2000)) 
    \ila_smax_exp_mux_data[12]_INST_0 
       (.I0(dout[12]),
        .I1(current_state),
        .I2(out[0]),
        .I3(out[1]),
        .I4(ila_smax_exp_fifo_data[12]),
        .O(ila_smax_exp_mux_data[12]));
  LUT5 #(
    .INIT(32'hEFFF2000)) 
    \ila_smax_exp_mux_data[13]_INST_0 
       (.I0(dout[13]),
        .I1(current_state),
        .I2(out[0]),
        .I3(out[1]),
        .I4(ila_smax_exp_fifo_data[13]),
        .O(ila_smax_exp_mux_data[13]));
  LUT5 #(
    .INIT(32'hEFFF2000)) 
    \ila_smax_exp_mux_data[14]_INST_0 
       (.I0(dout[14]),
        .I1(current_state),
        .I2(out[0]),
        .I3(out[1]),
        .I4(ila_smax_exp_fifo_data[14]),
        .O(ila_smax_exp_mux_data[14]));
  LUT5 #(
    .INIT(32'hEFFF2000)) 
    \ila_smax_exp_mux_data[15]_INST_0 
       (.I0(dout[15]),
        .I1(current_state),
        .I2(out[0]),
        .I3(out[1]),
        .I4(ila_smax_exp_fifo_data[15]),
        .O(ila_smax_exp_mux_data[15]));
  LUT5 #(
    .INIT(32'hEFFF2000)) 
    \ila_smax_exp_mux_data[16]_INST_0 
       (.I0(dout[16]),
        .I1(current_state),
        .I2(out[0]),
        .I3(out[1]),
        .I4(ila_smax_exp_fifo_data[16]),
        .O(ila_smax_exp_mux_data[16]));
  LUT5 #(
    .INIT(32'hEFFF2000)) 
    \ila_smax_exp_mux_data[17]_INST_0 
       (.I0(dout[17]),
        .I1(current_state),
        .I2(out[0]),
        .I3(out[1]),
        .I4(ila_smax_exp_fifo_data[17]),
        .O(ila_smax_exp_mux_data[17]));
  LUT5 #(
    .INIT(32'hEFFF2000)) 
    \ila_smax_exp_mux_data[18]_INST_0 
       (.I0(dout[18]),
        .I1(current_state),
        .I2(out[0]),
        .I3(out[1]),
        .I4(ila_smax_exp_fifo_data[18]),
        .O(ila_smax_exp_mux_data[18]));
  LUT5 #(
    .INIT(32'hEFFF2000)) 
    \ila_smax_exp_mux_data[19]_INST_0 
       (.I0(dout[19]),
        .I1(current_state),
        .I2(out[0]),
        .I3(out[1]),
        .I4(ila_smax_exp_fifo_data[19]),
        .O(ila_smax_exp_mux_data[19]));
  LUT5 #(
    .INIT(32'hEFFF2000)) 
    \ila_smax_exp_mux_data[1]_INST_0 
       (.I0(dout[1]),
        .I1(current_state),
        .I2(out[0]),
        .I3(out[1]),
        .I4(ila_smax_exp_fifo_data[1]),
        .O(ila_smax_exp_mux_data[1]));
  LUT5 #(
    .INIT(32'hEFFF2000)) 
    \ila_smax_exp_mux_data[20]_INST_0 
       (.I0(dout[20]),
        .I1(current_state),
        .I2(out[0]),
        .I3(out[1]),
        .I4(ila_smax_exp_fifo_data[20]),
        .O(ila_smax_exp_mux_data[20]));
  LUT5 #(
    .INIT(32'hEFFF2000)) 
    \ila_smax_exp_mux_data[21]_INST_0 
       (.I0(dout[21]),
        .I1(current_state),
        .I2(out[0]),
        .I3(out[1]),
        .I4(ila_smax_exp_fifo_data[21]),
        .O(ila_smax_exp_mux_data[21]));
  LUT5 #(
    .INIT(32'hEFFF2000)) 
    \ila_smax_exp_mux_data[22]_INST_0 
       (.I0(dout[22]),
        .I1(current_state),
        .I2(out[0]),
        .I3(out[1]),
        .I4(ila_smax_exp_fifo_data[22]),
        .O(ila_smax_exp_mux_data[22]));
  LUT5 #(
    .INIT(32'hEFFF2000)) 
    \ila_smax_exp_mux_data[23]_INST_0 
       (.I0(dout[23]),
        .I1(current_state),
        .I2(out[0]),
        .I3(out[1]),
        .I4(ila_smax_exp_fifo_data[23]),
        .O(ila_smax_exp_mux_data[23]));
  LUT5 #(
    .INIT(32'hEFFF2000)) 
    \ila_smax_exp_mux_data[24]_INST_0 
       (.I0(dout[24]),
        .I1(current_state),
        .I2(out[0]),
        .I3(out[1]),
        .I4(ila_smax_exp_fifo_data[24]),
        .O(ila_smax_exp_mux_data[24]));
  LUT5 #(
    .INIT(32'hEFFF2000)) 
    \ila_smax_exp_mux_data[25]_INST_0 
       (.I0(dout[25]),
        .I1(current_state),
        .I2(out[0]),
        .I3(out[1]),
        .I4(ila_smax_exp_fifo_data[25]),
        .O(ila_smax_exp_mux_data[25]));
  LUT5 #(
    .INIT(32'hEFFF2000)) 
    \ila_smax_exp_mux_data[26]_INST_0 
       (.I0(dout[26]),
        .I1(current_state),
        .I2(out[0]),
        .I3(out[1]),
        .I4(ila_smax_exp_fifo_data[26]),
        .O(ila_smax_exp_mux_data[26]));
  LUT5 #(
    .INIT(32'hEFFF2000)) 
    \ila_smax_exp_mux_data[27]_INST_0 
       (.I0(dout[27]),
        .I1(current_state),
        .I2(out[0]),
        .I3(out[1]),
        .I4(ila_smax_exp_fifo_data[27]),
        .O(ila_smax_exp_mux_data[27]));
  LUT5 #(
    .INIT(32'hEFFF2000)) 
    \ila_smax_exp_mux_data[28]_INST_0 
       (.I0(dout[28]),
        .I1(current_state),
        .I2(out[0]),
        .I3(out[1]),
        .I4(ila_smax_exp_fifo_data[28]),
        .O(ila_smax_exp_mux_data[28]));
  LUT5 #(
    .INIT(32'hEFFF2000)) 
    \ila_smax_exp_mux_data[29]_INST_0 
       (.I0(dout[29]),
        .I1(current_state),
        .I2(out[0]),
        .I3(out[1]),
        .I4(ila_smax_exp_fifo_data[29]),
        .O(ila_smax_exp_mux_data[29]));
  LUT5 #(
    .INIT(32'hEFFF2000)) 
    \ila_smax_exp_mux_data[2]_INST_0 
       (.I0(dout[2]),
        .I1(current_state),
        .I2(out[0]),
        .I3(out[1]),
        .I4(ila_smax_exp_fifo_data[2]),
        .O(ila_smax_exp_mux_data[2]));
  LUT5 #(
    .INIT(32'hEFFF2000)) 
    \ila_smax_exp_mux_data[30]_INST_0 
       (.I0(dout[30]),
        .I1(current_state),
        .I2(out[0]),
        .I3(out[1]),
        .I4(ila_smax_exp_fifo_data[30]),
        .O(ila_smax_exp_mux_data[30]));
  LUT5 #(
    .INIT(32'hEFFF2000)) 
    \ila_smax_exp_mux_data[31]_INST_0 
       (.I0(dout[31]),
        .I1(current_state),
        .I2(out[0]),
        .I3(out[1]),
        .I4(ila_smax_exp_fifo_data[31]),
        .O(ila_smax_exp_mux_data[31]));
  LUT5 #(
    .INIT(32'hEFFF2000)) 
    \ila_smax_exp_mux_data[3]_INST_0 
       (.I0(dout[3]),
        .I1(current_state),
        .I2(out[0]),
        .I3(out[1]),
        .I4(ila_smax_exp_fifo_data[3]),
        .O(ila_smax_exp_mux_data[3]));
  LUT5 #(
    .INIT(32'hEFFF2000)) 
    \ila_smax_exp_mux_data[4]_INST_0 
       (.I0(dout[4]),
        .I1(current_state),
        .I2(out[0]),
        .I3(out[1]),
        .I4(ila_smax_exp_fifo_data[4]),
        .O(ila_smax_exp_mux_data[4]));
  LUT5 #(
    .INIT(32'hEFFF2000)) 
    \ila_smax_exp_mux_data[5]_INST_0 
       (.I0(dout[5]),
        .I1(current_state),
        .I2(out[0]),
        .I3(out[1]),
        .I4(ila_smax_exp_fifo_data[5]),
        .O(ila_smax_exp_mux_data[5]));
  LUT5 #(
    .INIT(32'hEFFF2000)) 
    \ila_smax_exp_mux_data[6]_INST_0 
       (.I0(dout[6]),
        .I1(current_state),
        .I2(out[0]),
        .I3(out[1]),
        .I4(ila_smax_exp_fifo_data[6]),
        .O(ila_smax_exp_mux_data[6]));
  LUT5 #(
    .INIT(32'hEFFF2000)) 
    \ila_smax_exp_mux_data[7]_INST_0 
       (.I0(dout[7]),
        .I1(current_state),
        .I2(out[0]),
        .I3(out[1]),
        .I4(ila_smax_exp_fifo_data[7]),
        .O(ila_smax_exp_mux_data[7]));
  LUT5 #(
    .INIT(32'hEFFF2000)) 
    \ila_smax_exp_mux_data[8]_INST_0 
       (.I0(dout[8]),
        .I1(current_state),
        .I2(out[0]),
        .I3(out[1]),
        .I4(ila_smax_exp_fifo_data[8]),
        .O(ila_smax_exp_mux_data[8]));
  LUT5 #(
    .INIT(32'hEFFF2000)) 
    \ila_smax_exp_mux_data[9]_INST_0 
       (.I0(dout[9]),
        .I1(current_state),
        .I2(out[0]),
        .I3(out[1]),
        .I4(ila_smax_exp_fifo_data[9]),
        .O(ila_smax_exp_mux_data[9]));
  LUT4 #(
    .INIT(16'h1000)) 
    ila_smax_inbuff_rd_en_INST_0
       (.I0(out[1]),
        .I1(current_state),
        .I2(out[0]),
        .I3(next_state1),
        .O(ila_smax_inbuff_rd_en));
  CARRY4 \next_state1_inferred__1/i__carry 
       (.CI(1'b0),
        .CO({\next_state1_inferred__1/i__carry_n_0 ,\next_state1_inferred__1/i__carry_n_1 ,\next_state1_inferred__1/i__carry_n_2 ,\next_state1_inferred__1/i__carry_n_3 }),
        .CYINIT(1'b0),
        .DI(DI),
        .O(\NLW_next_state1_inferred__1/i__carry_O_UNCONNECTED [3:0]),
        .S({i__carry_i_5_n_0,i__carry_i_6_n_0,i__carry_i_7_n_0,i__carry_i_8_n_0}));
  CARRY4 \next_state1_inferred__1/i__carry__0 
       (.CI(\next_state1_inferred__1/i__carry_n_0 ),
        .CO({\next_state1_inferred__1/i__carry__0_n_0 ,\next_state1_inferred__1/i__carry__0_n_1 ,\next_state1_inferred__1/i__carry__0_n_2 ,\next_state1_inferred__1/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI(\num_elements_reg[15] ),
        .O(\NLW_next_state1_inferred__1/i__carry__0_O_UNCONNECTED [3:0]),
        .S({i__carry__0_i_5_n_0,i__carry__0_i_6_n_0,i__carry__0_i_7_n_0,i__carry__0_i_8_n_0}));
  LUT3 #(
    .INIT(8'h02)) 
    \outbuff_din[31]_i_1 
       (.I0(current_state),
        .I1(out[0]),
        .I2(out[1]),
        .O(outbuff_din));
  FDCE \outbuff_din_reg[0] 
       (.C(m00_axi_aclk),
        .CE(outbuff_din),
        .CLR(m00_axi_aresetn_2),
        .D(\division_reg_reg[31] [0]),
        .Q(ila_smax_outbuff_din[0]));
  FDCE \outbuff_din_reg[10] 
       (.C(m00_axi_aclk),
        .CE(outbuff_din),
        .CLR(m00_axi_aresetn_2),
        .D(\division_reg_reg[31] [10]),
        .Q(ila_smax_outbuff_din[10]));
  FDCE \outbuff_din_reg[11] 
       (.C(m00_axi_aclk),
        .CE(outbuff_din),
        .CLR(m00_axi_aresetn_2),
        .D(\division_reg_reg[31] [11]),
        .Q(ila_smax_outbuff_din[11]));
  FDCE \outbuff_din_reg[12] 
       (.C(m00_axi_aclk),
        .CE(outbuff_din),
        .CLR(m00_axi_aresetn_2),
        .D(\division_reg_reg[31] [12]),
        .Q(ila_smax_outbuff_din[12]));
  FDCE \outbuff_din_reg[13] 
       (.C(m00_axi_aclk),
        .CE(outbuff_din),
        .CLR(m00_axi_aresetn_2),
        .D(\division_reg_reg[31] [13]),
        .Q(ila_smax_outbuff_din[13]));
  FDCE \outbuff_din_reg[14] 
       (.C(m00_axi_aclk),
        .CE(outbuff_din),
        .CLR(m00_axi_aresetn_2),
        .D(\division_reg_reg[31] [14]),
        .Q(ila_smax_outbuff_din[14]));
  FDCE \outbuff_din_reg[15] 
       (.C(m00_axi_aclk),
        .CE(outbuff_din),
        .CLR(m00_axi_aresetn_2),
        .D(\division_reg_reg[31] [15]),
        .Q(ila_smax_outbuff_din[15]));
  FDCE \outbuff_din_reg[16] 
       (.C(m00_axi_aclk),
        .CE(outbuff_din),
        .CLR(m00_axi_aresetn_2),
        .D(\division_reg_reg[31] [16]),
        .Q(ila_smax_outbuff_din[16]));
  FDCE \outbuff_din_reg[17] 
       (.C(m00_axi_aclk),
        .CE(outbuff_din),
        .CLR(m00_axi_aresetn_2),
        .D(\division_reg_reg[31] [17]),
        .Q(ila_smax_outbuff_din[17]));
  FDCE \outbuff_din_reg[18] 
       (.C(m00_axi_aclk),
        .CE(outbuff_din),
        .CLR(m00_axi_aresetn_2),
        .D(\division_reg_reg[31] [18]),
        .Q(ila_smax_outbuff_din[18]));
  FDCE \outbuff_din_reg[19] 
       (.C(m00_axi_aclk),
        .CE(outbuff_din),
        .CLR(m00_axi_aresetn_2),
        .D(\division_reg_reg[31] [19]),
        .Q(ila_smax_outbuff_din[19]));
  FDCE \outbuff_din_reg[1] 
       (.C(m00_axi_aclk),
        .CE(outbuff_din),
        .CLR(m00_axi_aresetn_2),
        .D(\division_reg_reg[31] [1]),
        .Q(ila_smax_outbuff_din[1]));
  FDCE \outbuff_din_reg[20] 
       (.C(m00_axi_aclk),
        .CE(outbuff_din),
        .CLR(m00_axi_aresetn_2),
        .D(\division_reg_reg[31] [20]),
        .Q(ila_smax_outbuff_din[20]));
  FDCE \outbuff_din_reg[21] 
       (.C(m00_axi_aclk),
        .CE(outbuff_din),
        .CLR(m00_axi_aresetn_2),
        .D(\division_reg_reg[31] [21]),
        .Q(ila_smax_outbuff_din[21]));
  FDCE \outbuff_din_reg[22] 
       (.C(m00_axi_aclk),
        .CE(outbuff_din),
        .CLR(m00_axi_aresetn_2),
        .D(\division_reg_reg[31] [22]),
        .Q(ila_smax_outbuff_din[22]));
  FDCE \outbuff_din_reg[23] 
       (.C(m00_axi_aclk),
        .CE(outbuff_din),
        .CLR(m00_axi_aresetn_2),
        .D(\division_reg_reg[31] [23]),
        .Q(ila_smax_outbuff_din[23]));
  FDCE \outbuff_din_reg[24] 
       (.C(m00_axi_aclk),
        .CE(outbuff_din),
        .CLR(m00_axi_aresetn_2),
        .D(\division_reg_reg[31] [24]),
        .Q(ila_smax_outbuff_din[24]));
  FDCE \outbuff_din_reg[25] 
       (.C(m00_axi_aclk),
        .CE(outbuff_din),
        .CLR(m00_axi_aresetn_2),
        .D(\division_reg_reg[31] [25]),
        .Q(ila_smax_outbuff_din[25]));
  FDCE \outbuff_din_reg[26] 
       (.C(m00_axi_aclk),
        .CE(outbuff_din),
        .CLR(m00_axi_aresetn_2),
        .D(\division_reg_reg[31] [26]),
        .Q(ila_smax_outbuff_din[26]));
  FDCE \outbuff_din_reg[27] 
       (.C(m00_axi_aclk),
        .CE(outbuff_din),
        .CLR(m00_axi_aresetn_2),
        .D(\division_reg_reg[31] [27]),
        .Q(ila_smax_outbuff_din[27]));
  FDCE \outbuff_din_reg[28] 
       (.C(m00_axi_aclk),
        .CE(outbuff_din),
        .CLR(m00_axi_aresetn_2),
        .D(\division_reg_reg[31] [28]),
        .Q(ila_smax_outbuff_din[28]));
  FDCE \outbuff_din_reg[29] 
       (.C(m00_axi_aclk),
        .CE(outbuff_din),
        .CLR(m00_axi_aresetn_2),
        .D(\division_reg_reg[31] [29]),
        .Q(ila_smax_outbuff_din[29]));
  FDCE \outbuff_din_reg[2] 
       (.C(m00_axi_aclk),
        .CE(outbuff_din),
        .CLR(m00_axi_aresetn_2),
        .D(\division_reg_reg[31] [2]),
        .Q(ila_smax_outbuff_din[2]));
  FDCE \outbuff_din_reg[30] 
       (.C(m00_axi_aclk),
        .CE(outbuff_din),
        .CLR(m00_axi_aresetn_2),
        .D(\division_reg_reg[31] [30]),
        .Q(ila_smax_outbuff_din[30]));
  FDCE \outbuff_din_reg[31] 
       (.C(m00_axi_aclk),
        .CE(outbuff_din),
        .CLR(m00_axi_aresetn_2),
        .D(\division_reg_reg[31] [31]),
        .Q(ila_smax_outbuff_din[31]));
  FDCE \outbuff_din_reg[3] 
       (.C(m00_axi_aclk),
        .CE(outbuff_din),
        .CLR(m00_axi_aresetn_2),
        .D(\division_reg_reg[31] [3]),
        .Q(ila_smax_outbuff_din[3]));
  FDCE \outbuff_din_reg[4] 
       (.C(m00_axi_aclk),
        .CE(outbuff_din),
        .CLR(m00_axi_aresetn_2),
        .D(\division_reg_reg[31] [4]),
        .Q(ila_smax_outbuff_din[4]));
  FDCE \outbuff_din_reg[5] 
       (.C(m00_axi_aclk),
        .CE(outbuff_din),
        .CLR(m00_axi_aresetn_2),
        .D(\division_reg_reg[31] [5]),
        .Q(ila_smax_outbuff_din[5]));
  FDCE \outbuff_din_reg[6] 
       (.C(m00_axi_aclk),
        .CE(outbuff_din),
        .CLR(m00_axi_aresetn_2),
        .D(\division_reg_reg[31] [6]),
        .Q(ila_smax_outbuff_din[6]));
  FDCE \outbuff_din_reg[7] 
       (.C(m00_axi_aclk),
        .CE(outbuff_din),
        .CLR(m00_axi_aresetn_2),
        .D(\division_reg_reg[31] [7]),
        .Q(ila_smax_outbuff_din[7]));
  FDCE \outbuff_din_reg[8] 
       (.C(m00_axi_aclk),
        .CE(outbuff_din),
        .CLR(m00_axi_aresetn_2),
        .D(\division_reg_reg[31] [8]),
        .Q(ila_smax_outbuff_din[8]));
  FDCE \outbuff_din_reg[9] 
       (.C(m00_axi_aclk),
        .CE(outbuff_din),
        .CLR(m00_axi_aresetn_2),
        .D(\division_reg_reg[31] [9]),
        .Q(ila_smax_outbuff_din[9]));
  FDCE outbuff_wr_en_reg
       (.C(m00_axi_aclk),
        .CE(outbuff_din),
        .CLR(m00_axi_aresetn_0),
        .D(outbuff_din1),
        .Q(ila_smax_outbuff_wr_en));
  LUT6 #(
    .INIT(64'hF7FFF7F700FF0000)) 
    start_i_1
       (.I0(current_state),
        .I1(out[0]),
        .I2(out[1]),
        .I3(\start_reg_reg[1] [1]),
        .I4(\start_reg_reg[1] [0]),
        .I5(start),
        .O(start_reg));
endmodule

(* BUS_INFO = "32:OUTPUT:result<31:0>" *) (* CHECK_LICENSE_TYPE = "softmax_divider_32bit,floating_point_v5_0,{}" *) (* NLW_MACRO_ALIAS = "softmax_divider_32bit_softmax_divider_32bit" *) 
(* NLW_MACRO_TAG = "0" *) (* NLW_UNIQUE_ID = "0" *) (* ORIG_REF_NAME = "softmax_divider_32bit" *) 
(* SHREG_EXTRACT_NGC = "Yes" *) (* SHREG_MIN_SIZE = "-1" *) (* TYPE = "softmax_divider_32bit" *) 
(* x_core_info = "floating_point_v5_0, Xilinx CORE Generator 14.7" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_softmax_divider_32bit
   (clk,
    a,
    b,
    result);
  input clk;
  input [31:0]a;
  input [31:0]b;
  output [31:0]result;

  wire [7:0]\U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/exp_op ;
  wire [22:0]\U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/mant_op ;
  wire \U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/sign_op ;
  wire [31:0]a;
  wire [31:0]b;
  wire clk;
  wire sig00000001;
  wire sig00000002;
  wire sig00000003;
  wire sig00000004;
  wire sig00000005;
  wire sig00000006;
  wire sig00000007;
  wire sig00000008;
  wire sig00000009;
  wire sig0000000a;
  wire sig0000000b;
  wire sig0000000c;
  wire sig0000000d;
  wire sig0000000e;
  wire sig0000000f;
  wire sig00000010;
  wire sig00000011;
  wire sig00000012;
  wire sig00000013;
  wire sig00000014;
  wire sig00000015;
  wire sig00000016;
  wire sig00000017;
  wire sig00000018;
  wire sig00000019;
  wire sig0000001a;
  wire sig0000001b;
  wire sig0000001c;
  wire sig0000001d;
  wire sig0000001e;
  wire sig0000001f;
  wire sig00000020;
  wire sig00000021;
  wire sig00000022;
  wire sig00000023;
  wire sig00000024;
  wire sig00000025;
  wire sig00000026;
  wire sig00000027;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000028;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000029;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000002a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000002b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000002c;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000002d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000002e;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000002f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000030;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000031;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000032;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000033;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000034;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000035;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000036;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000037;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000038;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000039;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000003a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000003b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000003c;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000003d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000003e;
  wire sig0000003f;
  wire sig00000040;
  wire sig00000041;
  wire sig00000042;
  wire sig00000043;
  wire sig00000044;
  wire sig00000045;
  wire sig00000046;
  wire sig00000047;
  wire sig00000049;
  wire sig0000004a;
  wire sig0000004b;
  wire sig0000004c;
  wire sig0000004d;
  wire sig0000004e;
  wire sig0000004f;
  wire sig00000050;
  wire sig00000051;
  wire sig00000052;
  wire sig00000053;
  wire sig00000054;
  wire sig00000055;
  wire sig00000056;
  wire sig00000057;
  wire sig00000058;
  wire sig00000059;
  wire sig0000005a;
  wire sig0000005b;
  wire sig0000005c;
  wire sig0000005d;
  wire sig0000005e;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000005f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000060;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000061;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000062;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000063;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000064;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000065;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000066;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000067;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000068;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000069;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000006a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000006b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000006c;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000006d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000006e;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000006f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000070;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000071;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000072;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000073;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000074;
  wire sig00000075;
  wire sig00000076;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000077;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000078;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000079;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000007a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000007b;
  wire sig0000007c;
  wire sig0000007d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000007e;
  wire sig0000007f;
  wire sig00000080;
  wire sig00000081;
  wire sig00000082;
  wire sig00000083;
  wire sig00000084;
  wire sig00000085;
  wire sig00000086;
  wire sig00000087;
  wire sig00000088;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000089;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000008a;
  wire sig0000008b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000008c;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000008d;
  wire sig0000008e;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000008f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000090;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000091;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000092;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000093;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000094;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000095;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000096;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000097;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000098;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000099;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000009a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000009b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000009c;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000009d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000009e;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000009f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000a0;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000a1;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000a2;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000a3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000a4;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000a5;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000a6;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000a7;
  wire sig000000a8;
  wire sig000000a9;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000aa;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000ab;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000ac;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000ad;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000ae;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000af;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000b0;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000b1;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000b2;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000b3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000b4;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000b5;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000b6;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000b7;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000b8;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000b9;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000ba;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000bb;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000bc;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000bd;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000be;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000bf;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000c0;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000c1;
  wire sig000000c2;
  wire sig000000c3;
  wire sig000000c4;
  wire sig000000c5;
  wire sig000000c6;
  wire sig000000c7;
  wire sig000000c8;
  wire sig000000c9;
  wire sig000000ca;
  wire sig000000cb;
  wire sig000000cc;
  wire sig000000cd;
  wire sig000000ce;
  wire sig000000cf;
  wire sig000000d0;
  wire sig000000d1;
  wire sig000000d2;
  wire sig000000d3;
  wire sig000000d4;
  wire sig000000d5;
  wire sig000000d6;
  wire sig000000d7;
  wire sig000000d8;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000d9;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000da;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000db;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000dc;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000dd;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000de;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000df;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000e0;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000e1;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000e2;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000e3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000e4;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000e5;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000e6;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000e7;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000e8;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000e9;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000ea;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000eb;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000ec;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000ed;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000ee;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000ef;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000f0;
  wire sig000000f1;
  wire sig000000f2;
  wire sig000000f3;
  wire sig000000f4;
  wire sig000000f5;
  wire sig000000f6;
  wire sig000000f7;
  wire sig000000f8;
  wire sig000000f9;
  wire sig000000fa;
  wire sig000000fb;
  wire sig000000fc;
  wire sig000000fd;
  wire sig000000fe;
  wire sig000000ff;
  wire sig00000100;
  wire sig00000101;
  wire sig00000102;
  wire sig00000103;
  wire sig00000104;
  wire sig00000105;
  wire sig00000106;
  wire sig00000107;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000108;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000109;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000010a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000010b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000010c;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000010d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000010e;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000010f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000110;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000111;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000112;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000113;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000114;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000115;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000116;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000117;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000118;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000119;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000011a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000011b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000011c;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000011d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000011e;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000011f;
  wire sig00000120;
  wire sig00000121;
  wire sig00000122;
  wire sig00000123;
  wire sig00000124;
  wire sig00000125;
  wire sig00000126;
  wire sig00000127;
  wire sig00000128;
  wire sig00000129;
  wire sig0000012a;
  wire sig0000012b;
  wire sig0000012c;
  wire sig0000012d;
  wire sig0000012e;
  wire sig0000012f;
  wire sig00000130;
  wire sig00000131;
  wire sig00000132;
  wire sig00000133;
  wire sig00000134;
  wire sig00000135;
  wire sig00000136;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000137;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000138;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000139;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000013a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000013b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000013c;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000013d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000013e;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000013f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000140;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000141;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000142;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000143;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000144;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000145;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000146;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000147;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000148;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000149;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000014a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000014b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000014c;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000014d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000014e;
  wire sig0000014f;
  wire sig00000150;
  wire sig00000151;
  wire sig00000152;
  wire sig00000153;
  wire sig00000154;
  wire sig00000155;
  wire sig00000156;
  wire sig00000157;
  wire sig00000158;
  wire sig00000159;
  wire sig0000015a;
  wire sig0000015b;
  wire sig0000015c;
  wire sig0000015d;
  wire sig0000015e;
  wire sig0000015f;
  wire sig00000160;
  wire sig00000161;
  wire sig00000162;
  wire sig00000163;
  wire sig00000164;
  wire sig00000165;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000166;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000167;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000168;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000169;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000016a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000016b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000016c;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000016d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000016e;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000016f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000170;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000171;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000172;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000173;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000174;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000175;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000176;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000177;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000178;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000179;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000017a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000017b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000017c;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000017d;
  wire sig0000017e;
  wire sig0000017f;
  wire sig00000180;
  wire sig00000181;
  wire sig00000182;
  wire sig00000183;
  wire sig00000184;
  wire sig00000185;
  wire sig00000186;
  wire sig00000187;
  wire sig00000188;
  wire sig00000189;
  wire sig0000018a;
  wire sig0000018b;
  wire sig0000018c;
  wire sig0000018d;
  wire sig0000018e;
  wire sig0000018f;
  wire sig00000190;
  wire sig00000191;
  wire sig00000192;
  wire sig00000193;
  wire sig00000194;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000195;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000196;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000197;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000198;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000199;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000019a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000019b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000019c;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000019d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000019e;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000019f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001a0;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001a1;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001a2;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001a3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001a4;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001a5;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001a6;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001a7;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001a8;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001a9;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001aa;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001ab;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001ac;
  wire sig000001ad;
  wire sig000001ae;
  wire sig000001af;
  wire sig000001b0;
  wire sig000001b1;
  wire sig000001b2;
  wire sig000001b3;
  wire sig000001b4;
  wire sig000001b5;
  wire sig000001b6;
  wire sig000001b7;
  wire sig000001b8;
  wire sig000001b9;
  wire sig000001ba;
  wire sig000001bb;
  wire sig000001bc;
  wire sig000001bd;
  wire sig000001be;
  wire sig000001bf;
  wire sig000001c0;
  wire sig000001c1;
  wire sig000001c2;
  wire sig000001c3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001c4;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001c5;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001c6;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001c7;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001c8;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001c9;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001ca;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001cb;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001cc;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001cd;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001ce;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001cf;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001d0;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001d1;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001d2;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001d3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001d4;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001d5;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001d6;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001d7;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001d8;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001d9;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001da;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001db;
  wire sig000001dc;
  wire sig000001dd;
  wire sig000001de;
  wire sig000001df;
  wire sig000001e0;
  wire sig000001e1;
  wire sig000001e2;
  wire sig000001e3;
  wire sig000001e4;
  wire sig000001e5;
  wire sig000001e6;
  wire sig000001e7;
  wire sig000001e8;
  wire sig000001e9;
  wire sig000001ea;
  wire sig000001eb;
  wire sig000001ec;
  wire sig000001ed;
  wire sig000001ee;
  wire sig000001ef;
  wire sig000001f0;
  wire sig000001f1;
  wire sig000001f2;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001f3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001f4;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001f5;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001f6;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001f7;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001f8;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001f9;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001fa;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001fb;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001fc;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001fd;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001fe;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000001ff;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000200;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000201;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000202;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000203;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000204;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000205;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000206;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000207;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000208;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000209;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000020a;
  wire sig0000020b;
  wire sig0000020c;
  wire sig0000020d;
  wire sig0000020e;
  wire sig0000020f;
  wire sig00000210;
  wire sig00000211;
  wire sig00000212;
  wire sig00000213;
  wire sig00000214;
  wire sig00000215;
  wire sig00000216;
  wire sig00000217;
  wire sig00000218;
  wire sig00000219;
  wire sig0000021a;
  wire sig0000021b;
  wire sig0000021c;
  wire sig0000021d;
  wire sig0000021e;
  wire sig0000021f;
  wire sig00000220;
  wire sig00000221;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000222;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000223;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000224;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000225;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000226;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000227;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000228;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000229;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000022a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000022b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000022c;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000022d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000022e;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000022f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000230;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000231;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000232;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000233;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000234;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000235;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000236;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000237;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000238;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000239;
  wire sig0000023a;
  wire sig0000023b;
  wire sig0000023c;
  wire sig0000023d;
  wire sig0000023e;
  wire sig0000023f;
  wire sig00000240;
  wire sig00000241;
  wire sig00000242;
  wire sig00000243;
  wire sig00000244;
  wire sig00000245;
  wire sig00000246;
  wire sig00000247;
  wire sig00000248;
  wire sig00000249;
  wire sig0000024a;
  wire sig0000024b;
  wire sig0000024c;
  wire sig0000024d;
  wire sig0000024e;
  wire sig0000024f;
  wire sig00000250;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000251;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000252;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000253;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000254;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000255;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000256;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000257;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000258;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000259;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000025a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000025b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000025c;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000025d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000025e;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000025f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000260;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000261;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000262;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000263;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000264;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000265;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000266;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000267;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000268;
  wire sig00000269;
  wire sig0000026a;
  wire sig0000026b;
  wire sig0000026c;
  wire sig0000026d;
  wire sig0000026e;
  wire sig0000026f;
  wire sig00000270;
  wire sig00000271;
  wire sig00000272;
  wire sig00000273;
  wire sig00000274;
  wire sig00000275;
  wire sig00000276;
  wire sig00000277;
  wire sig00000278;
  wire sig00000279;
  wire sig0000027a;
  wire sig0000027b;
  wire sig0000027c;
  wire sig0000027d;
  wire sig0000027e;
  wire sig0000027f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000280;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000281;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000282;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000283;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000284;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000285;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000286;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000287;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000288;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000289;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000028a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000028b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000028c;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000028d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000028e;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000028f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000290;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000291;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000292;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000293;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000294;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000295;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000296;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000297;
  wire sig00000298;
  wire sig00000299;
  wire sig0000029a;
  wire sig0000029b;
  wire sig0000029c;
  wire sig0000029d;
  wire sig0000029e;
  wire sig0000029f;
  wire sig000002a0;
  wire sig000002a1;
  wire sig000002a2;
  wire sig000002a3;
  wire sig000002a4;
  wire sig000002a5;
  wire sig000002a6;
  wire sig000002a7;
  wire sig000002a8;
  wire sig000002a9;
  wire sig000002aa;
  wire sig000002ab;
  wire sig000002ac;
  wire sig000002ad;
  wire sig000002ae;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002af;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002b0;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002b1;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002b2;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002b3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002b4;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002b5;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002b6;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002b7;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002b8;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002b9;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002ba;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002bb;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002bc;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002bd;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002be;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002bf;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002c0;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002c1;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002c2;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002c3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002c4;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002c5;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002c6;
  wire sig000002c7;
  wire sig000002c8;
  wire sig000002c9;
  wire sig000002ca;
  wire sig000002cb;
  wire sig000002cc;
  wire sig000002cd;
  wire sig000002ce;
  wire sig000002cf;
  wire sig000002d0;
  wire sig000002d1;
  wire sig000002d2;
  wire sig000002d3;
  wire sig000002d4;
  wire sig000002d5;
  wire sig000002d6;
  wire sig000002d7;
  wire sig000002d8;
  wire sig000002d9;
  wire sig000002da;
  wire sig000002db;
  wire sig000002dc;
  wire sig000002dd;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002de;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002df;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002e0;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002e1;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002e2;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002e3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002e4;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002e5;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002e6;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002e7;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002e8;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002e9;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002ea;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002eb;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002ec;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002ed;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002ee;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002ef;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002f0;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002f1;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002f2;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002f3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002f4;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000002f5;
  wire sig000002f6;
  wire sig000002f7;
  wire sig000002f8;
  wire sig000002f9;
  wire sig000002fa;
  wire sig000002fb;
  wire sig000002fc;
  wire sig000002fd;
  wire sig000002fe;
  wire sig000002ff;
  wire sig00000300;
  wire sig00000301;
  wire sig00000302;
  wire sig00000303;
  wire sig00000304;
  wire sig00000305;
  wire sig00000306;
  wire sig00000307;
  wire sig00000308;
  wire sig00000309;
  wire sig0000030a;
  wire sig0000030b;
  wire sig0000030c;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000030d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000030e;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000030f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000310;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000311;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000312;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000313;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000314;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000315;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000316;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000317;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000318;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000319;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000031a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000031b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000031c;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000031d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000031e;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000031f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000320;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000321;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000322;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000323;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000324;
  wire sig00000325;
  wire sig00000326;
  wire sig00000327;
  wire sig00000328;
  wire sig00000329;
  wire sig0000032a;
  wire sig0000032b;
  wire sig0000032c;
  wire sig0000032d;
  wire sig0000032e;
  wire sig0000032f;
  wire sig00000330;
  wire sig00000331;
  wire sig00000332;
  wire sig00000333;
  wire sig00000334;
  wire sig00000335;
  wire sig00000336;
  wire sig00000337;
  wire sig00000338;
  wire sig00000339;
  wire sig0000033a;
  wire sig0000033b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000033c;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000033d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000033e;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000033f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000340;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000341;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000342;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000343;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000344;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000345;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000346;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000347;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000348;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000349;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000034a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000034b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000034c;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000034d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000034e;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000034f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000350;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000351;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000352;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000353;
  wire sig00000354;
  wire sig00000355;
  wire sig00000356;
  wire sig00000357;
  wire sig00000358;
  wire sig00000359;
  wire sig0000035a;
  wire sig0000035b;
  wire sig0000035c;
  wire sig0000035d;
  wire sig0000035e;
  wire sig0000035f;
  wire sig00000360;
  wire sig00000361;
  wire sig00000362;
  wire sig00000363;
  wire sig00000364;
  wire sig00000365;
  wire sig00000366;
  wire sig00000367;
  wire sig00000368;
  wire sig00000369;
  wire sig0000036a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000036b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000036c;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000036d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000036e;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000036f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000370;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000371;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000372;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000373;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000374;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000375;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000376;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000377;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000378;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000379;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000037a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000037b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000037c;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000037d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000037e;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000037f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000380;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000381;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000382;
  wire sig00000383;
  wire sig00000384;
  wire sig00000385;
  wire sig00000386;
  wire sig00000387;
  wire sig00000388;
  wire sig00000389;
  wire sig0000038a;
  wire sig0000038b;
  wire sig0000038c;
  wire sig0000038d;
  wire sig0000038e;
  wire sig0000038f;
  wire sig00000390;
  wire sig00000391;
  wire sig00000392;
  wire sig00000393;
  wire sig00000394;
  wire sig00000395;
  wire sig00000396;
  wire sig00000397;
  wire sig00000398;
  wire sig00000399;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000039a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000039b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000039c;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000039d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000039e;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000039f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000003a0;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000003a1;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000003a2;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000003a3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000003a4;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000003a5;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000003a6;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000003a7;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000003a8;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000003a9;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000003aa;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000003ab;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000003ac;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000003ad;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000003ae;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000003af;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000003b0;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000003b1;
  wire sig000003b2;
  wire sig000003b3;
  wire sig000003b4;
  wire sig000003b5;
  wire sig000003b6;
  wire sig000003b7;
  wire sig000003b8;
  wire sig000003b9;
  wire sig000003ba;
  wire sig000003bb;
  wire sig000003bc;
  wire sig000003bd;
  wire sig000003be;
  wire sig000003bf;
  wire sig000003c0;
  wire sig000003c1;
  wire sig000003c2;
  wire sig000003c3;
  wire sig000003c4;
  wire sig000003c5;
  wire sig000003c6;
  wire sig000003c7;
  wire sig000003c8;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000003c9;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000003ca;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000003cb;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000003cc;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000003cd;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000003ce;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000003cf;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000003d0;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000003d1;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000003d2;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000003d3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000003d4;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000003d5;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000003d6;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000003d7;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000003d8;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000003d9;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000003da;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000003db;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000003dc;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000003dd;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000003de;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000003df;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000003e0;
  wire sig000003e1;
  wire sig000003e2;
  wire sig000003e3;
  wire sig000003e4;
  wire sig000003e5;
  wire sig000003e6;
  wire sig000003e7;
  wire sig000003e8;
  wire sig000003e9;
  wire sig000003ea;
  wire sig000003eb;
  wire sig000003ec;
  wire sig000003ed;
  wire sig000003ee;
  wire sig000003ef;
  wire sig000003f0;
  wire sig000003f1;
  wire sig000003f2;
  wire sig000003f3;
  wire sig000003f4;
  wire sig000003f5;
  wire sig000003f6;
  wire sig000003f7;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000003f8;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000003f9;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000003fa;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000003fb;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000003fc;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000003fd;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000003fe;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000003ff;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000400;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000401;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000402;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000403;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000404;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000405;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000406;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000407;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000408;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000409;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000040a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000040b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000040c;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000040d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000040e;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000040f;
  wire sig00000410;
  wire sig00000411;
  wire sig00000412;
  wire sig00000413;
  wire sig00000414;
  wire sig00000415;
  wire sig00000416;
  wire sig00000417;
  wire sig00000418;
  wire sig00000419;
  wire sig0000041a;
  wire sig0000041b;
  wire sig0000041c;
  wire sig0000041d;
  wire sig0000041e;
  wire sig0000041f;
  wire sig00000420;
  wire sig00000421;
  wire sig00000422;
  wire sig00000423;
  wire sig00000424;
  wire sig00000425;
  wire sig00000426;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000427;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000428;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000429;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000042a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000042b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000042c;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000042d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000042e;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000042f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000430;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000431;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000432;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000433;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000434;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000435;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000436;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000437;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000438;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000439;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000043a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000043b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000043c;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000043d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000043e;
  wire sig0000043f;
  wire sig00000440;
  wire sig00000441;
  wire sig00000442;
  wire sig00000443;
  wire sig00000444;
  wire sig00000445;
  wire sig00000446;
  wire sig00000447;
  wire sig00000448;
  wire sig00000449;
  wire sig0000044a;
  wire sig0000044b;
  wire sig0000044c;
  wire sig0000044d;
  wire sig0000044e;
  wire sig0000044f;
  wire sig00000450;
  wire sig00000451;
  wire sig00000452;
  wire sig00000453;
  wire sig00000454;
  wire sig00000455;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000456;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000457;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000458;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000459;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000045a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000045b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000045c;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000045d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000045e;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000045f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000460;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000461;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000462;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000463;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000464;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000465;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000466;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000467;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000468;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000469;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000046a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000046b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000046c;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000046d;
  wire sig0000046e;
  wire sig0000046f;
  wire sig00000470;
  wire sig00000471;
  wire sig00000472;
  wire sig00000473;
  wire sig00000474;
  wire sig00000475;
  wire sig00000476;
  wire sig00000477;
  wire sig00000478;
  wire sig00000479;
  wire sig0000047a;
  wire sig0000047b;
  wire sig0000047c;
  wire sig0000047d;
  wire sig0000047e;
  wire sig0000047f;
  wire sig00000480;
  wire sig00000481;
  wire sig00000482;
  wire sig00000483;
  wire sig00000484;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000485;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000486;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000487;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000488;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000489;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000048a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000048b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000048c;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000048d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000048e;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000048f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000490;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000491;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000492;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000493;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000494;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000495;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000496;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000497;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000498;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000499;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000049a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000049b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000049c;
  wire sig0000049d;
  wire sig0000049e;
  wire sig0000049f;
  wire sig000004a0;
  wire sig000004a1;
  wire sig000004a2;
  wire sig000004a3;
  wire sig000004a4;
  wire sig000004a5;
  wire sig000004a6;
  wire sig000004a7;
  wire sig000004a8;
  wire sig000004a9;
  wire sig000004aa;
  wire sig000004ab;
  wire sig000004ac;
  wire sig000004ad;
  wire sig000004ae;
  wire sig000004af;
  wire sig000004b0;
  wire sig000004b1;
  wire sig000004b2;
  wire sig000004b3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004b4;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004b5;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004b6;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004b7;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004b8;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004b9;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004ba;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004bb;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004bc;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004bd;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004be;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004bf;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004c0;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004c1;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004c2;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004c3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004c4;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004c5;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004c6;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004c7;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004c8;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004c9;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004ca;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004cb;
  wire sig000004cc;
  wire sig000004cd;
  wire sig000004ce;
  wire sig000004cf;
  wire sig000004d0;
  wire sig000004d1;
  wire sig000004d2;
  wire sig000004d3;
  wire sig000004d4;
  wire sig000004d5;
  wire sig000004d6;
  wire sig000004d7;
  wire sig000004d8;
  wire sig000004d9;
  wire sig000004da;
  wire sig000004db;
  wire sig000004dc;
  wire sig000004dd;
  wire sig000004de;
  wire sig000004df;
  wire sig000004e0;
  wire sig000004e1;
  wire sig000004e2;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004e3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004e4;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004e5;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004e6;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004e7;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004e8;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004e9;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004ea;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004eb;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004ec;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004ed;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004ee;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004ef;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004f0;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004f1;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004f2;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004f3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004f4;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004f5;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004f6;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004f7;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004f8;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004f9;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000004fa;
  wire sig000004fb;
  wire sig000004fc;
  wire sig000004fd;
  wire sig000004fe;
  wire sig000004ff;
  wire sig00000500;
  wire sig00000501;
  wire sig00000502;
  wire sig00000503;
  wire sig00000504;
  wire sig00000505;
  wire sig00000506;
  wire sig00000507;
  wire sig00000508;
  wire sig00000509;
  wire sig0000050a;
  wire sig0000050b;
  wire sig0000050c;
  wire sig0000050d;
  wire sig0000050e;
  wire sig0000050f;
  wire sig00000510;
  wire sig00000511;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000512;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000513;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000514;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000515;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000516;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000517;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000518;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000519;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000051a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000051b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000051c;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000051d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000051e;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000051f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000520;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000521;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000522;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000523;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000524;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000525;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000526;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000527;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000528;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000529;
  wire sig0000052a;
  wire sig0000052b;
  wire sig0000052c;
  wire sig0000052d;
  wire sig0000052e;
  wire sig0000052f;
  wire sig00000530;
  wire sig00000531;
  wire sig00000532;
  wire sig00000533;
  wire sig00000534;
  wire sig00000535;
  wire sig00000536;
  wire sig00000537;
  wire sig00000538;
  wire sig00000539;
  wire sig0000053a;
  wire sig0000053b;
  wire sig0000053c;
  wire sig0000053d;
  wire sig0000053e;
  wire sig0000053f;
  wire sig00000540;
  wire sig00000541;
  wire sig00000542;
  wire sig00000543;
  wire sig00000544;
  wire sig00000545;
  wire sig00000546;
  wire sig00000547;
  wire sig00000548;
  wire sig00000549;
  wire sig0000054a;
  wire sig0000054b;
  wire sig0000054c;
  wire sig0000054d;
  wire sig0000054e;
  wire sig0000054f;
  wire sig00000550;
  wire sig00000551;
  wire sig00000552;
  wire sig00000553;
  wire sig00000554;
  wire sig00000555;
  wire sig00000556;
  wire sig00000557;
  wire sig00000558;
  wire sig00000559;
  wire sig0000055a;
  wire sig0000055b;
  wire sig0000055c;
  wire sig0000055d;
  wire sig0000055e;
  wire sig0000055f;
  wire sig00000560;
  wire sig00000561;
  wire sig00000562;
  wire sig00000563;
  wire sig00000564;
  wire sig00000565;
  wire sig00000566;
  wire sig00000567;
  wire sig00000568;
  wire sig00000569;
  wire sig0000056a;
  wire sig0000056b;
  wire sig0000056c;
  wire sig0000056d;
  wire sig0000056e;
  wire sig0000056f;
  wire sig00000570;
  wire sig00000571;
  wire sig00000572;
  wire sig00000573;
  wire sig00000574;
  wire sig00000575;
  wire sig00000576;
  wire sig00000577;
  wire sig00000578;
  wire sig00000579;
  wire sig0000057a;
  wire sig0000057b;
  wire sig0000057c;
  wire sig0000057d;
  wire sig0000057e;
  wire sig0000057f;
  wire sig00000580;
  wire sig00000581;
  wire sig00000582;
  wire sig00000583;
  wire sig00000584;
  wire sig00000585;
  wire sig00000586;
  wire sig00000587;
  wire sig00000588;
  wire sig00000589;
  wire sig0000058a;
  wire sig0000058b;
  wire sig0000058c;
  wire sig0000058d;
  wire sig0000058e;
  wire sig0000058f;
  wire sig00000590;
  wire sig00000591;
  wire sig00000592;
  wire sig00000593;
  wire sig00000594;
  wire sig00000595;
  wire sig00000596;
  wire sig00000597;
  wire sig00000598;
  wire sig00000599;
  wire sig0000059a;
  wire sig0000059b;
  wire sig0000059c;
  wire sig0000059d;
  wire sig0000059e;
  wire sig0000059f;
  wire sig000005a0;
  wire sig000005a1;
  wire sig000005a2;
  wire sig000005a3;
  wire sig000005a4;
  wire sig000005a5;
  wire sig000005a6;
  wire sig000005a7;
  wire sig000005a8;
  wire sig000005a9;
  wire sig000005aa;
  wire sig000005ab;
  wire sig000005ac;
  wire sig000005ad;
  wire sig000005ae;
  wire sig000005af;
  wire sig000005b0;
  wire sig000005b1;
  wire sig000005b2;
  wire sig000005b3;
  wire sig000005b4;
  wire sig000005b5;
  wire sig000005b6;
  wire sig000005b7;
  wire sig000005b8;
  wire sig000005b9;
  wire sig000005ba;
  wire sig000005bb;
  wire sig000005bc;
  wire sig000005bd;
  wire sig000005be;
  wire sig000005bf;
  wire sig000005c0;
  wire sig000005c1;
  wire sig000005c2;
  wire sig000005c3;
  wire sig000005c4;
  wire sig000005c5;
  wire sig000005c6;
  wire sig000005c7;
  wire sig000005c8;
  wire sig000005c9;
  wire sig000005ca;
  wire sig000005cb;
  wire sig000005cc;
  wire sig000005cd;
  wire sig000005ce;
  wire sig000005cf;
  wire sig000005d0;
  wire sig000005d1;
  wire sig000005d2;
  wire sig000005d3;
  wire sig000005d4;
  wire sig000005d5;
  wire sig000005d6;
  wire sig000005d7;
  wire sig000005d8;
  wire sig000005d9;
  wire sig000005da;
  wire sig000005db;
  wire sig000005dc;
  wire sig000005dd;
  wire sig000005de;
  wire sig000005df;
  wire sig000005e0;
  wire sig000005e1;
  wire sig000005e2;
  wire sig000005e3;
  wire sig000005e4;
  wire sig000005e5;
  wire sig000005e6;
  wire sig000005e7;
  wire sig000005e8;
  wire sig000005e9;
  wire sig000005ea;
  wire sig000005eb;
  wire sig000005ec;
  wire sig000005ed;
  wire sig000005ee;
  wire sig000005ef;
  wire sig000005f0;
  wire sig000005f1;
  wire sig000005f2;
  wire sig000005f3;
  wire sig000005f4;
  wire sig000005f5;
  wire sig000005f6;
  wire sig000005f7;
  wire sig000005f8;
  wire sig000005f9;
  wire sig000005fa;
  wire sig000005fb;
  wire sig000005fc;
  wire sig000005fd;
  wire sig000005fe;
  wire sig000005ff;
  wire sig00000600;
  wire sig00000601;
  wire sig00000602;
  wire sig00000603;
  wire sig00000604;
  wire sig00000605;
  wire sig00000606;
  wire sig00000607;
  wire sig00000608;
  wire sig00000609;
  wire sig0000060a;
  wire sig0000060b;
  wire sig0000060c;
  wire sig0000060d;
  wire sig0000060e;
  wire sig0000060f;
  wire sig00000610;
  wire sig00000611;
  wire sig00000612;
  wire sig00000613;
  wire sig00000614;
  wire sig00000615;
  wire sig00000616;
  wire sig00000617;
  wire sig00000618;
  wire sig00000619;
  wire sig0000061a;
  wire sig0000061b;
  wire sig0000061c;
  wire sig0000061d;
  wire sig0000061e;
  wire sig0000061f;
  wire sig00000620;
  wire sig00000621;
  wire sig00000622;
  wire sig00000623;
  wire sig00000624;
  wire sig00000625;
  wire sig00000626;
  wire sig00000627;
  wire sig00000628;
  wire sig00000629;
  wire sig0000062a;
  wire sig0000062b;
  wire sig0000062c;
  wire sig0000062d;
  wire sig0000062e;
  wire sig0000062f;
  wire sig00000630;
  wire sig00000631;
  wire sig00000632;
  wire sig00000633;
  wire sig00000634;
  wire sig00000635;
  wire sig00000636;
  wire sig00000637;
  wire sig00000638;
  wire sig00000639;
  wire sig0000063a;
  wire sig0000063b;
  wire sig0000063c;
  wire sig0000063d;
  wire sig0000063e;
  wire sig0000063f;
  wire sig00000640;
  wire sig00000641;
  wire sig00000642;
  wire sig00000643;
  wire sig00000644;
  wire sig00000645;
  wire sig00000646;
  wire sig00000647;
  wire sig00000648;
  wire sig00000649;
  wire sig0000064a;
  wire sig0000064b;
  wire sig0000064c;
  wire sig0000064d;
  wire sig0000064e;
  wire sig0000064f;
  wire sig00000650;
  wire sig00000651;
  wire sig00000652;
  wire sig00000653;
  wire sig00000654;
  wire sig00000655;
  wire sig00000656;
  wire sig00000657;
  wire sig00000658;
  wire sig00000659;
  wire sig0000065a;
  wire sig0000065b;
  wire sig0000065c;
  wire sig0000065d;
  wire sig0000065e;
  wire sig0000065f;
  wire sig00000660;
  wire sig00000661;
  wire sig00000662;
  wire sig00000663;
  wire sig00000664;
  wire sig00000665;
  wire sig00000666;
  wire sig00000667;
  wire sig00000668;
  wire sig00000669;
  wire sig0000066a;
  wire sig0000066b;
  wire sig0000066c;
  wire sig0000066d;
  wire sig0000066e;
  wire sig0000066f;
  wire sig00000670;
  wire sig00000671;
  wire sig00000672;
  wire sig00000673;
  wire sig00000674;
  wire sig00000675;
  wire sig00000676;
  wire sig00000677;
  wire sig00000678;
  wire sig00000679;
  wire sig0000067a;
  wire sig0000067b;
  wire sig0000067c;
  wire sig0000067d;
  wire sig0000067e;
  wire sig0000067f;
  wire sig00000680;
  wire sig00000681;
  wire sig00000682;
  wire sig00000683;
  wire sig00000684;
  wire sig00000685;
  wire sig00000686;
  wire sig00000687;
  wire sig00000688;
  wire sig00000689;
  wire sig0000068a;
  wire sig0000068b;
  wire sig0000068c;
  wire sig0000068d;
  wire sig0000068e;
  wire sig0000068f;
  wire sig00000690;
  wire sig00000691;
  wire sig00000692;
  wire sig00000693;
  wire sig00000694;
  wire sig00000695;
  wire sig00000696;
  wire sig00000697;
  wire sig00000698;
  wire sig00000699;
  wire sig0000069a;
  wire sig0000069b;
  wire sig0000069c;
  wire sig0000069d;
  wire sig0000069e;
  wire sig0000069f;
  wire sig000006a0;
  wire sig000006a1;
  wire sig000006a2;
  wire sig000006a3;
  wire sig000006a4;
  wire sig000006a5;
  wire sig000006a6;
  wire sig000006a7;
  wire sig000006a8;
  wire sig000006a9;
  wire sig000006aa;
  wire sig000006ab;
  wire sig000006ac;
  wire sig000006ad;
  wire sig000006ae;
  wire sig000006af;
  wire sig000006b0;
  wire sig000006b1;
  wire sig000006b2;
  wire sig000006b3;
  wire sig000006b4;
  wire sig000006b5;
  wire sig000006b6;
  wire sig000006b7;
  wire sig000006b8;
  wire sig000006b9;
  wire sig000006ba;
  wire sig000006bb;
  wire sig000006bc;
  wire sig000006bd;
  wire sig000006be;
  wire sig000006bf;
  wire sig000006c0;
  wire sig000006c1;
  wire sig000006c2;
  wire sig000006c3;
  wire sig000006c4;
  wire sig000006c5;
  wire sig000006c6;
  wire sig000006c7;
  wire sig000006c8;
  wire sig000006c9;
  wire sig000006ca;
  wire sig000006cb;
  wire sig000006cc;
  wire sig000006cd;
  wire sig000006ce;
  wire sig000006cf;
  wire sig000006d0;
  wire sig000006d1;
  wire sig000006d2;
  wire sig000006d3;
  wire sig000006d4;
  wire sig000006d5;
  wire sig000006d6;
  wire sig000006d7;
  wire sig000006d8;
  wire sig000006d9;
  wire sig000006da;
  wire sig000006db;
  wire sig000006dc;
  wire sig000006dd;
  wire sig000006de;
  wire sig000006df;
  wire sig000006e0;
  wire sig000006e1;
  wire sig000006e2;
  wire sig000006e3;
  wire sig000006e4;
  wire sig000006e5;
  wire sig000006e6;
  wire sig000006e7;
  wire sig000006e8;
  wire sig000006e9;
  wire sig000006ea;
  wire sig000006eb;
  wire sig000006ec;
  wire sig000006ed;
  wire sig000006ee;
  wire sig000006ef;
  wire sig000006f0;
  wire sig000006f1;
  wire sig000006f2;
  wire sig000006f3;
  wire sig000006f4;
  wire sig000006f5;
  wire sig000006f6;
  wire sig000006f7;
  wire sig000006f8;
  wire sig000006f9;
  wire sig000006fa;
  wire sig000006fb;
  wire sig000006fc;
  wire sig000006fd;
  wire sig000006fe;
  wire sig000006ff;
  wire sig00000700;
  wire sig00000701;
  wire sig00000702;
  wire sig00000703;
  wire sig00000704;
  wire sig00000705;
  wire sig00000706;
  wire sig00000707;
  wire sig00000708;
  wire sig00000709;
  wire sig0000070a;
  wire sig0000070b;
  wire sig0000070c;
  wire sig0000070d;
  wire sig0000070e;
  wire sig0000070f;
  wire sig00000710;
  wire sig00000711;
  wire sig00000712;
  wire sig00000713;
  wire sig00000714;
  wire sig00000715;
  wire sig00000716;
  wire sig00000717;
  wire sig00000718;
  wire sig00000719;
  wire sig0000071a;
  wire sig0000071b;
  wire sig0000071c;
  wire sig0000071d;
  wire sig0000071e;
  wire sig0000071f;
  wire sig00000720;
  wire sig00000721;
  wire sig00000722;
  wire sig00000723;
  wire sig00000724;
  wire sig00000725;
  wire sig00000726;
  wire sig00000727;
  wire sig00000728;
  wire sig00000729;
  wire sig0000072a;
  wire sig0000072b;
  wire sig0000072c;
  wire sig0000072d;
  wire sig0000072e;
  wire sig0000072f;
  wire sig00000730;
  wire sig00000731;
  wire sig00000732;
  wire sig00000733;
  wire sig00000734;
  wire sig00000735;
  wire sig00000736;
  wire sig00000737;
  wire sig00000738;
  wire sig00000739;
  wire sig0000073a;
  wire sig0000073b;
  wire sig0000073c;
  wire sig0000073d;
  wire sig0000073e;
  wire sig0000073f;
  wire sig00000740;
  wire sig00000741;
  wire sig00000742;
  wire sig00000743;
  wire sig00000744;
  wire sig00000745;
  wire sig00000746;
  wire sig00000747;
  wire sig00000748;
  wire sig00000749;
  wire sig0000074a;
  wire sig0000074b;
  wire sig0000074c;
  wire sig0000074d;
  wire sig0000074e;
  wire sig0000074f;
  wire sig00000750;
  wire sig00000751;
  wire sig00000752;
  wire sig00000753;
  wire sig00000754;
  wire sig00000755;
  wire sig00000756;
  wire sig00000757;
  wire sig00000758;
  wire sig00000759;
  wire sig0000075a;
  wire sig0000075b;
  wire sig0000075c;
  wire sig0000075d;
  wire sig0000075e;
  wire sig0000075f;
  wire sig00000760;
  wire sig00000761;
  wire sig00000762;
  wire sig00000763;
  wire sig00000764;
  wire sig00000765;
  wire sig00000766;
  wire sig00000767;
  wire sig00000768;
  wire sig00000769;
  wire sig0000076a;
  wire sig0000076b;
  wire sig0000076c;
  wire sig0000076d;
  wire sig0000076e;
  wire sig0000076f;
  wire sig00000770;
  wire sig00000771;
  wire sig00000772;
  wire sig00000773;
  wire sig00000774;
  wire sig00000775;
  wire sig00000776;
  wire sig00000777;
  wire sig00000778;
  wire sig00000779;
  wire sig0000077a;
  wire sig0000077b;
  wire sig0000077c;
  wire sig0000077d;
  wire sig0000077e;
  wire sig0000077f;
  wire sig00000780;
  wire sig00000781;
  wire sig00000782;
  wire sig00000783;
  wire sig00000784;
  wire sig00000785;
  wire sig00000786;
  wire sig00000787;
  wire sig00000788;
  wire sig00000789;
  wire sig0000078a;
  wire sig0000078b;
  wire sig0000078c;
  wire sig0000078d;
  wire sig0000078e;
  wire sig0000078f;
  wire sig00000790;
  wire sig00000791;
  wire sig00000792;
  wire sig00000793;
  wire sig00000794;
  wire sig00000795;
  wire sig00000796;
  wire sig00000797;
  wire sig00000798;
  wire sig00000799;
  wire sig0000079a;
  wire sig0000079b;
  wire sig0000079c;
  wire sig0000079d;
  wire sig0000079e;
  wire sig0000079f;
  wire sig000007a0;
  wire sig000007a1;
  wire sig000007a2;
  wire sig000007a3;
  wire sig000007a4;
  wire sig000007a5;
  wire sig000007a6;
  wire sig000007a7;
  wire sig000007a8;
  wire sig000007a9;
  wire sig000007aa;
  wire sig000007ab;
  wire sig000007ac;
  wire sig000007ad;
  wire sig000007ae;
  wire sig000007af;
  wire sig000007b0;
  wire sig000007b1;
  wire sig000007b2;
  wire sig000007b3;
  wire sig000007b4;
  wire sig000007b5;
  wire sig000007b6;
  wire sig000007b7;
  wire sig000007b8;
  wire sig000007b9;
  wire sig000007ba;
  wire sig000007bb;
  wire sig000007bc;
  wire sig000007bd;
  wire sig000007be;
  wire sig000007bf;
  wire sig000007c0;
  wire sig000007c1;
  wire sig000007c2;
  wire sig000007c3;
  wire sig000007c4;
  wire sig000007c5;
  wire sig000007c6;
  wire sig000007c7;
  wire sig000007c8;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000007ca;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000007cb;
  wire sig000007cc;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000007cd;
  wire sig000007ce;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000007cf;
  wire sig000007d0;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000007d1;
  wire sig000007d2;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000007d3;
  wire sig000007d4;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000007d5;
  wire sig000007d6;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000007d7;
  wire sig000007d8;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000007d9;
  wire sig000007da;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000007db;
  wire sig000007dc;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000007dd;
  wire sig000007de;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000007df;
  wire sig000007e0;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000007e1;
  wire sig000007e2;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000007e3;
  wire sig000007e4;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000007e5;
  wire sig000007e6;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000007e7;
  wire sig000007e8;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000007e9;
  wire sig000007ea;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000007eb;
  wire sig000007ec;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000007ed;
  wire sig000007ee;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000007ef;
  wire sig000007f0;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000007f1;
  wire sig000007f2;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000007f3;
  wire sig000007f4;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000007f5;
  wire sig000007f6;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000007f7;
  wire sig000007f8;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000007f9;
  wire sig000007fa;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000007fb;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000007fc;
  wire sig000007fd;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000007fe;
  wire sig000007ff;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000800;
  wire sig00000801;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000802;
  wire sig00000803;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000804;
  wire sig00000805;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000806;
  wire sig00000807;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000808;
  wire sig00000809;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000080a;
  wire sig0000080b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000080c;
  wire sig0000080d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000080e;
  wire sig0000080f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000810;
  wire sig00000811;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000812;
  wire sig00000813;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000814;
  wire sig00000815;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000816;
  wire sig00000817;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000818;
  wire sig00000819;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000081a;
  wire sig0000081b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000081c;
  wire sig0000081d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000081e;
  wire sig0000081f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000820;
  wire sig00000821;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000822;
  wire sig00000823;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000824;
  wire sig00000825;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000826;
  wire sig00000827;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000828;
  wire sig00000829;
  wire sig0000082a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000082b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000082c;
  wire sig0000082d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000082e;
  wire sig0000082f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000830;
  wire sig00000831;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000832;
  wire sig00000833;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000834;
  wire sig00000835;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000836;
  wire sig00000837;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000838;
  wire sig00000839;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000083a;
  wire sig0000083b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000083c;
  wire sig0000083d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000083e;
  wire sig0000083f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000840;
  wire sig00000841;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000842;
  wire sig00000843;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000844;
  wire sig00000845;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000846;
  wire sig00000847;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000848;
  wire sig00000849;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000084a;
  wire sig0000084b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000084c;
  wire sig0000084d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000084e;
  wire sig0000084f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000850;
  wire sig00000851;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000852;
  wire sig00000853;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000854;
  wire sig00000855;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000856;
  wire sig00000857;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000858;
  wire sig00000859;
  wire sig0000085a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000085b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000085c;
  wire sig0000085d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000085e;
  wire sig0000085f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000860;
  wire sig00000861;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000862;
  wire sig00000863;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000864;
  wire sig00000865;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000866;
  wire sig00000867;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000868;
  wire sig00000869;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000086a;
  wire sig0000086b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000086c;
  wire sig0000086d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000086e;
  wire sig0000086f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000870;
  wire sig00000871;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000872;
  wire sig00000873;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000874;
  wire sig00000875;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000876;
  wire sig00000877;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000878;
  wire sig00000879;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000087a;
  wire sig0000087b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000087c;
  wire sig0000087d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000087e;
  wire sig0000087f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000880;
  wire sig00000881;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000882;
  wire sig00000883;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000884;
  wire sig00000885;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000886;
  wire sig00000887;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000888;
  wire sig00000889;
  wire sig0000088a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000088b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000088c;
  wire sig0000088d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000088e;
  wire sig0000088f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000890;
  wire sig00000891;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000892;
  wire sig00000893;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000894;
  wire sig00000895;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000896;
  wire sig00000897;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000898;
  wire sig00000899;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000089a;
  wire sig0000089b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000089c;
  wire sig0000089d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000089e;
  wire sig0000089f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000008a0;
  wire sig000008a1;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000008a2;
  wire sig000008a3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000008a4;
  wire sig000008a5;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000008a6;
  wire sig000008a7;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000008a8;
  wire sig000008a9;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000008aa;
  wire sig000008ab;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000008ac;
  wire sig000008ad;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000008ae;
  wire sig000008af;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000008b0;
  wire sig000008b1;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000008b2;
  wire sig000008b3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000008b4;
  wire sig000008b5;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000008b6;
  wire sig000008b7;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000008b8;
  wire sig000008b9;
  wire sig000008ba;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000008bb;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000008bc;
  wire sig000008bd;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000008be;
  wire sig000008bf;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000008c0;
  wire sig000008c1;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000008c2;
  wire sig000008c3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000008c4;
  wire sig000008c5;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000008c6;
  wire sig000008c7;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000008c8;
  wire sig000008c9;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000008ca;
  wire sig000008cb;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000008cc;
  wire sig000008cd;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000008ce;
  wire sig000008cf;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000008d0;
  wire sig000008d1;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000008d2;
  wire sig000008d3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000008d4;
  wire sig000008d5;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000008d6;
  wire sig000008d7;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000008d8;
  wire sig000008d9;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000008da;
  wire sig000008db;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000008dc;
  wire sig000008dd;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000008de;
  wire sig000008df;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000008e0;
  wire sig000008e1;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000008e2;
  wire sig000008e3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000008e4;
  wire sig000008e5;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000008e6;
  wire sig000008e7;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000008e8;
  wire sig000008e9;
  wire sig000008ea;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000008eb;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000008ec;
  wire sig000008ed;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000008ee;
  wire sig000008ef;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000008f0;
  wire sig000008f1;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000008f2;
  wire sig000008f3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000008f4;
  wire sig000008f5;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000008f6;
  wire sig000008f7;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000008f8;
  wire sig000008f9;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000008fa;
  wire sig000008fb;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000008fc;
  wire sig000008fd;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000008fe;
  wire sig000008ff;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000900;
  wire sig00000901;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000902;
  wire sig00000903;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000904;
  wire sig00000905;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000906;
  wire sig00000907;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000908;
  wire sig00000909;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000090a;
  wire sig0000090b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000090c;
  wire sig0000090d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000090e;
  wire sig0000090f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000910;
  wire sig00000911;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000912;
  wire sig00000913;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000914;
  wire sig00000915;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000916;
  wire sig00000917;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000918;
  wire sig00000919;
  wire sig0000091a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000091b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000091c;
  wire sig0000091d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000091e;
  wire sig0000091f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000920;
  wire sig00000921;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000922;
  wire sig00000923;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000924;
  wire sig00000925;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000926;
  wire sig00000927;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000928;
  wire sig00000929;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000092a;
  wire sig0000092b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000092c;
  wire sig0000092d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000092e;
  wire sig0000092f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000930;
  wire sig00000931;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000932;
  wire sig00000933;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000934;
  wire sig00000935;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000936;
  wire sig00000937;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000938;
  wire sig00000939;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000093a;
  wire sig0000093b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000093c;
  wire sig0000093d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000093e;
  wire sig0000093f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000940;
  wire sig00000941;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000942;
  wire sig00000943;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000944;
  wire sig00000945;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000946;
  wire sig00000947;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000948;
  wire sig00000949;
  wire sig0000094a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000094b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000094c;
  wire sig0000094d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000094e;
  wire sig0000094f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000950;
  wire sig00000951;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000952;
  wire sig00000953;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000954;
  wire sig00000955;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000956;
  wire sig00000957;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000958;
  wire sig00000959;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000095a;
  wire sig0000095b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000095c;
  wire sig0000095d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000095e;
  wire sig0000095f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000960;
  wire sig00000961;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000962;
  wire sig00000963;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000964;
  wire sig00000965;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000966;
  wire sig00000967;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000968;
  wire sig00000969;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000096a;
  wire sig0000096b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000096c;
  wire sig0000096d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000096e;
  wire sig0000096f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000970;
  wire sig00000971;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000972;
  wire sig00000973;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000974;
  wire sig00000975;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000976;
  wire sig00000977;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000978;
  wire sig00000979;
  wire sig0000097a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000097b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000097c;
  wire sig0000097d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000097e;
  wire sig0000097f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000980;
  wire sig00000981;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000982;
  wire sig00000983;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000984;
  wire sig00000985;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000986;
  wire sig00000987;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000988;
  wire sig00000989;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000098a;
  wire sig0000098b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000098c;
  wire sig0000098d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000098e;
  wire sig0000098f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000990;
  wire sig00000991;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000992;
  wire sig00000993;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000994;
  wire sig00000995;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000996;
  wire sig00000997;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000998;
  wire sig00000999;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000099a;
  wire sig0000099b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000099c;
  wire sig0000099d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000099e;
  wire sig0000099f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000009a0;
  wire sig000009a1;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000009a2;
  wire sig000009a3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000009a4;
  wire sig000009a5;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000009a6;
  wire sig000009a7;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000009a8;
  wire sig000009a9;
  wire sig000009aa;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000009ab;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000009ac;
  wire sig000009ad;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000009ae;
  wire sig000009af;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000009b0;
  wire sig000009b1;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000009b2;
  wire sig000009b3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000009b4;
  wire sig000009b5;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000009b6;
  wire sig000009b7;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000009b8;
  wire sig000009b9;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000009ba;
  wire sig000009bb;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000009bc;
  wire sig000009bd;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000009be;
  wire sig000009bf;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000009c0;
  wire sig000009c1;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000009c2;
  wire sig000009c3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000009c4;
  wire sig000009c5;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000009c6;
  wire sig000009c7;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000009c8;
  wire sig000009c9;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000009ca;
  wire sig000009cb;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000009cc;
  wire sig000009cd;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000009ce;
  wire sig000009cf;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000009d0;
  wire sig000009d1;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000009d2;
  wire sig000009d3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000009d4;
  wire sig000009d5;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000009d6;
  wire sig000009d7;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000009d8;
  wire sig000009d9;
  wire sig000009da;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000009db;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000009dc;
  wire sig000009dd;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000009de;
  wire sig000009df;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000009e0;
  wire sig000009e1;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000009e2;
  wire sig000009e3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000009e4;
  wire sig000009e5;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000009e6;
  wire sig000009e7;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000009e8;
  wire sig000009e9;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000009ea;
  wire sig000009eb;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000009ec;
  wire sig000009ed;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000009ee;
  wire sig000009ef;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000009f0;
  wire sig000009f1;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000009f2;
  wire sig000009f3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000009f4;
  wire sig000009f5;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000009f6;
  wire sig000009f7;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000009f8;
  wire sig000009f9;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000009fa;
  wire sig000009fb;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000009fc;
  wire sig000009fd;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000009fe;
  wire sig000009ff;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a00;
  wire sig00000a01;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a02;
  wire sig00000a03;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a04;
  wire sig00000a05;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a06;
  wire sig00000a07;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a08;
  wire sig00000a09;
  wire sig00000a0a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a0b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a0c;
  wire sig00000a0d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a0e;
  wire sig00000a0f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a10;
  wire sig00000a11;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a12;
  wire sig00000a13;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a14;
  wire sig00000a15;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a16;
  wire sig00000a17;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a18;
  wire sig00000a19;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a1a;
  wire sig00000a1b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a1c;
  wire sig00000a1d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a1e;
  wire sig00000a1f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a20;
  wire sig00000a21;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a22;
  wire sig00000a23;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a24;
  wire sig00000a25;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a26;
  wire sig00000a27;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a28;
  wire sig00000a29;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a2a;
  wire sig00000a2b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a2c;
  wire sig00000a2d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a2e;
  wire sig00000a2f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a30;
  wire sig00000a31;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a32;
  wire sig00000a33;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a34;
  wire sig00000a35;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a36;
  wire sig00000a37;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a38;
  wire sig00000a39;
  wire sig00000a3a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a3b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a3c;
  wire sig00000a3d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a3e;
  wire sig00000a3f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a40;
  wire sig00000a41;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a42;
  wire sig00000a43;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a44;
  wire sig00000a45;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a46;
  wire sig00000a47;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a48;
  wire sig00000a49;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a4a;
  wire sig00000a4b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a4c;
  wire sig00000a4d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a4e;
  wire sig00000a4f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a50;
  wire sig00000a51;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a52;
  wire sig00000a53;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a54;
  wire sig00000a55;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a56;
  wire sig00000a57;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a58;
  wire sig00000a59;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a5a;
  wire sig00000a5b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a5c;
  wire sig00000a5d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a5e;
  wire sig00000a5f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a60;
  wire sig00000a61;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a62;
  wire sig00000a63;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a64;
  wire sig00000a65;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a66;
  wire sig00000a67;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a68;
  wire sig00000a69;
  wire sig00000a6a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a6b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a6c;
  wire sig00000a6d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a6e;
  wire sig00000a6f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a70;
  wire sig00000a71;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a72;
  wire sig00000a73;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a74;
  wire sig00000a75;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a76;
  wire sig00000a77;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a78;
  wire sig00000a79;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a7a;
  wire sig00000a7b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a7c;
  wire sig00000a7d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a7e;
  wire sig00000a7f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a80;
  wire sig00000a81;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a82;
  wire sig00000a83;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a84;
  wire sig00000a85;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a86;
  wire sig00000a87;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a88;
  wire sig00000a89;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a8a;
  wire sig00000a8b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a8c;
  wire sig00000a8d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a8e;
  wire sig00000a8f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a90;
  wire sig00000a91;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a92;
  wire sig00000a93;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a94;
  wire sig00000a95;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a96;
  wire sig00000a97;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a98;
  wire sig00000a99;
  wire sig00000a9a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a9b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a9c;
  wire sig00000a9d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000a9e;
  wire sig00000a9f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000aa0;
  wire sig00000aa1;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000aa2;
  wire sig00000aa3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000aa4;
  wire sig00000aa5;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000aa6;
  wire sig00000aa7;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000aa8;
  wire sig00000aa9;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000aaa;
  wire sig00000aab;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000aac;
  wire sig00000aad;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000aae;
  wire sig00000aaf;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000ab0;
  wire sig00000ab1;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000ab2;
  wire sig00000ab3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000ab4;
  wire sig00000ab5;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000ab6;
  wire sig00000ab7;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000ab8;
  wire sig00000ab9;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000aba;
  wire sig00000abb;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000abc;
  wire sig00000abd;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000abe;
  wire sig00000abf;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000ac0;
  wire sig00000ac1;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000ac2;
  wire sig00000ac3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000ac4;
  wire sig00000ac5;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000ac6;
  wire sig00000ac7;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000ac8;
  wire sig00000ac9;
  wire sig00000aca;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000acb;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000acc;
  wire sig00000acd;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000ace;
  wire sig00000acf;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000ad0;
  wire sig00000ad1;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000ad2;
  wire sig00000ad3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000ad4;
  wire sig00000ad5;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000ad6;
  wire sig00000ad7;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000ad8;
  wire sig00000ad9;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000ada;
  wire sig00000adb;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000adc;
  wire sig00000add;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000ade;
  wire sig00000adf;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000ae0;
  wire sig00000ae1;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000ae2;
  wire sig00000ae3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000ae4;
  wire sig00000ae5;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000ae6;
  wire sig00000ae7;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000ae8;
  wire sig00000ae9;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000aea;
  wire sig00000aeb;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000aec;
  wire sig00000aed;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000aee;
  wire sig00000aef;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000af0;
  wire sig00000af1;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000af2;
  wire sig00000af3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000af4;
  wire sig00000af5;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000af6;
  wire sig00000af7;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000af8;
  wire sig00000af9;
  wire sig00000afa;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000afb;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000afc;
  wire sig00000afd;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000afe;
  wire sig00000aff;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b00;
  wire sig00000b01;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b02;
  wire sig00000b03;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b04;
  wire sig00000b05;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b06;
  wire sig00000b07;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b08;
  wire sig00000b09;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b0a;
  wire sig00000b0b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b0c;
  wire sig00000b0d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b0e;
  wire sig00000b0f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b10;
  wire sig00000b11;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b12;
  wire sig00000b13;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b14;
  wire sig00000b15;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b16;
  wire sig00000b17;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b18;
  wire sig00000b19;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b1a;
  wire sig00000b1b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b1c;
  wire sig00000b1d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b1e;
  wire sig00000b1f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b20;
  wire sig00000b21;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b22;
  wire sig00000b23;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b24;
  wire sig00000b25;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b26;
  wire sig00000b27;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b28;
  wire sig00000b29;
  wire sig00000b2a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b2b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b2c;
  wire sig00000b2d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b2e;
  wire sig00000b2f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b30;
  wire sig00000b31;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b32;
  wire sig00000b33;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b34;
  wire sig00000b35;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b36;
  wire sig00000b37;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b38;
  wire sig00000b39;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b3a;
  wire sig00000b3b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b3c;
  wire sig00000b3d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b3e;
  wire sig00000b3f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b40;
  wire sig00000b41;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b42;
  wire sig00000b43;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b44;
  wire sig00000b45;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b46;
  wire sig00000b47;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b48;
  wire sig00000b49;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b4a;
  wire sig00000b4b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b4c;
  wire sig00000b4d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b4e;
  wire sig00000b4f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b50;
  wire sig00000b51;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b52;
  wire sig00000b53;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b54;
  wire sig00000b55;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b56;
  wire sig00000b57;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b58;
  wire sig00000b59;
  wire sig00000b5a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b5b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b5c;
  wire sig00000b5d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b5e;
  wire sig00000b5f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b60;
  wire sig00000b61;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b62;
  wire sig00000b63;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b64;
  wire sig00000b65;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b66;
  wire sig00000b67;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b68;
  wire sig00000b69;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b6a;
  wire sig00000b6b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b6c;
  wire sig00000b6d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b6e;
  wire sig00000b6f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b70;
  wire sig00000b71;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b72;
  wire sig00000b73;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b74;
  wire sig00000b75;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b76;
  wire sig00000b77;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b78;
  wire sig00000b79;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b7a;
  wire sig00000b7b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b7c;
  wire sig00000b7d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b7e;
  wire sig00000b7f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b80;
  wire sig00000b81;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b82;
  wire sig00000b83;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b84;
  wire sig00000b85;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b86;
  wire sig00000b87;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b88;
  wire sig00000b89;
  wire sig00000b8a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b8b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b8c;
  wire sig00000b8d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b8e;
  wire sig00000b8f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b90;
  wire sig00000b91;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b92;
  wire sig00000b93;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b94;
  wire sig00000b95;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b96;
  wire sig00000b97;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b98;
  wire sig00000b99;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b9a;
  wire sig00000b9b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b9c;
  wire sig00000b9d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000b9e;
  wire sig00000b9f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000ba0;
  wire sig00000ba1;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000ba2;
  wire sig00000ba3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000ba4;
  wire sig00000ba5;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000ba6;
  wire sig00000ba7;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000ba8;
  wire sig00000ba9;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000baa;
  wire sig00000bab;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000bac;
  wire sig00000bad;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000bae;
  wire sig00000baf;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000bb0;
  wire sig00000bb1;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000bb2;
  wire sig00000bb3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000bb4;
  wire sig00000bb5;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000bb6;
  wire sig00000bb7;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000bb8;
  wire sig00000bb9;
  wire sig00000bba;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000bbb;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000bbc;
  wire sig00000bbd;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000bbe;
  wire sig00000bbf;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000bc0;
  wire sig00000bc1;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000bc2;
  wire sig00000bc3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000bc4;
  wire sig00000bc5;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000bc6;
  wire sig00000bc7;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000bc8;
  wire sig00000bc9;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000bca;
  wire sig00000bcb;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000bcc;
  wire sig00000bcd;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000bce;
  wire sig00000bcf;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000bd0;
  wire sig00000bd1;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000bd2;
  wire sig00000bd3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000bd4;
  wire sig00000bd5;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000bd6;
  wire sig00000bd7;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000bd8;
  wire sig00000bd9;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000bda;
  wire sig00000bdb;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000bdc;
  wire sig00000bdd;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000bde;
  wire sig00000bdf;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000be0;
  wire sig00000be1;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000be2;
  wire sig00000be3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000be4;
  wire sig00000be5;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000be6;
  wire sig00000be7;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000be8;
  wire sig00000be9;
  wire sig00000bea;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000beb;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000bec;
  wire sig00000bed;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000bee;
  wire sig00000bef;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000bf0;
  wire sig00000bf1;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000bf2;
  wire sig00000bf3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000bf4;
  wire sig00000bf5;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000bf6;
  wire sig00000bf7;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000bf8;
  wire sig00000bf9;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000bfa;
  wire sig00000bfb;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000bfc;
  wire sig00000bfd;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000bfe;
  wire sig00000bff;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c00;
  wire sig00000c01;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c02;
  wire sig00000c03;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c04;
  wire sig00000c05;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c06;
  wire sig00000c07;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c08;
  wire sig00000c09;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c0a;
  wire sig00000c0b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c0c;
  wire sig00000c0d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c0e;
  wire sig00000c0f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c10;
  wire sig00000c11;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c12;
  wire sig00000c13;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c14;
  wire sig00000c15;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c16;
  wire sig00000c17;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c18;
  wire sig00000c19;
  wire sig00000c1a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c1b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c1c;
  wire sig00000c1d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c1e;
  wire sig00000c1f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c20;
  wire sig00000c21;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c22;
  wire sig00000c23;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c24;
  wire sig00000c25;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c26;
  wire sig00000c27;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c28;
  wire sig00000c29;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c2a;
  wire sig00000c2b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c2c;
  wire sig00000c2d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c2e;
  wire sig00000c2f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c30;
  wire sig00000c31;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c32;
  wire sig00000c33;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c34;
  wire sig00000c35;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c36;
  wire sig00000c37;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c38;
  wire sig00000c39;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c3a;
  wire sig00000c3b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c3c;
  wire sig00000c3d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c3e;
  wire sig00000c3f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c40;
  wire sig00000c41;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c42;
  wire sig00000c43;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c44;
  wire sig00000c45;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c46;
  wire sig00000c47;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c48;
  wire sig00000c49;
  wire sig00000c4a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c4b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c4c;
  wire sig00000c4d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c4e;
  wire sig00000c4f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c50;
  wire sig00000c51;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c52;
  wire sig00000c53;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c54;
  wire sig00000c55;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c56;
  wire sig00000c57;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c58;
  wire sig00000c59;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c5a;
  wire sig00000c5b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c5c;
  wire sig00000c5d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c5e;
  wire sig00000c5f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c60;
  wire sig00000c61;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c62;
  wire sig00000c63;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c64;
  wire sig00000c65;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c66;
  wire sig00000c67;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c68;
  wire sig00000c69;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c6a;
  wire sig00000c6b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c6c;
  wire sig00000c6d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c6e;
  wire sig00000c6f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c70;
  wire sig00000c71;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c72;
  wire sig00000c73;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c74;
  wire sig00000c75;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c76;
  wire sig00000c77;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c78;
  wire sig00000c79;
  wire sig00000c7a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000c7b;
  wire sig00000c7c;
  wire sig00000c7d;
  wire sig00000c7e;
  wire sig00000c7f;
  wire sig00000c80;
  wire sig00000c81;
  wire sig00000c82;
  wire sig00000c83;
  wire sig00000c84;
  wire sig00000c85;
  wire sig00000c86;
  wire sig00000c87;
  wire sig00000c88;
  wire sig00000c89;
  wire sig00000c8a;
  wire sig00000c8b;
  wire sig00000c8c;
  wire sig00000c8d;
  wire sig00000c8e;
  wire sig00000c8f;
  wire sig00000c90;
  wire sig00000c91;
  wire sig00000c92;
  wire sig00000c93;
  wire sig00000c94;
  wire sig00000c95;
  wire sig00000c96;
  wire sig00000c97;
  wire sig00000c98;
  wire sig00000c99;
  wire sig00000c9a;
  wire sig00000c9b;
  wire sig00000c9c;
  wire sig00000c9d;
  wire sig00000c9e;
  wire sig00000c9f;
  wire sig00000ca0;
  wire sig00000ca1;
  wire sig00000ca2;
  wire sig00000ca3;
  wire sig00000ca4;
  wire sig00000ca5;
  wire sig00000ca6;
  wire sig00000ca7;
  wire sig00000ca8;
  wire sig00000ca9;
  wire sig00000caa;
  wire sig00000cab;
  wire sig00000cac;
  wire sig00000cad;
  wire sig00000cae;
  wire sig00000caf;
  wire sig00000cb0;
  wire sig00000cb1;
  wire sig00000cb2;
  wire sig00000cb3;
  wire sig00000cb4;
  wire sig00000cb5;
  wire sig00000cb6;
  wire sig00000cb7;
  wire sig00000cb8;
  wire sig00000cb9;
  wire sig00000cba;
  wire sig00000cbb;
  wire sig00000cbc;
  wire sig00000cbd;
  wire sig00000cbe;
  wire sig00000cbf;
  wire sig00000cc0;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000cc1;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000cc2;
  wire sig00000cc3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000cc4;
  wire sig00000cc5;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000cc6;
  wire sig00000cc7;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000cc8;
  wire sig00000cc9;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000cca;
  wire sig00000ccb;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000ccc;
  wire sig00000ccd;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000cce;
  wire sig00000ccf;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000cd0;
  wire sig00000cd1;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000cd2;
  wire sig00000cd3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000cd4;
  wire sig00000cd5;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000cd6;
  wire sig00000cd7;
  wire sig00000cd8;
  wire sig00000cd9;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000cda;
  wire sig00000cdb;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000cdc;
  wire sig00000cdd;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000cde;
  wire sig00000cdf;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000ce0;
  wire sig00000ce1;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000ce2;
  wire sig00000ce3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000ce4;
  wire sig00000ce5;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000ce6;
  wire sig00000ce7;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000ce8;
  wire sig00000ce9;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000cea;
  wire sig00000ceb;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000cec;
  wire sig00000ced;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000cee;
  wire sig00000cef;
  wire sig00000cf0;
  wire sig00000cf1;
  wire sig00000cf2;
  wire sig00000cf3;
  wire sig00000cf4;
  wire sig00000cf5;
  wire sig00000cf6;
  wire sig00000cf7;
  wire sig00000cf8;
  wire sig00000cf9;
  wire sig00000cfa;
  wire sig00000cfb;
  wire sig00000cfc;
  wire sig00000cfd;
  wire sig00000cfe;
  wire sig00000cff;
  wire sig00000d00;
  wire sig00000d01;
  wire sig00000d02;
  wire sig00000d03;
  wire sig00000d04;
  wire sig00000d05;
  wire sig00000d06;
  wire sig00000d07;
  wire sig00000d08;
  wire sig00000d09;
  wire sig00000d0a;
  wire sig00000d0b;
  wire sig00000d0c;
  wire sig00000d0d;
  wire sig00000d0e;
  wire sig00000d0f;
  wire sig00000d10;
  wire sig00000d11;
  wire sig00000d12;
  wire sig00000d13;
  wire sig00000d14;
  wire sig00000d15;
  wire sig00000d16;
  wire sig00000d17;
  wire sig00000d18;
  wire sig00000d19;
  wire sig00000d1a;
  wire sig00000d1b;
  wire sig00000d1c;
  wire sig00000d1d;
  wire sig00000d1e;
  wire sig00000d1f;
  wire sig00000d20;
  wire sig00000d21;
  wire sig00000d22;
  wire sig00000d23;
  wire sig00000d24;
  wire sig00000d25;
  wire sig00000d26;
  wire sig00000d27;
  wire sig00000d28;
  wire sig00000d29;
  wire sig00000d2a;
  wire sig00000d2b;
  wire sig00000d2c;
  wire sig00000d2d;
  wire sig00000d2e;
  wire sig00000d2f;
  wire sig00000d30;
  wire sig00000d31;
  wire sig00000d32;
  wire sig00000d33;
  wire sig00000d34;
  wire sig00000d35;
  wire sig00000d36;
  wire sig00000d37;
  wire sig00000d38;
  wire sig00000d39;
  wire sig00000d3a;
  wire sig00000d3b;
  wire sig00000d3c;
  wire sig00000d3d;
  wire sig00000d3e;
  wire sig00000d3f;
  wire sig00000d40;
  wire sig00000d41;
  wire [3:1]NLW_blk00000004_CARRY4_CO_UNCONNECTED;
  wire [3:1]NLW_blk00000004_CARRY4_DI_UNCONNECTED;
  wire [3:0]NLW_blk00000004_CARRY4_O_UNCONNECTED;
  wire [3:2]NLW_blk00000004_CARRY4_S_UNCONNECTED;
  wire [3:0]NLW_blk0000028a_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_blk0000028a_CARRY4_DI_UNCONNECTED;
  wire [3:1]NLW_blk0000028a_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk0000028a_CARRY4_S_UNCONNECTED;
  wire [3:0]NLW_blk000002bb_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_blk000002bb_CARRY4_DI_UNCONNECTED;
  wire [3:1]NLW_blk000002bb_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk000002bb_CARRY4_S_UNCONNECTED;
  wire [0:0]NLW_blk000002eb_CARRY4_O_UNCONNECTED;
  wire [3:0]NLW_blk000002ec_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_blk000002ec_CARRY4_DI_UNCONNECTED;
  wire [3:1]NLW_blk000002ec_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk000002ec_CARRY4_S_UNCONNECTED;
  wire [0:0]NLW_blk0000031c_CARRY4_O_UNCONNECTED;
  wire [3:0]NLW_blk0000031d_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_blk0000031d_CARRY4_DI_UNCONNECTED;
  wire [3:1]NLW_blk0000031d_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk0000031d_CARRY4_S_UNCONNECTED;
  wire [0:0]NLW_blk0000034d_CARRY4_O_UNCONNECTED;
  wire [3:0]NLW_blk0000034e_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_blk0000034e_CARRY4_DI_UNCONNECTED;
  wire [3:1]NLW_blk0000034e_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk0000034e_CARRY4_S_UNCONNECTED;
  wire [0:0]NLW_blk0000037e_CARRY4_O_UNCONNECTED;
  wire [3:0]NLW_blk0000037f_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_blk0000037f_CARRY4_DI_UNCONNECTED;
  wire [3:1]NLW_blk0000037f_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk0000037f_CARRY4_S_UNCONNECTED;
  wire [0:0]NLW_blk000003af_CARRY4_O_UNCONNECTED;
  wire [3:0]NLW_blk000003b0_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_blk000003b0_CARRY4_DI_UNCONNECTED;
  wire [3:1]NLW_blk000003b0_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk000003b0_CARRY4_S_UNCONNECTED;
  wire [0:0]NLW_blk000003e0_CARRY4_O_UNCONNECTED;
  wire [3:0]NLW_blk000003e1_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_blk000003e1_CARRY4_DI_UNCONNECTED;
  wire [3:1]NLW_blk000003e1_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk000003e1_CARRY4_S_UNCONNECTED;
  wire [0:0]NLW_blk00000411_CARRY4_O_UNCONNECTED;
  wire [3:0]NLW_blk00000412_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_blk00000412_CARRY4_DI_UNCONNECTED;
  wire [3:1]NLW_blk00000412_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk00000412_CARRY4_S_UNCONNECTED;
  wire [0:0]NLW_blk00000442_CARRY4_O_UNCONNECTED;
  wire [3:0]NLW_blk00000443_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_blk00000443_CARRY4_DI_UNCONNECTED;
  wire [3:1]NLW_blk00000443_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk00000443_CARRY4_S_UNCONNECTED;
  wire [0:0]NLW_blk00000473_CARRY4_O_UNCONNECTED;
  wire [3:0]NLW_blk00000474_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_blk00000474_CARRY4_DI_UNCONNECTED;
  wire [3:1]NLW_blk00000474_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk00000474_CARRY4_S_UNCONNECTED;
  wire [0:0]NLW_blk000004a4_CARRY4_O_UNCONNECTED;
  wire [3:0]NLW_blk000004a5_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_blk000004a5_CARRY4_DI_UNCONNECTED;
  wire [3:1]NLW_blk000004a5_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk000004a5_CARRY4_S_UNCONNECTED;
  wire [0:0]NLW_blk000004d5_CARRY4_O_UNCONNECTED;
  wire [3:0]NLW_blk000004d6_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_blk000004d6_CARRY4_DI_UNCONNECTED;
  wire [3:1]NLW_blk000004d6_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk000004d6_CARRY4_S_UNCONNECTED;
  wire [0:0]NLW_blk00000506_CARRY4_O_UNCONNECTED;
  wire [3:0]NLW_blk00000507_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_blk00000507_CARRY4_DI_UNCONNECTED;
  wire [3:1]NLW_blk00000507_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk00000507_CARRY4_S_UNCONNECTED;
  wire [0:0]NLW_blk00000537_CARRY4_O_UNCONNECTED;
  wire [3:0]NLW_blk00000538_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_blk00000538_CARRY4_DI_UNCONNECTED;
  wire [3:1]NLW_blk00000538_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk00000538_CARRY4_S_UNCONNECTED;
  wire [0:0]NLW_blk00000568_CARRY4_O_UNCONNECTED;
  wire [3:0]NLW_blk00000569_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_blk00000569_CARRY4_DI_UNCONNECTED;
  wire [3:1]NLW_blk00000569_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk00000569_CARRY4_S_UNCONNECTED;
  wire [0:0]NLW_blk00000599_CARRY4_O_UNCONNECTED;
  wire [3:0]NLW_blk0000059a_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_blk0000059a_CARRY4_DI_UNCONNECTED;
  wire [3:1]NLW_blk0000059a_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk0000059a_CARRY4_S_UNCONNECTED;
  wire [0:0]NLW_blk000005ca_CARRY4_O_UNCONNECTED;
  wire [3:0]NLW_blk000005cb_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_blk000005cb_CARRY4_DI_UNCONNECTED;
  wire [3:1]NLW_blk000005cb_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk000005cb_CARRY4_S_UNCONNECTED;
  wire [0:0]NLW_blk000005fb_CARRY4_O_UNCONNECTED;
  wire [3:0]NLW_blk000005fc_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_blk000005fc_CARRY4_DI_UNCONNECTED;
  wire [3:1]NLW_blk000005fc_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk000005fc_CARRY4_S_UNCONNECTED;
  wire [0:0]NLW_blk0000062c_CARRY4_O_UNCONNECTED;
  wire [3:0]NLW_blk0000062d_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_blk0000062d_CARRY4_DI_UNCONNECTED;
  wire [3:1]NLW_blk0000062d_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk0000062d_CARRY4_S_UNCONNECTED;
  wire [0:0]NLW_blk0000065d_CARRY4_O_UNCONNECTED;
  wire [3:0]NLW_blk0000065e_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_blk0000065e_CARRY4_DI_UNCONNECTED;
  wire [3:1]NLW_blk0000065e_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk0000065e_CARRY4_S_UNCONNECTED;
  wire [0:0]NLW_blk0000068e_CARRY4_O_UNCONNECTED;
  wire [3:0]NLW_blk0000068f_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_blk0000068f_CARRY4_DI_UNCONNECTED;
  wire [3:1]NLW_blk0000068f_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk0000068f_CARRY4_S_UNCONNECTED;
  wire [0:0]NLW_blk000006bf_CARRY4_O_UNCONNECTED;
  wire [3:0]NLW_blk000006c0_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_blk000006c0_CARRY4_DI_UNCONNECTED;
  wire [3:1]NLW_blk000006c0_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk000006c0_CARRY4_S_UNCONNECTED;
  wire [0:0]NLW_blk000006f0_CARRY4_O_UNCONNECTED;
  wire [3:0]NLW_blk000006f1_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_blk000006f1_CARRY4_DI_UNCONNECTED;
  wire [3:1]NLW_blk000006f1_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk000006f1_CARRY4_S_UNCONNECTED;
  wire [0:0]NLW_blk00000721_CARRY4_O_UNCONNECTED;
  wire [3:0]NLW_blk00000722_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_blk00000722_CARRY4_DI_UNCONNECTED;
  wire [3:1]NLW_blk00000722_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk00000722_CARRY4_S_UNCONNECTED;
  wire [0:0]NLW_blk00000752_CARRY4_O_UNCONNECTED;
  wire [3:0]NLW_blk00000753_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_blk00000753_CARRY4_DI_UNCONNECTED;
  wire [3:1]NLW_blk00000753_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk00000753_CARRY4_S_UNCONNECTED;
  wire [3:0]NLW_blk0000075b_CARRY4_O_UNCONNECTED;
  wire [3:0]NLW_blk00000763_CARRY4_O_UNCONNECTED;
  wire [3:0]NLW_blk0000076b_CARRY4_O_UNCONNECTED;
  wire [3:0]NLW_blk00000773_CARRY4_O_UNCONNECTED;
  wire [3:0]NLW_blk0000077b_CARRY4_O_UNCONNECTED;
  wire [3:0]NLW_blk00000783_CARRY4_O_UNCONNECTED;
  wire [2:0]NLW_blk000009e9_CARRY4_O_UNCONNECTED;
  wire [3:3]NLW_blk00000a16_CARRY4_CO_UNCONNECTED;
  wire [3:3]NLW_blk00000a16_CARRY4_DI_UNCONNECTED;
  wire [2:2]NLW_blk00000a16_CARRY4_O_UNCONNECTED;
  wire [3:3]NLW_blk00000a3b_CARRY4_CO_UNCONNECTED;
  wire [3:3]NLW_blk00000a3b_CARRY4_DI_UNCONNECTED;
  wire NLW_blk00000d51_Q31_UNCONNECTED;
  wire NLW_blk00000d54_Q31_UNCONNECTED;
  wire NLW_blk00000d55_Q31_UNCONNECTED;
  wire NLW_blk00000d56_Q31_UNCONNECTED;
  wire NLW_blk00000d57_Q31_UNCONNECTED;
  wire NLW_blk00000d58_Q31_UNCONNECTED;
  wire NLW_blk00000d59_Q31_UNCONNECTED;
  wire NLW_blk00000d5a_Q31_UNCONNECTED;
  wire NLW_blk00000d5b_Q31_UNCONNECTED;
  wire NLW_blk00000d5d_Q31_UNCONNECTED;
  wire NLW_blk00000d5f_Q31_UNCONNECTED;
  wire NLW_blk00000d61_Q31_UNCONNECTED;
  wire NLW_blk00000d63_Q31_UNCONNECTED;
  wire NLW_blk00000d65_Q31_UNCONNECTED;
  wire NLW_blk00000d67_Q31_UNCONNECTED;
  wire NLW_blk00000d69_Q31_UNCONNECTED;
  wire NLW_blk00000d6b_Q31_UNCONNECTED;
  wire NLW_blk00000d6d_Q31_UNCONNECTED;
  wire NLW_blk00000d8f_Q31_UNCONNECTED;
  wire NLW_blk00000d91_Q31_UNCONNECTED;

  assign result[31] = \U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/sign_op ;
  assign result[30:23] = \U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/exp_op ;
  assign result[22:0] = \U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/mant_op ;
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000004_CARRY4
       (.CI(sig0000004b),
        .CO({NLW_blk00000004_CARRY4_CO_UNCONNECTED[3:1],sig0000004a}),
        .CYINIT(1'b0),
        .DI({NLW_blk00000004_CARRY4_DI_UNCONNECTED[3:1],1'b0}),
        .O({NLW_blk00000004_CARRY4_O_UNCONNECTED[3:2],sig00000074,NLW_blk00000004_CARRY4_O_UNCONNECTED[0]}),
        .S({NLW_blk00000004_CARRY4_S_UNCONNECTED[3:2],1'b1,1'b1}));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000007
       (.I0(a[30]),
        .I1(b[30]),
        .O(sig0000004c));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk0000000a
       (.I0(a[29]),
        .I1(b[29]),
        .O(sig0000004e));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk0000000d
       (.I0(a[28]),
        .I1(b[28]),
        .O(sig00000050));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000000f_CARRY4
       (.CI(sig00000053),
        .CO({sig0000004b,sig0000004d,sig0000004f,sig00000051}),
        .CYINIT(1'b0),
        .DI(a[30:27]),
        .O({sig00000073,sig00000072,sig00000071,sig00000070}),
        .S({sig0000004c,sig0000004e,sig00000050,sig00000052}));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000010
       (.I0(a[27]),
        .I1(b[27]),
        .O(sig00000052));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000013
       (.I0(a[26]),
        .I1(b[26]),
        .O(sig00000054));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000016
       (.I0(a[25]),
        .I1(b[25]),
        .O(sig00000056));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000019
       (.I0(a[24]),
        .I1(b[24]),
        .O(sig00000058));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000001b_CARRY4
       (.CI(1'b0),
        .CO({sig00000053,sig00000055,sig00000057,sig00000059}),
        .CYINIT(1'b1),
        .DI(a[26:23]),
        .O({sig0000006f,sig0000006e,sig0000006d,sig0000006c}),
        .S({sig00000054,sig00000056,sig00000058,sig0000005a}));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk0000001c
       (.I0(a[23]),
        .I1(b[23]),
        .O(sig0000005a));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000001d
       (.C(clk),
        .CE(1'b1),
        .D(sig00000063),
        .Q(sig00000078),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000001e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000062),
        .Q(sig00000077),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000001f
       (.C(clk),
        .CE(1'b1),
        .D(sig0000006a),
        .Q(sig0000007a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000020
       (.C(clk),
        .CE(1'b1),
        .D(sig0000006b),
        .Q(sig00000079),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000021
       (.C(clk),
        .CE(1'b1),
        .D(sig00000066),
        .Q(sig0000005f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000022
       (.C(clk),
        .CE(1'b1),
        .D(sig0000005f),
        .Q(sig0000007b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000023
       (.C(clk),
        .CE(1'b1),
        .D(sig00000064),
        .Q(sig00000061),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000024
       (.C(clk),
        .CE(1'b1),
        .D(sig00000065),
        .Q(sig00000060),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000025
       (.C(clk),
        .CE(1'b1),
        .D(sig00000061),
        .Q(sig0000007c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000026
       (.C(clk),
        .CE(1'b1),
        .D(sig00000060),
        .Q(sig0000007d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000027
       (.C(clk),
        .CE(1'b1),
        .D(sig00000075),
        .Q(sig0000007e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000028
       (.C(clk),
        .CE(1'b1),
        .D(sig00000090),
        .Q(sig00000089),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000029
       (.C(clk),
        .CE(1'b1),
        .D(sig00000092),
        .Q(sig0000008a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000002a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000091),
        .Q(sig00000093),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000002b
       (.C(clk),
        .CE(1'b1),
        .D(sig0000008f),
        .Q(sig00000094),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000002c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000096),
        .Q(sig0000008c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000002d
       (.C(clk),
        .CE(1'b1),
        .D(sig00000098),
        .Q(sig0000008d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000002e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000097),
        .Q(sig00000099),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000002f
       (.C(clk),
        .CE(1'b1),
        .D(sig00000095),
        .Q(sig0000009a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000030
       (.C(clk),
        .CE(1'b1),
        .D(sig000000a3),
        .Q(sig00000087),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000031
       (.C(clk),
        .CE(1'b1),
        .D(sig000000a2),
        .Q(sig00000086),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000032
       (.C(clk),
        .CE(1'b1),
        .D(sig000000a1),
        .Q(sig00000085),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000033
       (.C(clk),
        .CE(1'b1),
        .D(sig000000a0),
        .Q(sig00000084),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000034
       (.C(clk),
        .CE(1'b1),
        .D(sig0000009f),
        .Q(sig00000083),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000035
       (.C(clk),
        .CE(1'b1),
        .D(sig0000009e),
        .Q(sig00000082),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000036
       (.C(clk),
        .CE(1'b1),
        .D(sig0000009d),
        .Q(sig00000081),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000037
       (.C(clk),
        .CE(1'b1),
        .D(sig0000009c),
        .Q(sig00000080),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000038
       (.C(clk),
        .CE(1'b1),
        .D(sig0000009b),
        .Q(sig0000007f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000039
       (.C(clk),
        .CE(1'b1),
        .D(sig00000074),
        .Q(sig000000a3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000003a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000073),
        .Q(sig000000a2),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000003b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000072),
        .Q(sig000000a1),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000003c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000071),
        .Q(sig000000a0),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000003d
       (.C(clk),
        .CE(1'b1),
        .D(sig00000070),
        .Q(sig0000009f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000003e
       (.C(clk),
        .CE(1'b1),
        .D(sig0000006f),
        .Q(sig0000009e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000003f
       (.C(clk),
        .CE(1'b1),
        .D(sig0000006e),
        .Q(sig0000009d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000040
       (.C(clk),
        .CE(1'b1),
        .D(sig0000006d),
        .Q(sig0000009c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000041
       (.C(clk),
        .CE(1'b1),
        .D(sig0000006c),
        .Q(sig0000009b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000042
       (.C(clk),
        .CE(1'b1),
        .D(sig0000007b),
        .Q(sig000000a4),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000043
       (.C(clk),
        .CE(1'b1),
        .D(sig00000069),
        .Q(sig000000a6),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000044
       (.C(clk),
        .CE(1'b1),
        .D(sig00000068),
        .Q(sig000000a5),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000045
       (.C(clk),
        .CE(1'b1),
        .D(sig00000067),
        .Q(sig000000a7),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000046
       (.C(clk),
        .CE(1'b1),
        .D(sig0000005d),
        .Q(sig0000000d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000047
       (.C(clk),
        .CE(1'b1),
        .D(sig0000005e),
        .Q(sig0000000b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000048
       (.C(clk),
        .CE(1'b1),
        .D(sig00000047),
        .Q(sig00000009),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000049
       (.C(clk),
        .CE(1'b1),
        .D(sig0000005b),
        .Q(sig0000000a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000004a
       (.C(clk),
        .CE(1'b1),
        .D(sig0000005c),
        .Q(sig0000000c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000004b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000106),
        .Q(sig000000d7),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000004c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000105),
        .Q(sig000000d6),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000004d
       (.C(clk),
        .CE(1'b1),
        .D(sig00000104),
        .Q(sig000000d5),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000004e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000103),
        .Q(sig000000d4),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000004f
       (.C(clk),
        .CE(1'b1),
        .D(sig00000102),
        .Q(sig000000d3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000050
       (.C(clk),
        .CE(1'b1),
        .D(sig00000101),
        .Q(sig000000d2),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000051
       (.C(clk),
        .CE(1'b1),
        .D(sig00000100),
        .Q(sig000000d1),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000052
       (.C(clk),
        .CE(1'b1),
        .D(sig000000ff),
        .Q(sig000000d0),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000053
       (.C(clk),
        .CE(1'b1),
        .D(sig000000fe),
        .Q(sig000000cf),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000054
       (.C(clk),
        .CE(1'b1),
        .D(sig000000fd),
        .Q(sig000000ce),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000055
       (.C(clk),
        .CE(1'b1),
        .D(sig000000fc),
        .Q(sig000000cd),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000056
       (.C(clk),
        .CE(1'b1),
        .D(sig000000fb),
        .Q(sig000000cc),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000057
       (.C(clk),
        .CE(1'b1),
        .D(sig000000fa),
        .Q(sig000000cb),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000058
       (.C(clk),
        .CE(1'b1),
        .D(sig000000f9),
        .Q(sig000000ca),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000059
       (.C(clk),
        .CE(1'b1),
        .D(sig000000f8),
        .Q(sig000000c9),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000005a
       (.C(clk),
        .CE(1'b1),
        .D(sig000000f7),
        .Q(sig000000c8),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000005b
       (.C(clk),
        .CE(1'b1),
        .D(sig000000f6),
        .Q(sig000000c7),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000005c
       (.C(clk),
        .CE(1'b1),
        .D(sig000000f5),
        .Q(sig000000c6),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000005d
       (.C(clk),
        .CE(1'b1),
        .D(sig000000f4),
        .Q(sig000000c5),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000005e
       (.C(clk),
        .CE(1'b1),
        .D(sig000000f3),
        .Q(sig000000c4),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000005f
       (.C(clk),
        .CE(1'b1),
        .D(sig000000f2),
        .Q(sig000000c3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000060
       (.C(clk),
        .CE(1'b1),
        .D(sig000000f1),
        .Q(sig000000c2),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000061
       (.C(clk),
        .CE(1'b1),
        .D(sig000000f0),
        .Q(sig000000c1),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000062
       (.C(clk),
        .CE(1'b1),
        .D(sig00000135),
        .Q(sig00000106),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000063
       (.C(clk),
        .CE(1'b1),
        .D(sig00000134),
        .Q(sig00000105),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000064
       (.C(clk),
        .CE(1'b1),
        .D(sig00000133),
        .Q(sig00000104),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000065
       (.C(clk),
        .CE(1'b1),
        .D(sig00000132),
        .Q(sig00000103),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000066
       (.C(clk),
        .CE(1'b1),
        .D(sig00000131),
        .Q(sig00000102),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000067
       (.C(clk),
        .CE(1'b1),
        .D(sig00000130),
        .Q(sig00000101),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000068
       (.C(clk),
        .CE(1'b1),
        .D(sig0000012f),
        .Q(sig00000100),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000069
       (.C(clk),
        .CE(1'b1),
        .D(sig0000012e),
        .Q(sig000000ff),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000006a
       (.C(clk),
        .CE(1'b1),
        .D(sig0000012d),
        .Q(sig000000fe),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000006b
       (.C(clk),
        .CE(1'b1),
        .D(sig0000012c),
        .Q(sig000000fd),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000006c
       (.C(clk),
        .CE(1'b1),
        .D(sig0000012b),
        .Q(sig000000fc),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000006d
       (.C(clk),
        .CE(1'b1),
        .D(sig0000012a),
        .Q(sig000000fb),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000006e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000129),
        .Q(sig000000fa),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000006f
       (.C(clk),
        .CE(1'b1),
        .D(sig00000128),
        .Q(sig000000f9),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000070
       (.C(clk),
        .CE(1'b1),
        .D(sig00000127),
        .Q(sig000000f8),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000071
       (.C(clk),
        .CE(1'b1),
        .D(sig00000126),
        .Q(sig000000f7),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000072
       (.C(clk),
        .CE(1'b1),
        .D(sig00000125),
        .Q(sig000000f6),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000073
       (.C(clk),
        .CE(1'b1),
        .D(sig00000124),
        .Q(sig000000f5),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000074
       (.C(clk),
        .CE(1'b1),
        .D(sig00000123),
        .Q(sig000000f4),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000075
       (.C(clk),
        .CE(1'b1),
        .D(sig00000122),
        .Q(sig000000f3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000076
       (.C(clk),
        .CE(1'b1),
        .D(sig00000121),
        .Q(sig000000f2),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000077
       (.C(clk),
        .CE(1'b1),
        .D(sig00000120),
        .Q(sig000000f1),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000078
       (.C(clk),
        .CE(1'b1),
        .D(sig0000011f),
        .Q(sig000000f0),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000079
       (.C(clk),
        .CE(1'b1),
        .D(sig00000164),
        .Q(sig00000135),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000007a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000163),
        .Q(sig00000134),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000007b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000162),
        .Q(sig00000133),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000007c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000161),
        .Q(sig00000132),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000007d
       (.C(clk),
        .CE(1'b1),
        .D(sig00000160),
        .Q(sig00000131),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000007e
       (.C(clk),
        .CE(1'b1),
        .D(sig0000015f),
        .Q(sig00000130),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000007f
       (.C(clk),
        .CE(1'b1),
        .D(sig0000015e),
        .Q(sig0000012f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000080
       (.C(clk),
        .CE(1'b1),
        .D(sig0000015d),
        .Q(sig0000012e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000081
       (.C(clk),
        .CE(1'b1),
        .D(sig0000015c),
        .Q(sig0000012d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000082
       (.C(clk),
        .CE(1'b1),
        .D(sig0000015b),
        .Q(sig0000012c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000083
       (.C(clk),
        .CE(1'b1),
        .D(sig0000015a),
        .Q(sig0000012b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000084
       (.C(clk),
        .CE(1'b1),
        .D(sig00000159),
        .Q(sig0000012a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000085
       (.C(clk),
        .CE(1'b1),
        .D(sig00000158),
        .Q(sig00000129),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000086
       (.C(clk),
        .CE(1'b1),
        .D(sig00000157),
        .Q(sig00000128),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000087
       (.C(clk),
        .CE(1'b1),
        .D(sig00000156),
        .Q(sig00000127),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000088
       (.C(clk),
        .CE(1'b1),
        .D(sig00000155),
        .Q(sig00000126),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000089
       (.C(clk),
        .CE(1'b1),
        .D(sig00000154),
        .Q(sig00000125),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000008a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000153),
        .Q(sig00000124),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000008b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000152),
        .Q(sig00000123),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000008c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000151),
        .Q(sig00000122),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000008d
       (.C(clk),
        .CE(1'b1),
        .D(sig00000150),
        .Q(sig00000121),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000008e
       (.C(clk),
        .CE(1'b1),
        .D(sig0000014f),
        .Q(sig00000120),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000008f
       (.C(clk),
        .CE(1'b1),
        .D(sig0000014e),
        .Q(sig0000011f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000090
       (.C(clk),
        .CE(1'b1),
        .D(sig00000193),
        .Q(sig00000164),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000091
       (.C(clk),
        .CE(1'b1),
        .D(sig00000192),
        .Q(sig00000163),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000092
       (.C(clk),
        .CE(1'b1),
        .D(sig00000191),
        .Q(sig00000162),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000093
       (.C(clk),
        .CE(1'b1),
        .D(sig00000190),
        .Q(sig00000161),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000094
       (.C(clk),
        .CE(1'b1),
        .D(sig0000018f),
        .Q(sig00000160),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000095
       (.C(clk),
        .CE(1'b1),
        .D(sig0000018e),
        .Q(sig0000015f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000096
       (.C(clk),
        .CE(1'b1),
        .D(sig0000018d),
        .Q(sig0000015e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000097
       (.C(clk),
        .CE(1'b1),
        .D(sig0000018c),
        .Q(sig0000015d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000098
       (.C(clk),
        .CE(1'b1),
        .D(sig0000018b),
        .Q(sig0000015c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000099
       (.C(clk),
        .CE(1'b1),
        .D(sig0000018a),
        .Q(sig0000015b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000009a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000189),
        .Q(sig0000015a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000009b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000188),
        .Q(sig00000159),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000009c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000187),
        .Q(sig00000158),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000009d
       (.C(clk),
        .CE(1'b1),
        .D(sig00000186),
        .Q(sig00000157),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000009e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000185),
        .Q(sig00000156),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000009f
       (.C(clk),
        .CE(1'b1),
        .D(sig00000184),
        .Q(sig00000155),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000a0
       (.C(clk),
        .CE(1'b1),
        .D(sig00000183),
        .Q(sig00000154),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000a1
       (.C(clk),
        .CE(1'b1),
        .D(sig00000182),
        .Q(sig00000153),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000a2
       (.C(clk),
        .CE(1'b1),
        .D(sig00000181),
        .Q(sig00000152),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000a3
       (.C(clk),
        .CE(1'b1),
        .D(sig00000180),
        .Q(sig00000151),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000a4
       (.C(clk),
        .CE(1'b1),
        .D(sig0000017f),
        .Q(sig00000150),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000a5
       (.C(clk),
        .CE(1'b1),
        .D(sig0000017e),
        .Q(sig0000014f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000a6
       (.C(clk),
        .CE(1'b1),
        .D(sig0000017d),
        .Q(sig0000014e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000a7
       (.C(clk),
        .CE(1'b1),
        .D(sig000001c2),
        .Q(sig00000193),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000a8
       (.C(clk),
        .CE(1'b1),
        .D(sig000001c1),
        .Q(sig00000192),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000a9
       (.C(clk),
        .CE(1'b1),
        .D(sig000001c0),
        .Q(sig00000191),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000aa
       (.C(clk),
        .CE(1'b1),
        .D(sig000001bf),
        .Q(sig00000190),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000ab
       (.C(clk),
        .CE(1'b1),
        .D(sig000001be),
        .Q(sig0000018f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000ac
       (.C(clk),
        .CE(1'b1),
        .D(sig000001bd),
        .Q(sig0000018e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000ad
       (.C(clk),
        .CE(1'b1),
        .D(sig000001bc),
        .Q(sig0000018d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000ae
       (.C(clk),
        .CE(1'b1),
        .D(sig000001bb),
        .Q(sig0000018c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000af
       (.C(clk),
        .CE(1'b1),
        .D(sig000001ba),
        .Q(sig0000018b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000b0
       (.C(clk),
        .CE(1'b1),
        .D(sig000001b9),
        .Q(sig0000018a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000b1
       (.C(clk),
        .CE(1'b1),
        .D(sig000001b8),
        .Q(sig00000189),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000b2
       (.C(clk),
        .CE(1'b1),
        .D(sig000001b7),
        .Q(sig00000188),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000b3
       (.C(clk),
        .CE(1'b1),
        .D(sig000001b6),
        .Q(sig00000187),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000b4
       (.C(clk),
        .CE(1'b1),
        .D(sig000001b5),
        .Q(sig00000186),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000b5
       (.C(clk),
        .CE(1'b1),
        .D(sig000001b4),
        .Q(sig00000185),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000b6
       (.C(clk),
        .CE(1'b1),
        .D(sig000001b3),
        .Q(sig00000184),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000b7
       (.C(clk),
        .CE(1'b1),
        .D(sig000001b2),
        .Q(sig00000183),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000b8
       (.C(clk),
        .CE(1'b1),
        .D(sig000001b1),
        .Q(sig00000182),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000b9
       (.C(clk),
        .CE(1'b1),
        .D(sig000001b0),
        .Q(sig00000181),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000ba
       (.C(clk),
        .CE(1'b1),
        .D(sig000001af),
        .Q(sig00000180),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000bb
       (.C(clk),
        .CE(1'b1),
        .D(sig000001ae),
        .Q(sig0000017f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000bc
       (.C(clk),
        .CE(1'b1),
        .D(sig000001ad),
        .Q(sig0000017e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000bd
       (.C(clk),
        .CE(1'b1),
        .D(sig000001ac),
        .Q(sig0000017d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000be
       (.C(clk),
        .CE(1'b1),
        .D(sig000001f1),
        .Q(sig000001c2),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000bf
       (.C(clk),
        .CE(1'b1),
        .D(sig000001f0),
        .Q(sig000001c1),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000c0
       (.C(clk),
        .CE(1'b1),
        .D(sig000001ef),
        .Q(sig000001c0),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000c1
       (.C(clk),
        .CE(1'b1),
        .D(sig000001ee),
        .Q(sig000001bf),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000c2
       (.C(clk),
        .CE(1'b1),
        .D(sig000001ed),
        .Q(sig000001be),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000c3
       (.C(clk),
        .CE(1'b1),
        .D(sig000001ec),
        .Q(sig000001bd),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000c4
       (.C(clk),
        .CE(1'b1),
        .D(sig000001eb),
        .Q(sig000001bc),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000c5
       (.C(clk),
        .CE(1'b1),
        .D(sig000001ea),
        .Q(sig000001bb),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000c6
       (.C(clk),
        .CE(1'b1),
        .D(sig000001e9),
        .Q(sig000001ba),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000c7
       (.C(clk),
        .CE(1'b1),
        .D(sig000001e8),
        .Q(sig000001b9),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000c8
       (.C(clk),
        .CE(1'b1),
        .D(sig000001e7),
        .Q(sig000001b8),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000c9
       (.C(clk),
        .CE(1'b1),
        .D(sig000001e6),
        .Q(sig000001b7),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000ca
       (.C(clk),
        .CE(1'b1),
        .D(sig000001e5),
        .Q(sig000001b6),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000cb
       (.C(clk),
        .CE(1'b1),
        .D(sig000001e4),
        .Q(sig000001b5),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000cc
       (.C(clk),
        .CE(1'b1),
        .D(sig000001e3),
        .Q(sig000001b4),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000cd
       (.C(clk),
        .CE(1'b1),
        .D(sig000001e2),
        .Q(sig000001b3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000ce
       (.C(clk),
        .CE(1'b1),
        .D(sig000001e1),
        .Q(sig000001b2),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000cf
       (.C(clk),
        .CE(1'b1),
        .D(sig000001e0),
        .Q(sig000001b1),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000d0
       (.C(clk),
        .CE(1'b1),
        .D(sig000001df),
        .Q(sig000001b0),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000d1
       (.C(clk),
        .CE(1'b1),
        .D(sig000001de),
        .Q(sig000001af),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000d2
       (.C(clk),
        .CE(1'b1),
        .D(sig000001dd),
        .Q(sig000001ae),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000d3
       (.C(clk),
        .CE(1'b1),
        .D(sig000001dc),
        .Q(sig000001ad),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000d4
       (.C(clk),
        .CE(1'b1),
        .D(sig000001db),
        .Q(sig000001ac),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000d5
       (.C(clk),
        .CE(1'b1),
        .D(sig00000220),
        .Q(sig000001f1),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000d6
       (.C(clk),
        .CE(1'b1),
        .D(sig0000021f),
        .Q(sig000001f0),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000d7
       (.C(clk),
        .CE(1'b1),
        .D(sig0000021e),
        .Q(sig000001ef),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000d8
       (.C(clk),
        .CE(1'b1),
        .D(sig0000021d),
        .Q(sig000001ee),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000d9
       (.C(clk),
        .CE(1'b1),
        .D(sig0000021c),
        .Q(sig000001ed),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000da
       (.C(clk),
        .CE(1'b1),
        .D(sig0000021b),
        .Q(sig000001ec),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000db
       (.C(clk),
        .CE(1'b1),
        .D(sig0000021a),
        .Q(sig000001eb),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000dc
       (.C(clk),
        .CE(1'b1),
        .D(sig00000219),
        .Q(sig000001ea),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000dd
       (.C(clk),
        .CE(1'b1),
        .D(sig00000218),
        .Q(sig000001e9),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000de
       (.C(clk),
        .CE(1'b1),
        .D(sig00000217),
        .Q(sig000001e8),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000df
       (.C(clk),
        .CE(1'b1),
        .D(sig00000216),
        .Q(sig000001e7),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000e0
       (.C(clk),
        .CE(1'b1),
        .D(sig00000215),
        .Q(sig000001e6),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000e1
       (.C(clk),
        .CE(1'b1),
        .D(sig00000214),
        .Q(sig000001e5),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000e2
       (.C(clk),
        .CE(1'b1),
        .D(sig00000213),
        .Q(sig000001e4),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000e3
       (.C(clk),
        .CE(1'b1),
        .D(sig00000212),
        .Q(sig000001e3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000e4
       (.C(clk),
        .CE(1'b1),
        .D(sig00000211),
        .Q(sig000001e2),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000e5
       (.C(clk),
        .CE(1'b1),
        .D(sig00000210),
        .Q(sig000001e1),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000e6
       (.C(clk),
        .CE(1'b1),
        .D(sig0000020f),
        .Q(sig000001e0),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000e7
       (.C(clk),
        .CE(1'b1),
        .D(sig0000020e),
        .Q(sig000001df),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000e8
       (.C(clk),
        .CE(1'b1),
        .D(sig0000020d),
        .Q(sig000001de),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000e9
       (.C(clk),
        .CE(1'b1),
        .D(sig0000020c),
        .Q(sig000001dd),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000ea
       (.C(clk),
        .CE(1'b1),
        .D(sig0000020b),
        .Q(sig000001dc),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000eb
       (.C(clk),
        .CE(1'b1),
        .D(sig0000020a),
        .Q(sig000001db),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000ec
       (.C(clk),
        .CE(1'b1),
        .D(sig0000024f),
        .Q(sig00000220),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000ed
       (.C(clk),
        .CE(1'b1),
        .D(sig0000024e),
        .Q(sig0000021f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000ee
       (.C(clk),
        .CE(1'b1),
        .D(sig0000024d),
        .Q(sig0000021e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000ef
       (.C(clk),
        .CE(1'b1),
        .D(sig0000024c),
        .Q(sig0000021d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000f0
       (.C(clk),
        .CE(1'b1),
        .D(sig0000024b),
        .Q(sig0000021c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000f1
       (.C(clk),
        .CE(1'b1),
        .D(sig0000024a),
        .Q(sig0000021b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000f2
       (.C(clk),
        .CE(1'b1),
        .D(sig00000249),
        .Q(sig0000021a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000f3
       (.C(clk),
        .CE(1'b1),
        .D(sig00000248),
        .Q(sig00000219),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000f4
       (.C(clk),
        .CE(1'b1),
        .D(sig00000247),
        .Q(sig00000218),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000f5
       (.C(clk),
        .CE(1'b1),
        .D(sig00000246),
        .Q(sig00000217),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000f6
       (.C(clk),
        .CE(1'b1),
        .D(sig00000245),
        .Q(sig00000216),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000f7
       (.C(clk),
        .CE(1'b1),
        .D(sig00000244),
        .Q(sig00000215),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000f8
       (.C(clk),
        .CE(1'b1),
        .D(sig00000243),
        .Q(sig00000214),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000f9
       (.C(clk),
        .CE(1'b1),
        .D(sig00000242),
        .Q(sig00000213),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000fa
       (.C(clk),
        .CE(1'b1),
        .D(sig00000241),
        .Q(sig00000212),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000fb
       (.C(clk),
        .CE(1'b1),
        .D(sig00000240),
        .Q(sig00000211),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000fc
       (.C(clk),
        .CE(1'b1),
        .D(sig0000023f),
        .Q(sig00000210),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000fd
       (.C(clk),
        .CE(1'b1),
        .D(sig0000023e),
        .Q(sig0000020f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000fe
       (.C(clk),
        .CE(1'b1),
        .D(sig0000023d),
        .Q(sig0000020e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000000ff
       (.C(clk),
        .CE(1'b1),
        .D(sig0000023c),
        .Q(sig0000020d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000100
       (.C(clk),
        .CE(1'b1),
        .D(sig0000023b),
        .Q(sig0000020c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000101
       (.C(clk),
        .CE(1'b1),
        .D(sig0000023a),
        .Q(sig0000020b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000102
       (.C(clk),
        .CE(1'b1),
        .D(sig00000239),
        .Q(sig0000020a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000103
       (.C(clk),
        .CE(1'b1),
        .D(sig0000027e),
        .Q(sig0000024f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000104
       (.C(clk),
        .CE(1'b1),
        .D(sig0000027d),
        .Q(sig0000024e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000105
       (.C(clk),
        .CE(1'b1),
        .D(sig0000027c),
        .Q(sig0000024d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000106
       (.C(clk),
        .CE(1'b1),
        .D(sig0000027b),
        .Q(sig0000024c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000107
       (.C(clk),
        .CE(1'b1),
        .D(sig0000027a),
        .Q(sig0000024b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000108
       (.C(clk),
        .CE(1'b1),
        .D(sig00000279),
        .Q(sig0000024a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000109
       (.C(clk),
        .CE(1'b1),
        .D(sig00000278),
        .Q(sig00000249),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000010a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000277),
        .Q(sig00000248),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000010b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000276),
        .Q(sig00000247),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000010c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000275),
        .Q(sig00000246),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000010d
       (.C(clk),
        .CE(1'b1),
        .D(sig00000274),
        .Q(sig00000245),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000010e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000273),
        .Q(sig00000244),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000010f
       (.C(clk),
        .CE(1'b1),
        .D(sig00000272),
        .Q(sig00000243),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000110
       (.C(clk),
        .CE(1'b1),
        .D(sig00000271),
        .Q(sig00000242),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000111
       (.C(clk),
        .CE(1'b1),
        .D(sig00000270),
        .Q(sig00000241),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000112
       (.C(clk),
        .CE(1'b1),
        .D(sig0000026f),
        .Q(sig00000240),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000113
       (.C(clk),
        .CE(1'b1),
        .D(sig0000026e),
        .Q(sig0000023f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000114
       (.C(clk),
        .CE(1'b1),
        .D(sig0000026d),
        .Q(sig0000023e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000115
       (.C(clk),
        .CE(1'b1),
        .D(sig0000026c),
        .Q(sig0000023d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000116
       (.C(clk),
        .CE(1'b1),
        .D(sig0000026b),
        .Q(sig0000023c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000117
       (.C(clk),
        .CE(1'b1),
        .D(sig0000026a),
        .Q(sig0000023b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000118
       (.C(clk),
        .CE(1'b1),
        .D(sig00000269),
        .Q(sig0000023a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000119
       (.C(clk),
        .CE(1'b1),
        .D(sig00000268),
        .Q(sig00000239),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000011a
       (.C(clk),
        .CE(1'b1),
        .D(sig000002ad),
        .Q(sig0000027e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000011b
       (.C(clk),
        .CE(1'b1),
        .D(sig000002ac),
        .Q(sig0000027d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000011c
       (.C(clk),
        .CE(1'b1),
        .D(sig000002ab),
        .Q(sig0000027c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000011d
       (.C(clk),
        .CE(1'b1),
        .D(sig000002aa),
        .Q(sig0000027b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000011e
       (.C(clk),
        .CE(1'b1),
        .D(sig000002a9),
        .Q(sig0000027a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000011f
       (.C(clk),
        .CE(1'b1),
        .D(sig000002a8),
        .Q(sig00000279),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000120
       (.C(clk),
        .CE(1'b1),
        .D(sig000002a7),
        .Q(sig00000278),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000121
       (.C(clk),
        .CE(1'b1),
        .D(sig000002a6),
        .Q(sig00000277),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000122
       (.C(clk),
        .CE(1'b1),
        .D(sig000002a5),
        .Q(sig00000276),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000123
       (.C(clk),
        .CE(1'b1),
        .D(sig000002a4),
        .Q(sig00000275),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000124
       (.C(clk),
        .CE(1'b1),
        .D(sig000002a3),
        .Q(sig00000274),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000125
       (.C(clk),
        .CE(1'b1),
        .D(sig000002a2),
        .Q(sig00000273),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000126
       (.C(clk),
        .CE(1'b1),
        .D(sig000002a1),
        .Q(sig00000272),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000127
       (.C(clk),
        .CE(1'b1),
        .D(sig000002a0),
        .Q(sig00000271),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000128
       (.C(clk),
        .CE(1'b1),
        .D(sig0000029f),
        .Q(sig00000270),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000129
       (.C(clk),
        .CE(1'b1),
        .D(sig0000029e),
        .Q(sig0000026f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000012a
       (.C(clk),
        .CE(1'b1),
        .D(sig0000029d),
        .Q(sig0000026e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000012b
       (.C(clk),
        .CE(1'b1),
        .D(sig0000029c),
        .Q(sig0000026d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000012c
       (.C(clk),
        .CE(1'b1),
        .D(sig0000029b),
        .Q(sig0000026c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000012d
       (.C(clk),
        .CE(1'b1),
        .D(sig0000029a),
        .Q(sig0000026b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000012e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000299),
        .Q(sig0000026a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000012f
       (.C(clk),
        .CE(1'b1),
        .D(sig00000298),
        .Q(sig00000269),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000130
       (.C(clk),
        .CE(1'b1),
        .D(sig00000297),
        .Q(sig00000268),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000131
       (.C(clk),
        .CE(1'b1),
        .D(sig000002dc),
        .Q(sig000002ad),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000132
       (.C(clk),
        .CE(1'b1),
        .D(sig000002db),
        .Q(sig000002ac),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000133
       (.C(clk),
        .CE(1'b1),
        .D(sig000002da),
        .Q(sig000002ab),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000134
       (.C(clk),
        .CE(1'b1),
        .D(sig000002d9),
        .Q(sig000002aa),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000135
       (.C(clk),
        .CE(1'b1),
        .D(sig000002d8),
        .Q(sig000002a9),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000136
       (.C(clk),
        .CE(1'b1),
        .D(sig000002d7),
        .Q(sig000002a8),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000137
       (.C(clk),
        .CE(1'b1),
        .D(sig000002d6),
        .Q(sig000002a7),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000138
       (.C(clk),
        .CE(1'b1),
        .D(sig000002d5),
        .Q(sig000002a6),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000139
       (.C(clk),
        .CE(1'b1),
        .D(sig000002d4),
        .Q(sig000002a5),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000013a
       (.C(clk),
        .CE(1'b1),
        .D(sig000002d3),
        .Q(sig000002a4),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000013b
       (.C(clk),
        .CE(1'b1),
        .D(sig000002d2),
        .Q(sig000002a3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000013c
       (.C(clk),
        .CE(1'b1),
        .D(sig000002d1),
        .Q(sig000002a2),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000013d
       (.C(clk),
        .CE(1'b1),
        .D(sig000002d0),
        .Q(sig000002a1),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000013e
       (.C(clk),
        .CE(1'b1),
        .D(sig000002cf),
        .Q(sig000002a0),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000013f
       (.C(clk),
        .CE(1'b1),
        .D(sig000002ce),
        .Q(sig0000029f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000140
       (.C(clk),
        .CE(1'b1),
        .D(sig000002cd),
        .Q(sig0000029e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000141
       (.C(clk),
        .CE(1'b1),
        .D(sig000002cc),
        .Q(sig0000029d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000142
       (.C(clk),
        .CE(1'b1),
        .D(sig000002cb),
        .Q(sig0000029c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000143
       (.C(clk),
        .CE(1'b1),
        .D(sig000002ca),
        .Q(sig0000029b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000144
       (.C(clk),
        .CE(1'b1),
        .D(sig000002c9),
        .Q(sig0000029a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000145
       (.C(clk),
        .CE(1'b1),
        .D(sig000002c8),
        .Q(sig00000299),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000146
       (.C(clk),
        .CE(1'b1),
        .D(sig000002c7),
        .Q(sig00000298),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000147
       (.C(clk),
        .CE(1'b1),
        .D(sig000002c6),
        .Q(sig00000297),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000148
       (.C(clk),
        .CE(1'b1),
        .D(sig0000030b),
        .Q(sig000002dc),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000149
       (.C(clk),
        .CE(1'b1),
        .D(sig0000030a),
        .Q(sig000002db),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000014a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000309),
        .Q(sig000002da),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000014b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000308),
        .Q(sig000002d9),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000014c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000307),
        .Q(sig000002d8),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000014d
       (.C(clk),
        .CE(1'b1),
        .D(sig00000306),
        .Q(sig000002d7),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000014e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000305),
        .Q(sig000002d6),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000014f
       (.C(clk),
        .CE(1'b1),
        .D(sig00000304),
        .Q(sig000002d5),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000150
       (.C(clk),
        .CE(1'b1),
        .D(sig00000303),
        .Q(sig000002d4),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000151
       (.C(clk),
        .CE(1'b1),
        .D(sig00000302),
        .Q(sig000002d3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000152
       (.C(clk),
        .CE(1'b1),
        .D(sig00000301),
        .Q(sig000002d2),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000153
       (.C(clk),
        .CE(1'b1),
        .D(sig00000300),
        .Q(sig000002d1),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000154
       (.C(clk),
        .CE(1'b1),
        .D(sig000002ff),
        .Q(sig000002d0),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000155
       (.C(clk),
        .CE(1'b1),
        .D(sig000002fe),
        .Q(sig000002cf),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000156
       (.C(clk),
        .CE(1'b1),
        .D(sig000002fd),
        .Q(sig000002ce),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000157
       (.C(clk),
        .CE(1'b1),
        .D(sig000002fc),
        .Q(sig000002cd),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000158
       (.C(clk),
        .CE(1'b1),
        .D(sig000002fb),
        .Q(sig000002cc),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000159
       (.C(clk),
        .CE(1'b1),
        .D(sig000002fa),
        .Q(sig000002cb),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000015a
       (.C(clk),
        .CE(1'b1),
        .D(sig000002f9),
        .Q(sig000002ca),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000015b
       (.C(clk),
        .CE(1'b1),
        .D(sig000002f8),
        .Q(sig000002c9),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000015c
       (.C(clk),
        .CE(1'b1),
        .D(sig000002f7),
        .Q(sig000002c8),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000015d
       (.C(clk),
        .CE(1'b1),
        .D(sig000002f6),
        .Q(sig000002c7),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000015e
       (.C(clk),
        .CE(1'b1),
        .D(sig000002f5),
        .Q(sig000002c6),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000015f
       (.C(clk),
        .CE(1'b1),
        .D(sig0000033a),
        .Q(sig0000030b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000160
       (.C(clk),
        .CE(1'b1),
        .D(sig00000339),
        .Q(sig0000030a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000161
       (.C(clk),
        .CE(1'b1),
        .D(sig00000338),
        .Q(sig00000309),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000162
       (.C(clk),
        .CE(1'b1),
        .D(sig00000337),
        .Q(sig00000308),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000163
       (.C(clk),
        .CE(1'b1),
        .D(sig00000336),
        .Q(sig00000307),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000164
       (.C(clk),
        .CE(1'b1),
        .D(sig00000335),
        .Q(sig00000306),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000165
       (.C(clk),
        .CE(1'b1),
        .D(sig00000334),
        .Q(sig00000305),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000166
       (.C(clk),
        .CE(1'b1),
        .D(sig00000333),
        .Q(sig00000304),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000167
       (.C(clk),
        .CE(1'b1),
        .D(sig00000332),
        .Q(sig00000303),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000168
       (.C(clk),
        .CE(1'b1),
        .D(sig00000331),
        .Q(sig00000302),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000169
       (.C(clk),
        .CE(1'b1),
        .D(sig00000330),
        .Q(sig00000301),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000016a
       (.C(clk),
        .CE(1'b1),
        .D(sig0000032f),
        .Q(sig00000300),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000016b
       (.C(clk),
        .CE(1'b1),
        .D(sig0000032e),
        .Q(sig000002ff),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000016c
       (.C(clk),
        .CE(1'b1),
        .D(sig0000032d),
        .Q(sig000002fe),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000016d
       (.C(clk),
        .CE(1'b1),
        .D(sig0000032c),
        .Q(sig000002fd),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000016e
       (.C(clk),
        .CE(1'b1),
        .D(sig0000032b),
        .Q(sig000002fc),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000016f
       (.C(clk),
        .CE(1'b1),
        .D(sig0000032a),
        .Q(sig000002fb),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000170
       (.C(clk),
        .CE(1'b1),
        .D(sig00000329),
        .Q(sig000002fa),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000171
       (.C(clk),
        .CE(1'b1),
        .D(sig00000328),
        .Q(sig000002f9),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000172
       (.C(clk),
        .CE(1'b1),
        .D(sig00000327),
        .Q(sig000002f8),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000173
       (.C(clk),
        .CE(1'b1),
        .D(sig00000326),
        .Q(sig000002f7),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000174
       (.C(clk),
        .CE(1'b1),
        .D(sig00000325),
        .Q(sig000002f6),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000175
       (.C(clk),
        .CE(1'b1),
        .D(sig00000324),
        .Q(sig000002f5),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000176
       (.C(clk),
        .CE(1'b1),
        .D(sig00000369),
        .Q(sig0000033a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000177
       (.C(clk),
        .CE(1'b1),
        .D(sig00000368),
        .Q(sig00000339),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000178
       (.C(clk),
        .CE(1'b1),
        .D(sig00000367),
        .Q(sig00000338),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000179
       (.C(clk),
        .CE(1'b1),
        .D(sig00000366),
        .Q(sig00000337),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000017a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000365),
        .Q(sig00000336),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000017b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000364),
        .Q(sig00000335),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000017c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000363),
        .Q(sig00000334),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000017d
       (.C(clk),
        .CE(1'b1),
        .D(sig00000362),
        .Q(sig00000333),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000017e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000361),
        .Q(sig00000332),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000017f
       (.C(clk),
        .CE(1'b1),
        .D(sig00000360),
        .Q(sig00000331),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000180
       (.C(clk),
        .CE(1'b1),
        .D(sig0000035f),
        .Q(sig00000330),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000181
       (.C(clk),
        .CE(1'b1),
        .D(sig0000035e),
        .Q(sig0000032f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000182
       (.C(clk),
        .CE(1'b1),
        .D(sig0000035d),
        .Q(sig0000032e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000183
       (.C(clk),
        .CE(1'b1),
        .D(sig0000035c),
        .Q(sig0000032d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000184
       (.C(clk),
        .CE(1'b1),
        .D(sig0000035b),
        .Q(sig0000032c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000185
       (.C(clk),
        .CE(1'b1),
        .D(sig0000035a),
        .Q(sig0000032b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000186
       (.C(clk),
        .CE(1'b1),
        .D(sig00000359),
        .Q(sig0000032a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000187
       (.C(clk),
        .CE(1'b1),
        .D(sig00000358),
        .Q(sig00000329),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000188
       (.C(clk),
        .CE(1'b1),
        .D(sig00000357),
        .Q(sig00000328),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000189
       (.C(clk),
        .CE(1'b1),
        .D(sig00000356),
        .Q(sig00000327),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000018a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000355),
        .Q(sig00000326),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000018b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000354),
        .Q(sig00000325),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000018c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000353),
        .Q(sig00000324),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000018d
       (.C(clk),
        .CE(1'b1),
        .D(sig00000398),
        .Q(sig00000369),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000018e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000397),
        .Q(sig00000368),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000018f
       (.C(clk),
        .CE(1'b1),
        .D(sig00000396),
        .Q(sig00000367),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000190
       (.C(clk),
        .CE(1'b1),
        .D(sig00000395),
        .Q(sig00000366),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000191
       (.C(clk),
        .CE(1'b1),
        .D(sig00000394),
        .Q(sig00000365),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000192
       (.C(clk),
        .CE(1'b1),
        .D(sig00000393),
        .Q(sig00000364),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000193
       (.C(clk),
        .CE(1'b1),
        .D(sig00000392),
        .Q(sig00000363),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000194
       (.C(clk),
        .CE(1'b1),
        .D(sig00000391),
        .Q(sig00000362),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000195
       (.C(clk),
        .CE(1'b1),
        .D(sig00000390),
        .Q(sig00000361),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000196
       (.C(clk),
        .CE(1'b1),
        .D(sig0000038f),
        .Q(sig00000360),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000197
       (.C(clk),
        .CE(1'b1),
        .D(sig0000038e),
        .Q(sig0000035f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000198
       (.C(clk),
        .CE(1'b1),
        .D(sig0000038d),
        .Q(sig0000035e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000199
       (.C(clk),
        .CE(1'b1),
        .D(sig0000038c),
        .Q(sig0000035d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000019a
       (.C(clk),
        .CE(1'b1),
        .D(sig0000038b),
        .Q(sig0000035c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000019b
       (.C(clk),
        .CE(1'b1),
        .D(sig0000038a),
        .Q(sig0000035b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000019c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000389),
        .Q(sig0000035a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000019d
       (.C(clk),
        .CE(1'b1),
        .D(sig00000388),
        .Q(sig00000359),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000019e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000387),
        .Q(sig00000358),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000019f
       (.C(clk),
        .CE(1'b1),
        .D(sig00000386),
        .Q(sig00000357),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001a0
       (.C(clk),
        .CE(1'b1),
        .D(sig00000385),
        .Q(sig00000356),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001a1
       (.C(clk),
        .CE(1'b1),
        .D(sig00000384),
        .Q(sig00000355),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001a2
       (.C(clk),
        .CE(1'b1),
        .D(sig00000383),
        .Q(sig00000354),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001a3
       (.C(clk),
        .CE(1'b1),
        .D(sig00000382),
        .Q(sig00000353),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001a4
       (.C(clk),
        .CE(1'b1),
        .D(sig000003c7),
        .Q(sig00000398),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001a5
       (.C(clk),
        .CE(1'b1),
        .D(sig000003c6),
        .Q(sig00000397),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001a6
       (.C(clk),
        .CE(1'b1),
        .D(sig000003c5),
        .Q(sig00000396),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001a7
       (.C(clk),
        .CE(1'b1),
        .D(sig000003c4),
        .Q(sig00000395),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001a8
       (.C(clk),
        .CE(1'b1),
        .D(sig000003c3),
        .Q(sig00000394),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001a9
       (.C(clk),
        .CE(1'b1),
        .D(sig000003c2),
        .Q(sig00000393),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001aa
       (.C(clk),
        .CE(1'b1),
        .D(sig000003c1),
        .Q(sig00000392),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001ab
       (.C(clk),
        .CE(1'b1),
        .D(sig000003c0),
        .Q(sig00000391),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001ac
       (.C(clk),
        .CE(1'b1),
        .D(sig000003bf),
        .Q(sig00000390),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001ad
       (.C(clk),
        .CE(1'b1),
        .D(sig000003be),
        .Q(sig0000038f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001ae
       (.C(clk),
        .CE(1'b1),
        .D(sig000003bd),
        .Q(sig0000038e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001af
       (.C(clk),
        .CE(1'b1),
        .D(sig000003bc),
        .Q(sig0000038d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001b0
       (.C(clk),
        .CE(1'b1),
        .D(sig000003bb),
        .Q(sig0000038c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001b1
       (.C(clk),
        .CE(1'b1),
        .D(sig000003ba),
        .Q(sig0000038b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001b2
       (.C(clk),
        .CE(1'b1),
        .D(sig000003b9),
        .Q(sig0000038a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001b3
       (.C(clk),
        .CE(1'b1),
        .D(sig000003b8),
        .Q(sig00000389),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001b4
       (.C(clk),
        .CE(1'b1),
        .D(sig000003b7),
        .Q(sig00000388),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001b5
       (.C(clk),
        .CE(1'b1),
        .D(sig000003b6),
        .Q(sig00000387),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001b6
       (.C(clk),
        .CE(1'b1),
        .D(sig000003b5),
        .Q(sig00000386),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001b7
       (.C(clk),
        .CE(1'b1),
        .D(sig000003b4),
        .Q(sig00000385),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001b8
       (.C(clk),
        .CE(1'b1),
        .D(sig000003b3),
        .Q(sig00000384),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001b9
       (.C(clk),
        .CE(1'b1),
        .D(sig000003b2),
        .Q(sig00000383),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001ba
       (.C(clk),
        .CE(1'b1),
        .D(sig000003b1),
        .Q(sig00000382),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001bb
       (.C(clk),
        .CE(1'b1),
        .D(sig000003f6),
        .Q(sig000003c7),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001bc
       (.C(clk),
        .CE(1'b1),
        .D(sig000003f5),
        .Q(sig000003c6),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001bd
       (.C(clk),
        .CE(1'b1),
        .D(sig000003f4),
        .Q(sig000003c5),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001be
       (.C(clk),
        .CE(1'b1),
        .D(sig000003f3),
        .Q(sig000003c4),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001bf
       (.C(clk),
        .CE(1'b1),
        .D(sig000003f2),
        .Q(sig000003c3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001c0
       (.C(clk),
        .CE(1'b1),
        .D(sig000003f1),
        .Q(sig000003c2),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001c1
       (.C(clk),
        .CE(1'b1),
        .D(sig000003f0),
        .Q(sig000003c1),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001c2
       (.C(clk),
        .CE(1'b1),
        .D(sig000003ef),
        .Q(sig000003c0),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001c3
       (.C(clk),
        .CE(1'b1),
        .D(sig000003ee),
        .Q(sig000003bf),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001c4
       (.C(clk),
        .CE(1'b1),
        .D(sig000003ed),
        .Q(sig000003be),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001c5
       (.C(clk),
        .CE(1'b1),
        .D(sig000003ec),
        .Q(sig000003bd),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001c6
       (.C(clk),
        .CE(1'b1),
        .D(sig000003eb),
        .Q(sig000003bc),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001c7
       (.C(clk),
        .CE(1'b1),
        .D(sig000003ea),
        .Q(sig000003bb),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001c8
       (.C(clk),
        .CE(1'b1),
        .D(sig000003e9),
        .Q(sig000003ba),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001c9
       (.C(clk),
        .CE(1'b1),
        .D(sig000003e8),
        .Q(sig000003b9),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001ca
       (.C(clk),
        .CE(1'b1),
        .D(sig000003e7),
        .Q(sig000003b8),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001cb
       (.C(clk),
        .CE(1'b1),
        .D(sig000003e6),
        .Q(sig000003b7),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001cc
       (.C(clk),
        .CE(1'b1),
        .D(sig000003e5),
        .Q(sig000003b6),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001cd
       (.C(clk),
        .CE(1'b1),
        .D(sig000003e4),
        .Q(sig000003b5),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001ce
       (.C(clk),
        .CE(1'b1),
        .D(sig000003e3),
        .Q(sig000003b4),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001cf
       (.C(clk),
        .CE(1'b1),
        .D(sig000003e2),
        .Q(sig000003b3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001d0
       (.C(clk),
        .CE(1'b1),
        .D(sig000003e1),
        .Q(sig000003b2),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001d1
       (.C(clk),
        .CE(1'b1),
        .D(sig000003e0),
        .Q(sig000003b1),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001d2
       (.C(clk),
        .CE(1'b1),
        .D(sig00000425),
        .Q(sig000003f6),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001d3
       (.C(clk),
        .CE(1'b1),
        .D(sig00000424),
        .Q(sig000003f5),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001d4
       (.C(clk),
        .CE(1'b1),
        .D(sig00000423),
        .Q(sig000003f4),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001d5
       (.C(clk),
        .CE(1'b1),
        .D(sig00000422),
        .Q(sig000003f3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001d6
       (.C(clk),
        .CE(1'b1),
        .D(sig00000421),
        .Q(sig000003f2),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001d7
       (.C(clk),
        .CE(1'b1),
        .D(sig00000420),
        .Q(sig000003f1),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001d8
       (.C(clk),
        .CE(1'b1),
        .D(sig0000041f),
        .Q(sig000003f0),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001d9
       (.C(clk),
        .CE(1'b1),
        .D(sig0000041e),
        .Q(sig000003ef),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001da
       (.C(clk),
        .CE(1'b1),
        .D(sig0000041d),
        .Q(sig000003ee),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001db
       (.C(clk),
        .CE(1'b1),
        .D(sig0000041c),
        .Q(sig000003ed),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001dc
       (.C(clk),
        .CE(1'b1),
        .D(sig0000041b),
        .Q(sig000003ec),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001dd
       (.C(clk),
        .CE(1'b1),
        .D(sig0000041a),
        .Q(sig000003eb),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001de
       (.C(clk),
        .CE(1'b1),
        .D(sig00000419),
        .Q(sig000003ea),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001df
       (.C(clk),
        .CE(1'b1),
        .D(sig00000418),
        .Q(sig000003e9),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001e0
       (.C(clk),
        .CE(1'b1),
        .D(sig00000417),
        .Q(sig000003e8),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001e1
       (.C(clk),
        .CE(1'b1),
        .D(sig00000416),
        .Q(sig000003e7),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001e2
       (.C(clk),
        .CE(1'b1),
        .D(sig00000415),
        .Q(sig000003e6),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001e3
       (.C(clk),
        .CE(1'b1),
        .D(sig00000414),
        .Q(sig000003e5),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001e4
       (.C(clk),
        .CE(1'b1),
        .D(sig00000413),
        .Q(sig000003e4),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001e5
       (.C(clk),
        .CE(1'b1),
        .D(sig00000412),
        .Q(sig000003e3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001e6
       (.C(clk),
        .CE(1'b1),
        .D(sig00000411),
        .Q(sig000003e2),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001e7
       (.C(clk),
        .CE(1'b1),
        .D(sig00000410),
        .Q(sig000003e1),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001e8
       (.C(clk),
        .CE(1'b1),
        .D(sig0000040f),
        .Q(sig000003e0),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001e9
       (.C(clk),
        .CE(1'b1),
        .D(sig00000454),
        .Q(sig00000425),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001ea
       (.C(clk),
        .CE(1'b1),
        .D(sig00000453),
        .Q(sig00000424),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001eb
       (.C(clk),
        .CE(1'b1),
        .D(sig00000452),
        .Q(sig00000423),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001ec
       (.C(clk),
        .CE(1'b1),
        .D(sig00000451),
        .Q(sig00000422),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001ed
       (.C(clk),
        .CE(1'b1),
        .D(sig00000450),
        .Q(sig00000421),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001ee
       (.C(clk),
        .CE(1'b1),
        .D(sig0000044f),
        .Q(sig00000420),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001ef
       (.C(clk),
        .CE(1'b1),
        .D(sig0000044e),
        .Q(sig0000041f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001f0
       (.C(clk),
        .CE(1'b1),
        .D(sig0000044d),
        .Q(sig0000041e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001f1
       (.C(clk),
        .CE(1'b1),
        .D(sig0000044c),
        .Q(sig0000041d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001f2
       (.C(clk),
        .CE(1'b1),
        .D(sig0000044b),
        .Q(sig0000041c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001f3
       (.C(clk),
        .CE(1'b1),
        .D(sig0000044a),
        .Q(sig0000041b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001f4
       (.C(clk),
        .CE(1'b1),
        .D(sig00000449),
        .Q(sig0000041a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001f5
       (.C(clk),
        .CE(1'b1),
        .D(sig00000448),
        .Q(sig00000419),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001f6
       (.C(clk),
        .CE(1'b1),
        .D(sig00000447),
        .Q(sig00000418),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001f7
       (.C(clk),
        .CE(1'b1),
        .D(sig00000446),
        .Q(sig00000417),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001f8
       (.C(clk),
        .CE(1'b1),
        .D(sig00000445),
        .Q(sig00000416),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001f9
       (.C(clk),
        .CE(1'b1),
        .D(sig00000444),
        .Q(sig00000415),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001fa
       (.C(clk),
        .CE(1'b1),
        .D(sig00000443),
        .Q(sig00000414),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001fb
       (.C(clk),
        .CE(1'b1),
        .D(sig00000442),
        .Q(sig00000413),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001fc
       (.C(clk),
        .CE(1'b1),
        .D(sig00000441),
        .Q(sig00000412),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001fd
       (.C(clk),
        .CE(1'b1),
        .D(sig00000440),
        .Q(sig00000411),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001fe
       (.C(clk),
        .CE(1'b1),
        .D(sig0000043f),
        .Q(sig00000410),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000001ff
       (.C(clk),
        .CE(1'b1),
        .D(sig0000043e),
        .Q(sig0000040f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000200
       (.C(clk),
        .CE(1'b1),
        .D(sig00000483),
        .Q(sig00000454),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000201
       (.C(clk),
        .CE(1'b1),
        .D(sig00000482),
        .Q(sig00000453),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000202
       (.C(clk),
        .CE(1'b1),
        .D(sig00000481),
        .Q(sig00000452),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000203
       (.C(clk),
        .CE(1'b1),
        .D(sig00000480),
        .Q(sig00000451),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000204
       (.C(clk),
        .CE(1'b1),
        .D(sig0000047f),
        .Q(sig00000450),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000205
       (.C(clk),
        .CE(1'b1),
        .D(sig0000047e),
        .Q(sig0000044f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000206
       (.C(clk),
        .CE(1'b1),
        .D(sig0000047d),
        .Q(sig0000044e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000207
       (.C(clk),
        .CE(1'b1),
        .D(sig0000047c),
        .Q(sig0000044d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000208
       (.C(clk),
        .CE(1'b1),
        .D(sig0000047b),
        .Q(sig0000044c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000209
       (.C(clk),
        .CE(1'b1),
        .D(sig0000047a),
        .Q(sig0000044b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000020a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000479),
        .Q(sig0000044a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000020b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000478),
        .Q(sig00000449),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000020c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000477),
        .Q(sig00000448),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000020d
       (.C(clk),
        .CE(1'b1),
        .D(sig00000476),
        .Q(sig00000447),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000020e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000475),
        .Q(sig00000446),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000020f
       (.C(clk),
        .CE(1'b1),
        .D(sig00000474),
        .Q(sig00000445),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000210
       (.C(clk),
        .CE(1'b1),
        .D(sig00000473),
        .Q(sig00000444),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000211
       (.C(clk),
        .CE(1'b1),
        .D(sig00000472),
        .Q(sig00000443),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000212
       (.C(clk),
        .CE(1'b1),
        .D(sig00000471),
        .Q(sig00000442),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000213
       (.C(clk),
        .CE(1'b1),
        .D(sig00000470),
        .Q(sig00000441),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000214
       (.C(clk),
        .CE(1'b1),
        .D(sig0000046f),
        .Q(sig00000440),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000215
       (.C(clk),
        .CE(1'b1),
        .D(sig0000046e),
        .Q(sig0000043f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000216
       (.C(clk),
        .CE(1'b1),
        .D(sig0000046d),
        .Q(sig0000043e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000217
       (.C(clk),
        .CE(1'b1),
        .D(sig000004b2),
        .Q(sig00000483),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000218
       (.C(clk),
        .CE(1'b1),
        .D(sig000004b1),
        .Q(sig00000482),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000219
       (.C(clk),
        .CE(1'b1),
        .D(sig000004b0),
        .Q(sig00000481),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000021a
       (.C(clk),
        .CE(1'b1),
        .D(sig000004af),
        .Q(sig00000480),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000021b
       (.C(clk),
        .CE(1'b1),
        .D(sig000004ae),
        .Q(sig0000047f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000021c
       (.C(clk),
        .CE(1'b1),
        .D(sig000004ad),
        .Q(sig0000047e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000021d
       (.C(clk),
        .CE(1'b1),
        .D(sig000004ac),
        .Q(sig0000047d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000021e
       (.C(clk),
        .CE(1'b1),
        .D(sig000004ab),
        .Q(sig0000047c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000021f
       (.C(clk),
        .CE(1'b1),
        .D(sig000004aa),
        .Q(sig0000047b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000220
       (.C(clk),
        .CE(1'b1),
        .D(sig000004a9),
        .Q(sig0000047a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000221
       (.C(clk),
        .CE(1'b1),
        .D(sig000004a8),
        .Q(sig00000479),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000222
       (.C(clk),
        .CE(1'b1),
        .D(sig000004a7),
        .Q(sig00000478),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000223
       (.C(clk),
        .CE(1'b1),
        .D(sig000004a6),
        .Q(sig00000477),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000224
       (.C(clk),
        .CE(1'b1),
        .D(sig000004a5),
        .Q(sig00000476),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000225
       (.C(clk),
        .CE(1'b1),
        .D(sig000004a4),
        .Q(sig00000475),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000226
       (.C(clk),
        .CE(1'b1),
        .D(sig000004a3),
        .Q(sig00000474),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000227
       (.C(clk),
        .CE(1'b1),
        .D(sig000004a2),
        .Q(sig00000473),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000228
       (.C(clk),
        .CE(1'b1),
        .D(sig000004a1),
        .Q(sig00000472),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000229
       (.C(clk),
        .CE(1'b1),
        .D(sig000004a0),
        .Q(sig00000471),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000022a
       (.C(clk),
        .CE(1'b1),
        .D(sig0000049f),
        .Q(sig00000470),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000022b
       (.C(clk),
        .CE(1'b1),
        .D(sig0000049e),
        .Q(sig0000046f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000022c
       (.C(clk),
        .CE(1'b1),
        .D(sig0000049d),
        .Q(sig0000046e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000022d
       (.C(clk),
        .CE(1'b1),
        .D(sig0000049c),
        .Q(sig0000046d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000022e
       (.C(clk),
        .CE(1'b1),
        .D(sig000004e1),
        .Q(sig000004b2),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000022f
       (.C(clk),
        .CE(1'b1),
        .D(sig000004e0),
        .Q(sig000004b1),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000230
       (.C(clk),
        .CE(1'b1),
        .D(sig000004df),
        .Q(sig000004b0),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000231
       (.C(clk),
        .CE(1'b1),
        .D(sig000004de),
        .Q(sig000004af),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000232
       (.C(clk),
        .CE(1'b1),
        .D(sig000004dd),
        .Q(sig000004ae),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000233
       (.C(clk),
        .CE(1'b1),
        .D(sig000004dc),
        .Q(sig000004ad),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000234
       (.C(clk),
        .CE(1'b1),
        .D(sig000004db),
        .Q(sig000004ac),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000235
       (.C(clk),
        .CE(1'b1),
        .D(sig000004da),
        .Q(sig000004ab),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000236
       (.C(clk),
        .CE(1'b1),
        .D(sig000004d9),
        .Q(sig000004aa),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000237
       (.C(clk),
        .CE(1'b1),
        .D(sig000004d8),
        .Q(sig000004a9),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000238
       (.C(clk),
        .CE(1'b1),
        .D(sig000004d7),
        .Q(sig000004a8),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000239
       (.C(clk),
        .CE(1'b1),
        .D(sig000004d6),
        .Q(sig000004a7),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000023a
       (.C(clk),
        .CE(1'b1),
        .D(sig000004d5),
        .Q(sig000004a6),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000023b
       (.C(clk),
        .CE(1'b1),
        .D(sig000004d4),
        .Q(sig000004a5),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000023c
       (.C(clk),
        .CE(1'b1),
        .D(sig000004d3),
        .Q(sig000004a4),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000023d
       (.C(clk),
        .CE(1'b1),
        .D(sig000004d2),
        .Q(sig000004a3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000023e
       (.C(clk),
        .CE(1'b1),
        .D(sig000004d1),
        .Q(sig000004a2),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000023f
       (.C(clk),
        .CE(1'b1),
        .D(sig000004d0),
        .Q(sig000004a1),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000240
       (.C(clk),
        .CE(1'b1),
        .D(sig000004cf),
        .Q(sig000004a0),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000241
       (.C(clk),
        .CE(1'b1),
        .D(sig000004ce),
        .Q(sig0000049f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000242
       (.C(clk),
        .CE(1'b1),
        .D(sig000004cd),
        .Q(sig0000049e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000243
       (.C(clk),
        .CE(1'b1),
        .D(sig000004cc),
        .Q(sig0000049d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000244
       (.C(clk),
        .CE(1'b1),
        .D(sig000004cb),
        .Q(sig0000049c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000245
       (.C(clk),
        .CE(1'b1),
        .D(sig00000510),
        .Q(sig000004e1),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000246
       (.C(clk),
        .CE(1'b1),
        .D(sig0000050f),
        .Q(sig000004e0),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000247
       (.C(clk),
        .CE(1'b1),
        .D(sig0000050e),
        .Q(sig000004df),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000248
       (.C(clk),
        .CE(1'b1),
        .D(sig0000050d),
        .Q(sig000004de),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000249
       (.C(clk),
        .CE(1'b1),
        .D(sig0000050c),
        .Q(sig000004dd),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000024a
       (.C(clk),
        .CE(1'b1),
        .D(sig0000050b),
        .Q(sig000004dc),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000024b
       (.C(clk),
        .CE(1'b1),
        .D(sig0000050a),
        .Q(sig000004db),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000024c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000509),
        .Q(sig000004da),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000024d
       (.C(clk),
        .CE(1'b1),
        .D(sig00000508),
        .Q(sig000004d9),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000024e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000507),
        .Q(sig000004d8),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000024f
       (.C(clk),
        .CE(1'b1),
        .D(sig00000506),
        .Q(sig000004d7),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000250
       (.C(clk),
        .CE(1'b1),
        .D(sig00000505),
        .Q(sig000004d6),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000251
       (.C(clk),
        .CE(1'b1),
        .D(sig00000504),
        .Q(sig000004d5),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000252
       (.C(clk),
        .CE(1'b1),
        .D(sig00000503),
        .Q(sig000004d4),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000253
       (.C(clk),
        .CE(1'b1),
        .D(sig00000502),
        .Q(sig000004d3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000254
       (.C(clk),
        .CE(1'b1),
        .D(sig00000501),
        .Q(sig000004d2),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000255
       (.C(clk),
        .CE(1'b1),
        .D(sig00000500),
        .Q(sig000004d1),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000256
       (.C(clk),
        .CE(1'b1),
        .D(sig000004ff),
        .Q(sig000004d0),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000257
       (.C(clk),
        .CE(1'b1),
        .D(sig000004fe),
        .Q(sig000004cf),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000258
       (.C(clk),
        .CE(1'b1),
        .D(sig000004fd),
        .Q(sig000004ce),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000259
       (.C(clk),
        .CE(1'b1),
        .D(sig000004fc),
        .Q(sig000004cd),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000025a
       (.C(clk),
        .CE(1'b1),
        .D(sig000004fb),
        .Q(sig000004cc),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000025b
       (.C(clk),
        .CE(1'b1),
        .D(sig000004fa),
        .Q(sig000004cb),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000025c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000540),
        .Q(sig00000510),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000025d
       (.C(clk),
        .CE(1'b1),
        .D(sig0000053f),
        .Q(sig0000050f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000025e
       (.C(clk),
        .CE(1'b1),
        .D(sig0000053e),
        .Q(sig0000050e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000025f
       (.C(clk),
        .CE(1'b1),
        .D(sig0000053d),
        .Q(sig0000050d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000260
       (.C(clk),
        .CE(1'b1),
        .D(sig0000053c),
        .Q(sig0000050c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000261
       (.C(clk),
        .CE(1'b1),
        .D(sig0000053b),
        .Q(sig0000050b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000262
       (.C(clk),
        .CE(1'b1),
        .D(sig0000053a),
        .Q(sig0000050a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000263
       (.C(clk),
        .CE(1'b1),
        .D(sig00000539),
        .Q(sig00000509),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000264
       (.C(clk),
        .CE(1'b1),
        .D(sig00000538),
        .Q(sig00000508),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000265
       (.C(clk),
        .CE(1'b1),
        .D(sig00000537),
        .Q(sig00000507),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000266
       (.C(clk),
        .CE(1'b1),
        .D(sig00000536),
        .Q(sig00000506),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000267
       (.C(clk),
        .CE(1'b1),
        .D(sig00000535),
        .Q(sig00000505),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000268
       (.C(clk),
        .CE(1'b1),
        .D(sig00000534),
        .Q(sig00000504),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000269
       (.C(clk),
        .CE(1'b1),
        .D(sig00000533),
        .Q(sig00000503),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000026a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000532),
        .Q(sig00000502),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000026b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000531),
        .Q(sig00000501),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000026c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000530),
        .Q(sig00000500),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000026d
       (.C(clk),
        .CE(1'b1),
        .D(sig0000052f),
        .Q(sig000004ff),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000026e
       (.C(clk),
        .CE(1'b1),
        .D(sig0000052e),
        .Q(sig000004fe),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000026f
       (.C(clk),
        .CE(1'b1),
        .D(sig0000052d),
        .Q(sig000004fd),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000270
       (.C(clk),
        .CE(1'b1),
        .D(sig0000052c),
        .Q(sig000004fc),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000271
       (.C(clk),
        .CE(1'b1),
        .D(sig0000052b),
        .Q(sig000004fb),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000272
       (.C(clk),
        .CE(1'b1),
        .D(sig0000052a),
        .Q(sig000004fa),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000273
       (.C(clk),
        .CE(1'b1),
        .D(b[22]),
        .Q(sig00000540),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000274
       (.C(clk),
        .CE(1'b1),
        .D(b[21]),
        .Q(sig0000053f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000275
       (.C(clk),
        .CE(1'b1),
        .D(b[20]),
        .Q(sig0000053e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000276
       (.C(clk),
        .CE(1'b1),
        .D(b[19]),
        .Q(sig0000053d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000277
       (.C(clk),
        .CE(1'b1),
        .D(b[18]),
        .Q(sig0000053c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000278
       (.C(clk),
        .CE(1'b1),
        .D(b[17]),
        .Q(sig0000053b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000279
       (.C(clk),
        .CE(1'b1),
        .D(b[16]),
        .Q(sig0000053a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000027a
       (.C(clk),
        .CE(1'b1),
        .D(b[15]),
        .Q(sig00000539),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000027b
       (.C(clk),
        .CE(1'b1),
        .D(b[14]),
        .Q(sig00000538),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000027c
       (.C(clk),
        .CE(1'b1),
        .D(b[13]),
        .Q(sig00000537),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000027d
       (.C(clk),
        .CE(1'b1),
        .D(b[12]),
        .Q(sig00000536),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000027e
       (.C(clk),
        .CE(1'b1),
        .D(b[11]),
        .Q(sig00000535),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000027f
       (.C(clk),
        .CE(1'b1),
        .D(b[10]),
        .Q(sig00000534),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000280
       (.C(clk),
        .CE(1'b1),
        .D(b[9]),
        .Q(sig00000533),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000281
       (.C(clk),
        .CE(1'b1),
        .D(b[8]),
        .Q(sig00000532),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000282
       (.C(clk),
        .CE(1'b1),
        .D(b[7]),
        .Q(sig00000531),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000283
       (.C(clk),
        .CE(1'b1),
        .D(b[6]),
        .Q(sig00000530),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000284
       (.C(clk),
        .CE(1'b1),
        .D(b[5]),
        .Q(sig0000052f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000285
       (.C(clk),
        .CE(1'b1),
        .D(b[4]),
        .Q(sig0000052e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000286
       (.C(clk),
        .CE(1'b1),
        .D(b[3]),
        .Q(sig0000052d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000287
       (.C(clk),
        .CE(1'b1),
        .D(b[2]),
        .Q(sig0000052c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000288
       (.C(clk),
        .CE(1'b1),
        .D(b[1]),
        .Q(sig0000052b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000289
       (.C(clk),
        .CE(1'b1),
        .D(b[0]),
        .Q(sig0000052a),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000028a_CARRY4
       (.CI(sig000007cc),
        .CO(NLW_blk0000028a_CARRY4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI(NLW_blk0000028a_CARRY4_DI_UNCONNECTED[3:0]),
        .O({NLW_blk0000028a_CARRY4_O_UNCONNECTED[3:1],sig000007ca}),
        .S({NLW_blk0000028a_CARRY4_S_UNCONNECTED[3:1],1'b0}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000292_CARRY4
       (.CI(sig000007d4),
        .CO({sig000007cc,sig000007ce,sig000007d0,sig000007d2}),
        .CYINIT(1'b0),
        .DI({1'b1,a[22:20]}),
        .O({sig000007cb,sig000007cd,sig000007cf,sig000007d1}),
        .S({1'b1,sig000007c8,sig000007c7,sig000007c6}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000029a_CARRY4
       (.CI(sig000007dc),
        .CO({sig000007d4,sig000007d6,sig000007d8,sig000007da}),
        .CYINIT(1'b0),
        .DI(a[19:16]),
        .O({sig000007d3,sig000007d5,sig000007d7,sig000007d9}),
        .S({sig000007c5,sig000007c4,sig000007c3,sig000007c2}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000002a2_CARRY4
       (.CI(sig000007e4),
        .CO({sig000007dc,sig000007de,sig000007e0,sig000007e2}),
        .CYINIT(1'b0),
        .DI(a[15:12]),
        .O({sig000007db,sig000007dd,sig000007df,sig000007e1}),
        .S({sig000007c1,sig000007c0,sig000007bf,sig000007be}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000002aa_CARRY4
       (.CI(sig000007ec),
        .CO({sig000007e4,sig000007e6,sig000007e8,sig000007ea}),
        .CYINIT(1'b0),
        .DI(a[11:8]),
        .O({sig000007e3,sig000007e5,sig000007e7,sig000007e9}),
        .S({sig000007bd,sig000007bc,sig000007bb,sig000007ba}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000002b2_CARRY4
       (.CI(sig000007f4),
        .CO({sig000007ec,sig000007ee,sig000007f0,sig000007f2}),
        .CYINIT(1'b0),
        .DI(a[7:4]),
        .O({sig000007eb,sig000007ed,sig000007ef,sig000007f1}),
        .S({sig000007b9,sig000007b8,sig000007b7,sig000007b6}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000002ba_CARRY4
       (.CI(1'b0),
        .CO({sig000007f4,sig000007f6,sig000007f8,sig000007fa}),
        .CYINIT(1'b1),
        .DI(a[3:0]),
        .O({sig000007f3,sig000007f5,sig000007f7,sig000007f9}),
        .S({sig000007b5,sig000007b4,sig000007b3,sig000007b2}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000002bb_CARRY4
       (.CI(sig000007fd),
        .CO(NLW_blk000002bb_CARRY4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI(NLW_blk000002bb_CARRY4_DI_UNCONNECTED[3:0]),
        .O({NLW_blk000002bb_CARRY4_O_UNCONNECTED[3:1],sig000007fb}),
        .S({NLW_blk000002bb_CARRY4_S_UNCONNECTED[3:1],sig000007b1}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000002c3_CARRY4
       (.CI(sig00000805),
        .CO({sig000007fd,sig000007ff,sig00000801,sig00000803}),
        .CYINIT(1'b0),
        .DI({sig00000528,sig00000527,sig00000526,sig00000525}),
        .O({sig000007fc,sig000007fe,sig00000800,sig00000802}),
        .S({sig000007b0,sig000007af,sig000007ae,sig000007ad}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000002cb_CARRY4
       (.CI(sig0000080d),
        .CO({sig00000805,sig00000807,sig00000809,sig0000080b}),
        .CYINIT(1'b0),
        .DI({sig00000524,sig00000523,sig00000522,sig00000521}),
        .O({sig00000804,sig00000806,sig00000808,sig0000080a}),
        .S({sig000007ac,sig000007ab,sig000007aa,sig000007a9}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000002d3_CARRY4
       (.CI(sig00000815),
        .CO({sig0000080d,sig0000080f,sig00000811,sig00000813}),
        .CYINIT(1'b0),
        .DI({sig00000520,sig0000051f,sig0000051e,sig0000051d}),
        .O({sig0000080c,sig0000080e,sig00000810,sig00000812}),
        .S({sig000007a8,sig000007a7,sig000007a6,sig000007a5}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000002db_CARRY4
       (.CI(sig0000081d),
        .CO({sig00000815,sig00000817,sig00000819,sig0000081b}),
        .CYINIT(1'b0),
        .DI({sig0000051c,sig0000051b,sig0000051a,sig00000519}),
        .O({sig00000814,sig00000816,sig00000818,sig0000081a}),
        .S({sig000007a4,sig000007a3,sig000007a2,sig000007a1}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000002e3_CARRY4
       (.CI(sig00000825),
        .CO({sig0000081d,sig0000081f,sig00000821,sig00000823}),
        .CYINIT(1'b0),
        .DI({sig00000518,sig00000517,sig00000516,sig00000515}),
        .O({sig0000081c,sig0000081e,sig00000820,sig00000822}),
        .S({sig000007a0,sig0000079f,sig0000079e,sig0000079d}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000002eb_CARRY4
       (.CI(1'b0),
        .CO({sig00000825,sig00000827,sig00000829,sig0000082a}),
        .CYINIT(sig00000511),
        .DI({sig00000514,sig00000513,sig00000512,1'b0}),
        .O({sig00000824,sig00000826,sig00000828,NLW_blk000002eb_CARRY4_O_UNCONNECTED[0]}),
        .S({sig0000079c,sig0000079b,sig0000079a,sig00000799}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000002ec_CARRY4
       (.CI(sig0000082d),
        .CO(NLW_blk000002ec_CARRY4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI(NLW_blk000002ec_CARRY4_DI_UNCONNECTED[3:0]),
        .O({NLW_blk000002ec_CARRY4_O_UNCONNECTED[3:1],sig0000082b}),
        .S({NLW_blk000002ec_CARRY4_S_UNCONNECTED[3:1],sig00000798}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000002f4_CARRY4
       (.CI(sig00000835),
        .CO({sig0000082d,sig0000082f,sig00000831,sig00000833}),
        .CYINIT(1'b0),
        .DI({sig000004f8,sig000004f7,sig000004f6,sig000004f5}),
        .O({sig0000082c,sig0000082e,sig00000830,sig00000832}),
        .S({sig00000797,sig00000796,sig00000795,sig00000794}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000002fc_CARRY4
       (.CI(sig0000083d),
        .CO({sig00000835,sig00000837,sig00000839,sig0000083b}),
        .CYINIT(1'b0),
        .DI({sig000004f4,sig000004f3,sig000004f2,sig000004f1}),
        .O({sig00000834,sig00000836,sig00000838,sig0000083a}),
        .S({sig00000793,sig00000792,sig00000791,sig00000790}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000304_CARRY4
       (.CI(sig00000845),
        .CO({sig0000083d,sig0000083f,sig00000841,sig00000843}),
        .CYINIT(1'b0),
        .DI({sig000004f0,sig000004ef,sig000004ee,sig000004ed}),
        .O({sig0000083c,sig0000083e,sig00000840,sig00000842}),
        .S({sig0000078f,sig0000078e,sig0000078d,sig0000078c}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000030c_CARRY4
       (.CI(sig0000084d),
        .CO({sig00000845,sig00000847,sig00000849,sig0000084b}),
        .CYINIT(1'b0),
        .DI({sig000004ec,sig000004eb,sig000004ea,sig000004e9}),
        .O({sig00000844,sig00000846,sig00000848,sig0000084a}),
        .S({sig0000078b,sig0000078a,sig00000789,sig00000788}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000314_CARRY4
       (.CI(sig00000855),
        .CO({sig0000084d,sig0000084f,sig00000851,sig00000853}),
        .CYINIT(1'b0),
        .DI({sig000004e8,sig000004e7,sig000004e6,sig000004e5}),
        .O({sig0000084c,sig0000084e,sig00000850,sig00000852}),
        .S({sig00000787,sig00000786,sig00000785,sig00000784}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000031c_CARRY4
       (.CI(1'b0),
        .CO({sig00000855,sig00000857,sig00000859,sig0000085a}),
        .CYINIT(sig000004e2),
        .DI({sig000004e4,sig000004e3,sig000004fa,1'b0}),
        .O({sig00000854,sig00000856,sig00000858,NLW_blk0000031c_CARRY4_O_UNCONNECTED[0]}),
        .S({sig00000783,sig00000782,sig00000781,sig00000780}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000031d_CARRY4
       (.CI(sig0000085d),
        .CO(NLW_blk0000031d_CARRY4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI(NLW_blk0000031d_CARRY4_DI_UNCONNECTED[3:0]),
        .O({NLW_blk0000031d_CARRY4_O_UNCONNECTED[3:1],sig0000085b}),
        .S({NLW_blk0000031d_CARRY4_S_UNCONNECTED[3:1],sig0000077f}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000325_CARRY4
       (.CI(sig00000865),
        .CO({sig0000085d,sig0000085f,sig00000861,sig00000863}),
        .CYINIT(1'b0),
        .DI({sig000004c9,sig000004c8,sig000004c7,sig000004c6}),
        .O({sig0000085c,sig0000085e,sig00000860,sig00000862}),
        .S({sig0000077e,sig0000077d,sig0000077c,sig0000077b}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000032d_CARRY4
       (.CI(sig0000086d),
        .CO({sig00000865,sig00000867,sig00000869,sig0000086b}),
        .CYINIT(1'b0),
        .DI({sig000004c5,sig000004c4,sig000004c3,sig000004c2}),
        .O({sig00000864,sig00000866,sig00000868,sig0000086a}),
        .S({sig0000077a,sig00000779,sig00000778,sig00000777}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000335_CARRY4
       (.CI(sig00000875),
        .CO({sig0000086d,sig0000086f,sig00000871,sig00000873}),
        .CYINIT(1'b0),
        .DI({sig000004c1,sig000004c0,sig000004bf,sig000004be}),
        .O({sig0000086c,sig0000086e,sig00000870,sig00000872}),
        .S({sig00000776,sig00000775,sig00000774,sig00000773}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000033d_CARRY4
       (.CI(sig0000087d),
        .CO({sig00000875,sig00000877,sig00000879,sig0000087b}),
        .CYINIT(1'b0),
        .DI({sig000004bd,sig000004bc,sig000004bb,sig000004ba}),
        .O({sig00000874,sig00000876,sig00000878,sig0000087a}),
        .S({sig00000772,sig00000771,sig00000770,sig0000076f}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000345_CARRY4
       (.CI(sig00000885),
        .CO({sig0000087d,sig0000087f,sig00000881,sig00000883}),
        .CYINIT(1'b0),
        .DI({sig000004b9,sig000004b8,sig000004b7,sig000004b6}),
        .O({sig0000087c,sig0000087e,sig00000880,sig00000882}),
        .S({sig0000076e,sig0000076d,sig0000076c,sig0000076b}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000034d_CARRY4
       (.CI(1'b0),
        .CO({sig00000885,sig00000887,sig00000889,sig0000088a}),
        .CYINIT(sig000004b3),
        .DI({sig000004b5,sig000004b4,sig000004cb,1'b0}),
        .O({sig00000884,sig00000886,sig00000888,NLW_blk0000034d_CARRY4_O_UNCONNECTED[0]}),
        .S({sig0000076a,sig00000769,sig00000768,sig00000767}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000034e_CARRY4
       (.CI(sig0000088d),
        .CO(NLW_blk0000034e_CARRY4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI(NLW_blk0000034e_CARRY4_DI_UNCONNECTED[3:0]),
        .O({NLW_blk0000034e_CARRY4_O_UNCONNECTED[3:1],sig0000088b}),
        .S({NLW_blk0000034e_CARRY4_S_UNCONNECTED[3:1],sig00000766}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000356_CARRY4
       (.CI(sig00000895),
        .CO({sig0000088d,sig0000088f,sig00000891,sig00000893}),
        .CYINIT(1'b0),
        .DI({sig0000049a,sig00000499,sig00000498,sig00000497}),
        .O({sig0000088c,sig0000088e,sig00000890,sig00000892}),
        .S({sig00000765,sig00000764,sig00000763,sig00000762}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000035e_CARRY4
       (.CI(sig0000089d),
        .CO({sig00000895,sig00000897,sig00000899,sig0000089b}),
        .CYINIT(1'b0),
        .DI({sig00000496,sig00000495,sig00000494,sig00000493}),
        .O({sig00000894,sig00000896,sig00000898,sig0000089a}),
        .S({sig00000761,sig00000760,sig0000075f,sig0000075e}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000366_CARRY4
       (.CI(sig000008a5),
        .CO({sig0000089d,sig0000089f,sig000008a1,sig000008a3}),
        .CYINIT(1'b0),
        .DI({sig00000492,sig00000491,sig00000490,sig0000048f}),
        .O({sig0000089c,sig0000089e,sig000008a0,sig000008a2}),
        .S({sig0000075d,sig0000075c,sig0000075b,sig0000075a}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000036e_CARRY4
       (.CI(sig000008ad),
        .CO({sig000008a5,sig000008a7,sig000008a9,sig000008ab}),
        .CYINIT(1'b0),
        .DI({sig0000048e,sig0000048d,sig0000048c,sig0000048b}),
        .O({sig000008a4,sig000008a6,sig000008a8,sig000008aa}),
        .S({sig00000759,sig00000758,sig00000757,sig00000756}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000376_CARRY4
       (.CI(sig000008b5),
        .CO({sig000008ad,sig000008af,sig000008b1,sig000008b3}),
        .CYINIT(1'b0),
        .DI({sig0000048a,sig00000489,sig00000488,sig00000487}),
        .O({sig000008ac,sig000008ae,sig000008b0,sig000008b2}),
        .S({sig00000755,sig00000754,sig00000753,sig00000752}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000037e_CARRY4
       (.CI(1'b0),
        .CO({sig000008b5,sig000008b7,sig000008b9,sig000008ba}),
        .CYINIT(sig00000484),
        .DI({sig00000486,sig00000485,sig0000049c,1'b0}),
        .O({sig000008b4,sig000008b6,sig000008b8,NLW_blk0000037e_CARRY4_O_UNCONNECTED[0]}),
        .S({sig00000751,sig00000750,sig0000074f,sig0000074e}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000037f_CARRY4
       (.CI(sig000008bd),
        .CO(NLW_blk0000037f_CARRY4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI(NLW_blk0000037f_CARRY4_DI_UNCONNECTED[3:0]),
        .O({NLW_blk0000037f_CARRY4_O_UNCONNECTED[3:1],sig000008bb}),
        .S({NLW_blk0000037f_CARRY4_S_UNCONNECTED[3:1],sig0000074d}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000387_CARRY4
       (.CI(sig000008c5),
        .CO({sig000008bd,sig000008bf,sig000008c1,sig000008c3}),
        .CYINIT(1'b0),
        .DI({sig0000046b,sig0000046a,sig00000469,sig00000468}),
        .O({sig000008bc,sig000008be,sig000008c0,sig000008c2}),
        .S({sig0000074c,sig0000074b,sig0000074a,sig00000749}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000038f_CARRY4
       (.CI(sig000008cd),
        .CO({sig000008c5,sig000008c7,sig000008c9,sig000008cb}),
        .CYINIT(1'b0),
        .DI({sig00000467,sig00000466,sig00000465,sig00000464}),
        .O({sig000008c4,sig000008c6,sig000008c8,sig000008ca}),
        .S({sig00000748,sig00000747,sig00000746,sig00000745}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000397_CARRY4
       (.CI(sig000008d5),
        .CO({sig000008cd,sig000008cf,sig000008d1,sig000008d3}),
        .CYINIT(1'b0),
        .DI({sig00000463,sig00000462,sig00000461,sig00000460}),
        .O({sig000008cc,sig000008ce,sig000008d0,sig000008d2}),
        .S({sig00000744,sig00000743,sig00000742,sig00000741}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000039f_CARRY4
       (.CI(sig000008dd),
        .CO({sig000008d5,sig000008d7,sig000008d9,sig000008db}),
        .CYINIT(1'b0),
        .DI({sig0000045f,sig0000045e,sig0000045d,sig0000045c}),
        .O({sig000008d4,sig000008d6,sig000008d8,sig000008da}),
        .S({sig00000740,sig0000073f,sig0000073e,sig0000073d}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000003a7_CARRY4
       (.CI(sig000008e5),
        .CO({sig000008dd,sig000008df,sig000008e1,sig000008e3}),
        .CYINIT(1'b0),
        .DI({sig0000045b,sig0000045a,sig00000459,sig00000458}),
        .O({sig000008dc,sig000008de,sig000008e0,sig000008e2}),
        .S({sig0000073c,sig0000073b,sig0000073a,sig00000739}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000003af_CARRY4
       (.CI(1'b0),
        .CO({sig000008e5,sig000008e7,sig000008e9,sig000008ea}),
        .CYINIT(sig00000455),
        .DI({sig00000457,sig00000456,sig0000046d,1'b0}),
        .O({sig000008e4,sig000008e6,sig000008e8,NLW_blk000003af_CARRY4_O_UNCONNECTED[0]}),
        .S({sig00000738,sig00000737,sig00000736,sig00000735}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000003b0_CARRY4
       (.CI(sig000008ed),
        .CO(NLW_blk000003b0_CARRY4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI(NLW_blk000003b0_CARRY4_DI_UNCONNECTED[3:0]),
        .O({NLW_blk000003b0_CARRY4_O_UNCONNECTED[3:1],sig000008eb}),
        .S({NLW_blk000003b0_CARRY4_S_UNCONNECTED[3:1],sig00000734}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000003b8_CARRY4
       (.CI(sig000008f5),
        .CO({sig000008ed,sig000008ef,sig000008f1,sig000008f3}),
        .CYINIT(1'b0),
        .DI({sig0000043c,sig0000043b,sig0000043a,sig00000439}),
        .O({sig000008ec,sig000008ee,sig000008f0,sig000008f2}),
        .S({sig00000733,sig00000732,sig00000731,sig00000730}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000003c0_CARRY4
       (.CI(sig000008fd),
        .CO({sig000008f5,sig000008f7,sig000008f9,sig000008fb}),
        .CYINIT(1'b0),
        .DI({sig00000438,sig00000437,sig00000436,sig00000435}),
        .O({sig000008f4,sig000008f6,sig000008f8,sig000008fa}),
        .S({sig0000072f,sig0000072e,sig0000072d,sig0000072c}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000003c8_CARRY4
       (.CI(sig00000905),
        .CO({sig000008fd,sig000008ff,sig00000901,sig00000903}),
        .CYINIT(1'b0),
        .DI({sig00000434,sig00000433,sig00000432,sig00000431}),
        .O({sig000008fc,sig000008fe,sig00000900,sig00000902}),
        .S({sig0000072b,sig0000072a,sig00000729,sig00000728}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000003d0_CARRY4
       (.CI(sig0000090d),
        .CO({sig00000905,sig00000907,sig00000909,sig0000090b}),
        .CYINIT(1'b0),
        .DI({sig00000430,sig0000042f,sig0000042e,sig0000042d}),
        .O({sig00000904,sig00000906,sig00000908,sig0000090a}),
        .S({sig00000727,sig00000726,sig00000725,sig00000724}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000003d8_CARRY4
       (.CI(sig00000915),
        .CO({sig0000090d,sig0000090f,sig00000911,sig00000913}),
        .CYINIT(1'b0),
        .DI({sig0000042c,sig0000042b,sig0000042a,sig00000429}),
        .O({sig0000090c,sig0000090e,sig00000910,sig00000912}),
        .S({sig00000723,sig00000722,sig00000721,sig00000720}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000003e0_CARRY4
       (.CI(1'b0),
        .CO({sig00000915,sig00000917,sig00000919,sig0000091a}),
        .CYINIT(sig00000426),
        .DI({sig00000428,sig00000427,sig0000043e,1'b0}),
        .O({sig00000914,sig00000916,sig00000918,NLW_blk000003e0_CARRY4_O_UNCONNECTED[0]}),
        .S({sig0000071f,sig0000071e,sig0000071d,sig0000071c}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000003e1_CARRY4
       (.CI(sig0000091d),
        .CO(NLW_blk000003e1_CARRY4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI(NLW_blk000003e1_CARRY4_DI_UNCONNECTED[3:0]),
        .O({NLW_blk000003e1_CARRY4_O_UNCONNECTED[3:1],sig0000091b}),
        .S({NLW_blk000003e1_CARRY4_S_UNCONNECTED[3:1],sig0000071b}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000003e9_CARRY4
       (.CI(sig00000925),
        .CO({sig0000091d,sig0000091f,sig00000921,sig00000923}),
        .CYINIT(1'b0),
        .DI({sig0000040d,sig0000040c,sig0000040b,sig0000040a}),
        .O({sig0000091c,sig0000091e,sig00000920,sig00000922}),
        .S({sig0000071a,sig00000719,sig00000718,sig00000717}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000003f1_CARRY4
       (.CI(sig0000092d),
        .CO({sig00000925,sig00000927,sig00000929,sig0000092b}),
        .CYINIT(1'b0),
        .DI({sig00000409,sig00000408,sig00000407,sig00000406}),
        .O({sig00000924,sig00000926,sig00000928,sig0000092a}),
        .S({sig00000716,sig00000715,sig00000714,sig00000713}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000003f9_CARRY4
       (.CI(sig00000935),
        .CO({sig0000092d,sig0000092f,sig00000931,sig00000933}),
        .CYINIT(1'b0),
        .DI({sig00000405,sig00000404,sig00000403,sig00000402}),
        .O({sig0000092c,sig0000092e,sig00000930,sig00000932}),
        .S({sig00000712,sig00000711,sig00000710,sig0000070f}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000401_CARRY4
       (.CI(sig0000093d),
        .CO({sig00000935,sig00000937,sig00000939,sig0000093b}),
        .CYINIT(1'b0),
        .DI({sig00000401,sig00000400,sig000003ff,sig000003fe}),
        .O({sig00000934,sig00000936,sig00000938,sig0000093a}),
        .S({sig0000070e,sig0000070d,sig0000070c,sig0000070b}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000409_CARRY4
       (.CI(sig00000945),
        .CO({sig0000093d,sig0000093f,sig00000941,sig00000943}),
        .CYINIT(1'b0),
        .DI({sig000003fd,sig000003fc,sig000003fb,sig000003fa}),
        .O({sig0000093c,sig0000093e,sig00000940,sig00000942}),
        .S({sig0000070a,sig00000709,sig00000708,sig00000707}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000411_CARRY4
       (.CI(1'b0),
        .CO({sig00000945,sig00000947,sig00000949,sig0000094a}),
        .CYINIT(sig000003f7),
        .DI({sig000003f9,sig000003f8,sig0000040f,1'b0}),
        .O({sig00000944,sig00000946,sig00000948,NLW_blk00000411_CARRY4_O_UNCONNECTED[0]}),
        .S({sig00000706,sig00000705,sig00000704,sig00000703}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000412_CARRY4
       (.CI(sig0000094d),
        .CO(NLW_blk00000412_CARRY4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI(NLW_blk00000412_CARRY4_DI_UNCONNECTED[3:0]),
        .O({NLW_blk00000412_CARRY4_O_UNCONNECTED[3:1],sig0000094b}),
        .S({NLW_blk00000412_CARRY4_S_UNCONNECTED[3:1],sig00000702}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000041a_CARRY4
       (.CI(sig00000955),
        .CO({sig0000094d,sig0000094f,sig00000951,sig00000953}),
        .CYINIT(1'b0),
        .DI({sig000003de,sig000003dd,sig000003dc,sig000003db}),
        .O({sig0000094c,sig0000094e,sig00000950,sig00000952}),
        .S({sig00000701,sig00000700,sig000006ff,sig000006fe}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000422_CARRY4
       (.CI(sig0000095d),
        .CO({sig00000955,sig00000957,sig00000959,sig0000095b}),
        .CYINIT(1'b0),
        .DI({sig000003da,sig000003d9,sig000003d8,sig000003d7}),
        .O({sig00000954,sig00000956,sig00000958,sig0000095a}),
        .S({sig000006fd,sig000006fc,sig000006fb,sig000006fa}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000042a_CARRY4
       (.CI(sig00000965),
        .CO({sig0000095d,sig0000095f,sig00000961,sig00000963}),
        .CYINIT(1'b0),
        .DI({sig000003d6,sig000003d5,sig000003d4,sig000003d3}),
        .O({sig0000095c,sig0000095e,sig00000960,sig00000962}),
        .S({sig000006f9,sig000006f8,sig000006f7,sig000006f6}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000432_CARRY4
       (.CI(sig0000096d),
        .CO({sig00000965,sig00000967,sig00000969,sig0000096b}),
        .CYINIT(1'b0),
        .DI({sig000003d2,sig000003d1,sig000003d0,sig000003cf}),
        .O({sig00000964,sig00000966,sig00000968,sig0000096a}),
        .S({sig000006f5,sig000006f4,sig000006f3,sig000006f2}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000043a_CARRY4
       (.CI(sig00000975),
        .CO({sig0000096d,sig0000096f,sig00000971,sig00000973}),
        .CYINIT(1'b0),
        .DI({sig000003ce,sig000003cd,sig000003cc,sig000003cb}),
        .O({sig0000096c,sig0000096e,sig00000970,sig00000972}),
        .S({sig000006f1,sig000006f0,sig000006ef,sig000006ee}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000442_CARRY4
       (.CI(1'b0),
        .CO({sig00000975,sig00000977,sig00000979,sig0000097a}),
        .CYINIT(sig000003c8),
        .DI({sig000003ca,sig000003c9,sig000003e0,1'b0}),
        .O({sig00000974,sig00000976,sig00000978,NLW_blk00000442_CARRY4_O_UNCONNECTED[0]}),
        .S({sig000006ed,sig000006ec,sig000006eb,sig000006ea}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000443_CARRY4
       (.CI(sig0000097d),
        .CO(NLW_blk00000443_CARRY4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI(NLW_blk00000443_CARRY4_DI_UNCONNECTED[3:0]),
        .O({NLW_blk00000443_CARRY4_O_UNCONNECTED[3:1],sig0000097b}),
        .S({NLW_blk00000443_CARRY4_S_UNCONNECTED[3:1],sig000006e9}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000044b_CARRY4
       (.CI(sig00000985),
        .CO({sig0000097d,sig0000097f,sig00000981,sig00000983}),
        .CYINIT(1'b0),
        .DI({sig000003af,sig000003ae,sig000003ad,sig000003ac}),
        .O({sig0000097c,sig0000097e,sig00000980,sig00000982}),
        .S({sig000006e8,sig000006e7,sig000006e6,sig000006e5}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000453_CARRY4
       (.CI(sig0000098d),
        .CO({sig00000985,sig00000987,sig00000989,sig0000098b}),
        .CYINIT(1'b0),
        .DI({sig000003ab,sig000003aa,sig000003a9,sig000003a8}),
        .O({sig00000984,sig00000986,sig00000988,sig0000098a}),
        .S({sig000006e4,sig000006e3,sig000006e2,sig000006e1}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000045b_CARRY4
       (.CI(sig00000995),
        .CO({sig0000098d,sig0000098f,sig00000991,sig00000993}),
        .CYINIT(1'b0),
        .DI({sig000003a7,sig000003a6,sig000003a5,sig000003a4}),
        .O({sig0000098c,sig0000098e,sig00000990,sig00000992}),
        .S({sig000006e0,sig000006df,sig000006de,sig000006dd}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000463_CARRY4
       (.CI(sig0000099d),
        .CO({sig00000995,sig00000997,sig00000999,sig0000099b}),
        .CYINIT(1'b0),
        .DI({sig000003a3,sig000003a2,sig000003a1,sig000003a0}),
        .O({sig00000994,sig00000996,sig00000998,sig0000099a}),
        .S({sig000006dc,sig000006db,sig000006da,sig000006d9}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000046b_CARRY4
       (.CI(sig000009a5),
        .CO({sig0000099d,sig0000099f,sig000009a1,sig000009a3}),
        .CYINIT(1'b0),
        .DI({sig0000039f,sig0000039e,sig0000039d,sig0000039c}),
        .O({sig0000099c,sig0000099e,sig000009a0,sig000009a2}),
        .S({sig000006d8,sig000006d7,sig000006d6,sig000006d5}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000473_CARRY4
       (.CI(1'b0),
        .CO({sig000009a5,sig000009a7,sig000009a9,sig000009aa}),
        .CYINIT(sig00000399),
        .DI({sig0000039b,sig0000039a,sig000003b1,1'b0}),
        .O({sig000009a4,sig000009a6,sig000009a8,NLW_blk00000473_CARRY4_O_UNCONNECTED[0]}),
        .S({sig000006d4,sig000006d3,sig000006d2,sig000006d1}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000474_CARRY4
       (.CI(sig000009ad),
        .CO(NLW_blk00000474_CARRY4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI(NLW_blk00000474_CARRY4_DI_UNCONNECTED[3:0]),
        .O({NLW_blk00000474_CARRY4_O_UNCONNECTED[3:1],sig000009ab}),
        .S({NLW_blk00000474_CARRY4_S_UNCONNECTED[3:1],sig000006d0}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000047c_CARRY4
       (.CI(sig000009b5),
        .CO({sig000009ad,sig000009af,sig000009b1,sig000009b3}),
        .CYINIT(1'b0),
        .DI({sig00000380,sig0000037f,sig0000037e,sig0000037d}),
        .O({sig000009ac,sig000009ae,sig000009b0,sig000009b2}),
        .S({sig000006cf,sig000006ce,sig000006cd,sig000006cc}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000484_CARRY4
       (.CI(sig000009bd),
        .CO({sig000009b5,sig000009b7,sig000009b9,sig000009bb}),
        .CYINIT(1'b0),
        .DI({sig0000037c,sig0000037b,sig0000037a,sig00000379}),
        .O({sig000009b4,sig000009b6,sig000009b8,sig000009ba}),
        .S({sig000006cb,sig000006ca,sig000006c9,sig000006c8}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000048c_CARRY4
       (.CI(sig000009c5),
        .CO({sig000009bd,sig000009bf,sig000009c1,sig000009c3}),
        .CYINIT(1'b0),
        .DI({sig00000378,sig00000377,sig00000376,sig00000375}),
        .O({sig000009bc,sig000009be,sig000009c0,sig000009c2}),
        .S({sig000006c7,sig000006c6,sig000006c5,sig000006c4}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000494_CARRY4
       (.CI(sig000009cd),
        .CO({sig000009c5,sig000009c7,sig000009c9,sig000009cb}),
        .CYINIT(1'b0),
        .DI({sig00000374,sig00000373,sig00000372,sig00000371}),
        .O({sig000009c4,sig000009c6,sig000009c8,sig000009ca}),
        .S({sig000006c3,sig000006c2,sig000006c1,sig000006c0}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000049c_CARRY4
       (.CI(sig000009d5),
        .CO({sig000009cd,sig000009cf,sig000009d1,sig000009d3}),
        .CYINIT(1'b0),
        .DI({sig00000370,sig0000036f,sig0000036e,sig0000036d}),
        .O({sig000009cc,sig000009ce,sig000009d0,sig000009d2}),
        .S({sig000006bf,sig000006be,sig000006bd,sig000006bc}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000004a4_CARRY4
       (.CI(1'b0),
        .CO({sig000009d5,sig000009d7,sig000009d9,sig000009da}),
        .CYINIT(sig0000036a),
        .DI({sig0000036c,sig0000036b,sig00000382,1'b0}),
        .O({sig000009d4,sig000009d6,sig000009d8,NLW_blk000004a4_CARRY4_O_UNCONNECTED[0]}),
        .S({sig000006bb,sig000006ba,sig000006b9,sig000006b8}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000004a5_CARRY4
       (.CI(sig000009dd),
        .CO(NLW_blk000004a5_CARRY4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI(NLW_blk000004a5_CARRY4_DI_UNCONNECTED[3:0]),
        .O({NLW_blk000004a5_CARRY4_O_UNCONNECTED[3:1],sig000009db}),
        .S({NLW_blk000004a5_CARRY4_S_UNCONNECTED[3:1],sig000006b7}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000004ad_CARRY4
       (.CI(sig000009e5),
        .CO({sig000009dd,sig000009df,sig000009e1,sig000009e3}),
        .CYINIT(1'b0),
        .DI({sig00000351,sig00000350,sig0000034f,sig0000034e}),
        .O({sig000009dc,sig000009de,sig000009e0,sig000009e2}),
        .S({sig000006b6,sig000006b5,sig000006b4,sig000006b3}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000004b5_CARRY4
       (.CI(sig000009ed),
        .CO({sig000009e5,sig000009e7,sig000009e9,sig000009eb}),
        .CYINIT(1'b0),
        .DI({sig0000034d,sig0000034c,sig0000034b,sig0000034a}),
        .O({sig000009e4,sig000009e6,sig000009e8,sig000009ea}),
        .S({sig000006b2,sig000006b1,sig000006b0,sig000006af}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000004bd_CARRY4
       (.CI(sig000009f5),
        .CO({sig000009ed,sig000009ef,sig000009f1,sig000009f3}),
        .CYINIT(1'b0),
        .DI({sig00000349,sig00000348,sig00000347,sig00000346}),
        .O({sig000009ec,sig000009ee,sig000009f0,sig000009f2}),
        .S({sig000006ae,sig000006ad,sig000006ac,sig000006ab}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000004c5_CARRY4
       (.CI(sig000009fd),
        .CO({sig000009f5,sig000009f7,sig000009f9,sig000009fb}),
        .CYINIT(1'b0),
        .DI({sig00000345,sig00000344,sig00000343,sig00000342}),
        .O({sig000009f4,sig000009f6,sig000009f8,sig000009fa}),
        .S({sig000006aa,sig000006a9,sig000006a8,sig000006a7}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000004cd_CARRY4
       (.CI(sig00000a05),
        .CO({sig000009fd,sig000009ff,sig00000a01,sig00000a03}),
        .CYINIT(1'b0),
        .DI({sig00000341,sig00000340,sig0000033f,sig0000033e}),
        .O({sig000009fc,sig000009fe,sig00000a00,sig00000a02}),
        .S({sig000006a6,sig000006a5,sig000006a4,sig000006a3}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000004d5_CARRY4
       (.CI(1'b0),
        .CO({sig00000a05,sig00000a07,sig00000a09,sig00000a0a}),
        .CYINIT(sig0000033b),
        .DI({sig0000033d,sig0000033c,sig00000353,1'b0}),
        .O({sig00000a04,sig00000a06,sig00000a08,NLW_blk000004d5_CARRY4_O_UNCONNECTED[0]}),
        .S({sig000006a2,sig000006a1,sig000006a0,sig0000069f}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000004d6_CARRY4
       (.CI(sig00000a0d),
        .CO(NLW_blk000004d6_CARRY4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI(NLW_blk000004d6_CARRY4_DI_UNCONNECTED[3:0]),
        .O({NLW_blk000004d6_CARRY4_O_UNCONNECTED[3:1],sig00000a0b}),
        .S({NLW_blk000004d6_CARRY4_S_UNCONNECTED[3:1],sig0000069e}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000004de_CARRY4
       (.CI(sig00000a15),
        .CO({sig00000a0d,sig00000a0f,sig00000a11,sig00000a13}),
        .CYINIT(1'b0),
        .DI({sig00000322,sig00000321,sig00000320,sig0000031f}),
        .O({sig00000a0c,sig00000a0e,sig00000a10,sig00000a12}),
        .S({sig0000069d,sig0000069c,sig0000069b,sig0000069a}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000004e6_CARRY4
       (.CI(sig00000a1d),
        .CO({sig00000a15,sig00000a17,sig00000a19,sig00000a1b}),
        .CYINIT(1'b0),
        .DI({sig0000031e,sig0000031d,sig0000031c,sig0000031b}),
        .O({sig00000a14,sig00000a16,sig00000a18,sig00000a1a}),
        .S({sig00000699,sig00000698,sig00000697,sig00000696}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000004ee_CARRY4
       (.CI(sig00000a25),
        .CO({sig00000a1d,sig00000a1f,sig00000a21,sig00000a23}),
        .CYINIT(1'b0),
        .DI({sig0000031a,sig00000319,sig00000318,sig00000317}),
        .O({sig00000a1c,sig00000a1e,sig00000a20,sig00000a22}),
        .S({sig00000695,sig00000694,sig00000693,sig00000692}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000004f6_CARRY4
       (.CI(sig00000a2d),
        .CO({sig00000a25,sig00000a27,sig00000a29,sig00000a2b}),
        .CYINIT(1'b0),
        .DI({sig00000316,sig00000315,sig00000314,sig00000313}),
        .O({sig00000a24,sig00000a26,sig00000a28,sig00000a2a}),
        .S({sig00000691,sig00000690,sig0000068f,sig0000068e}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000004fe_CARRY4
       (.CI(sig00000a35),
        .CO({sig00000a2d,sig00000a2f,sig00000a31,sig00000a33}),
        .CYINIT(1'b0),
        .DI({sig00000312,sig00000311,sig00000310,sig0000030f}),
        .O({sig00000a2c,sig00000a2e,sig00000a30,sig00000a32}),
        .S({sig0000068d,sig0000068c,sig0000068b,sig0000068a}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000506_CARRY4
       (.CI(1'b0),
        .CO({sig00000a35,sig00000a37,sig00000a39,sig00000a3a}),
        .CYINIT(sig0000030c),
        .DI({sig0000030e,sig0000030d,sig00000324,1'b0}),
        .O({sig00000a34,sig00000a36,sig00000a38,NLW_blk00000506_CARRY4_O_UNCONNECTED[0]}),
        .S({sig00000689,sig00000688,sig00000687,sig00000686}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000507_CARRY4
       (.CI(sig00000a3d),
        .CO(NLW_blk00000507_CARRY4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI(NLW_blk00000507_CARRY4_DI_UNCONNECTED[3:0]),
        .O({NLW_blk00000507_CARRY4_O_UNCONNECTED[3:1],sig00000a3b}),
        .S({NLW_blk00000507_CARRY4_S_UNCONNECTED[3:1],sig00000685}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000050f_CARRY4
       (.CI(sig00000a45),
        .CO({sig00000a3d,sig00000a3f,sig00000a41,sig00000a43}),
        .CYINIT(1'b0),
        .DI({sig000002f3,sig000002f2,sig000002f1,sig000002f0}),
        .O({sig00000a3c,sig00000a3e,sig00000a40,sig00000a42}),
        .S({sig00000684,sig00000683,sig00000682,sig00000681}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000517_CARRY4
       (.CI(sig00000a4d),
        .CO({sig00000a45,sig00000a47,sig00000a49,sig00000a4b}),
        .CYINIT(1'b0),
        .DI({sig000002ef,sig000002ee,sig000002ed,sig000002ec}),
        .O({sig00000a44,sig00000a46,sig00000a48,sig00000a4a}),
        .S({sig00000680,sig0000067f,sig0000067e,sig0000067d}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000051f_CARRY4
       (.CI(sig00000a55),
        .CO({sig00000a4d,sig00000a4f,sig00000a51,sig00000a53}),
        .CYINIT(1'b0),
        .DI({sig000002eb,sig000002ea,sig000002e9,sig000002e8}),
        .O({sig00000a4c,sig00000a4e,sig00000a50,sig00000a52}),
        .S({sig0000067c,sig0000067b,sig0000067a,sig00000679}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000527_CARRY4
       (.CI(sig00000a5d),
        .CO({sig00000a55,sig00000a57,sig00000a59,sig00000a5b}),
        .CYINIT(1'b0),
        .DI({sig000002e7,sig000002e6,sig000002e5,sig000002e4}),
        .O({sig00000a54,sig00000a56,sig00000a58,sig00000a5a}),
        .S({sig00000678,sig00000677,sig00000676,sig00000675}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000052f_CARRY4
       (.CI(sig00000a65),
        .CO({sig00000a5d,sig00000a5f,sig00000a61,sig00000a63}),
        .CYINIT(1'b0),
        .DI({sig000002e3,sig000002e2,sig000002e1,sig000002e0}),
        .O({sig00000a5c,sig00000a5e,sig00000a60,sig00000a62}),
        .S({sig00000674,sig00000673,sig00000672,sig00000671}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000537_CARRY4
       (.CI(1'b0),
        .CO({sig00000a65,sig00000a67,sig00000a69,sig00000a6a}),
        .CYINIT(sig000002dd),
        .DI({sig000002df,sig000002de,sig000002f5,1'b0}),
        .O({sig00000a64,sig00000a66,sig00000a68,NLW_blk00000537_CARRY4_O_UNCONNECTED[0]}),
        .S({sig00000670,sig0000066f,sig0000066e,sig0000066d}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000538_CARRY4
       (.CI(sig00000a6d),
        .CO(NLW_blk00000538_CARRY4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI(NLW_blk00000538_CARRY4_DI_UNCONNECTED[3:0]),
        .O({NLW_blk00000538_CARRY4_O_UNCONNECTED[3:1],sig00000a6b}),
        .S({NLW_blk00000538_CARRY4_S_UNCONNECTED[3:1],sig0000066c}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000540_CARRY4
       (.CI(sig00000a75),
        .CO({sig00000a6d,sig00000a6f,sig00000a71,sig00000a73}),
        .CYINIT(1'b0),
        .DI({sig000002c4,sig000002c3,sig000002c2,sig000002c1}),
        .O({sig00000a6c,sig00000a6e,sig00000a70,sig00000a72}),
        .S({sig0000066b,sig0000066a,sig00000669,sig00000668}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000548_CARRY4
       (.CI(sig00000a7d),
        .CO({sig00000a75,sig00000a77,sig00000a79,sig00000a7b}),
        .CYINIT(1'b0),
        .DI({sig000002c0,sig000002bf,sig000002be,sig000002bd}),
        .O({sig00000a74,sig00000a76,sig00000a78,sig00000a7a}),
        .S({sig00000667,sig00000666,sig00000665,sig00000664}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000550_CARRY4
       (.CI(sig00000a85),
        .CO({sig00000a7d,sig00000a7f,sig00000a81,sig00000a83}),
        .CYINIT(1'b0),
        .DI({sig000002bc,sig000002bb,sig000002ba,sig000002b9}),
        .O({sig00000a7c,sig00000a7e,sig00000a80,sig00000a82}),
        .S({sig00000663,sig00000662,sig00000661,sig00000660}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000558_CARRY4
       (.CI(sig00000a8d),
        .CO({sig00000a85,sig00000a87,sig00000a89,sig00000a8b}),
        .CYINIT(1'b0),
        .DI({sig000002b8,sig000002b7,sig000002b6,sig000002b5}),
        .O({sig00000a84,sig00000a86,sig00000a88,sig00000a8a}),
        .S({sig0000065f,sig0000065e,sig0000065d,sig0000065c}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000560_CARRY4
       (.CI(sig00000a95),
        .CO({sig00000a8d,sig00000a8f,sig00000a91,sig00000a93}),
        .CYINIT(1'b0),
        .DI({sig000002b4,sig000002b3,sig000002b2,sig000002b1}),
        .O({sig00000a8c,sig00000a8e,sig00000a90,sig00000a92}),
        .S({sig0000065b,sig0000065a,sig00000659,sig00000658}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000568_CARRY4
       (.CI(1'b0),
        .CO({sig00000a95,sig00000a97,sig00000a99,sig00000a9a}),
        .CYINIT(sig000002ae),
        .DI({sig000002b0,sig000002af,sig000002c6,1'b0}),
        .O({sig00000a94,sig00000a96,sig00000a98,NLW_blk00000568_CARRY4_O_UNCONNECTED[0]}),
        .S({sig00000657,sig00000656,sig00000655,sig00000654}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000569_CARRY4
       (.CI(sig00000a9d),
        .CO(NLW_blk00000569_CARRY4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI(NLW_blk00000569_CARRY4_DI_UNCONNECTED[3:0]),
        .O({NLW_blk00000569_CARRY4_O_UNCONNECTED[3:1],sig00000a9b}),
        .S({NLW_blk00000569_CARRY4_S_UNCONNECTED[3:1],sig00000653}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000571_CARRY4
       (.CI(sig00000aa5),
        .CO({sig00000a9d,sig00000a9f,sig00000aa1,sig00000aa3}),
        .CYINIT(1'b0),
        .DI({sig00000295,sig00000294,sig00000293,sig00000292}),
        .O({sig00000a9c,sig00000a9e,sig00000aa0,sig00000aa2}),
        .S({sig00000652,sig00000651,sig00000650,sig0000064f}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000579_CARRY4
       (.CI(sig00000aad),
        .CO({sig00000aa5,sig00000aa7,sig00000aa9,sig00000aab}),
        .CYINIT(1'b0),
        .DI({sig00000291,sig00000290,sig0000028f,sig0000028e}),
        .O({sig00000aa4,sig00000aa6,sig00000aa8,sig00000aaa}),
        .S({sig0000064e,sig0000064d,sig0000064c,sig0000064b}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000581_CARRY4
       (.CI(sig00000ab5),
        .CO({sig00000aad,sig00000aaf,sig00000ab1,sig00000ab3}),
        .CYINIT(1'b0),
        .DI({sig0000028d,sig0000028c,sig0000028b,sig0000028a}),
        .O({sig00000aac,sig00000aae,sig00000ab0,sig00000ab2}),
        .S({sig0000064a,sig00000649,sig00000648,sig00000647}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000589_CARRY4
       (.CI(sig00000abd),
        .CO({sig00000ab5,sig00000ab7,sig00000ab9,sig00000abb}),
        .CYINIT(1'b0),
        .DI({sig00000289,sig00000288,sig00000287,sig00000286}),
        .O({sig00000ab4,sig00000ab6,sig00000ab8,sig00000aba}),
        .S({sig00000646,sig00000645,sig00000644,sig00000643}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000591_CARRY4
       (.CI(sig00000ac5),
        .CO({sig00000abd,sig00000abf,sig00000ac1,sig00000ac3}),
        .CYINIT(1'b0),
        .DI({sig00000285,sig00000284,sig00000283,sig00000282}),
        .O({sig00000abc,sig00000abe,sig00000ac0,sig00000ac2}),
        .S({sig00000642,sig00000641,sig00000640,sig0000063f}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000599_CARRY4
       (.CI(1'b0),
        .CO({sig00000ac5,sig00000ac7,sig00000ac9,sig00000aca}),
        .CYINIT(sig0000027f),
        .DI({sig00000281,sig00000280,sig00000297,1'b0}),
        .O({sig00000ac4,sig00000ac6,sig00000ac8,NLW_blk00000599_CARRY4_O_UNCONNECTED[0]}),
        .S({sig0000063e,sig0000063d,sig0000063c,sig0000063b}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000059a_CARRY4
       (.CI(sig00000acd),
        .CO(NLW_blk0000059a_CARRY4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI(NLW_blk0000059a_CARRY4_DI_UNCONNECTED[3:0]),
        .O({NLW_blk0000059a_CARRY4_O_UNCONNECTED[3:1],sig00000acb}),
        .S({NLW_blk0000059a_CARRY4_S_UNCONNECTED[3:1],sig0000063a}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000005a2_CARRY4
       (.CI(sig00000ad5),
        .CO({sig00000acd,sig00000acf,sig00000ad1,sig00000ad3}),
        .CYINIT(1'b0),
        .DI({sig00000266,sig00000265,sig00000264,sig00000263}),
        .O({sig00000acc,sig00000ace,sig00000ad0,sig00000ad2}),
        .S({sig00000639,sig00000638,sig00000637,sig00000636}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000005aa_CARRY4
       (.CI(sig00000add),
        .CO({sig00000ad5,sig00000ad7,sig00000ad9,sig00000adb}),
        .CYINIT(1'b0),
        .DI({sig00000262,sig00000261,sig00000260,sig0000025f}),
        .O({sig00000ad4,sig00000ad6,sig00000ad8,sig00000ada}),
        .S({sig00000635,sig00000634,sig00000633,sig00000632}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000005b2_CARRY4
       (.CI(sig00000ae5),
        .CO({sig00000add,sig00000adf,sig00000ae1,sig00000ae3}),
        .CYINIT(1'b0),
        .DI({sig0000025e,sig0000025d,sig0000025c,sig0000025b}),
        .O({sig00000adc,sig00000ade,sig00000ae0,sig00000ae2}),
        .S({sig00000631,sig00000630,sig0000062f,sig0000062e}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000005ba_CARRY4
       (.CI(sig00000aed),
        .CO({sig00000ae5,sig00000ae7,sig00000ae9,sig00000aeb}),
        .CYINIT(1'b0),
        .DI({sig0000025a,sig00000259,sig00000258,sig00000257}),
        .O({sig00000ae4,sig00000ae6,sig00000ae8,sig00000aea}),
        .S({sig0000062d,sig0000062c,sig0000062b,sig0000062a}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000005c2_CARRY4
       (.CI(sig00000af5),
        .CO({sig00000aed,sig00000aef,sig00000af1,sig00000af3}),
        .CYINIT(1'b0),
        .DI({sig00000256,sig00000255,sig00000254,sig00000253}),
        .O({sig00000aec,sig00000aee,sig00000af0,sig00000af2}),
        .S({sig00000629,sig00000628,sig00000627,sig00000626}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000005ca_CARRY4
       (.CI(1'b0),
        .CO({sig00000af5,sig00000af7,sig00000af9,sig00000afa}),
        .CYINIT(sig00000250),
        .DI({sig00000252,sig00000251,sig00000268,1'b0}),
        .O({sig00000af4,sig00000af6,sig00000af8,NLW_blk000005ca_CARRY4_O_UNCONNECTED[0]}),
        .S({sig00000625,sig00000624,sig00000623,sig00000622}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000005cb_CARRY4
       (.CI(sig00000afd),
        .CO(NLW_blk000005cb_CARRY4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI(NLW_blk000005cb_CARRY4_DI_UNCONNECTED[3:0]),
        .O({NLW_blk000005cb_CARRY4_O_UNCONNECTED[3:1],sig00000afb}),
        .S({NLW_blk000005cb_CARRY4_S_UNCONNECTED[3:1],sig00000621}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000005d3_CARRY4
       (.CI(sig00000b05),
        .CO({sig00000afd,sig00000aff,sig00000b01,sig00000b03}),
        .CYINIT(1'b0),
        .DI({sig00000237,sig00000236,sig00000235,sig00000234}),
        .O({sig00000afc,sig00000afe,sig00000b00,sig00000b02}),
        .S({sig00000620,sig0000061f,sig0000061e,sig0000061d}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000005db_CARRY4
       (.CI(sig00000b0d),
        .CO({sig00000b05,sig00000b07,sig00000b09,sig00000b0b}),
        .CYINIT(1'b0),
        .DI({sig00000233,sig00000232,sig00000231,sig00000230}),
        .O({sig00000b04,sig00000b06,sig00000b08,sig00000b0a}),
        .S({sig0000061c,sig0000061b,sig0000061a,sig00000619}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000005e3_CARRY4
       (.CI(sig00000b15),
        .CO({sig00000b0d,sig00000b0f,sig00000b11,sig00000b13}),
        .CYINIT(1'b0),
        .DI({sig0000022f,sig0000022e,sig0000022d,sig0000022c}),
        .O({sig00000b0c,sig00000b0e,sig00000b10,sig00000b12}),
        .S({sig00000618,sig00000617,sig00000616,sig00000615}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000005eb_CARRY4
       (.CI(sig00000b1d),
        .CO({sig00000b15,sig00000b17,sig00000b19,sig00000b1b}),
        .CYINIT(1'b0),
        .DI({sig0000022b,sig0000022a,sig00000229,sig00000228}),
        .O({sig00000b14,sig00000b16,sig00000b18,sig00000b1a}),
        .S({sig00000614,sig00000613,sig00000612,sig00000611}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000005f3_CARRY4
       (.CI(sig00000b25),
        .CO({sig00000b1d,sig00000b1f,sig00000b21,sig00000b23}),
        .CYINIT(1'b0),
        .DI({sig00000227,sig00000226,sig00000225,sig00000224}),
        .O({sig00000b1c,sig00000b1e,sig00000b20,sig00000b22}),
        .S({sig00000610,sig0000060f,sig0000060e,sig0000060d}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000005fb_CARRY4
       (.CI(1'b0),
        .CO({sig00000b25,sig00000b27,sig00000b29,sig00000b2a}),
        .CYINIT(sig00000221),
        .DI({sig00000223,sig00000222,sig00000239,1'b0}),
        .O({sig00000b24,sig00000b26,sig00000b28,NLW_blk000005fb_CARRY4_O_UNCONNECTED[0]}),
        .S({sig0000060c,sig0000060b,sig0000060a,sig00000609}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000005fc_CARRY4
       (.CI(sig00000b2d),
        .CO(NLW_blk000005fc_CARRY4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI(NLW_blk000005fc_CARRY4_DI_UNCONNECTED[3:0]),
        .O({NLW_blk000005fc_CARRY4_O_UNCONNECTED[3:1],sig00000b2b}),
        .S({NLW_blk000005fc_CARRY4_S_UNCONNECTED[3:1],sig00000608}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000604_CARRY4
       (.CI(sig00000b35),
        .CO({sig00000b2d,sig00000b2f,sig00000b31,sig00000b33}),
        .CYINIT(1'b0),
        .DI({sig00000208,sig00000207,sig00000206,sig00000205}),
        .O({sig00000b2c,sig00000b2e,sig00000b30,sig00000b32}),
        .S({sig00000607,sig00000606,sig00000605,sig00000604}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000060c_CARRY4
       (.CI(sig00000b3d),
        .CO({sig00000b35,sig00000b37,sig00000b39,sig00000b3b}),
        .CYINIT(1'b0),
        .DI({sig00000204,sig00000203,sig00000202,sig00000201}),
        .O({sig00000b34,sig00000b36,sig00000b38,sig00000b3a}),
        .S({sig00000603,sig00000602,sig00000601,sig00000600}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000614_CARRY4
       (.CI(sig00000b45),
        .CO({sig00000b3d,sig00000b3f,sig00000b41,sig00000b43}),
        .CYINIT(1'b0),
        .DI({sig00000200,sig000001ff,sig000001fe,sig000001fd}),
        .O({sig00000b3c,sig00000b3e,sig00000b40,sig00000b42}),
        .S({sig000005ff,sig000005fe,sig000005fd,sig000005fc}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000061c_CARRY4
       (.CI(sig00000b4d),
        .CO({sig00000b45,sig00000b47,sig00000b49,sig00000b4b}),
        .CYINIT(1'b0),
        .DI({sig000001fc,sig000001fb,sig000001fa,sig000001f9}),
        .O({sig00000b44,sig00000b46,sig00000b48,sig00000b4a}),
        .S({sig000005fb,sig000005fa,sig000005f9,sig000005f8}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000624_CARRY4
       (.CI(sig00000b55),
        .CO({sig00000b4d,sig00000b4f,sig00000b51,sig00000b53}),
        .CYINIT(1'b0),
        .DI({sig000001f8,sig000001f7,sig000001f6,sig000001f5}),
        .O({sig00000b4c,sig00000b4e,sig00000b50,sig00000b52}),
        .S({sig000005f7,sig000005f6,sig000005f5,sig000005f4}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000062c_CARRY4
       (.CI(1'b0),
        .CO({sig00000b55,sig00000b57,sig00000b59,sig00000b5a}),
        .CYINIT(sig000001f2),
        .DI({sig000001f4,sig000001f3,sig0000020a,1'b0}),
        .O({sig00000b54,sig00000b56,sig00000b58,NLW_blk0000062c_CARRY4_O_UNCONNECTED[0]}),
        .S({sig000005f3,sig000005f2,sig000005f1,sig000005f0}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000062d_CARRY4
       (.CI(sig00000b5d),
        .CO(NLW_blk0000062d_CARRY4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI(NLW_blk0000062d_CARRY4_DI_UNCONNECTED[3:0]),
        .O({NLW_blk0000062d_CARRY4_O_UNCONNECTED[3:1],sig00000b5b}),
        .S({NLW_blk0000062d_CARRY4_S_UNCONNECTED[3:1],sig000005ef}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000635_CARRY4
       (.CI(sig00000b65),
        .CO({sig00000b5d,sig00000b5f,sig00000b61,sig00000b63}),
        .CYINIT(1'b0),
        .DI({sig000001d9,sig000001d8,sig000001d7,sig000001d6}),
        .O({sig00000b5c,sig00000b5e,sig00000b60,sig00000b62}),
        .S({sig000005ee,sig000005ed,sig000005ec,sig000005eb}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000063d_CARRY4
       (.CI(sig00000b6d),
        .CO({sig00000b65,sig00000b67,sig00000b69,sig00000b6b}),
        .CYINIT(1'b0),
        .DI({sig000001d5,sig000001d4,sig000001d3,sig000001d2}),
        .O({sig00000b64,sig00000b66,sig00000b68,sig00000b6a}),
        .S({sig000005ea,sig000005e9,sig000005e8,sig000005e7}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000645_CARRY4
       (.CI(sig00000b75),
        .CO({sig00000b6d,sig00000b6f,sig00000b71,sig00000b73}),
        .CYINIT(1'b0),
        .DI({sig000001d1,sig000001d0,sig000001cf,sig000001ce}),
        .O({sig00000b6c,sig00000b6e,sig00000b70,sig00000b72}),
        .S({sig000005e6,sig000005e5,sig000005e4,sig000005e3}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000064d_CARRY4
       (.CI(sig00000b7d),
        .CO({sig00000b75,sig00000b77,sig00000b79,sig00000b7b}),
        .CYINIT(1'b0),
        .DI({sig000001cd,sig000001cc,sig000001cb,sig000001ca}),
        .O({sig00000b74,sig00000b76,sig00000b78,sig00000b7a}),
        .S({sig000005e2,sig000005e1,sig000005e0,sig000005df}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000655_CARRY4
       (.CI(sig00000b85),
        .CO({sig00000b7d,sig00000b7f,sig00000b81,sig00000b83}),
        .CYINIT(1'b0),
        .DI({sig000001c9,sig000001c8,sig000001c7,sig000001c6}),
        .O({sig00000b7c,sig00000b7e,sig00000b80,sig00000b82}),
        .S({sig000005de,sig000005dd,sig000005dc,sig000005db}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000065d_CARRY4
       (.CI(1'b0),
        .CO({sig00000b85,sig00000b87,sig00000b89,sig00000b8a}),
        .CYINIT(sig000001c3),
        .DI({sig000001c5,sig000001c4,sig000001db,1'b0}),
        .O({sig00000b84,sig00000b86,sig00000b88,NLW_blk0000065d_CARRY4_O_UNCONNECTED[0]}),
        .S({sig000005da,sig000005d9,sig000005d8,sig000005d7}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000065e_CARRY4
       (.CI(sig00000b8d),
        .CO(NLW_blk0000065e_CARRY4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI(NLW_blk0000065e_CARRY4_DI_UNCONNECTED[3:0]),
        .O({NLW_blk0000065e_CARRY4_O_UNCONNECTED[3:1],sig00000b8b}),
        .S({NLW_blk0000065e_CARRY4_S_UNCONNECTED[3:1],sig000005d6}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000666_CARRY4
       (.CI(sig00000b95),
        .CO({sig00000b8d,sig00000b8f,sig00000b91,sig00000b93}),
        .CYINIT(1'b0),
        .DI({sig000001aa,sig000001a9,sig000001a8,sig000001a7}),
        .O({sig00000b8c,sig00000b8e,sig00000b90,sig00000b92}),
        .S({sig000005d5,sig000005d4,sig000005d3,sig000005d2}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000066e_CARRY4
       (.CI(sig00000b9d),
        .CO({sig00000b95,sig00000b97,sig00000b99,sig00000b9b}),
        .CYINIT(1'b0),
        .DI({sig000001a6,sig000001a5,sig000001a4,sig000001a3}),
        .O({sig00000b94,sig00000b96,sig00000b98,sig00000b9a}),
        .S({sig000005d1,sig000005d0,sig000005cf,sig000005ce}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000676_CARRY4
       (.CI(sig00000ba5),
        .CO({sig00000b9d,sig00000b9f,sig00000ba1,sig00000ba3}),
        .CYINIT(1'b0),
        .DI({sig000001a2,sig000001a1,sig000001a0,sig0000019f}),
        .O({sig00000b9c,sig00000b9e,sig00000ba0,sig00000ba2}),
        .S({sig000005cd,sig000005cc,sig000005cb,sig000005ca}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000067e_CARRY4
       (.CI(sig00000bad),
        .CO({sig00000ba5,sig00000ba7,sig00000ba9,sig00000bab}),
        .CYINIT(1'b0),
        .DI({sig0000019e,sig0000019d,sig0000019c,sig0000019b}),
        .O({sig00000ba4,sig00000ba6,sig00000ba8,sig00000baa}),
        .S({sig000005c9,sig000005c8,sig000005c7,sig000005c6}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000686_CARRY4
       (.CI(sig00000bb5),
        .CO({sig00000bad,sig00000baf,sig00000bb1,sig00000bb3}),
        .CYINIT(1'b0),
        .DI({sig0000019a,sig00000199,sig00000198,sig00000197}),
        .O({sig00000bac,sig00000bae,sig00000bb0,sig00000bb2}),
        .S({sig000005c5,sig000005c4,sig000005c3,sig000005c2}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000068e_CARRY4
       (.CI(1'b0),
        .CO({sig00000bb5,sig00000bb7,sig00000bb9,sig00000bba}),
        .CYINIT(sig00000194),
        .DI({sig00000196,sig00000195,sig000001ac,1'b0}),
        .O({sig00000bb4,sig00000bb6,sig00000bb8,NLW_blk0000068e_CARRY4_O_UNCONNECTED[0]}),
        .S({sig000005c1,sig000005c0,sig000005bf,sig000005be}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000068f_CARRY4
       (.CI(sig00000bbd),
        .CO(NLW_blk0000068f_CARRY4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI(NLW_blk0000068f_CARRY4_DI_UNCONNECTED[3:0]),
        .O({NLW_blk0000068f_CARRY4_O_UNCONNECTED[3:1],sig00000bbb}),
        .S({NLW_blk0000068f_CARRY4_S_UNCONNECTED[3:1],sig000005bd}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000697_CARRY4
       (.CI(sig00000bc5),
        .CO({sig00000bbd,sig00000bbf,sig00000bc1,sig00000bc3}),
        .CYINIT(1'b0),
        .DI({sig0000017b,sig0000017a,sig00000179,sig00000178}),
        .O({sig00000bbc,sig00000bbe,sig00000bc0,sig00000bc2}),
        .S({sig000005bc,sig000005bb,sig000005ba,sig000005b9}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000069f_CARRY4
       (.CI(sig00000bcd),
        .CO({sig00000bc5,sig00000bc7,sig00000bc9,sig00000bcb}),
        .CYINIT(1'b0),
        .DI({sig00000177,sig00000176,sig00000175,sig00000174}),
        .O({sig00000bc4,sig00000bc6,sig00000bc8,sig00000bca}),
        .S({sig000005b8,sig000005b7,sig000005b6,sig000005b5}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000006a7_CARRY4
       (.CI(sig00000bd5),
        .CO({sig00000bcd,sig00000bcf,sig00000bd1,sig00000bd3}),
        .CYINIT(1'b0),
        .DI({sig00000173,sig00000172,sig00000171,sig00000170}),
        .O({sig00000bcc,sig00000bce,sig00000bd0,sig00000bd2}),
        .S({sig000005b4,sig000005b3,sig000005b2,sig000005b1}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000006af_CARRY4
       (.CI(sig00000bdd),
        .CO({sig00000bd5,sig00000bd7,sig00000bd9,sig00000bdb}),
        .CYINIT(1'b0),
        .DI({sig0000016f,sig0000016e,sig0000016d,sig0000016c}),
        .O({sig00000bd4,sig00000bd6,sig00000bd8,sig00000bda}),
        .S({sig000005b0,sig000005af,sig000005ae,sig000005ad}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000006b7_CARRY4
       (.CI(sig00000be5),
        .CO({sig00000bdd,sig00000bdf,sig00000be1,sig00000be3}),
        .CYINIT(1'b0),
        .DI({sig0000016b,sig0000016a,sig00000169,sig00000168}),
        .O({sig00000bdc,sig00000bde,sig00000be0,sig00000be2}),
        .S({sig000005ac,sig000005ab,sig000005aa,sig000005a9}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000006bf_CARRY4
       (.CI(1'b0),
        .CO({sig00000be5,sig00000be7,sig00000be9,sig00000bea}),
        .CYINIT(sig00000165),
        .DI({sig00000167,sig00000166,sig0000017d,1'b0}),
        .O({sig00000be4,sig00000be6,sig00000be8,NLW_blk000006bf_CARRY4_O_UNCONNECTED[0]}),
        .S({sig000005a8,sig000005a7,sig000005a6,sig000005a5}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000006c0_CARRY4
       (.CI(sig00000bed),
        .CO(NLW_blk000006c0_CARRY4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI(NLW_blk000006c0_CARRY4_DI_UNCONNECTED[3:0]),
        .O({NLW_blk000006c0_CARRY4_O_UNCONNECTED[3:1],sig00000beb}),
        .S({NLW_blk000006c0_CARRY4_S_UNCONNECTED[3:1],sig000005a4}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000006c8_CARRY4
       (.CI(sig00000bf5),
        .CO({sig00000bed,sig00000bef,sig00000bf1,sig00000bf3}),
        .CYINIT(1'b0),
        .DI({sig0000014c,sig0000014b,sig0000014a,sig00000149}),
        .O({sig00000bec,sig00000bee,sig00000bf0,sig00000bf2}),
        .S({sig000005a3,sig000005a2,sig000005a1,sig000005a0}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000006d0_CARRY4
       (.CI(sig00000bfd),
        .CO({sig00000bf5,sig00000bf7,sig00000bf9,sig00000bfb}),
        .CYINIT(1'b0),
        .DI({sig00000148,sig00000147,sig00000146,sig00000145}),
        .O({sig00000bf4,sig00000bf6,sig00000bf8,sig00000bfa}),
        .S({sig0000059f,sig0000059e,sig0000059d,sig0000059c}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000006d8_CARRY4
       (.CI(sig00000c05),
        .CO({sig00000bfd,sig00000bff,sig00000c01,sig00000c03}),
        .CYINIT(1'b0),
        .DI({sig00000144,sig00000143,sig00000142,sig00000141}),
        .O({sig00000bfc,sig00000bfe,sig00000c00,sig00000c02}),
        .S({sig0000059b,sig0000059a,sig00000599,sig00000598}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000006e0_CARRY4
       (.CI(sig00000c0d),
        .CO({sig00000c05,sig00000c07,sig00000c09,sig00000c0b}),
        .CYINIT(1'b0),
        .DI({sig00000140,sig0000013f,sig0000013e,sig0000013d}),
        .O({sig00000c04,sig00000c06,sig00000c08,sig00000c0a}),
        .S({sig00000597,sig00000596,sig00000595,sig00000594}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000006e8_CARRY4
       (.CI(sig00000c15),
        .CO({sig00000c0d,sig00000c0f,sig00000c11,sig00000c13}),
        .CYINIT(1'b0),
        .DI({sig0000013c,sig0000013b,sig0000013a,sig00000139}),
        .O({sig00000c0c,sig00000c0e,sig00000c10,sig00000c12}),
        .S({sig00000593,sig00000592,sig00000591,sig00000590}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000006f0_CARRY4
       (.CI(1'b0),
        .CO({sig00000c15,sig00000c17,sig00000c19,sig00000c1a}),
        .CYINIT(sig00000136),
        .DI({sig00000138,sig00000137,sig0000014e,1'b0}),
        .O({sig00000c14,sig00000c16,sig00000c18,NLW_blk000006f0_CARRY4_O_UNCONNECTED[0]}),
        .S({sig0000058f,sig0000058e,sig0000058d,sig0000058c}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000006f1_CARRY4
       (.CI(sig00000c1d),
        .CO(NLW_blk000006f1_CARRY4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI(NLW_blk000006f1_CARRY4_DI_UNCONNECTED[3:0]),
        .O({NLW_blk000006f1_CARRY4_O_UNCONNECTED[3:1],sig00000c1b}),
        .S({NLW_blk000006f1_CARRY4_S_UNCONNECTED[3:1],sig0000058b}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000006f9_CARRY4
       (.CI(sig00000c25),
        .CO({sig00000c1d,sig00000c1f,sig00000c21,sig00000c23}),
        .CYINIT(1'b0),
        .DI({sig0000011d,sig0000011c,sig0000011b,sig0000011a}),
        .O({sig00000c1c,sig00000c1e,sig00000c20,sig00000c22}),
        .S({sig0000058a,sig00000589,sig00000588,sig00000587}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000701_CARRY4
       (.CI(sig00000c2d),
        .CO({sig00000c25,sig00000c27,sig00000c29,sig00000c2b}),
        .CYINIT(1'b0),
        .DI({sig00000119,sig00000118,sig00000117,sig00000116}),
        .O({sig00000c24,sig00000c26,sig00000c28,sig00000c2a}),
        .S({sig00000586,sig00000585,sig00000584,sig00000583}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000709_CARRY4
       (.CI(sig00000c35),
        .CO({sig00000c2d,sig00000c2f,sig00000c31,sig00000c33}),
        .CYINIT(1'b0),
        .DI({sig00000115,sig00000114,sig00000113,sig00000112}),
        .O({sig00000c2c,sig00000c2e,sig00000c30,sig00000c32}),
        .S({sig00000582,sig00000581,sig00000580,sig0000057f}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000711_CARRY4
       (.CI(sig00000c3d),
        .CO({sig00000c35,sig00000c37,sig00000c39,sig00000c3b}),
        .CYINIT(1'b0),
        .DI({sig00000111,sig00000110,sig0000010f,sig0000010e}),
        .O({sig00000c34,sig00000c36,sig00000c38,sig00000c3a}),
        .S({sig0000057e,sig0000057d,sig0000057c,sig0000057b}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000719_CARRY4
       (.CI(sig00000c45),
        .CO({sig00000c3d,sig00000c3f,sig00000c41,sig00000c43}),
        .CYINIT(1'b0),
        .DI({sig0000010d,sig0000010c,sig0000010b,sig0000010a}),
        .O({sig00000c3c,sig00000c3e,sig00000c40,sig00000c42}),
        .S({sig0000057a,sig00000579,sig00000578,sig00000577}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000721_CARRY4
       (.CI(1'b0),
        .CO({sig00000c45,sig00000c47,sig00000c49,sig00000c4a}),
        .CYINIT(sig00000107),
        .DI({sig00000109,sig00000108,sig0000011f,1'b0}),
        .O({sig00000c44,sig00000c46,sig00000c48,NLW_blk00000721_CARRY4_O_UNCONNECTED[0]}),
        .S({sig00000576,sig00000575,sig00000574,sig00000573}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000722_CARRY4
       (.CI(sig00000c4d),
        .CO(NLW_blk00000722_CARRY4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI(NLW_blk00000722_CARRY4_DI_UNCONNECTED[3:0]),
        .O({NLW_blk00000722_CARRY4_O_UNCONNECTED[3:1],sig00000c4b}),
        .S({NLW_blk00000722_CARRY4_S_UNCONNECTED[3:1],sig00000572}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000072a_CARRY4
       (.CI(sig00000c55),
        .CO({sig00000c4d,sig00000c4f,sig00000c51,sig00000c53}),
        .CYINIT(1'b0),
        .DI({sig000000ee,sig000000ed,sig000000ec,sig000000eb}),
        .O({sig00000c4c,sig00000c4e,sig00000c50,sig00000c52}),
        .S({sig00000571,sig00000570,sig0000056f,sig0000056e}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000732_CARRY4
       (.CI(sig00000c5d),
        .CO({sig00000c55,sig00000c57,sig00000c59,sig00000c5b}),
        .CYINIT(1'b0),
        .DI({sig000000ea,sig000000e9,sig000000e8,sig000000e7}),
        .O({sig00000c54,sig00000c56,sig00000c58,sig00000c5a}),
        .S({sig0000056d,sig0000056c,sig0000056b,sig0000056a}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000073a_CARRY4
       (.CI(sig00000c65),
        .CO({sig00000c5d,sig00000c5f,sig00000c61,sig00000c63}),
        .CYINIT(1'b0),
        .DI({sig000000e6,sig000000e5,sig000000e4,sig000000e3}),
        .O({sig00000c5c,sig00000c5e,sig00000c60,sig00000c62}),
        .S({sig00000569,sig00000568,sig00000567,sig00000566}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000742_CARRY4
       (.CI(sig00000c6d),
        .CO({sig00000c65,sig00000c67,sig00000c69,sig00000c6b}),
        .CYINIT(1'b0),
        .DI({sig000000e2,sig000000e1,sig000000e0,sig000000df}),
        .O({sig00000c64,sig00000c66,sig00000c68,sig00000c6a}),
        .S({sig00000565,sig00000564,sig00000563,sig00000562}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000074a_CARRY4
       (.CI(sig00000c75),
        .CO({sig00000c6d,sig00000c6f,sig00000c71,sig00000c73}),
        .CYINIT(1'b0),
        .DI({sig000000de,sig000000dd,sig000000dc,sig000000db}),
        .O({sig00000c6c,sig00000c6e,sig00000c70,sig00000c72}),
        .S({sig00000561,sig00000560,sig0000055f,sig0000055e}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000752_CARRY4
       (.CI(1'b0),
        .CO({sig00000c75,sig00000c77,sig00000c79,sig00000c7a}),
        .CYINIT(sig000000d8),
        .DI({sig000000da,sig000000d9,sig000000f0,1'b0}),
        .O({sig00000c74,sig00000c76,sig00000c78,NLW_blk00000752_CARRY4_O_UNCONNECTED[0]}),
        .S({sig0000055d,sig0000055c,sig0000055b,sig0000055a}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000753_CARRY4
       (.CI(sig00000c7c),
        .CO(NLW_blk00000753_CARRY4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI(NLW_blk00000753_CARRY4_DI_UNCONNECTED[3:0]),
        .O({NLW_blk00000753_CARRY4_O_UNCONNECTED[3:1],sig00000c7b}),
        .S({NLW_blk00000753_CARRY4_S_UNCONNECTED[3:1],sig00000559}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000075b_CARRY4
       (.CI(sig00000c80),
        .CO({sig00000c7c,sig00000c7d,sig00000c7e,sig00000c7f}),
        .CYINIT(1'b0),
        .DI({sig000000bf,sig000000be,sig000000bd,sig000000bc}),
        .O(NLW_blk0000075b_CARRY4_O_UNCONNECTED[3:0]),
        .S({sig00000558,sig00000557,sig00000556,sig00000555}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000763_CARRY4
       (.CI(sig00000c84),
        .CO({sig00000c80,sig00000c81,sig00000c82,sig00000c83}),
        .CYINIT(1'b0),
        .DI({sig000000bb,sig000000ba,sig000000b9,sig000000b8}),
        .O(NLW_blk00000763_CARRY4_O_UNCONNECTED[3:0]),
        .S({sig00000554,sig00000553,sig00000552,sig00000551}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000076b_CARRY4
       (.CI(sig00000c88),
        .CO({sig00000c84,sig00000c85,sig00000c86,sig00000c87}),
        .CYINIT(1'b0),
        .DI({sig000000b7,sig000000b6,sig000000b5,sig000000b4}),
        .O(NLW_blk0000076b_CARRY4_O_UNCONNECTED[3:0]),
        .S({sig00000550,sig0000054f,sig0000054e,sig0000054d}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000773_CARRY4
       (.CI(sig00000c8c),
        .CO({sig00000c88,sig00000c89,sig00000c8a,sig00000c8b}),
        .CYINIT(1'b0),
        .DI({sig000000b3,sig000000b2,sig000000b1,sig000000b0}),
        .O(NLW_blk00000773_CARRY4_O_UNCONNECTED[3:0]),
        .S({sig0000054c,sig0000054b,sig0000054a,sig00000549}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000077b_CARRY4
       (.CI(sig00000c90),
        .CO({sig00000c8c,sig00000c8d,sig00000c8e,sig00000c8f}),
        .CYINIT(1'b0),
        .DI({sig000000af,sig000000ae,sig000000ad,sig000000ac}),
        .O(NLW_blk0000077b_CARRY4_O_UNCONNECTED[3:0]),
        .S({sig00000548,sig00000547,sig00000546,sig00000545}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000783_CARRY4
       (.CI(1'b0),
        .CO({sig00000c90,sig00000c91,sig00000c92,sig00000c93}),
        .CYINIT(sig000000a9),
        .DI({sig000000ab,sig000000aa,sig000000c1,1'b0}),
        .O(NLW_blk00000783_CARRY4_O_UNCONNECTED[3:0]),
        .S({sig00000544,sig00000543,sig00000542,sig00000541}));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000784
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c7b),
        .Q(sig00000027),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000785
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c4b),
        .Q(sig000000a9),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000786
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c4c),
        .Q(sig000000c0),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000787
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c4e),
        .Q(sig000000bf),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000788
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c50),
        .Q(sig000000be),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000789
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c52),
        .Q(sig000000bd),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000078a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c54),
        .Q(sig000000bc),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000078b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c56),
        .Q(sig000000bb),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000078c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c58),
        .Q(sig000000ba),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000078d
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c5a),
        .Q(sig000000b9),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000078e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c5c),
        .Q(sig000000b8),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000078f
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c5e),
        .Q(sig000000b7),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000790
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c60),
        .Q(sig000000b6),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000791
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c62),
        .Q(sig000000b5),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000792
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c64),
        .Q(sig000000b4),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000793
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c66),
        .Q(sig000000b3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000794
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c68),
        .Q(sig000000b2),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000795
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c6a),
        .Q(sig000000b1),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000796
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c6c),
        .Q(sig000000b0),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000797
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c6e),
        .Q(sig000000af),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000798
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c70),
        .Q(sig000000ae),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000799
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c72),
        .Q(sig000000ad),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000079a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c74),
        .Q(sig000000ac),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000079b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c76),
        .Q(sig000000ab),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000079c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c78),
        .Q(sig000000aa),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000079d
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c1b),
        .Q(sig000000d8),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000079e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c1c),
        .Q(sig000000ef),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000079f
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c1e),
        .Q(sig000000ee),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007a0
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c20),
        .Q(sig000000ed),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007a1
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c22),
        .Q(sig000000ec),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007a2
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c24),
        .Q(sig000000eb),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007a3
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c26),
        .Q(sig000000ea),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007a4
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c28),
        .Q(sig000000e9),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007a5
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c2a),
        .Q(sig000000e8),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007a6
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c2c),
        .Q(sig000000e7),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007a7
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c2e),
        .Q(sig000000e6),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007a8
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c30),
        .Q(sig000000e5),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007a9
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c32),
        .Q(sig000000e4),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007aa
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c34),
        .Q(sig000000e3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007ab
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c36),
        .Q(sig000000e2),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007ac
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c38),
        .Q(sig000000e1),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007ad
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c3a),
        .Q(sig000000e0),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007ae
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c3c),
        .Q(sig000000df),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007af
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c3e),
        .Q(sig000000de),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007b0
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c40),
        .Q(sig000000dd),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007b1
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c42),
        .Q(sig000000dc),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007b2
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c44),
        .Q(sig000000db),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007b3
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c46),
        .Q(sig000000da),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007b4
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c48),
        .Q(sig000000d9),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007b5
       (.C(clk),
        .CE(1'b1),
        .D(sig00000beb),
        .Q(sig00000107),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007b6
       (.C(clk),
        .CE(1'b1),
        .D(sig00000bec),
        .Q(sig0000011e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007b7
       (.C(clk),
        .CE(1'b1),
        .D(sig00000bee),
        .Q(sig0000011d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007b8
       (.C(clk),
        .CE(1'b1),
        .D(sig00000bf0),
        .Q(sig0000011c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007b9
       (.C(clk),
        .CE(1'b1),
        .D(sig00000bf2),
        .Q(sig0000011b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007ba
       (.C(clk),
        .CE(1'b1),
        .D(sig00000bf4),
        .Q(sig0000011a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007bb
       (.C(clk),
        .CE(1'b1),
        .D(sig00000bf6),
        .Q(sig00000119),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007bc
       (.C(clk),
        .CE(1'b1),
        .D(sig00000bf8),
        .Q(sig00000118),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007bd
       (.C(clk),
        .CE(1'b1),
        .D(sig00000bfa),
        .Q(sig00000117),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007be
       (.C(clk),
        .CE(1'b1),
        .D(sig00000bfc),
        .Q(sig00000116),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007bf
       (.C(clk),
        .CE(1'b1),
        .D(sig00000bfe),
        .Q(sig00000115),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007c0
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c00),
        .Q(sig00000114),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007c1
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c02),
        .Q(sig00000113),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007c2
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c04),
        .Q(sig00000112),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007c3
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c06),
        .Q(sig00000111),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007c4
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c08),
        .Q(sig00000110),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007c5
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c0a),
        .Q(sig0000010f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007c6
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c0c),
        .Q(sig0000010e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007c7
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c0e),
        .Q(sig0000010d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007c8
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c10),
        .Q(sig0000010c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007c9
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c12),
        .Q(sig0000010b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007ca
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c14),
        .Q(sig0000010a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007cb
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c16),
        .Q(sig00000109),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007cc
       (.C(clk),
        .CE(1'b1),
        .D(sig00000c18),
        .Q(sig00000108),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007cd
       (.C(clk),
        .CE(1'b1),
        .D(sig00000bbb),
        .Q(sig00000136),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007ce
       (.C(clk),
        .CE(1'b1),
        .D(sig00000bbc),
        .Q(sig0000014d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007cf
       (.C(clk),
        .CE(1'b1),
        .D(sig00000bbe),
        .Q(sig0000014c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007d0
       (.C(clk),
        .CE(1'b1),
        .D(sig00000bc0),
        .Q(sig0000014b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007d1
       (.C(clk),
        .CE(1'b1),
        .D(sig00000bc2),
        .Q(sig0000014a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007d2
       (.C(clk),
        .CE(1'b1),
        .D(sig00000bc4),
        .Q(sig00000149),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007d3
       (.C(clk),
        .CE(1'b1),
        .D(sig00000bc6),
        .Q(sig00000148),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007d4
       (.C(clk),
        .CE(1'b1),
        .D(sig00000bc8),
        .Q(sig00000147),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007d5
       (.C(clk),
        .CE(1'b1),
        .D(sig00000bca),
        .Q(sig00000146),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007d6
       (.C(clk),
        .CE(1'b1),
        .D(sig00000bcc),
        .Q(sig00000145),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007d7
       (.C(clk),
        .CE(1'b1),
        .D(sig00000bce),
        .Q(sig00000144),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007d8
       (.C(clk),
        .CE(1'b1),
        .D(sig00000bd0),
        .Q(sig00000143),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007d9
       (.C(clk),
        .CE(1'b1),
        .D(sig00000bd2),
        .Q(sig00000142),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007da
       (.C(clk),
        .CE(1'b1),
        .D(sig00000bd4),
        .Q(sig00000141),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007db
       (.C(clk),
        .CE(1'b1),
        .D(sig00000bd6),
        .Q(sig00000140),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007dc
       (.C(clk),
        .CE(1'b1),
        .D(sig00000bd8),
        .Q(sig0000013f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007dd
       (.C(clk),
        .CE(1'b1),
        .D(sig00000bda),
        .Q(sig0000013e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007de
       (.C(clk),
        .CE(1'b1),
        .D(sig00000bdc),
        .Q(sig0000013d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007df
       (.C(clk),
        .CE(1'b1),
        .D(sig00000bde),
        .Q(sig0000013c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007e0
       (.C(clk),
        .CE(1'b1),
        .D(sig00000be0),
        .Q(sig0000013b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007e1
       (.C(clk),
        .CE(1'b1),
        .D(sig00000be2),
        .Q(sig0000013a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007e2
       (.C(clk),
        .CE(1'b1),
        .D(sig00000be4),
        .Q(sig00000139),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007e3
       (.C(clk),
        .CE(1'b1),
        .D(sig00000be6),
        .Q(sig00000138),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007e4
       (.C(clk),
        .CE(1'b1),
        .D(sig00000be8),
        .Q(sig00000137),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007e5
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b8b),
        .Q(sig00000165),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007e6
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b8c),
        .Q(sig0000017c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007e7
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b8e),
        .Q(sig0000017b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007e8
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b90),
        .Q(sig0000017a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007e9
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b92),
        .Q(sig00000179),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007ea
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b94),
        .Q(sig00000178),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007eb
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b96),
        .Q(sig00000177),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007ec
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b98),
        .Q(sig00000176),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007ed
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b9a),
        .Q(sig00000175),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007ee
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b9c),
        .Q(sig00000174),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007ef
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b9e),
        .Q(sig00000173),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007f0
       (.C(clk),
        .CE(1'b1),
        .D(sig00000ba0),
        .Q(sig00000172),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007f1
       (.C(clk),
        .CE(1'b1),
        .D(sig00000ba2),
        .Q(sig00000171),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007f2
       (.C(clk),
        .CE(1'b1),
        .D(sig00000ba4),
        .Q(sig00000170),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007f3
       (.C(clk),
        .CE(1'b1),
        .D(sig00000ba6),
        .Q(sig0000016f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007f4
       (.C(clk),
        .CE(1'b1),
        .D(sig00000ba8),
        .Q(sig0000016e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007f5
       (.C(clk),
        .CE(1'b1),
        .D(sig00000baa),
        .Q(sig0000016d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007f6
       (.C(clk),
        .CE(1'b1),
        .D(sig00000bac),
        .Q(sig0000016c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007f7
       (.C(clk),
        .CE(1'b1),
        .D(sig00000bae),
        .Q(sig0000016b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007f8
       (.C(clk),
        .CE(1'b1),
        .D(sig00000bb0),
        .Q(sig0000016a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007f9
       (.C(clk),
        .CE(1'b1),
        .D(sig00000bb2),
        .Q(sig00000169),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007fa
       (.C(clk),
        .CE(1'b1),
        .D(sig00000bb4),
        .Q(sig00000168),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007fb
       (.C(clk),
        .CE(1'b1),
        .D(sig00000bb6),
        .Q(sig00000167),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007fc
       (.C(clk),
        .CE(1'b1),
        .D(sig00000bb8),
        .Q(sig00000166),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007fd
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b5b),
        .Q(sig00000194),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007fe
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b5c),
        .Q(sig000001ab),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007ff
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b5e),
        .Q(sig000001aa),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000800
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b60),
        .Q(sig000001a9),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000801
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b62),
        .Q(sig000001a8),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000802
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b64),
        .Q(sig000001a7),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000803
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b66),
        .Q(sig000001a6),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000804
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b68),
        .Q(sig000001a5),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000805
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b6a),
        .Q(sig000001a4),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000806
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b6c),
        .Q(sig000001a3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000807
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b6e),
        .Q(sig000001a2),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000808
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b70),
        .Q(sig000001a1),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000809
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b72),
        .Q(sig000001a0),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000080a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b74),
        .Q(sig0000019f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000080b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b76),
        .Q(sig0000019e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000080c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b78),
        .Q(sig0000019d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000080d
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b7a),
        .Q(sig0000019c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000080e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b7c),
        .Q(sig0000019b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000080f
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b7e),
        .Q(sig0000019a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000810
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b80),
        .Q(sig00000199),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000811
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b82),
        .Q(sig00000198),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000812
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b84),
        .Q(sig00000197),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000813
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b86),
        .Q(sig00000196),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000814
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b88),
        .Q(sig00000195),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000815
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b2b),
        .Q(sig000001c3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000816
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b2c),
        .Q(sig000001da),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000817
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b2e),
        .Q(sig000001d9),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000818
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b30),
        .Q(sig000001d8),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000819
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b32),
        .Q(sig000001d7),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000081a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b34),
        .Q(sig000001d6),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000081b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b36),
        .Q(sig000001d5),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000081c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b38),
        .Q(sig000001d4),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000081d
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b3a),
        .Q(sig000001d3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000081e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b3c),
        .Q(sig000001d2),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000081f
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b3e),
        .Q(sig000001d1),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000820
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b40),
        .Q(sig000001d0),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000821
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b42),
        .Q(sig000001cf),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000822
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b44),
        .Q(sig000001ce),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000823
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b46),
        .Q(sig000001cd),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000824
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b48),
        .Q(sig000001cc),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000825
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b4a),
        .Q(sig000001cb),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000826
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b4c),
        .Q(sig000001ca),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000827
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b4e),
        .Q(sig000001c9),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000828
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b50),
        .Q(sig000001c8),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000829
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b52),
        .Q(sig000001c7),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000082a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b54),
        .Q(sig000001c6),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000082b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b56),
        .Q(sig000001c5),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000082c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b58),
        .Q(sig000001c4),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000082d
       (.C(clk),
        .CE(1'b1),
        .D(sig00000afb),
        .Q(sig000001f2),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000082e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000afc),
        .Q(sig00000209),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000082f
       (.C(clk),
        .CE(1'b1),
        .D(sig00000afe),
        .Q(sig00000208),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000830
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b00),
        .Q(sig00000207),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000831
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b02),
        .Q(sig00000206),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000832
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b04),
        .Q(sig00000205),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000833
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b06),
        .Q(sig00000204),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000834
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b08),
        .Q(sig00000203),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000835
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b0a),
        .Q(sig00000202),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000836
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b0c),
        .Q(sig00000201),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000837
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b0e),
        .Q(sig00000200),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000838
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b10),
        .Q(sig000001ff),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000839
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b12),
        .Q(sig000001fe),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000083a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b14),
        .Q(sig000001fd),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000083b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b16),
        .Q(sig000001fc),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000083c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b18),
        .Q(sig000001fb),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000083d
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b1a),
        .Q(sig000001fa),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000083e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b1c),
        .Q(sig000001f9),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000083f
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b1e),
        .Q(sig000001f8),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000840
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b20),
        .Q(sig000001f7),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000841
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b22),
        .Q(sig000001f6),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000842
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b24),
        .Q(sig000001f5),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000843
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b26),
        .Q(sig000001f4),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000844
       (.C(clk),
        .CE(1'b1),
        .D(sig00000b28),
        .Q(sig000001f3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000845
       (.C(clk),
        .CE(1'b1),
        .D(sig00000acb),
        .Q(sig00000221),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000846
       (.C(clk),
        .CE(1'b1),
        .D(sig00000acc),
        .Q(sig00000238),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000847
       (.C(clk),
        .CE(1'b1),
        .D(sig00000ace),
        .Q(sig00000237),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000848
       (.C(clk),
        .CE(1'b1),
        .D(sig00000ad0),
        .Q(sig00000236),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000849
       (.C(clk),
        .CE(1'b1),
        .D(sig00000ad2),
        .Q(sig00000235),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000084a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000ad4),
        .Q(sig00000234),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000084b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000ad6),
        .Q(sig00000233),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000084c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000ad8),
        .Q(sig00000232),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000084d
       (.C(clk),
        .CE(1'b1),
        .D(sig00000ada),
        .Q(sig00000231),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000084e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000adc),
        .Q(sig00000230),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000084f
       (.C(clk),
        .CE(1'b1),
        .D(sig00000ade),
        .Q(sig0000022f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000850
       (.C(clk),
        .CE(1'b1),
        .D(sig00000ae0),
        .Q(sig0000022e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000851
       (.C(clk),
        .CE(1'b1),
        .D(sig00000ae2),
        .Q(sig0000022d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000852
       (.C(clk),
        .CE(1'b1),
        .D(sig00000ae4),
        .Q(sig0000022c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000853
       (.C(clk),
        .CE(1'b1),
        .D(sig00000ae6),
        .Q(sig0000022b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000854
       (.C(clk),
        .CE(1'b1),
        .D(sig00000ae8),
        .Q(sig0000022a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000855
       (.C(clk),
        .CE(1'b1),
        .D(sig00000aea),
        .Q(sig00000229),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000856
       (.C(clk),
        .CE(1'b1),
        .D(sig00000aec),
        .Q(sig00000228),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000857
       (.C(clk),
        .CE(1'b1),
        .D(sig00000aee),
        .Q(sig00000227),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000858
       (.C(clk),
        .CE(1'b1),
        .D(sig00000af0),
        .Q(sig00000226),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000859
       (.C(clk),
        .CE(1'b1),
        .D(sig00000af2),
        .Q(sig00000225),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000085a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000af4),
        .Q(sig00000224),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000085b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000af6),
        .Q(sig00000223),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000085c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000af8),
        .Q(sig00000222),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000085d
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a9b),
        .Q(sig00000250),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000085e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a9c),
        .Q(sig00000267),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000085f
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a9e),
        .Q(sig00000266),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000860
       (.C(clk),
        .CE(1'b1),
        .D(sig00000aa0),
        .Q(sig00000265),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000861
       (.C(clk),
        .CE(1'b1),
        .D(sig00000aa2),
        .Q(sig00000264),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000862
       (.C(clk),
        .CE(1'b1),
        .D(sig00000aa4),
        .Q(sig00000263),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000863
       (.C(clk),
        .CE(1'b1),
        .D(sig00000aa6),
        .Q(sig00000262),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000864
       (.C(clk),
        .CE(1'b1),
        .D(sig00000aa8),
        .Q(sig00000261),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000865
       (.C(clk),
        .CE(1'b1),
        .D(sig00000aaa),
        .Q(sig00000260),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000866
       (.C(clk),
        .CE(1'b1),
        .D(sig00000aac),
        .Q(sig0000025f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000867
       (.C(clk),
        .CE(1'b1),
        .D(sig00000aae),
        .Q(sig0000025e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000868
       (.C(clk),
        .CE(1'b1),
        .D(sig00000ab0),
        .Q(sig0000025d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000869
       (.C(clk),
        .CE(1'b1),
        .D(sig00000ab2),
        .Q(sig0000025c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000086a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000ab4),
        .Q(sig0000025b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000086b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000ab6),
        .Q(sig0000025a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000086c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000ab8),
        .Q(sig00000259),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000086d
       (.C(clk),
        .CE(1'b1),
        .D(sig00000aba),
        .Q(sig00000258),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000086e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000abc),
        .Q(sig00000257),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000086f
       (.C(clk),
        .CE(1'b1),
        .D(sig00000abe),
        .Q(sig00000256),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000870
       (.C(clk),
        .CE(1'b1),
        .D(sig00000ac0),
        .Q(sig00000255),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000871
       (.C(clk),
        .CE(1'b1),
        .D(sig00000ac2),
        .Q(sig00000254),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000872
       (.C(clk),
        .CE(1'b1),
        .D(sig00000ac4),
        .Q(sig00000253),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000873
       (.C(clk),
        .CE(1'b1),
        .D(sig00000ac6),
        .Q(sig00000252),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000874
       (.C(clk),
        .CE(1'b1),
        .D(sig00000ac8),
        .Q(sig00000251),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000875
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a6b),
        .Q(sig0000027f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000876
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a6c),
        .Q(sig00000296),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000877
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a6e),
        .Q(sig00000295),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000878
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a70),
        .Q(sig00000294),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000879
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a72),
        .Q(sig00000293),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000087a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a74),
        .Q(sig00000292),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000087b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a76),
        .Q(sig00000291),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000087c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a78),
        .Q(sig00000290),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000087d
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a7a),
        .Q(sig0000028f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000087e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a7c),
        .Q(sig0000028e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000087f
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a7e),
        .Q(sig0000028d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000880
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a80),
        .Q(sig0000028c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000881
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a82),
        .Q(sig0000028b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000882
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a84),
        .Q(sig0000028a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000883
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a86),
        .Q(sig00000289),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000884
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a88),
        .Q(sig00000288),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000885
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a8a),
        .Q(sig00000287),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000886
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a8c),
        .Q(sig00000286),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000887
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a8e),
        .Q(sig00000285),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000888
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a90),
        .Q(sig00000284),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000889
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a92),
        .Q(sig00000283),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000088a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a94),
        .Q(sig00000282),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000088b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a96),
        .Q(sig00000281),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000088c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a98),
        .Q(sig00000280),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000088d
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a3b),
        .Q(sig000002ae),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000088e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a3c),
        .Q(sig000002c5),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000088f
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a3e),
        .Q(sig000002c4),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000890
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a40),
        .Q(sig000002c3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000891
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a42),
        .Q(sig000002c2),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000892
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a44),
        .Q(sig000002c1),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000893
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a46),
        .Q(sig000002c0),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000894
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a48),
        .Q(sig000002bf),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000895
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a4a),
        .Q(sig000002be),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000896
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a4c),
        .Q(sig000002bd),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000897
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a4e),
        .Q(sig000002bc),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000898
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a50),
        .Q(sig000002bb),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000899
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a52),
        .Q(sig000002ba),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000089a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a54),
        .Q(sig000002b9),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000089b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a56),
        .Q(sig000002b8),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000089c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a58),
        .Q(sig000002b7),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000089d
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a5a),
        .Q(sig000002b6),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000089e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a5c),
        .Q(sig000002b5),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000089f
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a5e),
        .Q(sig000002b4),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008a0
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a60),
        .Q(sig000002b3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008a1
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a62),
        .Q(sig000002b2),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008a2
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a64),
        .Q(sig000002b1),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008a3
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a66),
        .Q(sig000002b0),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008a4
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a68),
        .Q(sig000002af),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008a5
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a0b),
        .Q(sig000002dd),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008a6
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a0c),
        .Q(sig000002f4),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008a7
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a0e),
        .Q(sig000002f3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008a8
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a10),
        .Q(sig000002f2),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008a9
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a12),
        .Q(sig000002f1),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008aa
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a14),
        .Q(sig000002f0),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008ab
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a16),
        .Q(sig000002ef),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008ac
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a18),
        .Q(sig000002ee),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008ad
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a1a),
        .Q(sig000002ed),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008ae
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a1c),
        .Q(sig000002ec),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008af
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a1e),
        .Q(sig000002eb),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008b0
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a20),
        .Q(sig000002ea),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008b1
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a22),
        .Q(sig000002e9),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008b2
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a24),
        .Q(sig000002e8),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008b3
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a26),
        .Q(sig000002e7),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008b4
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a28),
        .Q(sig000002e6),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008b5
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a2a),
        .Q(sig000002e5),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008b6
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a2c),
        .Q(sig000002e4),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008b7
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a2e),
        .Q(sig000002e3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008b8
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a30),
        .Q(sig000002e2),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008b9
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a32),
        .Q(sig000002e1),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008ba
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a34),
        .Q(sig000002e0),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008bb
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a36),
        .Q(sig000002df),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008bc
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a38),
        .Q(sig000002de),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008bd
       (.C(clk),
        .CE(1'b1),
        .D(sig000009db),
        .Q(sig0000030c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008be
       (.C(clk),
        .CE(1'b1),
        .D(sig000009dc),
        .Q(sig00000323),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008bf
       (.C(clk),
        .CE(1'b1),
        .D(sig000009de),
        .Q(sig00000322),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008c0
       (.C(clk),
        .CE(1'b1),
        .D(sig000009e0),
        .Q(sig00000321),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008c1
       (.C(clk),
        .CE(1'b1),
        .D(sig000009e2),
        .Q(sig00000320),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008c2
       (.C(clk),
        .CE(1'b1),
        .D(sig000009e4),
        .Q(sig0000031f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008c3
       (.C(clk),
        .CE(1'b1),
        .D(sig000009e6),
        .Q(sig0000031e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008c4
       (.C(clk),
        .CE(1'b1),
        .D(sig000009e8),
        .Q(sig0000031d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008c5
       (.C(clk),
        .CE(1'b1),
        .D(sig000009ea),
        .Q(sig0000031c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008c6
       (.C(clk),
        .CE(1'b1),
        .D(sig000009ec),
        .Q(sig0000031b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008c7
       (.C(clk),
        .CE(1'b1),
        .D(sig000009ee),
        .Q(sig0000031a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008c8
       (.C(clk),
        .CE(1'b1),
        .D(sig000009f0),
        .Q(sig00000319),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008c9
       (.C(clk),
        .CE(1'b1),
        .D(sig000009f2),
        .Q(sig00000318),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008ca
       (.C(clk),
        .CE(1'b1),
        .D(sig000009f4),
        .Q(sig00000317),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008cb
       (.C(clk),
        .CE(1'b1),
        .D(sig000009f6),
        .Q(sig00000316),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008cc
       (.C(clk),
        .CE(1'b1),
        .D(sig000009f8),
        .Q(sig00000315),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008cd
       (.C(clk),
        .CE(1'b1),
        .D(sig000009fa),
        .Q(sig00000314),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008ce
       (.C(clk),
        .CE(1'b1),
        .D(sig000009fc),
        .Q(sig00000313),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008cf
       (.C(clk),
        .CE(1'b1),
        .D(sig000009fe),
        .Q(sig00000312),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008d0
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a00),
        .Q(sig00000311),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008d1
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a02),
        .Q(sig00000310),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008d2
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a04),
        .Q(sig0000030f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008d3
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a06),
        .Q(sig0000030e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008d4
       (.C(clk),
        .CE(1'b1),
        .D(sig00000a08),
        .Q(sig0000030d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008d5
       (.C(clk),
        .CE(1'b1),
        .D(sig000009ab),
        .Q(sig0000033b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008d6
       (.C(clk),
        .CE(1'b1),
        .D(sig000009ac),
        .Q(sig00000352),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008d7
       (.C(clk),
        .CE(1'b1),
        .D(sig000009ae),
        .Q(sig00000351),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008d8
       (.C(clk),
        .CE(1'b1),
        .D(sig000009b0),
        .Q(sig00000350),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008d9
       (.C(clk),
        .CE(1'b1),
        .D(sig000009b2),
        .Q(sig0000034f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008da
       (.C(clk),
        .CE(1'b1),
        .D(sig000009b4),
        .Q(sig0000034e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008db
       (.C(clk),
        .CE(1'b1),
        .D(sig000009b6),
        .Q(sig0000034d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008dc
       (.C(clk),
        .CE(1'b1),
        .D(sig000009b8),
        .Q(sig0000034c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008dd
       (.C(clk),
        .CE(1'b1),
        .D(sig000009ba),
        .Q(sig0000034b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008de
       (.C(clk),
        .CE(1'b1),
        .D(sig000009bc),
        .Q(sig0000034a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008df
       (.C(clk),
        .CE(1'b1),
        .D(sig000009be),
        .Q(sig00000349),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008e0
       (.C(clk),
        .CE(1'b1),
        .D(sig000009c0),
        .Q(sig00000348),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008e1
       (.C(clk),
        .CE(1'b1),
        .D(sig000009c2),
        .Q(sig00000347),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008e2
       (.C(clk),
        .CE(1'b1),
        .D(sig000009c4),
        .Q(sig00000346),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008e3
       (.C(clk),
        .CE(1'b1),
        .D(sig000009c6),
        .Q(sig00000345),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008e4
       (.C(clk),
        .CE(1'b1),
        .D(sig000009c8),
        .Q(sig00000344),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008e5
       (.C(clk),
        .CE(1'b1),
        .D(sig000009ca),
        .Q(sig00000343),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008e6
       (.C(clk),
        .CE(1'b1),
        .D(sig000009cc),
        .Q(sig00000342),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008e7
       (.C(clk),
        .CE(1'b1),
        .D(sig000009ce),
        .Q(sig00000341),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008e8
       (.C(clk),
        .CE(1'b1),
        .D(sig000009d0),
        .Q(sig00000340),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008e9
       (.C(clk),
        .CE(1'b1),
        .D(sig000009d2),
        .Q(sig0000033f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008ea
       (.C(clk),
        .CE(1'b1),
        .D(sig000009d4),
        .Q(sig0000033e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008eb
       (.C(clk),
        .CE(1'b1),
        .D(sig000009d6),
        .Q(sig0000033d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008ec
       (.C(clk),
        .CE(1'b1),
        .D(sig000009d8),
        .Q(sig0000033c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008ed
       (.C(clk),
        .CE(1'b1),
        .D(sig0000097b),
        .Q(sig0000036a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008ee
       (.C(clk),
        .CE(1'b1),
        .D(sig0000097c),
        .Q(sig00000381),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008ef
       (.C(clk),
        .CE(1'b1),
        .D(sig0000097e),
        .Q(sig00000380),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008f0
       (.C(clk),
        .CE(1'b1),
        .D(sig00000980),
        .Q(sig0000037f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008f1
       (.C(clk),
        .CE(1'b1),
        .D(sig00000982),
        .Q(sig0000037e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008f2
       (.C(clk),
        .CE(1'b1),
        .D(sig00000984),
        .Q(sig0000037d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008f3
       (.C(clk),
        .CE(1'b1),
        .D(sig00000986),
        .Q(sig0000037c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008f4
       (.C(clk),
        .CE(1'b1),
        .D(sig00000988),
        .Q(sig0000037b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008f5
       (.C(clk),
        .CE(1'b1),
        .D(sig0000098a),
        .Q(sig0000037a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008f6
       (.C(clk),
        .CE(1'b1),
        .D(sig0000098c),
        .Q(sig00000379),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008f7
       (.C(clk),
        .CE(1'b1),
        .D(sig0000098e),
        .Q(sig00000378),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008f8
       (.C(clk),
        .CE(1'b1),
        .D(sig00000990),
        .Q(sig00000377),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008f9
       (.C(clk),
        .CE(1'b1),
        .D(sig00000992),
        .Q(sig00000376),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008fa
       (.C(clk),
        .CE(1'b1),
        .D(sig00000994),
        .Q(sig00000375),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008fb
       (.C(clk),
        .CE(1'b1),
        .D(sig00000996),
        .Q(sig00000374),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008fc
       (.C(clk),
        .CE(1'b1),
        .D(sig00000998),
        .Q(sig00000373),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008fd
       (.C(clk),
        .CE(1'b1),
        .D(sig0000099a),
        .Q(sig00000372),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008fe
       (.C(clk),
        .CE(1'b1),
        .D(sig0000099c),
        .Q(sig00000371),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008ff
       (.C(clk),
        .CE(1'b1),
        .D(sig0000099e),
        .Q(sig00000370),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000900
       (.C(clk),
        .CE(1'b1),
        .D(sig000009a0),
        .Q(sig0000036f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000901
       (.C(clk),
        .CE(1'b1),
        .D(sig000009a2),
        .Q(sig0000036e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000902
       (.C(clk),
        .CE(1'b1),
        .D(sig000009a4),
        .Q(sig0000036d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000903
       (.C(clk),
        .CE(1'b1),
        .D(sig000009a6),
        .Q(sig0000036c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000904
       (.C(clk),
        .CE(1'b1),
        .D(sig000009a8),
        .Q(sig0000036b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000905
       (.C(clk),
        .CE(1'b1),
        .D(sig0000094b),
        .Q(sig00000399),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000906
       (.C(clk),
        .CE(1'b1),
        .D(sig0000094c),
        .Q(sig000003b0),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000907
       (.C(clk),
        .CE(1'b1),
        .D(sig0000094e),
        .Q(sig000003af),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000908
       (.C(clk),
        .CE(1'b1),
        .D(sig00000950),
        .Q(sig000003ae),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000909
       (.C(clk),
        .CE(1'b1),
        .D(sig00000952),
        .Q(sig000003ad),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000090a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000954),
        .Q(sig000003ac),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000090b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000956),
        .Q(sig000003ab),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000090c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000958),
        .Q(sig000003aa),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000090d
       (.C(clk),
        .CE(1'b1),
        .D(sig0000095a),
        .Q(sig000003a9),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000090e
       (.C(clk),
        .CE(1'b1),
        .D(sig0000095c),
        .Q(sig000003a8),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000090f
       (.C(clk),
        .CE(1'b1),
        .D(sig0000095e),
        .Q(sig000003a7),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000910
       (.C(clk),
        .CE(1'b1),
        .D(sig00000960),
        .Q(sig000003a6),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000911
       (.C(clk),
        .CE(1'b1),
        .D(sig00000962),
        .Q(sig000003a5),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000912
       (.C(clk),
        .CE(1'b1),
        .D(sig00000964),
        .Q(sig000003a4),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000913
       (.C(clk),
        .CE(1'b1),
        .D(sig00000966),
        .Q(sig000003a3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000914
       (.C(clk),
        .CE(1'b1),
        .D(sig00000968),
        .Q(sig000003a2),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000915
       (.C(clk),
        .CE(1'b1),
        .D(sig0000096a),
        .Q(sig000003a1),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000916
       (.C(clk),
        .CE(1'b1),
        .D(sig0000096c),
        .Q(sig000003a0),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000917
       (.C(clk),
        .CE(1'b1),
        .D(sig0000096e),
        .Q(sig0000039f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000918
       (.C(clk),
        .CE(1'b1),
        .D(sig00000970),
        .Q(sig0000039e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000919
       (.C(clk),
        .CE(1'b1),
        .D(sig00000972),
        .Q(sig0000039d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000091a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000974),
        .Q(sig0000039c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000091b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000976),
        .Q(sig0000039b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000091c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000978),
        .Q(sig0000039a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000091d
       (.C(clk),
        .CE(1'b1),
        .D(sig0000091b),
        .Q(sig000003c8),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000091e
       (.C(clk),
        .CE(1'b1),
        .D(sig0000091c),
        .Q(sig000003df),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000091f
       (.C(clk),
        .CE(1'b1),
        .D(sig0000091e),
        .Q(sig000003de),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000920
       (.C(clk),
        .CE(1'b1),
        .D(sig00000920),
        .Q(sig000003dd),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000921
       (.C(clk),
        .CE(1'b1),
        .D(sig00000922),
        .Q(sig000003dc),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000922
       (.C(clk),
        .CE(1'b1),
        .D(sig00000924),
        .Q(sig000003db),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000923
       (.C(clk),
        .CE(1'b1),
        .D(sig00000926),
        .Q(sig000003da),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000924
       (.C(clk),
        .CE(1'b1),
        .D(sig00000928),
        .Q(sig000003d9),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000925
       (.C(clk),
        .CE(1'b1),
        .D(sig0000092a),
        .Q(sig000003d8),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000926
       (.C(clk),
        .CE(1'b1),
        .D(sig0000092c),
        .Q(sig000003d7),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000927
       (.C(clk),
        .CE(1'b1),
        .D(sig0000092e),
        .Q(sig000003d6),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000928
       (.C(clk),
        .CE(1'b1),
        .D(sig00000930),
        .Q(sig000003d5),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000929
       (.C(clk),
        .CE(1'b1),
        .D(sig00000932),
        .Q(sig000003d4),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000092a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000934),
        .Q(sig000003d3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000092b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000936),
        .Q(sig000003d2),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000092c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000938),
        .Q(sig000003d1),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000092d
       (.C(clk),
        .CE(1'b1),
        .D(sig0000093a),
        .Q(sig000003d0),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000092e
       (.C(clk),
        .CE(1'b1),
        .D(sig0000093c),
        .Q(sig000003cf),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000092f
       (.C(clk),
        .CE(1'b1),
        .D(sig0000093e),
        .Q(sig000003ce),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000930
       (.C(clk),
        .CE(1'b1),
        .D(sig00000940),
        .Q(sig000003cd),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000931
       (.C(clk),
        .CE(1'b1),
        .D(sig00000942),
        .Q(sig000003cc),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000932
       (.C(clk),
        .CE(1'b1),
        .D(sig00000944),
        .Q(sig000003cb),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000933
       (.C(clk),
        .CE(1'b1),
        .D(sig00000946),
        .Q(sig000003ca),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000934
       (.C(clk),
        .CE(1'b1),
        .D(sig00000948),
        .Q(sig000003c9),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000935
       (.C(clk),
        .CE(1'b1),
        .D(sig000008eb),
        .Q(sig000003f7),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000936
       (.C(clk),
        .CE(1'b1),
        .D(sig000008ec),
        .Q(sig0000040e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000937
       (.C(clk),
        .CE(1'b1),
        .D(sig000008ee),
        .Q(sig0000040d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000938
       (.C(clk),
        .CE(1'b1),
        .D(sig000008f0),
        .Q(sig0000040c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000939
       (.C(clk),
        .CE(1'b1),
        .D(sig000008f2),
        .Q(sig0000040b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000093a
       (.C(clk),
        .CE(1'b1),
        .D(sig000008f4),
        .Q(sig0000040a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000093b
       (.C(clk),
        .CE(1'b1),
        .D(sig000008f6),
        .Q(sig00000409),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000093c
       (.C(clk),
        .CE(1'b1),
        .D(sig000008f8),
        .Q(sig00000408),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000093d
       (.C(clk),
        .CE(1'b1),
        .D(sig000008fa),
        .Q(sig00000407),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000093e
       (.C(clk),
        .CE(1'b1),
        .D(sig000008fc),
        .Q(sig00000406),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000093f
       (.C(clk),
        .CE(1'b1),
        .D(sig000008fe),
        .Q(sig00000405),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000940
       (.C(clk),
        .CE(1'b1),
        .D(sig00000900),
        .Q(sig00000404),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000941
       (.C(clk),
        .CE(1'b1),
        .D(sig00000902),
        .Q(sig00000403),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000942
       (.C(clk),
        .CE(1'b1),
        .D(sig00000904),
        .Q(sig00000402),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000943
       (.C(clk),
        .CE(1'b1),
        .D(sig00000906),
        .Q(sig00000401),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000944
       (.C(clk),
        .CE(1'b1),
        .D(sig00000908),
        .Q(sig00000400),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000945
       (.C(clk),
        .CE(1'b1),
        .D(sig0000090a),
        .Q(sig000003ff),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000946
       (.C(clk),
        .CE(1'b1),
        .D(sig0000090c),
        .Q(sig000003fe),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000947
       (.C(clk),
        .CE(1'b1),
        .D(sig0000090e),
        .Q(sig000003fd),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000948
       (.C(clk),
        .CE(1'b1),
        .D(sig00000910),
        .Q(sig000003fc),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000949
       (.C(clk),
        .CE(1'b1),
        .D(sig00000912),
        .Q(sig000003fb),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000094a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000914),
        .Q(sig000003fa),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000094b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000916),
        .Q(sig000003f9),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000094c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000918),
        .Q(sig000003f8),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000094d
       (.C(clk),
        .CE(1'b1),
        .D(sig000008bb),
        .Q(sig00000426),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000094e
       (.C(clk),
        .CE(1'b1),
        .D(sig000008bc),
        .Q(sig0000043d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000094f
       (.C(clk),
        .CE(1'b1),
        .D(sig000008be),
        .Q(sig0000043c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000950
       (.C(clk),
        .CE(1'b1),
        .D(sig000008c0),
        .Q(sig0000043b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000951
       (.C(clk),
        .CE(1'b1),
        .D(sig000008c2),
        .Q(sig0000043a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000952
       (.C(clk),
        .CE(1'b1),
        .D(sig000008c4),
        .Q(sig00000439),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000953
       (.C(clk),
        .CE(1'b1),
        .D(sig000008c6),
        .Q(sig00000438),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000954
       (.C(clk),
        .CE(1'b1),
        .D(sig000008c8),
        .Q(sig00000437),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000955
       (.C(clk),
        .CE(1'b1),
        .D(sig000008ca),
        .Q(sig00000436),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000956
       (.C(clk),
        .CE(1'b1),
        .D(sig000008cc),
        .Q(sig00000435),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000957
       (.C(clk),
        .CE(1'b1),
        .D(sig000008ce),
        .Q(sig00000434),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000958
       (.C(clk),
        .CE(1'b1),
        .D(sig000008d0),
        .Q(sig00000433),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000959
       (.C(clk),
        .CE(1'b1),
        .D(sig000008d2),
        .Q(sig00000432),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000095a
       (.C(clk),
        .CE(1'b1),
        .D(sig000008d4),
        .Q(sig00000431),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000095b
       (.C(clk),
        .CE(1'b1),
        .D(sig000008d6),
        .Q(sig00000430),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000095c
       (.C(clk),
        .CE(1'b1),
        .D(sig000008d8),
        .Q(sig0000042f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000095d
       (.C(clk),
        .CE(1'b1),
        .D(sig000008da),
        .Q(sig0000042e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000095e
       (.C(clk),
        .CE(1'b1),
        .D(sig000008dc),
        .Q(sig0000042d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000095f
       (.C(clk),
        .CE(1'b1),
        .D(sig000008de),
        .Q(sig0000042c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000960
       (.C(clk),
        .CE(1'b1),
        .D(sig000008e0),
        .Q(sig0000042b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000961
       (.C(clk),
        .CE(1'b1),
        .D(sig000008e2),
        .Q(sig0000042a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000962
       (.C(clk),
        .CE(1'b1),
        .D(sig000008e4),
        .Q(sig00000429),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000963
       (.C(clk),
        .CE(1'b1),
        .D(sig000008e6),
        .Q(sig00000428),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000964
       (.C(clk),
        .CE(1'b1),
        .D(sig000008e8),
        .Q(sig00000427),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000965
       (.C(clk),
        .CE(1'b1),
        .D(sig0000088b),
        .Q(sig00000455),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000966
       (.C(clk),
        .CE(1'b1),
        .D(sig0000088c),
        .Q(sig0000046c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000967
       (.C(clk),
        .CE(1'b1),
        .D(sig0000088e),
        .Q(sig0000046b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000968
       (.C(clk),
        .CE(1'b1),
        .D(sig00000890),
        .Q(sig0000046a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000969
       (.C(clk),
        .CE(1'b1),
        .D(sig00000892),
        .Q(sig00000469),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000096a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000894),
        .Q(sig00000468),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000096b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000896),
        .Q(sig00000467),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000096c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000898),
        .Q(sig00000466),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000096d
       (.C(clk),
        .CE(1'b1),
        .D(sig0000089a),
        .Q(sig00000465),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000096e
       (.C(clk),
        .CE(1'b1),
        .D(sig0000089c),
        .Q(sig00000464),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000096f
       (.C(clk),
        .CE(1'b1),
        .D(sig0000089e),
        .Q(sig00000463),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000970
       (.C(clk),
        .CE(1'b1),
        .D(sig000008a0),
        .Q(sig00000462),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000971
       (.C(clk),
        .CE(1'b1),
        .D(sig000008a2),
        .Q(sig00000461),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000972
       (.C(clk),
        .CE(1'b1),
        .D(sig000008a4),
        .Q(sig00000460),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000973
       (.C(clk),
        .CE(1'b1),
        .D(sig000008a6),
        .Q(sig0000045f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000974
       (.C(clk),
        .CE(1'b1),
        .D(sig000008a8),
        .Q(sig0000045e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000975
       (.C(clk),
        .CE(1'b1),
        .D(sig000008aa),
        .Q(sig0000045d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000976
       (.C(clk),
        .CE(1'b1),
        .D(sig000008ac),
        .Q(sig0000045c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000977
       (.C(clk),
        .CE(1'b1),
        .D(sig000008ae),
        .Q(sig0000045b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000978
       (.C(clk),
        .CE(1'b1),
        .D(sig000008b0),
        .Q(sig0000045a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000979
       (.C(clk),
        .CE(1'b1),
        .D(sig000008b2),
        .Q(sig00000459),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000097a
       (.C(clk),
        .CE(1'b1),
        .D(sig000008b4),
        .Q(sig00000458),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000097b
       (.C(clk),
        .CE(1'b1),
        .D(sig000008b6),
        .Q(sig00000457),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000097c
       (.C(clk),
        .CE(1'b1),
        .D(sig000008b8),
        .Q(sig00000456),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000097d
       (.C(clk),
        .CE(1'b1),
        .D(sig0000085b),
        .Q(sig00000484),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000097e
       (.C(clk),
        .CE(1'b1),
        .D(sig0000085c),
        .Q(sig0000049b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000097f
       (.C(clk),
        .CE(1'b1),
        .D(sig0000085e),
        .Q(sig0000049a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000980
       (.C(clk),
        .CE(1'b1),
        .D(sig00000860),
        .Q(sig00000499),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000981
       (.C(clk),
        .CE(1'b1),
        .D(sig00000862),
        .Q(sig00000498),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000982
       (.C(clk),
        .CE(1'b1),
        .D(sig00000864),
        .Q(sig00000497),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000983
       (.C(clk),
        .CE(1'b1),
        .D(sig00000866),
        .Q(sig00000496),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000984
       (.C(clk),
        .CE(1'b1),
        .D(sig00000868),
        .Q(sig00000495),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000985
       (.C(clk),
        .CE(1'b1),
        .D(sig0000086a),
        .Q(sig00000494),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000986
       (.C(clk),
        .CE(1'b1),
        .D(sig0000086c),
        .Q(sig00000493),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000987
       (.C(clk),
        .CE(1'b1),
        .D(sig0000086e),
        .Q(sig00000492),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000988
       (.C(clk),
        .CE(1'b1),
        .D(sig00000870),
        .Q(sig00000491),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000989
       (.C(clk),
        .CE(1'b1),
        .D(sig00000872),
        .Q(sig00000490),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000098a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000874),
        .Q(sig0000048f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000098b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000876),
        .Q(sig0000048e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000098c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000878),
        .Q(sig0000048d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000098d
       (.C(clk),
        .CE(1'b1),
        .D(sig0000087a),
        .Q(sig0000048c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000098e
       (.C(clk),
        .CE(1'b1),
        .D(sig0000087c),
        .Q(sig0000048b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000098f
       (.C(clk),
        .CE(1'b1),
        .D(sig0000087e),
        .Q(sig0000048a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000990
       (.C(clk),
        .CE(1'b1),
        .D(sig00000880),
        .Q(sig00000489),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000991
       (.C(clk),
        .CE(1'b1),
        .D(sig00000882),
        .Q(sig00000488),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000992
       (.C(clk),
        .CE(1'b1),
        .D(sig00000884),
        .Q(sig00000487),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000993
       (.C(clk),
        .CE(1'b1),
        .D(sig00000886),
        .Q(sig00000486),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000994
       (.C(clk),
        .CE(1'b1),
        .D(sig00000888),
        .Q(sig00000485),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000995
       (.C(clk),
        .CE(1'b1),
        .D(sig0000082b),
        .Q(sig000004b3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000996
       (.C(clk),
        .CE(1'b1),
        .D(sig0000082c),
        .Q(sig000004ca),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000997
       (.C(clk),
        .CE(1'b1),
        .D(sig0000082e),
        .Q(sig000004c9),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000998
       (.C(clk),
        .CE(1'b1),
        .D(sig00000830),
        .Q(sig000004c8),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000999
       (.C(clk),
        .CE(1'b1),
        .D(sig00000832),
        .Q(sig000004c7),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000099a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000834),
        .Q(sig000004c6),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000099b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000836),
        .Q(sig000004c5),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000099c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000838),
        .Q(sig000004c4),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000099d
       (.C(clk),
        .CE(1'b1),
        .D(sig0000083a),
        .Q(sig000004c3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000099e
       (.C(clk),
        .CE(1'b1),
        .D(sig0000083c),
        .Q(sig000004c2),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000099f
       (.C(clk),
        .CE(1'b1),
        .D(sig0000083e),
        .Q(sig000004c1),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009a0
       (.C(clk),
        .CE(1'b1),
        .D(sig00000840),
        .Q(sig000004c0),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009a1
       (.C(clk),
        .CE(1'b1),
        .D(sig00000842),
        .Q(sig000004bf),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009a2
       (.C(clk),
        .CE(1'b1),
        .D(sig00000844),
        .Q(sig000004be),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009a3
       (.C(clk),
        .CE(1'b1),
        .D(sig00000846),
        .Q(sig000004bd),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009a4
       (.C(clk),
        .CE(1'b1),
        .D(sig00000848),
        .Q(sig000004bc),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009a5
       (.C(clk),
        .CE(1'b1),
        .D(sig0000084a),
        .Q(sig000004bb),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009a6
       (.C(clk),
        .CE(1'b1),
        .D(sig0000084c),
        .Q(sig000004ba),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009a7
       (.C(clk),
        .CE(1'b1),
        .D(sig0000084e),
        .Q(sig000004b9),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009a8
       (.C(clk),
        .CE(1'b1),
        .D(sig00000850),
        .Q(sig000004b8),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009a9
       (.C(clk),
        .CE(1'b1),
        .D(sig00000852),
        .Q(sig000004b7),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009aa
       (.C(clk),
        .CE(1'b1),
        .D(sig00000854),
        .Q(sig000004b6),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009ab
       (.C(clk),
        .CE(1'b1),
        .D(sig00000856),
        .Q(sig000004b5),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009ac
       (.C(clk),
        .CE(1'b1),
        .D(sig00000858),
        .Q(sig000004b4),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009ad
       (.C(clk),
        .CE(1'b1),
        .D(sig000007fb),
        .Q(sig000004e2),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009ae
       (.C(clk),
        .CE(1'b1),
        .D(sig000007fc),
        .Q(sig000004f9),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009af
       (.C(clk),
        .CE(1'b1),
        .D(sig000007fe),
        .Q(sig000004f8),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009b0
       (.C(clk),
        .CE(1'b1),
        .D(sig00000800),
        .Q(sig000004f7),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009b1
       (.C(clk),
        .CE(1'b1),
        .D(sig00000802),
        .Q(sig000004f6),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009b2
       (.C(clk),
        .CE(1'b1),
        .D(sig00000804),
        .Q(sig000004f5),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009b3
       (.C(clk),
        .CE(1'b1),
        .D(sig00000806),
        .Q(sig000004f4),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009b4
       (.C(clk),
        .CE(1'b1),
        .D(sig00000808),
        .Q(sig000004f3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009b5
       (.C(clk),
        .CE(1'b1),
        .D(sig0000080a),
        .Q(sig000004f2),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009b6
       (.C(clk),
        .CE(1'b1),
        .D(sig0000080c),
        .Q(sig000004f1),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009b7
       (.C(clk),
        .CE(1'b1),
        .D(sig0000080e),
        .Q(sig000004f0),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009b8
       (.C(clk),
        .CE(1'b1),
        .D(sig00000810),
        .Q(sig000004ef),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009b9
       (.C(clk),
        .CE(1'b1),
        .D(sig00000812),
        .Q(sig000004ee),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009ba
       (.C(clk),
        .CE(1'b1),
        .D(sig00000814),
        .Q(sig000004ed),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009bb
       (.C(clk),
        .CE(1'b1),
        .D(sig00000816),
        .Q(sig000004ec),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009bc
       (.C(clk),
        .CE(1'b1),
        .D(sig00000818),
        .Q(sig000004eb),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009bd
       (.C(clk),
        .CE(1'b1),
        .D(sig0000081a),
        .Q(sig000004ea),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009be
       (.C(clk),
        .CE(1'b1),
        .D(sig0000081c),
        .Q(sig000004e9),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009bf
       (.C(clk),
        .CE(1'b1),
        .D(sig0000081e),
        .Q(sig000004e8),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009c0
       (.C(clk),
        .CE(1'b1),
        .D(sig00000820),
        .Q(sig000004e7),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009c1
       (.C(clk),
        .CE(1'b1),
        .D(sig00000822),
        .Q(sig000004e6),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009c2
       (.C(clk),
        .CE(1'b1),
        .D(sig00000824),
        .Q(sig000004e5),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009c3
       (.C(clk),
        .CE(1'b1),
        .D(sig00000826),
        .Q(sig000004e4),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009c4
       (.C(clk),
        .CE(1'b1),
        .D(sig00000828),
        .Q(sig000004e3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009c5
       (.C(clk),
        .CE(1'b1),
        .D(sig000007ca),
        .Q(sig00000511),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009c6
       (.C(clk),
        .CE(1'b1),
        .D(sig000007cb),
        .Q(sig00000529),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009c7
       (.C(clk),
        .CE(1'b1),
        .D(sig000007cd),
        .Q(sig00000528),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009c8
       (.C(clk),
        .CE(1'b1),
        .D(sig000007cf),
        .Q(sig00000527),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009c9
       (.C(clk),
        .CE(1'b1),
        .D(sig000007d1),
        .Q(sig00000526),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009ca
       (.C(clk),
        .CE(1'b1),
        .D(sig000007d3),
        .Q(sig00000525),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009cb
       (.C(clk),
        .CE(1'b1),
        .D(sig000007d5),
        .Q(sig00000524),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009cc
       (.C(clk),
        .CE(1'b1),
        .D(sig000007d7),
        .Q(sig00000523),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009cd
       (.C(clk),
        .CE(1'b1),
        .D(sig000007d9),
        .Q(sig00000522),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009ce
       (.C(clk),
        .CE(1'b1),
        .D(sig000007db),
        .Q(sig00000521),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009cf
       (.C(clk),
        .CE(1'b1),
        .D(sig000007dd),
        .Q(sig00000520),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009d0
       (.C(clk),
        .CE(1'b1),
        .D(sig000007df),
        .Q(sig0000051f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009d1
       (.C(clk),
        .CE(1'b1),
        .D(sig000007e1),
        .Q(sig0000051e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009d2
       (.C(clk),
        .CE(1'b1),
        .D(sig000007e3),
        .Q(sig0000051d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009d3
       (.C(clk),
        .CE(1'b1),
        .D(sig000007e5),
        .Q(sig0000051c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009d4
       (.C(clk),
        .CE(1'b1),
        .D(sig000007e7),
        .Q(sig0000051b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009d5
       (.C(clk),
        .CE(1'b1),
        .D(sig000007e9),
        .Q(sig0000051a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009d6
       (.C(clk),
        .CE(1'b1),
        .D(sig000007eb),
        .Q(sig00000519),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009d7
       (.C(clk),
        .CE(1'b1),
        .D(sig000007ed),
        .Q(sig00000518),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009d8
       (.C(clk),
        .CE(1'b1),
        .D(sig000007ef),
        .Q(sig00000517),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009d9
       (.C(clk),
        .CE(1'b1),
        .D(sig000007f1),
        .Q(sig00000516),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009da
       (.C(clk),
        .CE(1'b1),
        .D(sig000007f3),
        .Q(sig00000515),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009db
       (.C(clk),
        .CE(1'b1),
        .D(sig000007f5),
        .Q(sig00000514),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009dc
       (.C(clk),
        .CE(1'b1),
        .D(sig000007f7),
        .Q(sig00000513),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009dd
       (.C(clk),
        .CE(1'b1),
        .D(sig000007f9),
        .Q(sig00000512),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009de
       (.C(clk),
        .CE(1'b1),
        .D(sig000000a8),
        .Q(sig0000000e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009df
       (.C(clk),
        .CE(1'b1),
        .D(sig000000a9),
        .Q(sig00000026),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009e0
       (.C(clk),
        .CE(1'b1),
        .D(1'b1),
        .Q(sig00000cb7),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009e1
       (.C(clk),
        .CE(1'b1),
        .D(sig00000001),
        .Q(sig00000cb3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009e2
       (.C(clk),
        .CE(1'b1),
        .D(sig00000002),
        .Q(sig00000cbd),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009e3
       (.C(clk),
        .CE(1'b1),
        .D(sig00000003),
        .Q(sig00000cbc),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009e4
       (.C(clk),
        .CE(1'b1),
        .D(sig00000004),
        .Q(sig00000cbb),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009e5
       (.C(clk),
        .CE(1'b1),
        .D(sig00000005),
        .Q(sig00000cba),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009e6
       (.C(clk),
        .CE(1'b1),
        .D(sig00000006),
        .Q(sig00000cb9),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009e7
       (.C(clk),
        .CE(1'b1),
        .D(sig00000007),
        .Q(sig00000cb8),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009e8
       (.C(clk),
        .CE(1'b1),
        .D(sig00000008),
        .Q(sig00000cac),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000009e9_CARRY4
       (.CI(1'b0),
        .CO({sig00000cd7,sig00000cb6,sig00000cbf,sig00000cbe}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b1,1'b0,1'b0}),
        .O({sig00000cd6,NLW_blk000009e9_CARRY4_O_UNCONNECTED[2:0]}),
        .S({sig00000ca0,sig00000cc0,1'b0,1'b1}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000009f1_CARRY4
       (.CI(sig00000cc7),
        .CO({sig00000cef,sig00000cb5,sig00000cc3,sig00000cc5}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({sig00000cee,sig00000cc1,sig00000cc2,sig00000cc4}),
        .S({sig00000c95,sig00000cab,sig00000caa,sig00000ca9}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000009f9_CARRY4
       (.CI(sig00000ccf),
        .CO({sig00000cc7,sig00000cc9,sig00000ccb,sig00000ccd}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({sig00000cc6,sig00000cc8,sig00000cca,sig00000ccc}),
        .S({sig00000ca8,sig00000ca7,sig00000ca6,sig00000ca5}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000a01_CARRY4
       (.CI(sig00000cd7),
        .CO({sig00000ccf,sig00000cd1,sig00000cd3,sig00000cd5}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({sig00000cce,sig00000cd0,sig00000cd2,sig00000cd4}),
        .S({sig00000ca4,sig00000ca3,sig00000ca2,sig00000ca1}));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a04
       (.C(clk),
        .CE(1'b1),
        .D(sig00000cd6),
        .Q(sig0000003e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a05
       (.C(clk),
        .CE(1'b1),
        .D(sig00000cd4),
        .Q(sig0000003d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a06
       (.C(clk),
        .CE(1'b1),
        .D(sig00000cd2),
        .Q(sig0000003c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a07
       (.C(clk),
        .CE(1'b1),
        .D(sig00000cd0),
        .Q(sig0000003b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a08
       (.C(clk),
        .CE(1'b1),
        .D(sig00000cce),
        .Q(sig0000003a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a09
       (.C(clk),
        .CE(1'b1),
        .D(sig00000ccc),
        .Q(sig00000039),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a0a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000cca),
        .Q(sig00000038),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a0b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000cc8),
        .Q(sig00000037),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a0c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000cc6),
        .Q(sig00000036),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a0d
       (.C(clk),
        .CE(1'b1),
        .D(sig00000cc4),
        .Q(sig00000035),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a0e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000cc2),
        .Q(sig00000034),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a0f
       (.C(clk),
        .CE(1'b1),
        .D(sig00000cc1),
        .Q(sig00000033),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000a16_CARRY4
       (.CI(sig00000cdf),
        .CO({NLW_blk00000a16_CARRY4_CO_UNCONNECTED[3],sig00000cd9,sig00000cdb,sig00000cdd}),
        .CYINIT(1'b0),
        .DI({NLW_blk00000a16_CARRY4_DI_UNCONNECTED[3],1'b1,1'b0,1'b0}),
        .O({sig00000cd8,NLW_blk00000a16_CARRY4_O_UNCONNECTED[2],sig00000cda,sig00000cdc}),
        .S({1'b0,sig00000c94,sig00000c9f,sig00000c9e}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000a1e_CARRY4
       (.CI(sig00000ce7),
        .CO({sig00000cdf,sig00000ce1,sig00000ce3,sig00000ce5}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({sig00000cde,sig00000ce0,sig00000ce2,sig00000ce4}),
        .S({sig00000c9d,sig00000c9c,sig00000c9b,sig00000c9a}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000a26_CARRY4
       (.CI(sig00000cef),
        .CO({sig00000ce7,sig00000ce9,sig00000ceb,sig00000ced}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({sig00000ce6,sig00000ce8,sig00000cea,sig00000cec}),
        .S({sig00000c99,sig00000c98,sig00000c97,sig00000c96}));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a29
       (.C(clk),
        .CE(1'b1),
        .D(sig00000cee),
        .Q(sig00000032),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a2a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000cec),
        .Q(sig00000031),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a2b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000cea),
        .Q(sig00000030),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a2c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000ce8),
        .Q(sig0000002f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a2d
       (.C(clk),
        .CE(1'b1),
        .D(sig00000ce6),
        .Q(sig0000002e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a2e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000ce4),
        .Q(sig0000002d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a2f
       (.C(clk),
        .CE(1'b1),
        .D(sig00000ce2),
        .Q(sig0000002c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a30
       (.C(clk),
        .CE(1'b1),
        .D(sig00000ce0),
        .Q(sig0000002b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a31
       (.C(clk),
        .CE(1'b1),
        .D(sig00000cde),
        .Q(sig0000002a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a32
       (.C(clk),
        .CE(1'b1),
        .D(sig00000cdc),
        .Q(sig00000029),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a33
       (.C(clk),
        .CE(1'b1),
        .D(sig00000cda),
        .Q(sig00000028),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a34
       (.C(clk),
        .CE(1'b1),
        .D(sig00000cd8),
        .Q(sig00000cb4),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000a3b_CARRY4
       (.CI(sig00000cf3),
        .CO({NLW_blk00000a3b_CARRY4_CO_UNCONNECTED[3],sig00000cf0,sig00000cf1,sig00000cf2}),
        .CYINIT(1'b0),
        .DI({NLW_blk00000a3b_CARRY4_DI_UNCONNECTED[3],sig00000cb7,sig00000cb7,sig00000cb7}),
        .O({sig0000003f,sig00000040,sig00000041,sig00000042}),
        .S({sig00000cb3,sig00000cb2,sig00000cb1,sig00000cb0}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000a43_CARRY4
       (.CI(1'b0),
        .CO({sig00000cf3,sig00000cf4,sig00000cf5,sig00000cf6}),
        .CYINIT(sig00000cb4),
        .DI({sig00000cb7,sig00000cb7,sig00000cb7,1'b0}),
        .O({sig00000043,sig00000044,sig00000045,sig00000046}),
        .S({sig00000caf,sig00000cae,sig00000cad,sig00000d22}));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a44
       (.C(clk),
        .CE(1'b1),
        .D(sig00000d0d),
        .Q(\U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/mant_op [22]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a45
       (.C(clk),
        .CE(1'b1),
        .D(sig00000d0c),
        .Q(\U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/mant_op [21]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a46
       (.C(clk),
        .CE(1'b1),
        .D(sig00000d0b),
        .Q(\U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/mant_op [20]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a47
       (.C(clk),
        .CE(1'b1),
        .D(sig00000d0a),
        .Q(\U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/mant_op [19]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a48
       (.C(clk),
        .CE(1'b1),
        .D(sig00000d09),
        .Q(\U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/mant_op [18]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a49
       (.C(clk),
        .CE(1'b1),
        .D(sig00000d08),
        .Q(\U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/mant_op [17]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a4a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000d07),
        .Q(\U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/mant_op [16]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a4b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000d06),
        .Q(\U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/mant_op [15]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a4c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000d05),
        .Q(\U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/mant_op [14]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a4d
       (.C(clk),
        .CE(1'b1),
        .D(sig00000d04),
        .Q(\U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/mant_op [13]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a4e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000d03),
        .Q(\U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/mant_op [12]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a4f
       (.C(clk),
        .CE(1'b1),
        .D(sig00000d02),
        .Q(\U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/mant_op [11]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a50
       (.C(clk),
        .CE(1'b1),
        .D(sig00000d01),
        .Q(\U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/mant_op [10]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a51
       (.C(clk),
        .CE(1'b1),
        .D(sig00000d00),
        .Q(\U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/mant_op [9]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a52
       (.C(clk),
        .CE(1'b1),
        .D(sig00000cff),
        .Q(\U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/mant_op [8]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a53
       (.C(clk),
        .CE(1'b1),
        .D(sig00000cfe),
        .Q(\U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/mant_op [7]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a54
       (.C(clk),
        .CE(1'b1),
        .D(sig00000cfd),
        .Q(\U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/mant_op [6]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a55
       (.C(clk),
        .CE(1'b1),
        .D(sig00000cfc),
        .Q(\U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/mant_op [5]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a56
       (.C(clk),
        .CE(1'b1),
        .D(sig00000cfb),
        .Q(\U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/mant_op [4]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a57
       (.C(clk),
        .CE(1'b1),
        .D(sig00000cfa),
        .Q(\U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/mant_op [3]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a58
       (.C(clk),
        .CE(1'b1),
        .D(sig00000cf9),
        .Q(\U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/mant_op [2]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a59
       (.C(clk),
        .CE(1'b1),
        .D(sig00000cf8),
        .Q(\U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/mant_op [1]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a5a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000cf7),
        .Q(\U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/mant_op [0]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a5b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000d15),
        .Q(\U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/exp_op [7]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a5c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000d14),
        .Q(\U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/exp_op [6]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a5d
       (.C(clk),
        .CE(1'b1),
        .D(sig00000d13),
        .Q(\U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/exp_op [5]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a5e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000d12),
        .Q(\U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/exp_op [4]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a5f
       (.C(clk),
        .CE(1'b1),
        .D(sig00000d11),
        .Q(\U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/exp_op [3]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a60
       (.C(clk),
        .CE(1'b1),
        .D(sig00000d10),
        .Q(\U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/exp_op [2]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a61
       (.C(clk),
        .CE(1'b1),
        .D(sig00000d0f),
        .Q(\U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/exp_op [1]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000a62
       (.C(clk),
        .CE(1'b1),
        .D(sig00000d0e),
        .Q(\U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/exp_op [0]),
        .R(1'b0));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFFFFFFFF11101010)) 
    blk00000a63
       (.I0(sig00000077),
        .I1(sig0000007d),
        .I2(sig00000078),
        .I3(sig0000007a),
        .I4(sig00000088),
        .I5(sig0000007c),
        .O(sig00000068));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h6776233245540110)) 
    blk00000a64
       (.I0(sig0000008a),
        .I1(sig0000008d),
        .I2(sig0000008c),
        .I3(sig00000089),
        .I4(sig0000008e),
        .I5(sig0000008b),
        .O(sig00000065));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h0202020202000202)) 
    blk00000a65
       (.I0(sig00000079),
        .I1(sig0000007c),
        .I2(sig0000007d),
        .I3(sig00000077),
        .I4(sig00000088),
        .I5(sig00000078),
        .O(sig00000067));
  (* PK_HLUTNM = "___XLNM___0___U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/EXP/flow_sig<2><9>1" *) 
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h00100000)) 
    blk00000a66
       (.I0(sig00000080),
        .I1(sig00000087),
        .I2(sig00000086),
        .I3(sig0000007f),
        .I4(sig00000049),
        .O(sig0000006a));
  (* PK_HLUTNM = "___XLNM___0___U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/EXP/flow_sig<2><9>1" *) 
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h00800000)) 
    blk00000a67
       (.I0(sig00000080),
        .I1(sig00000087),
        .I2(sig00000086),
        .I3(sig0000007f),
        .I4(sig00000049),
        .O(sig0000006b));
  (* PK_HLUTNM = "___XLNM___3___U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/EXP/Mram__n0139111" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk00000a68
       (.I0(sig0000005e),
        .I1(sig0000005d),
        .O(sig0000005c));
  (* PK_HLUTNM = "___XLNM___3___U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/EXP/Mram__n0139111" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'hE)) 
    blk00000a69
       (.I0(sig0000005d),
        .I1(sig0000005e),
        .O(sig0000005b));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h20AA)) 
    blk00000a6a
       (.I0(sig00000087),
        .I1(sig00000080),
        .I2(sig00000049),
        .I3(sig00000086),
        .O(sig00000062));
  (* PK_HLUTNM = "___XLNM___19___U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/EXP/COND_DET_B/MANT_LUTS.chunk_is_zero_ip<1><22>_SW0" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h04)) 
    blk00000a6b
       (.I0(sig0000005d),
        .I1(sig0000005e),
        .I2(sig00000076),
        .O(sig00000047));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h00000001)) 
    blk00000a6c
       (.I0(sig00000085),
        .I1(sig00000084),
        .I2(sig00000083),
        .I3(sig00000082),
        .I4(sig00000081),
        .O(sig00000049));
  (* PK_HLUTNM = "___XLNM___18___U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/EXP/Mmux_state_int_up2_SW0" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk00000a6d
       (.I0(a[31]),
        .I1(b[31]),
        .O(sig00000075));
  (* PK_HLUTNM = "___XLNM___5___U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/EXP/COND_DET_B/MANT_ALL_ZERO1" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000a6e
       (.I0(sig00000093),
        .I1(sig00000094),
        .O(sig0000008b));
  (* PK_HLUTNM = "___XLNM___17___U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/EXP/COND_DET_A/MANT_LUTS.chunk_is_zero_ip<1><22>_SW0" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000a6f
       (.I0(sig00000099),
        .I1(sig0000009a),
        .O(sig0000008e));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk00000a70
       (.I0(sig000000c1),
        .I1(sig000000a9),
        .O(sig00000541));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000a71
       (.I0(sig000000c2),
        .I1(sig000000c1),
        .I2(sig000000a9),
        .O(sig00000542));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000a72
       (.I0(sig000000c3),
        .I1(sig000000aa),
        .I2(sig000000a9),
        .O(sig00000543));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000a73
       (.I0(sig000000c4),
        .I1(sig000000ab),
        .I2(sig000000a9),
        .O(sig00000544));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000a74
       (.I0(sig000000c5),
        .I1(sig000000ac),
        .I2(sig000000a9),
        .O(sig00000545));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000a75
       (.I0(sig000000c6),
        .I1(sig000000ad),
        .I2(sig000000a9),
        .O(sig00000546));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000a76
       (.I0(sig000000c7),
        .I1(sig000000ae),
        .I2(sig000000a9),
        .O(sig00000547));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000a77
       (.I0(sig000000c8),
        .I1(sig000000af),
        .I2(sig000000a9),
        .O(sig00000548));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000a78
       (.I0(sig000000c9),
        .I1(sig000000b0),
        .I2(sig000000a9),
        .O(sig00000549));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000a79
       (.I0(sig000000ca),
        .I1(sig000000b1),
        .I2(sig000000a9),
        .O(sig0000054a));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000a7a
       (.I0(sig000000cb),
        .I1(sig000000b2),
        .I2(sig000000a9),
        .O(sig0000054b));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000a7b
       (.I0(sig000000cc),
        .I1(sig000000b3),
        .I2(sig000000a9),
        .O(sig0000054c));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000a7c
       (.I0(sig000000cd),
        .I1(sig000000b4),
        .I2(sig000000a9),
        .O(sig0000054d));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000a7d
       (.I0(sig000000ce),
        .I1(sig000000b5),
        .I2(sig000000a9),
        .O(sig0000054e));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000a7e
       (.I0(sig000000cf),
        .I1(sig000000b6),
        .I2(sig000000a9),
        .O(sig0000054f));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000a7f
       (.I0(sig000000d0),
        .I1(sig000000b7),
        .I2(sig000000a9),
        .O(sig00000550));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000a80
       (.I0(sig000000d1),
        .I1(sig000000b8),
        .I2(sig000000a9),
        .O(sig00000551));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000a81
       (.I0(sig000000d2),
        .I1(sig000000b9),
        .I2(sig000000a9),
        .O(sig00000552));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000a82
       (.I0(sig000000d3),
        .I1(sig000000ba),
        .I2(sig000000a9),
        .O(sig00000553));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000a83
       (.I0(sig000000d4),
        .I1(sig000000bb),
        .I2(sig000000a9),
        .O(sig00000554));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000a84
       (.I0(sig000000d5),
        .I1(sig000000bc),
        .I2(sig000000a9),
        .O(sig00000555));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000a85
       (.I0(sig000000d6),
        .I1(sig000000bd),
        .I2(sig000000a9),
        .O(sig00000556));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000a86
       (.I0(sig000000d7),
        .I1(sig000000be),
        .I2(sig000000a9),
        .O(sig00000557));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000a87
       (.I0(sig000000a9),
        .I1(sig000000bf),
        .O(sig00000558));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000a88
       (.I0(sig000000a9),
        .I1(sig000000c0),
        .O(sig00000559));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk00000a89
       (.I0(sig000000f0),
        .I1(sig000000d8),
        .O(sig0000055a));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000a8a
       (.I0(sig000000f1),
        .I1(sig000000f0),
        .I2(sig000000d8),
        .O(sig0000055b));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000a8b
       (.I0(sig000000d9),
        .I1(sig000000f2),
        .I2(sig000000d8),
        .O(sig0000055c));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000a8c
       (.I0(sig000000da),
        .I1(sig000000f3),
        .I2(sig000000d8),
        .O(sig0000055d));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000a8d
       (.I0(sig000000db),
        .I1(sig000000f4),
        .I2(sig000000d8),
        .O(sig0000055e));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000a8e
       (.I0(sig000000dc),
        .I1(sig000000f5),
        .I2(sig000000d8),
        .O(sig0000055f));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000a8f
       (.I0(sig000000dd),
        .I1(sig000000f6),
        .I2(sig000000d8),
        .O(sig00000560));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000a90
       (.I0(sig000000de),
        .I1(sig000000f7),
        .I2(sig000000d8),
        .O(sig00000561));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000a91
       (.I0(sig000000df),
        .I1(sig000000f8),
        .I2(sig000000d8),
        .O(sig00000562));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000a92
       (.I0(sig000000e0),
        .I1(sig000000f9),
        .I2(sig000000d8),
        .O(sig00000563));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000a93
       (.I0(sig000000e1),
        .I1(sig000000fa),
        .I2(sig000000d8),
        .O(sig00000564));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000a94
       (.I0(sig000000e2),
        .I1(sig000000fb),
        .I2(sig000000d8),
        .O(sig00000565));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000a95
       (.I0(sig000000e3),
        .I1(sig000000fc),
        .I2(sig000000d8),
        .O(sig00000566));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000a96
       (.I0(sig000000e4),
        .I1(sig000000fd),
        .I2(sig000000d8),
        .O(sig00000567));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000a97
       (.I0(sig000000e5),
        .I1(sig000000fe),
        .I2(sig000000d8),
        .O(sig00000568));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000a98
       (.I0(sig000000e6),
        .I1(sig000000ff),
        .I2(sig000000d8),
        .O(sig00000569));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000a99
       (.I0(sig000000e7),
        .I1(sig00000100),
        .I2(sig000000d8),
        .O(sig0000056a));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000a9a
       (.I0(sig000000e8),
        .I1(sig00000101),
        .I2(sig000000d8),
        .O(sig0000056b));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000a9b
       (.I0(sig000000e9),
        .I1(sig00000102),
        .I2(sig000000d8),
        .O(sig0000056c));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000a9c
       (.I0(sig000000ea),
        .I1(sig00000103),
        .I2(sig000000d8),
        .O(sig0000056d));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000a9d
       (.I0(sig000000eb),
        .I1(sig00000104),
        .I2(sig000000d8),
        .O(sig0000056e));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000a9e
       (.I0(sig000000ec),
        .I1(sig00000105),
        .I2(sig000000d8),
        .O(sig0000056f));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000a9f
       (.I0(sig000000ed),
        .I1(sig00000106),
        .I2(sig000000d8),
        .O(sig00000570));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000aa0
       (.I0(sig000000d8),
        .I1(sig000000ee),
        .O(sig00000571));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000aa1
       (.I0(sig000000d8),
        .I1(sig000000ef),
        .O(sig00000572));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk00000aa2
       (.I0(sig0000011f),
        .I1(sig00000107),
        .O(sig00000573));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000aa3
       (.I0(sig00000120),
        .I1(sig0000011f),
        .I2(sig00000107),
        .O(sig00000574));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000aa4
       (.I0(sig00000108),
        .I1(sig00000121),
        .I2(sig00000107),
        .O(sig00000575));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000aa5
       (.I0(sig00000109),
        .I1(sig00000122),
        .I2(sig00000107),
        .O(sig00000576));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000aa6
       (.I0(sig0000010a),
        .I1(sig00000123),
        .I2(sig00000107),
        .O(sig00000577));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000aa7
       (.I0(sig0000010b),
        .I1(sig00000124),
        .I2(sig00000107),
        .O(sig00000578));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000aa8
       (.I0(sig0000010c),
        .I1(sig00000125),
        .I2(sig00000107),
        .O(sig00000579));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000aa9
       (.I0(sig0000010d),
        .I1(sig00000126),
        .I2(sig00000107),
        .O(sig0000057a));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000aaa
       (.I0(sig0000010e),
        .I1(sig00000127),
        .I2(sig00000107),
        .O(sig0000057b));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000aab
       (.I0(sig0000010f),
        .I1(sig00000128),
        .I2(sig00000107),
        .O(sig0000057c));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000aac
       (.I0(sig00000110),
        .I1(sig00000129),
        .I2(sig00000107),
        .O(sig0000057d));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000aad
       (.I0(sig00000111),
        .I1(sig0000012a),
        .I2(sig00000107),
        .O(sig0000057e));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000aae
       (.I0(sig00000112),
        .I1(sig0000012b),
        .I2(sig00000107),
        .O(sig0000057f));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000aaf
       (.I0(sig00000113),
        .I1(sig0000012c),
        .I2(sig00000107),
        .O(sig00000580));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ab0
       (.I0(sig00000114),
        .I1(sig0000012d),
        .I2(sig00000107),
        .O(sig00000581));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ab1
       (.I0(sig00000115),
        .I1(sig0000012e),
        .I2(sig00000107),
        .O(sig00000582));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ab2
       (.I0(sig00000116),
        .I1(sig0000012f),
        .I2(sig00000107),
        .O(sig00000583));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ab3
       (.I0(sig00000117),
        .I1(sig00000130),
        .I2(sig00000107),
        .O(sig00000584));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ab4
       (.I0(sig00000118),
        .I1(sig00000131),
        .I2(sig00000107),
        .O(sig00000585));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ab5
       (.I0(sig00000119),
        .I1(sig00000132),
        .I2(sig00000107),
        .O(sig00000586));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ab6
       (.I0(sig0000011a),
        .I1(sig00000133),
        .I2(sig00000107),
        .O(sig00000587));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ab7
       (.I0(sig0000011b),
        .I1(sig00000134),
        .I2(sig00000107),
        .O(sig00000588));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ab8
       (.I0(sig0000011c),
        .I1(sig00000135),
        .I2(sig00000107),
        .O(sig00000589));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000ab9
       (.I0(sig00000107),
        .I1(sig0000011d),
        .O(sig0000058a));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000aba
       (.I0(sig00000107),
        .I1(sig0000011e),
        .O(sig0000058b));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk00000abb
       (.I0(sig0000014e),
        .I1(sig00000136),
        .O(sig0000058c));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000abc
       (.I0(sig0000014f),
        .I1(sig0000014e),
        .I2(sig00000136),
        .O(sig0000058d));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000abd
       (.I0(sig00000137),
        .I1(sig00000150),
        .I2(sig00000136),
        .O(sig0000058e));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000abe
       (.I0(sig00000138),
        .I1(sig00000151),
        .I2(sig00000136),
        .O(sig0000058f));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000abf
       (.I0(sig00000139),
        .I1(sig00000152),
        .I2(sig00000136),
        .O(sig00000590));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ac0
       (.I0(sig0000013a),
        .I1(sig00000153),
        .I2(sig00000136),
        .O(sig00000591));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ac1
       (.I0(sig0000013b),
        .I1(sig00000154),
        .I2(sig00000136),
        .O(sig00000592));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ac2
       (.I0(sig0000013c),
        .I1(sig00000155),
        .I2(sig00000136),
        .O(sig00000593));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ac3
       (.I0(sig0000013d),
        .I1(sig00000156),
        .I2(sig00000136),
        .O(sig00000594));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ac4
       (.I0(sig0000013e),
        .I1(sig00000157),
        .I2(sig00000136),
        .O(sig00000595));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ac5
       (.I0(sig0000013f),
        .I1(sig00000158),
        .I2(sig00000136),
        .O(sig00000596));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ac6
       (.I0(sig00000140),
        .I1(sig00000159),
        .I2(sig00000136),
        .O(sig00000597));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ac7
       (.I0(sig00000141),
        .I1(sig0000015a),
        .I2(sig00000136),
        .O(sig00000598));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ac8
       (.I0(sig00000142),
        .I1(sig0000015b),
        .I2(sig00000136),
        .O(sig00000599));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ac9
       (.I0(sig00000143),
        .I1(sig0000015c),
        .I2(sig00000136),
        .O(sig0000059a));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000aca
       (.I0(sig00000144),
        .I1(sig0000015d),
        .I2(sig00000136),
        .O(sig0000059b));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000acb
       (.I0(sig00000145),
        .I1(sig0000015e),
        .I2(sig00000136),
        .O(sig0000059c));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000acc
       (.I0(sig00000146),
        .I1(sig0000015f),
        .I2(sig00000136),
        .O(sig0000059d));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000acd
       (.I0(sig00000147),
        .I1(sig00000160),
        .I2(sig00000136),
        .O(sig0000059e));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ace
       (.I0(sig00000148),
        .I1(sig00000161),
        .I2(sig00000136),
        .O(sig0000059f));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000acf
       (.I0(sig00000149),
        .I1(sig00000162),
        .I2(sig00000136),
        .O(sig000005a0));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ad0
       (.I0(sig0000014a),
        .I1(sig00000163),
        .I2(sig00000136),
        .O(sig000005a1));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ad1
       (.I0(sig0000014b),
        .I1(sig00000164),
        .I2(sig00000136),
        .O(sig000005a2));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000ad2
       (.I0(sig00000136),
        .I1(sig0000014c),
        .O(sig000005a3));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000ad3
       (.I0(sig00000136),
        .I1(sig0000014d),
        .O(sig000005a4));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk00000ad4
       (.I0(sig0000017d),
        .I1(sig00000165),
        .O(sig000005a5));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ad5
       (.I0(sig0000017e),
        .I1(sig0000017d),
        .I2(sig00000165),
        .O(sig000005a6));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ad6
       (.I0(sig00000166),
        .I1(sig0000017f),
        .I2(sig00000165),
        .O(sig000005a7));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ad7
       (.I0(sig00000167),
        .I1(sig00000180),
        .I2(sig00000165),
        .O(sig000005a8));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ad8
       (.I0(sig00000168),
        .I1(sig00000181),
        .I2(sig00000165),
        .O(sig000005a9));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ad9
       (.I0(sig00000169),
        .I1(sig00000182),
        .I2(sig00000165),
        .O(sig000005aa));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ada
       (.I0(sig0000016a),
        .I1(sig00000183),
        .I2(sig00000165),
        .O(sig000005ab));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000adb
       (.I0(sig0000016b),
        .I1(sig00000184),
        .I2(sig00000165),
        .O(sig000005ac));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000adc
       (.I0(sig0000016c),
        .I1(sig00000185),
        .I2(sig00000165),
        .O(sig000005ad));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000add
       (.I0(sig0000016d),
        .I1(sig00000186),
        .I2(sig00000165),
        .O(sig000005ae));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ade
       (.I0(sig0000016e),
        .I1(sig00000187),
        .I2(sig00000165),
        .O(sig000005af));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000adf
       (.I0(sig0000016f),
        .I1(sig00000188),
        .I2(sig00000165),
        .O(sig000005b0));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ae0
       (.I0(sig00000170),
        .I1(sig00000189),
        .I2(sig00000165),
        .O(sig000005b1));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ae1
       (.I0(sig00000171),
        .I1(sig0000018a),
        .I2(sig00000165),
        .O(sig000005b2));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ae2
       (.I0(sig00000172),
        .I1(sig0000018b),
        .I2(sig00000165),
        .O(sig000005b3));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ae3
       (.I0(sig00000173),
        .I1(sig0000018c),
        .I2(sig00000165),
        .O(sig000005b4));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ae4
       (.I0(sig00000174),
        .I1(sig0000018d),
        .I2(sig00000165),
        .O(sig000005b5));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ae5
       (.I0(sig00000175),
        .I1(sig0000018e),
        .I2(sig00000165),
        .O(sig000005b6));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ae6
       (.I0(sig00000176),
        .I1(sig0000018f),
        .I2(sig00000165),
        .O(sig000005b7));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ae7
       (.I0(sig00000177),
        .I1(sig00000190),
        .I2(sig00000165),
        .O(sig000005b8));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ae8
       (.I0(sig00000178),
        .I1(sig00000191),
        .I2(sig00000165),
        .O(sig000005b9));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ae9
       (.I0(sig00000179),
        .I1(sig00000192),
        .I2(sig00000165),
        .O(sig000005ba));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000aea
       (.I0(sig0000017a),
        .I1(sig00000193),
        .I2(sig00000165),
        .O(sig000005bb));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000aeb
       (.I0(sig00000165),
        .I1(sig0000017b),
        .O(sig000005bc));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000aec
       (.I0(sig00000165),
        .I1(sig0000017c),
        .O(sig000005bd));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk00000aed
       (.I0(sig000001ac),
        .I1(sig00000194),
        .O(sig000005be));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000aee
       (.I0(sig000001ad),
        .I1(sig000001ac),
        .I2(sig00000194),
        .O(sig000005bf));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000aef
       (.I0(sig00000195),
        .I1(sig000001ae),
        .I2(sig00000194),
        .O(sig000005c0));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000af0
       (.I0(sig00000196),
        .I1(sig000001af),
        .I2(sig00000194),
        .O(sig000005c1));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000af1
       (.I0(sig00000197),
        .I1(sig000001b0),
        .I2(sig00000194),
        .O(sig000005c2));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000af2
       (.I0(sig00000198),
        .I1(sig000001b1),
        .I2(sig00000194),
        .O(sig000005c3));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000af3
       (.I0(sig00000199),
        .I1(sig000001b2),
        .I2(sig00000194),
        .O(sig000005c4));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000af4
       (.I0(sig0000019a),
        .I1(sig000001b3),
        .I2(sig00000194),
        .O(sig000005c5));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000af5
       (.I0(sig0000019b),
        .I1(sig000001b4),
        .I2(sig00000194),
        .O(sig000005c6));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000af6
       (.I0(sig0000019c),
        .I1(sig000001b5),
        .I2(sig00000194),
        .O(sig000005c7));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000af7
       (.I0(sig0000019d),
        .I1(sig000001b6),
        .I2(sig00000194),
        .O(sig000005c8));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000af8
       (.I0(sig0000019e),
        .I1(sig000001b7),
        .I2(sig00000194),
        .O(sig000005c9));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000af9
       (.I0(sig0000019f),
        .I1(sig000001b8),
        .I2(sig00000194),
        .O(sig000005ca));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000afa
       (.I0(sig000001a0),
        .I1(sig000001b9),
        .I2(sig00000194),
        .O(sig000005cb));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000afb
       (.I0(sig000001a1),
        .I1(sig000001ba),
        .I2(sig00000194),
        .O(sig000005cc));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000afc
       (.I0(sig000001a2),
        .I1(sig000001bb),
        .I2(sig00000194),
        .O(sig000005cd));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000afd
       (.I0(sig000001a3),
        .I1(sig000001bc),
        .I2(sig00000194),
        .O(sig000005ce));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000afe
       (.I0(sig000001a4),
        .I1(sig000001bd),
        .I2(sig00000194),
        .O(sig000005cf));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000aff
       (.I0(sig000001a5),
        .I1(sig000001be),
        .I2(sig00000194),
        .O(sig000005d0));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b00
       (.I0(sig000001a6),
        .I1(sig000001bf),
        .I2(sig00000194),
        .O(sig000005d1));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b01
       (.I0(sig000001a7),
        .I1(sig000001c0),
        .I2(sig00000194),
        .O(sig000005d2));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b02
       (.I0(sig000001a8),
        .I1(sig000001c1),
        .I2(sig00000194),
        .O(sig000005d3));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b03
       (.I0(sig000001a9),
        .I1(sig000001c2),
        .I2(sig00000194),
        .O(sig000005d4));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000b04
       (.I0(sig00000194),
        .I1(sig000001aa),
        .O(sig000005d5));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000b05
       (.I0(sig00000194),
        .I1(sig000001ab),
        .O(sig000005d6));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk00000b06
       (.I0(sig000001db),
        .I1(sig000001c3),
        .O(sig000005d7));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b07
       (.I0(sig000001dc),
        .I1(sig000001db),
        .I2(sig000001c3),
        .O(sig000005d8));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b08
       (.I0(sig000001c4),
        .I1(sig000001dd),
        .I2(sig000001c3),
        .O(sig000005d9));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b09
       (.I0(sig000001c5),
        .I1(sig000001de),
        .I2(sig000001c3),
        .O(sig000005da));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b0a
       (.I0(sig000001c6),
        .I1(sig000001df),
        .I2(sig000001c3),
        .O(sig000005db));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b0b
       (.I0(sig000001c7),
        .I1(sig000001e0),
        .I2(sig000001c3),
        .O(sig000005dc));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b0c
       (.I0(sig000001c8),
        .I1(sig000001e1),
        .I2(sig000001c3),
        .O(sig000005dd));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b0d
       (.I0(sig000001c9),
        .I1(sig000001e2),
        .I2(sig000001c3),
        .O(sig000005de));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b0e
       (.I0(sig000001ca),
        .I1(sig000001e3),
        .I2(sig000001c3),
        .O(sig000005df));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b0f
       (.I0(sig000001cb),
        .I1(sig000001e4),
        .I2(sig000001c3),
        .O(sig000005e0));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b10
       (.I0(sig000001cc),
        .I1(sig000001e5),
        .I2(sig000001c3),
        .O(sig000005e1));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b11
       (.I0(sig000001cd),
        .I1(sig000001e6),
        .I2(sig000001c3),
        .O(sig000005e2));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b12
       (.I0(sig000001ce),
        .I1(sig000001e7),
        .I2(sig000001c3),
        .O(sig000005e3));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b13
       (.I0(sig000001cf),
        .I1(sig000001e8),
        .I2(sig000001c3),
        .O(sig000005e4));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b14
       (.I0(sig000001d0),
        .I1(sig000001e9),
        .I2(sig000001c3),
        .O(sig000005e5));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b15
       (.I0(sig000001d1),
        .I1(sig000001ea),
        .I2(sig000001c3),
        .O(sig000005e6));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b16
       (.I0(sig000001d2),
        .I1(sig000001eb),
        .I2(sig000001c3),
        .O(sig000005e7));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b17
       (.I0(sig000001d3),
        .I1(sig000001ec),
        .I2(sig000001c3),
        .O(sig000005e8));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b18
       (.I0(sig000001d4),
        .I1(sig000001ed),
        .I2(sig000001c3),
        .O(sig000005e9));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b19
       (.I0(sig000001d5),
        .I1(sig000001ee),
        .I2(sig000001c3),
        .O(sig000005ea));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b1a
       (.I0(sig000001d6),
        .I1(sig000001ef),
        .I2(sig000001c3),
        .O(sig000005eb));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b1b
       (.I0(sig000001d7),
        .I1(sig000001f0),
        .I2(sig000001c3),
        .O(sig000005ec));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b1c
       (.I0(sig000001d8),
        .I1(sig000001f1),
        .I2(sig000001c3),
        .O(sig000005ed));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000b1d
       (.I0(sig000001c3),
        .I1(sig000001d9),
        .O(sig000005ee));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000b1e
       (.I0(sig000001c3),
        .I1(sig000001da),
        .O(sig000005ef));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk00000b1f
       (.I0(sig0000020a),
        .I1(sig000001f2),
        .O(sig000005f0));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b20
       (.I0(sig0000020b),
        .I1(sig0000020a),
        .I2(sig000001f2),
        .O(sig000005f1));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b21
       (.I0(sig000001f3),
        .I1(sig0000020c),
        .I2(sig000001f2),
        .O(sig000005f2));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b22
       (.I0(sig000001f4),
        .I1(sig0000020d),
        .I2(sig000001f2),
        .O(sig000005f3));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b23
       (.I0(sig000001f5),
        .I1(sig0000020e),
        .I2(sig000001f2),
        .O(sig000005f4));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b24
       (.I0(sig000001f6),
        .I1(sig0000020f),
        .I2(sig000001f2),
        .O(sig000005f5));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b25
       (.I0(sig000001f7),
        .I1(sig00000210),
        .I2(sig000001f2),
        .O(sig000005f6));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b26
       (.I0(sig000001f8),
        .I1(sig00000211),
        .I2(sig000001f2),
        .O(sig000005f7));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b27
       (.I0(sig000001f9),
        .I1(sig00000212),
        .I2(sig000001f2),
        .O(sig000005f8));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b28
       (.I0(sig000001fa),
        .I1(sig00000213),
        .I2(sig000001f2),
        .O(sig000005f9));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b29
       (.I0(sig000001fb),
        .I1(sig00000214),
        .I2(sig000001f2),
        .O(sig000005fa));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b2a
       (.I0(sig000001fc),
        .I1(sig00000215),
        .I2(sig000001f2),
        .O(sig000005fb));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b2b
       (.I0(sig000001fd),
        .I1(sig00000216),
        .I2(sig000001f2),
        .O(sig000005fc));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b2c
       (.I0(sig000001fe),
        .I1(sig00000217),
        .I2(sig000001f2),
        .O(sig000005fd));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b2d
       (.I0(sig000001ff),
        .I1(sig00000218),
        .I2(sig000001f2),
        .O(sig000005fe));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b2e
       (.I0(sig00000200),
        .I1(sig00000219),
        .I2(sig000001f2),
        .O(sig000005ff));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b2f
       (.I0(sig00000201),
        .I1(sig0000021a),
        .I2(sig000001f2),
        .O(sig00000600));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b30
       (.I0(sig00000202),
        .I1(sig0000021b),
        .I2(sig000001f2),
        .O(sig00000601));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b31
       (.I0(sig00000203),
        .I1(sig0000021c),
        .I2(sig000001f2),
        .O(sig00000602));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b32
       (.I0(sig00000204),
        .I1(sig0000021d),
        .I2(sig000001f2),
        .O(sig00000603));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b33
       (.I0(sig00000205),
        .I1(sig0000021e),
        .I2(sig000001f2),
        .O(sig00000604));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b34
       (.I0(sig00000206),
        .I1(sig0000021f),
        .I2(sig000001f2),
        .O(sig00000605));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b35
       (.I0(sig00000207),
        .I1(sig00000220),
        .I2(sig000001f2),
        .O(sig00000606));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000b36
       (.I0(sig000001f2),
        .I1(sig00000208),
        .O(sig00000607));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000b37
       (.I0(sig000001f2),
        .I1(sig00000209),
        .O(sig00000608));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk00000b38
       (.I0(sig00000239),
        .I1(sig00000221),
        .O(sig00000609));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b39
       (.I0(sig0000023a),
        .I1(sig00000239),
        .I2(sig00000221),
        .O(sig0000060a));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b3a
       (.I0(sig00000222),
        .I1(sig0000023b),
        .I2(sig00000221),
        .O(sig0000060b));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b3b
       (.I0(sig00000223),
        .I1(sig0000023c),
        .I2(sig00000221),
        .O(sig0000060c));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b3c
       (.I0(sig00000224),
        .I1(sig0000023d),
        .I2(sig00000221),
        .O(sig0000060d));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b3d
       (.I0(sig00000225),
        .I1(sig0000023e),
        .I2(sig00000221),
        .O(sig0000060e));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b3e
       (.I0(sig00000226),
        .I1(sig0000023f),
        .I2(sig00000221),
        .O(sig0000060f));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b3f
       (.I0(sig00000227),
        .I1(sig00000240),
        .I2(sig00000221),
        .O(sig00000610));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b40
       (.I0(sig00000228),
        .I1(sig00000241),
        .I2(sig00000221),
        .O(sig00000611));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b41
       (.I0(sig00000229),
        .I1(sig00000242),
        .I2(sig00000221),
        .O(sig00000612));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b42
       (.I0(sig0000022a),
        .I1(sig00000243),
        .I2(sig00000221),
        .O(sig00000613));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b43
       (.I0(sig0000022b),
        .I1(sig00000244),
        .I2(sig00000221),
        .O(sig00000614));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b44
       (.I0(sig0000022c),
        .I1(sig00000245),
        .I2(sig00000221),
        .O(sig00000615));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b45
       (.I0(sig0000022d),
        .I1(sig00000246),
        .I2(sig00000221),
        .O(sig00000616));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b46
       (.I0(sig0000022e),
        .I1(sig00000247),
        .I2(sig00000221),
        .O(sig00000617));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b47
       (.I0(sig0000022f),
        .I1(sig00000248),
        .I2(sig00000221),
        .O(sig00000618));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b48
       (.I0(sig00000230),
        .I1(sig00000249),
        .I2(sig00000221),
        .O(sig00000619));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b49
       (.I0(sig00000231),
        .I1(sig0000024a),
        .I2(sig00000221),
        .O(sig0000061a));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b4a
       (.I0(sig00000232),
        .I1(sig0000024b),
        .I2(sig00000221),
        .O(sig0000061b));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b4b
       (.I0(sig00000233),
        .I1(sig0000024c),
        .I2(sig00000221),
        .O(sig0000061c));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b4c
       (.I0(sig00000234),
        .I1(sig0000024d),
        .I2(sig00000221),
        .O(sig0000061d));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b4d
       (.I0(sig00000235),
        .I1(sig0000024e),
        .I2(sig00000221),
        .O(sig0000061e));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b4e
       (.I0(sig00000236),
        .I1(sig0000024f),
        .I2(sig00000221),
        .O(sig0000061f));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000b4f
       (.I0(sig00000221),
        .I1(sig00000237),
        .O(sig00000620));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000b50
       (.I0(sig00000221),
        .I1(sig00000238),
        .O(sig00000621));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk00000b51
       (.I0(sig00000268),
        .I1(sig00000250),
        .O(sig00000622));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b52
       (.I0(sig00000269),
        .I1(sig00000268),
        .I2(sig00000250),
        .O(sig00000623));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b53
       (.I0(sig00000251),
        .I1(sig0000026a),
        .I2(sig00000250),
        .O(sig00000624));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b54
       (.I0(sig00000252),
        .I1(sig0000026b),
        .I2(sig00000250),
        .O(sig00000625));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b55
       (.I0(sig00000253),
        .I1(sig0000026c),
        .I2(sig00000250),
        .O(sig00000626));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b56
       (.I0(sig00000254),
        .I1(sig0000026d),
        .I2(sig00000250),
        .O(sig00000627));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b57
       (.I0(sig00000255),
        .I1(sig0000026e),
        .I2(sig00000250),
        .O(sig00000628));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b58
       (.I0(sig00000256),
        .I1(sig0000026f),
        .I2(sig00000250),
        .O(sig00000629));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b59
       (.I0(sig00000257),
        .I1(sig00000270),
        .I2(sig00000250),
        .O(sig0000062a));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b5a
       (.I0(sig00000258),
        .I1(sig00000271),
        .I2(sig00000250),
        .O(sig0000062b));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b5b
       (.I0(sig00000259),
        .I1(sig00000272),
        .I2(sig00000250),
        .O(sig0000062c));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b5c
       (.I0(sig0000025a),
        .I1(sig00000273),
        .I2(sig00000250),
        .O(sig0000062d));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b5d
       (.I0(sig0000025b),
        .I1(sig00000274),
        .I2(sig00000250),
        .O(sig0000062e));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b5e
       (.I0(sig0000025c),
        .I1(sig00000275),
        .I2(sig00000250),
        .O(sig0000062f));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b5f
       (.I0(sig0000025d),
        .I1(sig00000276),
        .I2(sig00000250),
        .O(sig00000630));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b60
       (.I0(sig0000025e),
        .I1(sig00000277),
        .I2(sig00000250),
        .O(sig00000631));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b61
       (.I0(sig0000025f),
        .I1(sig00000278),
        .I2(sig00000250),
        .O(sig00000632));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b62
       (.I0(sig00000260),
        .I1(sig00000279),
        .I2(sig00000250),
        .O(sig00000633));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b63
       (.I0(sig00000261),
        .I1(sig0000027a),
        .I2(sig00000250),
        .O(sig00000634));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b64
       (.I0(sig00000262),
        .I1(sig0000027b),
        .I2(sig00000250),
        .O(sig00000635));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b65
       (.I0(sig00000263),
        .I1(sig0000027c),
        .I2(sig00000250),
        .O(sig00000636));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b66
       (.I0(sig00000264),
        .I1(sig0000027d),
        .I2(sig00000250),
        .O(sig00000637));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b67
       (.I0(sig00000265),
        .I1(sig0000027e),
        .I2(sig00000250),
        .O(sig00000638));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000b68
       (.I0(sig00000250),
        .I1(sig00000266),
        .O(sig00000639));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000b69
       (.I0(sig00000250),
        .I1(sig00000267),
        .O(sig0000063a));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk00000b6a
       (.I0(sig00000297),
        .I1(sig0000027f),
        .O(sig0000063b));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b6b
       (.I0(sig00000298),
        .I1(sig00000297),
        .I2(sig0000027f),
        .O(sig0000063c));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b6c
       (.I0(sig00000280),
        .I1(sig00000299),
        .I2(sig0000027f),
        .O(sig0000063d));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b6d
       (.I0(sig00000281),
        .I1(sig0000029a),
        .I2(sig0000027f),
        .O(sig0000063e));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b6e
       (.I0(sig00000282),
        .I1(sig0000029b),
        .I2(sig0000027f),
        .O(sig0000063f));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b6f
       (.I0(sig00000283),
        .I1(sig0000029c),
        .I2(sig0000027f),
        .O(sig00000640));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b70
       (.I0(sig00000284),
        .I1(sig0000029d),
        .I2(sig0000027f),
        .O(sig00000641));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b71
       (.I0(sig00000285),
        .I1(sig0000029e),
        .I2(sig0000027f),
        .O(sig00000642));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b72
       (.I0(sig00000286),
        .I1(sig0000029f),
        .I2(sig0000027f),
        .O(sig00000643));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b73
       (.I0(sig00000287),
        .I1(sig000002a0),
        .I2(sig0000027f),
        .O(sig00000644));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b74
       (.I0(sig00000288),
        .I1(sig000002a1),
        .I2(sig0000027f),
        .O(sig00000645));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b75
       (.I0(sig00000289),
        .I1(sig000002a2),
        .I2(sig0000027f),
        .O(sig00000646));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b76
       (.I0(sig0000028a),
        .I1(sig000002a3),
        .I2(sig0000027f),
        .O(sig00000647));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b77
       (.I0(sig0000028b),
        .I1(sig000002a4),
        .I2(sig0000027f),
        .O(sig00000648));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b78
       (.I0(sig0000028c),
        .I1(sig000002a5),
        .I2(sig0000027f),
        .O(sig00000649));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b79
       (.I0(sig0000028d),
        .I1(sig000002a6),
        .I2(sig0000027f),
        .O(sig0000064a));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b7a
       (.I0(sig0000028e),
        .I1(sig000002a7),
        .I2(sig0000027f),
        .O(sig0000064b));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b7b
       (.I0(sig0000028f),
        .I1(sig000002a8),
        .I2(sig0000027f),
        .O(sig0000064c));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b7c
       (.I0(sig00000290),
        .I1(sig000002a9),
        .I2(sig0000027f),
        .O(sig0000064d));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b7d
       (.I0(sig00000291),
        .I1(sig000002aa),
        .I2(sig0000027f),
        .O(sig0000064e));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b7e
       (.I0(sig00000292),
        .I1(sig000002ab),
        .I2(sig0000027f),
        .O(sig0000064f));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b7f
       (.I0(sig00000293),
        .I1(sig000002ac),
        .I2(sig0000027f),
        .O(sig00000650));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b80
       (.I0(sig00000294),
        .I1(sig000002ad),
        .I2(sig0000027f),
        .O(sig00000651));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000b81
       (.I0(sig0000027f),
        .I1(sig00000295),
        .O(sig00000652));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000b82
       (.I0(sig0000027f),
        .I1(sig00000296),
        .O(sig00000653));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk00000b83
       (.I0(sig000002c6),
        .I1(sig000002ae),
        .O(sig00000654));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b84
       (.I0(sig000002c7),
        .I1(sig000002c6),
        .I2(sig000002ae),
        .O(sig00000655));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b85
       (.I0(sig000002af),
        .I1(sig000002c8),
        .I2(sig000002ae),
        .O(sig00000656));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b86
       (.I0(sig000002b0),
        .I1(sig000002c9),
        .I2(sig000002ae),
        .O(sig00000657));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b87
       (.I0(sig000002b1),
        .I1(sig000002ca),
        .I2(sig000002ae),
        .O(sig00000658));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b88
       (.I0(sig000002b2),
        .I1(sig000002cb),
        .I2(sig000002ae),
        .O(sig00000659));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b89
       (.I0(sig000002b3),
        .I1(sig000002cc),
        .I2(sig000002ae),
        .O(sig0000065a));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b8a
       (.I0(sig000002b4),
        .I1(sig000002cd),
        .I2(sig000002ae),
        .O(sig0000065b));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b8b
       (.I0(sig000002b5),
        .I1(sig000002ce),
        .I2(sig000002ae),
        .O(sig0000065c));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b8c
       (.I0(sig000002b6),
        .I1(sig000002cf),
        .I2(sig000002ae),
        .O(sig0000065d));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b8d
       (.I0(sig000002b7),
        .I1(sig000002d0),
        .I2(sig000002ae),
        .O(sig0000065e));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b8e
       (.I0(sig000002b8),
        .I1(sig000002d1),
        .I2(sig000002ae),
        .O(sig0000065f));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b8f
       (.I0(sig000002b9),
        .I1(sig000002d2),
        .I2(sig000002ae),
        .O(sig00000660));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b90
       (.I0(sig000002ba),
        .I1(sig000002d3),
        .I2(sig000002ae),
        .O(sig00000661));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b91
       (.I0(sig000002bb),
        .I1(sig000002d4),
        .I2(sig000002ae),
        .O(sig00000662));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b92
       (.I0(sig000002bc),
        .I1(sig000002d5),
        .I2(sig000002ae),
        .O(sig00000663));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b93
       (.I0(sig000002bd),
        .I1(sig000002d6),
        .I2(sig000002ae),
        .O(sig00000664));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b94
       (.I0(sig000002be),
        .I1(sig000002d7),
        .I2(sig000002ae),
        .O(sig00000665));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b95
       (.I0(sig000002bf),
        .I1(sig000002d8),
        .I2(sig000002ae),
        .O(sig00000666));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b96
       (.I0(sig000002c0),
        .I1(sig000002d9),
        .I2(sig000002ae),
        .O(sig00000667));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b97
       (.I0(sig000002c1),
        .I1(sig000002da),
        .I2(sig000002ae),
        .O(sig00000668));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b98
       (.I0(sig000002c2),
        .I1(sig000002db),
        .I2(sig000002ae),
        .O(sig00000669));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b99
       (.I0(sig000002c3),
        .I1(sig000002dc),
        .I2(sig000002ae),
        .O(sig0000066a));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000b9a
       (.I0(sig000002ae),
        .I1(sig000002c4),
        .O(sig0000066b));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000b9b
       (.I0(sig000002ae),
        .I1(sig000002c5),
        .O(sig0000066c));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk00000b9c
       (.I0(sig000002f5),
        .I1(sig000002dd),
        .O(sig0000066d));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b9d
       (.I0(sig000002f6),
        .I1(sig000002f5),
        .I2(sig000002dd),
        .O(sig0000066e));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b9e
       (.I0(sig000002de),
        .I1(sig000002f7),
        .I2(sig000002dd),
        .O(sig0000066f));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000b9f
       (.I0(sig000002df),
        .I1(sig000002f8),
        .I2(sig000002dd),
        .O(sig00000670));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ba0
       (.I0(sig000002e0),
        .I1(sig000002f9),
        .I2(sig000002dd),
        .O(sig00000671));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ba1
       (.I0(sig000002e1),
        .I1(sig000002fa),
        .I2(sig000002dd),
        .O(sig00000672));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ba2
       (.I0(sig000002e2),
        .I1(sig000002fb),
        .I2(sig000002dd),
        .O(sig00000673));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ba3
       (.I0(sig000002e3),
        .I1(sig000002fc),
        .I2(sig000002dd),
        .O(sig00000674));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ba4
       (.I0(sig000002e4),
        .I1(sig000002fd),
        .I2(sig000002dd),
        .O(sig00000675));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ba5
       (.I0(sig000002e5),
        .I1(sig000002fe),
        .I2(sig000002dd),
        .O(sig00000676));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ba6
       (.I0(sig000002e6),
        .I1(sig000002ff),
        .I2(sig000002dd),
        .O(sig00000677));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ba7
       (.I0(sig000002e7),
        .I1(sig00000300),
        .I2(sig000002dd),
        .O(sig00000678));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ba8
       (.I0(sig000002e8),
        .I1(sig00000301),
        .I2(sig000002dd),
        .O(sig00000679));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ba9
       (.I0(sig000002e9),
        .I1(sig00000302),
        .I2(sig000002dd),
        .O(sig0000067a));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000baa
       (.I0(sig000002ea),
        .I1(sig00000303),
        .I2(sig000002dd),
        .O(sig0000067b));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bab
       (.I0(sig000002eb),
        .I1(sig00000304),
        .I2(sig000002dd),
        .O(sig0000067c));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bac
       (.I0(sig000002ec),
        .I1(sig00000305),
        .I2(sig000002dd),
        .O(sig0000067d));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bad
       (.I0(sig000002ed),
        .I1(sig00000306),
        .I2(sig000002dd),
        .O(sig0000067e));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bae
       (.I0(sig000002ee),
        .I1(sig00000307),
        .I2(sig000002dd),
        .O(sig0000067f));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000baf
       (.I0(sig000002ef),
        .I1(sig00000308),
        .I2(sig000002dd),
        .O(sig00000680));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bb0
       (.I0(sig000002f0),
        .I1(sig00000309),
        .I2(sig000002dd),
        .O(sig00000681));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bb1
       (.I0(sig000002f1),
        .I1(sig0000030a),
        .I2(sig000002dd),
        .O(sig00000682));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bb2
       (.I0(sig000002f2),
        .I1(sig0000030b),
        .I2(sig000002dd),
        .O(sig00000683));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000bb3
       (.I0(sig000002dd),
        .I1(sig000002f3),
        .O(sig00000684));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000bb4
       (.I0(sig000002dd),
        .I1(sig000002f4),
        .O(sig00000685));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk00000bb5
       (.I0(sig00000324),
        .I1(sig0000030c),
        .O(sig00000686));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bb6
       (.I0(sig00000325),
        .I1(sig00000324),
        .I2(sig0000030c),
        .O(sig00000687));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bb7
       (.I0(sig0000030d),
        .I1(sig00000326),
        .I2(sig0000030c),
        .O(sig00000688));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bb8
       (.I0(sig0000030e),
        .I1(sig00000327),
        .I2(sig0000030c),
        .O(sig00000689));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bb9
       (.I0(sig0000030f),
        .I1(sig00000328),
        .I2(sig0000030c),
        .O(sig0000068a));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bba
       (.I0(sig00000310),
        .I1(sig00000329),
        .I2(sig0000030c),
        .O(sig0000068b));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bbb
       (.I0(sig00000311),
        .I1(sig0000032a),
        .I2(sig0000030c),
        .O(sig0000068c));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bbc
       (.I0(sig00000312),
        .I1(sig0000032b),
        .I2(sig0000030c),
        .O(sig0000068d));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bbd
       (.I0(sig00000313),
        .I1(sig0000032c),
        .I2(sig0000030c),
        .O(sig0000068e));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bbe
       (.I0(sig00000314),
        .I1(sig0000032d),
        .I2(sig0000030c),
        .O(sig0000068f));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bbf
       (.I0(sig00000315),
        .I1(sig0000032e),
        .I2(sig0000030c),
        .O(sig00000690));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bc0
       (.I0(sig00000316),
        .I1(sig0000032f),
        .I2(sig0000030c),
        .O(sig00000691));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bc1
       (.I0(sig00000317),
        .I1(sig00000330),
        .I2(sig0000030c),
        .O(sig00000692));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bc2
       (.I0(sig00000318),
        .I1(sig00000331),
        .I2(sig0000030c),
        .O(sig00000693));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bc3
       (.I0(sig00000319),
        .I1(sig00000332),
        .I2(sig0000030c),
        .O(sig00000694));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bc4
       (.I0(sig0000031a),
        .I1(sig00000333),
        .I2(sig0000030c),
        .O(sig00000695));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bc5
       (.I0(sig0000031b),
        .I1(sig00000334),
        .I2(sig0000030c),
        .O(sig00000696));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bc6
       (.I0(sig0000031c),
        .I1(sig00000335),
        .I2(sig0000030c),
        .O(sig00000697));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bc7
       (.I0(sig0000031d),
        .I1(sig00000336),
        .I2(sig0000030c),
        .O(sig00000698));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bc8
       (.I0(sig0000031e),
        .I1(sig00000337),
        .I2(sig0000030c),
        .O(sig00000699));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bc9
       (.I0(sig0000031f),
        .I1(sig00000338),
        .I2(sig0000030c),
        .O(sig0000069a));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bca
       (.I0(sig00000320),
        .I1(sig00000339),
        .I2(sig0000030c),
        .O(sig0000069b));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bcb
       (.I0(sig00000321),
        .I1(sig0000033a),
        .I2(sig0000030c),
        .O(sig0000069c));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000bcc
       (.I0(sig0000030c),
        .I1(sig00000322),
        .O(sig0000069d));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000bcd
       (.I0(sig0000030c),
        .I1(sig00000323),
        .O(sig0000069e));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk00000bce
       (.I0(sig00000353),
        .I1(sig0000033b),
        .O(sig0000069f));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bcf
       (.I0(sig00000354),
        .I1(sig00000353),
        .I2(sig0000033b),
        .O(sig000006a0));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bd0
       (.I0(sig0000033c),
        .I1(sig00000355),
        .I2(sig0000033b),
        .O(sig000006a1));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bd1
       (.I0(sig0000033d),
        .I1(sig00000356),
        .I2(sig0000033b),
        .O(sig000006a2));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bd2
       (.I0(sig0000033e),
        .I1(sig00000357),
        .I2(sig0000033b),
        .O(sig000006a3));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bd3
       (.I0(sig0000033f),
        .I1(sig00000358),
        .I2(sig0000033b),
        .O(sig000006a4));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bd4
       (.I0(sig00000340),
        .I1(sig00000359),
        .I2(sig0000033b),
        .O(sig000006a5));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bd5
       (.I0(sig00000341),
        .I1(sig0000035a),
        .I2(sig0000033b),
        .O(sig000006a6));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bd6
       (.I0(sig00000342),
        .I1(sig0000035b),
        .I2(sig0000033b),
        .O(sig000006a7));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bd7
       (.I0(sig00000343),
        .I1(sig0000035c),
        .I2(sig0000033b),
        .O(sig000006a8));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bd8
       (.I0(sig00000344),
        .I1(sig0000035d),
        .I2(sig0000033b),
        .O(sig000006a9));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bd9
       (.I0(sig00000345),
        .I1(sig0000035e),
        .I2(sig0000033b),
        .O(sig000006aa));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bda
       (.I0(sig00000346),
        .I1(sig0000035f),
        .I2(sig0000033b),
        .O(sig000006ab));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bdb
       (.I0(sig00000347),
        .I1(sig00000360),
        .I2(sig0000033b),
        .O(sig000006ac));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bdc
       (.I0(sig00000348),
        .I1(sig00000361),
        .I2(sig0000033b),
        .O(sig000006ad));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bdd
       (.I0(sig00000349),
        .I1(sig00000362),
        .I2(sig0000033b),
        .O(sig000006ae));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bde
       (.I0(sig0000034a),
        .I1(sig00000363),
        .I2(sig0000033b),
        .O(sig000006af));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bdf
       (.I0(sig0000034b),
        .I1(sig00000364),
        .I2(sig0000033b),
        .O(sig000006b0));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000be0
       (.I0(sig0000034c),
        .I1(sig00000365),
        .I2(sig0000033b),
        .O(sig000006b1));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000be1
       (.I0(sig0000034d),
        .I1(sig00000366),
        .I2(sig0000033b),
        .O(sig000006b2));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000be2
       (.I0(sig0000034e),
        .I1(sig00000367),
        .I2(sig0000033b),
        .O(sig000006b3));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000be3
       (.I0(sig0000034f),
        .I1(sig00000368),
        .I2(sig0000033b),
        .O(sig000006b4));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000be4
       (.I0(sig00000350),
        .I1(sig00000369),
        .I2(sig0000033b),
        .O(sig000006b5));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000be5
       (.I0(sig0000033b),
        .I1(sig00000351),
        .O(sig000006b6));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000be6
       (.I0(sig0000033b),
        .I1(sig00000352),
        .O(sig000006b7));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk00000be7
       (.I0(sig00000382),
        .I1(sig0000036a),
        .O(sig000006b8));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000be8
       (.I0(sig00000383),
        .I1(sig00000382),
        .I2(sig0000036a),
        .O(sig000006b9));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000be9
       (.I0(sig0000036b),
        .I1(sig00000384),
        .I2(sig0000036a),
        .O(sig000006ba));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bea
       (.I0(sig0000036c),
        .I1(sig00000385),
        .I2(sig0000036a),
        .O(sig000006bb));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000beb
       (.I0(sig0000036d),
        .I1(sig00000386),
        .I2(sig0000036a),
        .O(sig000006bc));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bec
       (.I0(sig0000036e),
        .I1(sig00000387),
        .I2(sig0000036a),
        .O(sig000006bd));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bed
       (.I0(sig0000036f),
        .I1(sig00000388),
        .I2(sig0000036a),
        .O(sig000006be));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bee
       (.I0(sig00000370),
        .I1(sig00000389),
        .I2(sig0000036a),
        .O(sig000006bf));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bef
       (.I0(sig00000371),
        .I1(sig0000038a),
        .I2(sig0000036a),
        .O(sig000006c0));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bf0
       (.I0(sig00000372),
        .I1(sig0000038b),
        .I2(sig0000036a),
        .O(sig000006c1));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bf1
       (.I0(sig00000373),
        .I1(sig0000038c),
        .I2(sig0000036a),
        .O(sig000006c2));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bf2
       (.I0(sig00000374),
        .I1(sig0000038d),
        .I2(sig0000036a),
        .O(sig000006c3));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bf3
       (.I0(sig00000375),
        .I1(sig0000038e),
        .I2(sig0000036a),
        .O(sig000006c4));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bf4
       (.I0(sig00000376),
        .I1(sig0000038f),
        .I2(sig0000036a),
        .O(sig000006c5));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bf5
       (.I0(sig00000377),
        .I1(sig00000390),
        .I2(sig0000036a),
        .O(sig000006c6));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bf6
       (.I0(sig00000378),
        .I1(sig00000391),
        .I2(sig0000036a),
        .O(sig000006c7));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bf7
       (.I0(sig00000379),
        .I1(sig00000392),
        .I2(sig0000036a),
        .O(sig000006c8));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bf8
       (.I0(sig0000037a),
        .I1(sig00000393),
        .I2(sig0000036a),
        .O(sig000006c9));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bf9
       (.I0(sig0000037b),
        .I1(sig00000394),
        .I2(sig0000036a),
        .O(sig000006ca));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bfa
       (.I0(sig0000037c),
        .I1(sig00000395),
        .I2(sig0000036a),
        .O(sig000006cb));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bfb
       (.I0(sig0000037d),
        .I1(sig00000396),
        .I2(sig0000036a),
        .O(sig000006cc));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bfc
       (.I0(sig0000037e),
        .I1(sig00000397),
        .I2(sig0000036a),
        .O(sig000006cd));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000bfd
       (.I0(sig0000037f),
        .I1(sig00000398),
        .I2(sig0000036a),
        .O(sig000006ce));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000bfe
       (.I0(sig0000036a),
        .I1(sig00000380),
        .O(sig000006cf));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000bff
       (.I0(sig0000036a),
        .I1(sig00000381),
        .O(sig000006d0));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk00000c00
       (.I0(sig000003b1),
        .I1(sig00000399),
        .O(sig000006d1));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c01
       (.I0(sig000003b2),
        .I1(sig000003b1),
        .I2(sig00000399),
        .O(sig000006d2));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c02
       (.I0(sig0000039a),
        .I1(sig000003b3),
        .I2(sig00000399),
        .O(sig000006d3));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c03
       (.I0(sig0000039b),
        .I1(sig000003b4),
        .I2(sig00000399),
        .O(sig000006d4));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c04
       (.I0(sig0000039c),
        .I1(sig000003b5),
        .I2(sig00000399),
        .O(sig000006d5));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c05
       (.I0(sig0000039d),
        .I1(sig000003b6),
        .I2(sig00000399),
        .O(sig000006d6));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c06
       (.I0(sig0000039e),
        .I1(sig000003b7),
        .I2(sig00000399),
        .O(sig000006d7));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c07
       (.I0(sig0000039f),
        .I1(sig000003b8),
        .I2(sig00000399),
        .O(sig000006d8));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c08
       (.I0(sig000003a0),
        .I1(sig000003b9),
        .I2(sig00000399),
        .O(sig000006d9));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c09
       (.I0(sig000003a1),
        .I1(sig000003ba),
        .I2(sig00000399),
        .O(sig000006da));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c0a
       (.I0(sig000003a2),
        .I1(sig000003bb),
        .I2(sig00000399),
        .O(sig000006db));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c0b
       (.I0(sig000003a3),
        .I1(sig000003bc),
        .I2(sig00000399),
        .O(sig000006dc));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c0c
       (.I0(sig000003a4),
        .I1(sig000003bd),
        .I2(sig00000399),
        .O(sig000006dd));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c0d
       (.I0(sig000003a5),
        .I1(sig000003be),
        .I2(sig00000399),
        .O(sig000006de));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c0e
       (.I0(sig000003a6),
        .I1(sig000003bf),
        .I2(sig00000399),
        .O(sig000006df));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c0f
       (.I0(sig000003a7),
        .I1(sig000003c0),
        .I2(sig00000399),
        .O(sig000006e0));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c10
       (.I0(sig000003a8),
        .I1(sig000003c1),
        .I2(sig00000399),
        .O(sig000006e1));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c11
       (.I0(sig000003a9),
        .I1(sig000003c2),
        .I2(sig00000399),
        .O(sig000006e2));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c12
       (.I0(sig000003aa),
        .I1(sig000003c3),
        .I2(sig00000399),
        .O(sig000006e3));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c13
       (.I0(sig000003ab),
        .I1(sig000003c4),
        .I2(sig00000399),
        .O(sig000006e4));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c14
       (.I0(sig000003ac),
        .I1(sig000003c5),
        .I2(sig00000399),
        .O(sig000006e5));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c15
       (.I0(sig000003ad),
        .I1(sig000003c6),
        .I2(sig00000399),
        .O(sig000006e6));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c16
       (.I0(sig000003ae),
        .I1(sig000003c7),
        .I2(sig00000399),
        .O(sig000006e7));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000c17
       (.I0(sig00000399),
        .I1(sig000003af),
        .O(sig000006e8));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000c18
       (.I0(sig00000399),
        .I1(sig000003b0),
        .O(sig000006e9));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk00000c19
       (.I0(sig000003e0),
        .I1(sig000003c8),
        .O(sig000006ea));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c1a
       (.I0(sig000003e1),
        .I1(sig000003e0),
        .I2(sig000003c8),
        .O(sig000006eb));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c1b
       (.I0(sig000003c9),
        .I1(sig000003e2),
        .I2(sig000003c8),
        .O(sig000006ec));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c1c
       (.I0(sig000003ca),
        .I1(sig000003e3),
        .I2(sig000003c8),
        .O(sig000006ed));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c1d
       (.I0(sig000003cb),
        .I1(sig000003e4),
        .I2(sig000003c8),
        .O(sig000006ee));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c1e
       (.I0(sig000003cc),
        .I1(sig000003e5),
        .I2(sig000003c8),
        .O(sig000006ef));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c1f
       (.I0(sig000003cd),
        .I1(sig000003e6),
        .I2(sig000003c8),
        .O(sig000006f0));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c20
       (.I0(sig000003ce),
        .I1(sig000003e7),
        .I2(sig000003c8),
        .O(sig000006f1));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c21
       (.I0(sig000003cf),
        .I1(sig000003e8),
        .I2(sig000003c8),
        .O(sig000006f2));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c22
       (.I0(sig000003d0),
        .I1(sig000003e9),
        .I2(sig000003c8),
        .O(sig000006f3));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c23
       (.I0(sig000003d1),
        .I1(sig000003ea),
        .I2(sig000003c8),
        .O(sig000006f4));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c24
       (.I0(sig000003d2),
        .I1(sig000003eb),
        .I2(sig000003c8),
        .O(sig000006f5));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c25
       (.I0(sig000003d3),
        .I1(sig000003ec),
        .I2(sig000003c8),
        .O(sig000006f6));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c26
       (.I0(sig000003d4),
        .I1(sig000003ed),
        .I2(sig000003c8),
        .O(sig000006f7));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c27
       (.I0(sig000003d5),
        .I1(sig000003ee),
        .I2(sig000003c8),
        .O(sig000006f8));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c28
       (.I0(sig000003d6),
        .I1(sig000003ef),
        .I2(sig000003c8),
        .O(sig000006f9));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c29
       (.I0(sig000003d7),
        .I1(sig000003f0),
        .I2(sig000003c8),
        .O(sig000006fa));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c2a
       (.I0(sig000003d8),
        .I1(sig000003f1),
        .I2(sig000003c8),
        .O(sig000006fb));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c2b
       (.I0(sig000003d9),
        .I1(sig000003f2),
        .I2(sig000003c8),
        .O(sig000006fc));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c2c
       (.I0(sig000003da),
        .I1(sig000003f3),
        .I2(sig000003c8),
        .O(sig000006fd));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c2d
       (.I0(sig000003db),
        .I1(sig000003f4),
        .I2(sig000003c8),
        .O(sig000006fe));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c2e
       (.I0(sig000003dc),
        .I1(sig000003f5),
        .I2(sig000003c8),
        .O(sig000006ff));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c2f
       (.I0(sig000003dd),
        .I1(sig000003f6),
        .I2(sig000003c8),
        .O(sig00000700));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000c30
       (.I0(sig000003c8),
        .I1(sig000003de),
        .O(sig00000701));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000c31
       (.I0(sig000003c8),
        .I1(sig000003df),
        .O(sig00000702));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk00000c32
       (.I0(sig0000040f),
        .I1(sig000003f7),
        .O(sig00000703));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c33
       (.I0(sig00000410),
        .I1(sig0000040f),
        .I2(sig000003f7),
        .O(sig00000704));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c34
       (.I0(sig000003f8),
        .I1(sig00000411),
        .I2(sig000003f7),
        .O(sig00000705));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c35
       (.I0(sig000003f9),
        .I1(sig00000412),
        .I2(sig000003f7),
        .O(sig00000706));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c36
       (.I0(sig000003fa),
        .I1(sig00000413),
        .I2(sig000003f7),
        .O(sig00000707));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c37
       (.I0(sig000003fb),
        .I1(sig00000414),
        .I2(sig000003f7),
        .O(sig00000708));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c38
       (.I0(sig000003fc),
        .I1(sig00000415),
        .I2(sig000003f7),
        .O(sig00000709));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c39
       (.I0(sig000003fd),
        .I1(sig00000416),
        .I2(sig000003f7),
        .O(sig0000070a));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c3a
       (.I0(sig000003fe),
        .I1(sig00000417),
        .I2(sig000003f7),
        .O(sig0000070b));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c3b
       (.I0(sig000003ff),
        .I1(sig00000418),
        .I2(sig000003f7),
        .O(sig0000070c));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c3c
       (.I0(sig00000400),
        .I1(sig00000419),
        .I2(sig000003f7),
        .O(sig0000070d));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c3d
       (.I0(sig00000401),
        .I1(sig0000041a),
        .I2(sig000003f7),
        .O(sig0000070e));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c3e
       (.I0(sig00000402),
        .I1(sig0000041b),
        .I2(sig000003f7),
        .O(sig0000070f));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c3f
       (.I0(sig00000403),
        .I1(sig0000041c),
        .I2(sig000003f7),
        .O(sig00000710));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c40
       (.I0(sig00000404),
        .I1(sig0000041d),
        .I2(sig000003f7),
        .O(sig00000711));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c41
       (.I0(sig00000405),
        .I1(sig0000041e),
        .I2(sig000003f7),
        .O(sig00000712));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c42
       (.I0(sig00000406),
        .I1(sig0000041f),
        .I2(sig000003f7),
        .O(sig00000713));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c43
       (.I0(sig00000407),
        .I1(sig00000420),
        .I2(sig000003f7),
        .O(sig00000714));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c44
       (.I0(sig00000408),
        .I1(sig00000421),
        .I2(sig000003f7),
        .O(sig00000715));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c45
       (.I0(sig00000409),
        .I1(sig00000422),
        .I2(sig000003f7),
        .O(sig00000716));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c46
       (.I0(sig0000040a),
        .I1(sig00000423),
        .I2(sig000003f7),
        .O(sig00000717));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c47
       (.I0(sig0000040b),
        .I1(sig00000424),
        .I2(sig000003f7),
        .O(sig00000718));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c48
       (.I0(sig0000040c),
        .I1(sig00000425),
        .I2(sig000003f7),
        .O(sig00000719));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000c49
       (.I0(sig000003f7),
        .I1(sig0000040d),
        .O(sig0000071a));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000c4a
       (.I0(sig000003f7),
        .I1(sig0000040e),
        .O(sig0000071b));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk00000c4b
       (.I0(sig0000043e),
        .I1(sig00000426),
        .O(sig0000071c));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c4c
       (.I0(sig0000043f),
        .I1(sig0000043e),
        .I2(sig00000426),
        .O(sig0000071d));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c4d
       (.I0(sig00000427),
        .I1(sig00000440),
        .I2(sig00000426),
        .O(sig0000071e));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c4e
       (.I0(sig00000428),
        .I1(sig00000441),
        .I2(sig00000426),
        .O(sig0000071f));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c4f
       (.I0(sig00000429),
        .I1(sig00000442),
        .I2(sig00000426),
        .O(sig00000720));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c50
       (.I0(sig0000042a),
        .I1(sig00000443),
        .I2(sig00000426),
        .O(sig00000721));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c51
       (.I0(sig0000042b),
        .I1(sig00000444),
        .I2(sig00000426),
        .O(sig00000722));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c52
       (.I0(sig0000042c),
        .I1(sig00000445),
        .I2(sig00000426),
        .O(sig00000723));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c53
       (.I0(sig0000042d),
        .I1(sig00000446),
        .I2(sig00000426),
        .O(sig00000724));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c54
       (.I0(sig0000042e),
        .I1(sig00000447),
        .I2(sig00000426),
        .O(sig00000725));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c55
       (.I0(sig0000042f),
        .I1(sig00000448),
        .I2(sig00000426),
        .O(sig00000726));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c56
       (.I0(sig00000430),
        .I1(sig00000449),
        .I2(sig00000426),
        .O(sig00000727));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c57
       (.I0(sig00000431),
        .I1(sig0000044a),
        .I2(sig00000426),
        .O(sig00000728));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c58
       (.I0(sig00000432),
        .I1(sig0000044b),
        .I2(sig00000426),
        .O(sig00000729));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c59
       (.I0(sig00000433),
        .I1(sig0000044c),
        .I2(sig00000426),
        .O(sig0000072a));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c5a
       (.I0(sig00000434),
        .I1(sig0000044d),
        .I2(sig00000426),
        .O(sig0000072b));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c5b
       (.I0(sig00000435),
        .I1(sig0000044e),
        .I2(sig00000426),
        .O(sig0000072c));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c5c
       (.I0(sig00000436),
        .I1(sig0000044f),
        .I2(sig00000426),
        .O(sig0000072d));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c5d
       (.I0(sig00000437),
        .I1(sig00000450),
        .I2(sig00000426),
        .O(sig0000072e));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c5e
       (.I0(sig00000438),
        .I1(sig00000451),
        .I2(sig00000426),
        .O(sig0000072f));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c5f
       (.I0(sig00000439),
        .I1(sig00000452),
        .I2(sig00000426),
        .O(sig00000730));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c60
       (.I0(sig0000043a),
        .I1(sig00000453),
        .I2(sig00000426),
        .O(sig00000731));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c61
       (.I0(sig0000043b),
        .I1(sig00000454),
        .I2(sig00000426),
        .O(sig00000732));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000c62
       (.I0(sig00000426),
        .I1(sig0000043c),
        .O(sig00000733));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000c63
       (.I0(sig00000426),
        .I1(sig0000043d),
        .O(sig00000734));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk00000c64
       (.I0(sig0000046d),
        .I1(sig00000455),
        .O(sig00000735));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c65
       (.I0(sig0000046e),
        .I1(sig0000046d),
        .I2(sig00000455),
        .O(sig00000736));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c66
       (.I0(sig00000456),
        .I1(sig0000046f),
        .I2(sig00000455),
        .O(sig00000737));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c67
       (.I0(sig00000457),
        .I1(sig00000470),
        .I2(sig00000455),
        .O(sig00000738));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c68
       (.I0(sig00000458),
        .I1(sig00000471),
        .I2(sig00000455),
        .O(sig00000739));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c69
       (.I0(sig00000459),
        .I1(sig00000472),
        .I2(sig00000455),
        .O(sig0000073a));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c6a
       (.I0(sig0000045a),
        .I1(sig00000473),
        .I2(sig00000455),
        .O(sig0000073b));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c6b
       (.I0(sig0000045b),
        .I1(sig00000474),
        .I2(sig00000455),
        .O(sig0000073c));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c6c
       (.I0(sig0000045c),
        .I1(sig00000475),
        .I2(sig00000455),
        .O(sig0000073d));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c6d
       (.I0(sig0000045d),
        .I1(sig00000476),
        .I2(sig00000455),
        .O(sig0000073e));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c6e
       (.I0(sig0000045e),
        .I1(sig00000477),
        .I2(sig00000455),
        .O(sig0000073f));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c6f
       (.I0(sig0000045f),
        .I1(sig00000478),
        .I2(sig00000455),
        .O(sig00000740));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c70
       (.I0(sig00000460),
        .I1(sig00000479),
        .I2(sig00000455),
        .O(sig00000741));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c71
       (.I0(sig00000461),
        .I1(sig0000047a),
        .I2(sig00000455),
        .O(sig00000742));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c72
       (.I0(sig00000462),
        .I1(sig0000047b),
        .I2(sig00000455),
        .O(sig00000743));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c73
       (.I0(sig00000463),
        .I1(sig0000047c),
        .I2(sig00000455),
        .O(sig00000744));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c74
       (.I0(sig00000464),
        .I1(sig0000047d),
        .I2(sig00000455),
        .O(sig00000745));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c75
       (.I0(sig00000465),
        .I1(sig0000047e),
        .I2(sig00000455),
        .O(sig00000746));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c76
       (.I0(sig00000466),
        .I1(sig0000047f),
        .I2(sig00000455),
        .O(sig00000747));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c77
       (.I0(sig00000467),
        .I1(sig00000480),
        .I2(sig00000455),
        .O(sig00000748));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c78
       (.I0(sig00000468),
        .I1(sig00000481),
        .I2(sig00000455),
        .O(sig00000749));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c79
       (.I0(sig00000469),
        .I1(sig00000482),
        .I2(sig00000455),
        .O(sig0000074a));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c7a
       (.I0(sig0000046a),
        .I1(sig00000483),
        .I2(sig00000455),
        .O(sig0000074b));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000c7b
       (.I0(sig00000455),
        .I1(sig0000046b),
        .O(sig0000074c));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000c7c
       (.I0(sig00000455),
        .I1(sig0000046c),
        .O(sig0000074d));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk00000c7d
       (.I0(sig0000049c),
        .I1(sig00000484),
        .O(sig0000074e));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c7e
       (.I0(sig0000049d),
        .I1(sig0000049c),
        .I2(sig00000484),
        .O(sig0000074f));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c7f
       (.I0(sig00000485),
        .I1(sig0000049e),
        .I2(sig00000484),
        .O(sig00000750));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c80
       (.I0(sig00000486),
        .I1(sig0000049f),
        .I2(sig00000484),
        .O(sig00000751));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c81
       (.I0(sig00000487),
        .I1(sig000004a0),
        .I2(sig00000484),
        .O(sig00000752));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c82
       (.I0(sig00000488),
        .I1(sig000004a1),
        .I2(sig00000484),
        .O(sig00000753));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c83
       (.I0(sig00000489),
        .I1(sig000004a2),
        .I2(sig00000484),
        .O(sig00000754));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c84
       (.I0(sig0000048a),
        .I1(sig000004a3),
        .I2(sig00000484),
        .O(sig00000755));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c85
       (.I0(sig0000048b),
        .I1(sig000004a4),
        .I2(sig00000484),
        .O(sig00000756));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c86
       (.I0(sig0000048c),
        .I1(sig000004a5),
        .I2(sig00000484),
        .O(sig00000757));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c87
       (.I0(sig0000048d),
        .I1(sig000004a6),
        .I2(sig00000484),
        .O(sig00000758));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c88
       (.I0(sig0000048e),
        .I1(sig000004a7),
        .I2(sig00000484),
        .O(sig00000759));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c89
       (.I0(sig0000048f),
        .I1(sig000004a8),
        .I2(sig00000484),
        .O(sig0000075a));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c8a
       (.I0(sig00000490),
        .I1(sig000004a9),
        .I2(sig00000484),
        .O(sig0000075b));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c8b
       (.I0(sig00000491),
        .I1(sig000004aa),
        .I2(sig00000484),
        .O(sig0000075c));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c8c
       (.I0(sig00000492),
        .I1(sig000004ab),
        .I2(sig00000484),
        .O(sig0000075d));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c8d
       (.I0(sig00000493),
        .I1(sig000004ac),
        .I2(sig00000484),
        .O(sig0000075e));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c8e
       (.I0(sig00000494),
        .I1(sig000004ad),
        .I2(sig00000484),
        .O(sig0000075f));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c8f
       (.I0(sig00000495),
        .I1(sig000004ae),
        .I2(sig00000484),
        .O(sig00000760));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c90
       (.I0(sig00000496),
        .I1(sig000004af),
        .I2(sig00000484),
        .O(sig00000761));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c91
       (.I0(sig00000497),
        .I1(sig000004b0),
        .I2(sig00000484),
        .O(sig00000762));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c92
       (.I0(sig00000498),
        .I1(sig000004b1),
        .I2(sig00000484),
        .O(sig00000763));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c93
       (.I0(sig00000499),
        .I1(sig000004b2),
        .I2(sig00000484),
        .O(sig00000764));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000c94
       (.I0(sig00000484),
        .I1(sig0000049a),
        .O(sig00000765));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000c95
       (.I0(sig00000484),
        .I1(sig0000049b),
        .O(sig00000766));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk00000c96
       (.I0(sig000004cb),
        .I1(sig000004b3),
        .O(sig00000767));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c97
       (.I0(sig000004cc),
        .I1(sig000004cb),
        .I2(sig000004b3),
        .O(sig00000768));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c98
       (.I0(sig000004b4),
        .I1(sig000004cd),
        .I2(sig000004b3),
        .O(sig00000769));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c99
       (.I0(sig000004b5),
        .I1(sig000004ce),
        .I2(sig000004b3),
        .O(sig0000076a));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c9a
       (.I0(sig000004b6),
        .I1(sig000004cf),
        .I2(sig000004b3),
        .O(sig0000076b));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c9b
       (.I0(sig000004b7),
        .I1(sig000004d0),
        .I2(sig000004b3),
        .O(sig0000076c));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c9c
       (.I0(sig000004b8),
        .I1(sig000004d1),
        .I2(sig000004b3),
        .O(sig0000076d));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c9d
       (.I0(sig000004b9),
        .I1(sig000004d2),
        .I2(sig000004b3),
        .O(sig0000076e));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c9e
       (.I0(sig000004ba),
        .I1(sig000004d3),
        .I2(sig000004b3),
        .O(sig0000076f));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000c9f
       (.I0(sig000004bb),
        .I1(sig000004d4),
        .I2(sig000004b3),
        .O(sig00000770));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ca0
       (.I0(sig000004bc),
        .I1(sig000004d5),
        .I2(sig000004b3),
        .O(sig00000771));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ca1
       (.I0(sig000004bd),
        .I1(sig000004d6),
        .I2(sig000004b3),
        .O(sig00000772));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ca2
       (.I0(sig000004be),
        .I1(sig000004d7),
        .I2(sig000004b3),
        .O(sig00000773));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ca3
       (.I0(sig000004bf),
        .I1(sig000004d8),
        .I2(sig000004b3),
        .O(sig00000774));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ca4
       (.I0(sig000004c0),
        .I1(sig000004d9),
        .I2(sig000004b3),
        .O(sig00000775));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ca5
       (.I0(sig000004c1),
        .I1(sig000004da),
        .I2(sig000004b3),
        .O(sig00000776));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ca6
       (.I0(sig000004c2),
        .I1(sig000004db),
        .I2(sig000004b3),
        .O(sig00000777));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ca7
       (.I0(sig000004c3),
        .I1(sig000004dc),
        .I2(sig000004b3),
        .O(sig00000778));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ca8
       (.I0(sig000004c4),
        .I1(sig000004dd),
        .I2(sig000004b3),
        .O(sig00000779));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ca9
       (.I0(sig000004c5),
        .I1(sig000004de),
        .I2(sig000004b3),
        .O(sig0000077a));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000caa
       (.I0(sig000004c6),
        .I1(sig000004df),
        .I2(sig000004b3),
        .O(sig0000077b));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000cab
       (.I0(sig000004c7),
        .I1(sig000004e0),
        .I2(sig000004b3),
        .O(sig0000077c));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000cac
       (.I0(sig000004c8),
        .I1(sig000004e1),
        .I2(sig000004b3),
        .O(sig0000077d));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000cad
       (.I0(sig000004b3),
        .I1(sig000004c9),
        .O(sig0000077e));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000cae
       (.I0(sig000004b3),
        .I1(sig000004ca),
        .O(sig0000077f));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk00000caf
       (.I0(sig000004fa),
        .I1(sig000004e2),
        .O(sig00000780));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000cb0
       (.I0(sig000004fb),
        .I1(sig000004fa),
        .I2(sig000004e2),
        .O(sig00000781));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000cb1
       (.I0(sig000004e3),
        .I1(sig000004fc),
        .I2(sig000004e2),
        .O(sig00000782));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000cb2
       (.I0(sig000004e4),
        .I1(sig000004fd),
        .I2(sig000004e2),
        .O(sig00000783));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000cb3
       (.I0(sig000004e5),
        .I1(sig000004fe),
        .I2(sig000004e2),
        .O(sig00000784));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000cb4
       (.I0(sig000004e6),
        .I1(sig000004ff),
        .I2(sig000004e2),
        .O(sig00000785));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000cb5
       (.I0(sig000004e7),
        .I1(sig00000500),
        .I2(sig000004e2),
        .O(sig00000786));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000cb6
       (.I0(sig000004e8),
        .I1(sig00000501),
        .I2(sig000004e2),
        .O(sig00000787));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000cb7
       (.I0(sig000004e9),
        .I1(sig00000502),
        .I2(sig000004e2),
        .O(sig00000788));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000cb8
       (.I0(sig000004ea),
        .I1(sig00000503),
        .I2(sig000004e2),
        .O(sig00000789));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000cb9
       (.I0(sig000004eb),
        .I1(sig00000504),
        .I2(sig000004e2),
        .O(sig0000078a));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000cba
       (.I0(sig000004ec),
        .I1(sig00000505),
        .I2(sig000004e2),
        .O(sig0000078b));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000cbb
       (.I0(sig000004ed),
        .I1(sig00000506),
        .I2(sig000004e2),
        .O(sig0000078c));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000cbc
       (.I0(sig000004ee),
        .I1(sig00000507),
        .I2(sig000004e2),
        .O(sig0000078d));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000cbd
       (.I0(sig000004ef),
        .I1(sig00000508),
        .I2(sig000004e2),
        .O(sig0000078e));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000cbe
       (.I0(sig000004f0),
        .I1(sig00000509),
        .I2(sig000004e2),
        .O(sig0000078f));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000cbf
       (.I0(sig000004f1),
        .I1(sig0000050a),
        .I2(sig000004e2),
        .O(sig00000790));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000cc0
       (.I0(sig000004f2),
        .I1(sig0000050b),
        .I2(sig000004e2),
        .O(sig00000791));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000cc1
       (.I0(sig000004f3),
        .I1(sig0000050c),
        .I2(sig000004e2),
        .O(sig00000792));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000cc2
       (.I0(sig000004f4),
        .I1(sig0000050d),
        .I2(sig000004e2),
        .O(sig00000793));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000cc3
       (.I0(sig000004f5),
        .I1(sig0000050e),
        .I2(sig000004e2),
        .O(sig00000794));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000cc4
       (.I0(sig000004f6),
        .I1(sig0000050f),
        .I2(sig000004e2),
        .O(sig00000795));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000cc5
       (.I0(sig000004f7),
        .I1(sig00000510),
        .I2(sig000004e2),
        .O(sig00000796));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000cc6
       (.I0(sig000004e2),
        .I1(sig000004f8),
        .O(sig00000797));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000cc7
       (.I0(sig000004e2),
        .I1(sig000004f9),
        .O(sig00000798));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk00000cc8
       (.I0(sig0000052a),
        .I1(sig00000511),
        .O(sig00000799));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000cc9
       (.I0(sig00000512),
        .I1(sig0000052b),
        .I2(sig00000511),
        .O(sig0000079a));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000cca
       (.I0(sig00000513),
        .I1(sig0000052c),
        .I2(sig00000511),
        .O(sig0000079b));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ccb
       (.I0(sig00000514),
        .I1(sig0000052d),
        .I2(sig00000511),
        .O(sig0000079c));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ccc
       (.I0(sig00000515),
        .I1(sig0000052e),
        .I2(sig00000511),
        .O(sig0000079d));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ccd
       (.I0(sig00000516),
        .I1(sig0000052f),
        .I2(sig00000511),
        .O(sig0000079e));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000cce
       (.I0(sig00000517),
        .I1(sig00000530),
        .I2(sig00000511),
        .O(sig0000079f));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000ccf
       (.I0(sig00000518),
        .I1(sig00000531),
        .I2(sig00000511),
        .O(sig000007a0));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000cd0
       (.I0(sig00000519),
        .I1(sig00000532),
        .I2(sig00000511),
        .O(sig000007a1));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000cd1
       (.I0(sig0000051a),
        .I1(sig00000533),
        .I2(sig00000511),
        .O(sig000007a2));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000cd2
       (.I0(sig0000051b),
        .I1(sig00000534),
        .I2(sig00000511),
        .O(sig000007a3));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000cd3
       (.I0(sig0000051c),
        .I1(sig00000535),
        .I2(sig00000511),
        .O(sig000007a4));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000cd4
       (.I0(sig0000051d),
        .I1(sig00000536),
        .I2(sig00000511),
        .O(sig000007a5));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000cd5
       (.I0(sig0000051e),
        .I1(sig00000537),
        .I2(sig00000511),
        .O(sig000007a6));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000cd6
       (.I0(sig0000051f),
        .I1(sig00000538),
        .I2(sig00000511),
        .O(sig000007a7));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000cd7
       (.I0(sig00000520),
        .I1(sig00000539),
        .I2(sig00000511),
        .O(sig000007a8));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000cd8
       (.I0(sig00000521),
        .I1(sig0000053a),
        .I2(sig00000511),
        .O(sig000007a9));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000cd9
       (.I0(sig00000522),
        .I1(sig0000053b),
        .I2(sig00000511),
        .O(sig000007aa));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000cda
       (.I0(sig00000523),
        .I1(sig0000053c),
        .I2(sig00000511),
        .O(sig000007ab));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000cdb
       (.I0(sig00000524),
        .I1(sig0000053d),
        .I2(sig00000511),
        .O(sig000007ac));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000cdc
       (.I0(sig00000525),
        .I1(sig0000053e),
        .I2(sig00000511),
        .O(sig000007ad));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000cdd
       (.I0(sig00000526),
        .I1(sig0000053f),
        .I2(sig00000511),
        .O(sig000007ae));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000cde
       (.I0(sig00000527),
        .I1(sig00000540),
        .I2(sig00000511),
        .O(sig000007af));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000cdf
       (.I0(sig00000511),
        .I1(sig00000528),
        .O(sig000007b0));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000ce0
       (.I0(sig00000511),
        .I1(sig00000529),
        .O(sig000007b1));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000ce1
       (.I0(a[0]),
        .I1(b[0]),
        .O(sig000007b2));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000ce2
       (.I0(a[1]),
        .I1(b[1]),
        .O(sig000007b3));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000ce3
       (.I0(a[2]),
        .I1(b[2]),
        .O(sig000007b4));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000ce4
       (.I0(a[3]),
        .I1(b[3]),
        .O(sig000007b5));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000ce5
       (.I0(a[4]),
        .I1(b[4]),
        .O(sig000007b6));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000ce6
       (.I0(a[5]),
        .I1(b[5]),
        .O(sig000007b7));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000ce7
       (.I0(a[6]),
        .I1(b[6]),
        .O(sig000007b8));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000ce8
       (.I0(a[7]),
        .I1(b[7]),
        .O(sig000007b9));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000ce9
       (.I0(a[8]),
        .I1(b[8]),
        .O(sig000007ba));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000cea
       (.I0(a[9]),
        .I1(b[9]),
        .O(sig000007bb));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000ceb
       (.I0(a[10]),
        .I1(b[10]),
        .O(sig000007bc));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000cec
       (.I0(a[11]),
        .I1(b[11]),
        .O(sig000007bd));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000ced
       (.I0(a[12]),
        .I1(b[12]),
        .O(sig000007be));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000cee
       (.I0(a[13]),
        .I1(b[13]),
        .O(sig000007bf));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000cef
       (.I0(a[14]),
        .I1(b[14]),
        .O(sig000007c0));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000cf0
       (.I0(a[15]),
        .I1(b[15]),
        .O(sig000007c1));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000cf1
       (.I0(a[16]),
        .I1(b[16]),
        .O(sig000007c2));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000cf2
       (.I0(a[17]),
        .I1(b[17]),
        .O(sig000007c3));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000cf3
       (.I0(a[18]),
        .I1(b[18]),
        .O(sig000007c4));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000cf4
       (.I0(a[19]),
        .I1(b[19]),
        .O(sig000007c5));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000cf5
       (.I0(a[20]),
        .I1(b[20]),
        .O(sig000007c6));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000cf6
       (.I0(a[21]),
        .I1(b[21]),
        .O(sig000007c7));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h9)) 
    blk00000cf7
       (.I0(a[22]),
        .I1(b[22]),
        .O(sig000007c8));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk00000cf8
       (.I0(sig00000cb8),
        .I1(sig00000cb7),
        .O(sig00000cad));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk00000cf9
       (.I0(sig00000cb9),
        .I1(sig00000cb7),
        .O(sig00000cae));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk00000cfa
       (.I0(sig00000cba),
        .I1(sig00000cb7),
        .O(sig00000caf));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk00000cfb
       (.I0(sig00000cbb),
        .I1(sig00000cb7),
        .O(sig00000cb0));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk00000cfc
       (.I0(sig00000cbc),
        .I1(sig00000cb7),
        .O(sig00000cb1));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk00000cfd
       (.I0(sig00000cbd),
        .I1(sig00000cb7),
        .O(sig00000cb2));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hAC)) 
    blk00000cfe
       (.I0(sig00000019),
        .I1(sig0000001a),
        .I2(sig0000000e),
        .O(sig00000c95));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hAC)) 
    blk00000cff
       (.I0(sig0000000f),
        .I1(sig00000010),
        .I2(sig0000000e),
        .O(sig00000c9f));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hAC)) 
    blk00000d00
       (.I0(sig00000018),
        .I1(sig00000019),
        .I2(sig0000000e),
        .O(sig00000c96));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hAC)) 
    blk00000d01
       (.I0(sig00000017),
        .I1(sig00000018),
        .I2(sig0000000e),
        .O(sig00000c97));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hAC)) 
    blk00000d02
       (.I0(sig00000016),
        .I1(sig00000017),
        .I2(sig0000000e),
        .O(sig00000c98));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hAC)) 
    blk00000d03
       (.I0(sig00000015),
        .I1(sig00000016),
        .I2(sig0000000e),
        .O(sig00000c99));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hAC)) 
    blk00000d04
       (.I0(sig00000014),
        .I1(sig00000015),
        .I2(sig0000000e),
        .O(sig00000c9a));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hAC)) 
    blk00000d05
       (.I0(sig00000013),
        .I1(sig00000014),
        .I2(sig0000000e),
        .O(sig00000c9b));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hAC)) 
    blk00000d06
       (.I0(sig00000012),
        .I1(sig00000013),
        .I2(sig0000000e),
        .O(sig00000c9c));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hAC)) 
    blk00000d07
       (.I0(sig00000011),
        .I1(sig00000012),
        .I2(sig0000000e),
        .O(sig00000c9d));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hAC)) 
    blk00000d08
       (.I0(sig00000010),
        .I1(sig00000011),
        .I2(sig0000000e),
        .O(sig00000c9e));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hAC)) 
    blk00000d09
       (.I0(sig00000025),
        .I1(sig00000026),
        .I2(sig00000d24),
        .O(sig00000ca0));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hAC)) 
    blk00000d0a
       (.I0(sig0000001b),
        .I1(sig0000001c),
        .I2(sig0000000e),
        .O(sig00000caa));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hAC)) 
    blk00000d0b
       (.I0(sig0000001a),
        .I1(sig0000001b),
        .I2(sig0000000e),
        .O(sig00000cab));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hAC)) 
    blk00000d0c
       (.I0(sig00000024),
        .I1(sig00000025),
        .I2(sig00000d24),
        .O(sig00000ca1));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hAC)) 
    blk00000d0d
       (.I0(sig00000023),
        .I1(sig00000024),
        .I2(sig0000000e),
        .O(sig00000ca2));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hAC)) 
    blk00000d0e
       (.I0(sig00000022),
        .I1(sig00000023),
        .I2(sig0000000e),
        .O(sig00000ca3));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hAC)) 
    blk00000d0f
       (.I0(sig00000021),
        .I1(sig00000022),
        .I2(sig0000000e),
        .O(sig00000ca4));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hAC)) 
    blk00000d10
       (.I0(sig00000020),
        .I1(sig00000021),
        .I2(sig0000000e),
        .O(sig00000ca5));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hAC)) 
    blk00000d11
       (.I0(sig0000001f),
        .I1(sig00000020),
        .I2(sig0000000e),
        .O(sig00000ca6));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hAC)) 
    blk00000d12
       (.I0(sig0000001e),
        .I1(sig0000001f),
        .I2(sig0000000e),
        .O(sig00000ca7));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hAC)) 
    blk00000d13
       (.I0(sig0000001d),
        .I1(sig0000001e),
        .I2(sig0000000e),
        .O(sig00000ca8));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hAC)) 
    blk00000d14
       (.I0(sig0000001c),
        .I1(sig0000001d),
        .I2(sig0000000e),
        .O(sig00000ca9));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h35)) 
    blk00000d15
       (.I0(sig00000027),
        .I1(sig00000026),
        .I2(sig00000d24),
        .O(sig00000cc0));
  (* PK_HLUTNM = "___XLNM___16___U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/Mmux_mant_op[1]_GND_224_o_MUX_380_o11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk00000d16
       (.I0(sig0000000a),
        .I1(sig0000003d),
        .O(sig00000cf8));
  (* PK_HLUTNM = "___XLNM___16___U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/Mmux_mant_op[1]_GND_224_o_MUX_380_o11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk00000d17
       (.I0(sig0000000a),
        .I1(sig0000003c),
        .O(sig00000cf9));
  (* PK_HLUTNM = "___XLNM___15___U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/Mmux_mant_op[0]_GND_224_o_MUX_381_o11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk00000d18
       (.I0(sig0000000a),
        .I1(sig0000003e),
        .O(sig00000cf7));
  (* PK_HLUTNM = "___XLNM___15___U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/Mmux_mant_op[0]_GND_224_o_MUX_381_o11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk00000d19
       (.I0(sig0000000a),
        .I1(sig0000003b),
        .O(sig00000cfa));
  (* PK_HLUTNM = "___XLNM___14___U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/Mmux_mant_op[4]_GND_224_o_MUX_377_o11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk00000d1a
       (.I0(sig0000000a),
        .I1(sig0000003a),
        .O(sig00000cfb));
  (* PK_HLUTNM = "___XLNM___14___U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/Mmux_mant_op[4]_GND_224_o_MUX_377_o11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk00000d1b
       (.I0(sig0000000a),
        .I1(sig00000039),
        .O(sig00000cfc));
  (* PK_HLUTNM = "___XLNM___13___U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/Mmux_mant_op[6]_GND_224_o_MUX_375_o11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk00000d1c
       (.I0(sig0000000a),
        .I1(sig00000038),
        .O(sig00000cfd));
  (* PK_HLUTNM = "___XLNM___13___U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/Mmux_mant_op[6]_GND_224_o_MUX_375_o11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk00000d1d
       (.I0(sig0000000a),
        .I1(sig00000037),
        .O(sig00000cfe));
  (* PK_HLUTNM = "___XLNM___12___U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/Mmux_mant_op[8]_GND_224_o_MUX_373_o11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk00000d1e
       (.I0(sig0000000a),
        .I1(sig00000036),
        .O(sig00000cff));
  (* PK_HLUTNM = "___XLNM___12___U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/Mmux_mant_op[8]_GND_224_o_MUX_373_o11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk00000d1f
       (.I0(sig0000000a),
        .I1(sig00000035),
        .O(sig00000d00));
  (* PK_HLUTNM = "___XLNM___11___U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/Mmux_mant_op[10]_GND_224_o_MUX_371_o11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk00000d20
       (.I0(sig0000000a),
        .I1(sig00000034),
        .O(sig00000d01));
  (* PK_HLUTNM = "___XLNM___11___U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/Mmux_mant_op[10]_GND_224_o_MUX_371_o11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk00000d21
       (.I0(sig0000000a),
        .I1(sig00000033),
        .O(sig00000d02));
  (* PK_HLUTNM = "___XLNM___10___U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/Mmux_mant_op[12]_GND_224_o_MUX_369_o11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk00000d22
       (.I0(sig0000000a),
        .I1(sig00000032),
        .O(sig00000d03));
  (* PK_HLUTNM = "___XLNM___10___U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/Mmux_mant_op[12]_GND_224_o_MUX_369_o11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk00000d23
       (.I0(sig0000000a),
        .I1(sig00000031),
        .O(sig00000d04));
  (* PK_HLUTNM = "___XLNM___9___U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/Mmux_mant_op[14]_GND_224_o_MUX_367_o11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk00000d24
       (.I0(sig0000000a),
        .I1(sig00000030),
        .O(sig00000d05));
  (* PK_HLUTNM = "___XLNM___9___U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/Mmux_mant_op[14]_GND_224_o_MUX_367_o11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk00000d25
       (.I0(sig0000000a),
        .I1(sig0000002f),
        .O(sig00000d06));
  (* PK_HLUTNM = "___XLNM___8___U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/Mmux_mant_op[16]_GND_224_o_MUX_365_o11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk00000d26
       (.I0(sig0000000a),
        .I1(sig0000002e),
        .O(sig00000d07));
  (* PK_HLUTNM = "___XLNM___8___U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/Mmux_mant_op[16]_GND_224_o_MUX_365_o11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk00000d27
       (.I0(sig0000000a),
        .I1(sig0000002d),
        .O(sig00000d08));
  (* PK_HLUTNM = "___XLNM___7___U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/Mmux_mant_op[18]_GND_224_o_MUX_363_o11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk00000d28
       (.I0(sig0000000a),
        .I1(sig0000002c),
        .O(sig00000d09));
  (* PK_HLUTNM = "___XLNM___7___U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/Mmux_mant_op[18]_GND_224_o_MUX_363_o11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk00000d29
       (.I0(sig0000000a),
        .I1(sig0000002b),
        .O(sig00000d0a));
  (* PK_HLUTNM = "___XLNM___6___U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/Mmux_mant_op[20]_GND_224_o_MUX_361_o11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk00000d2a
       (.I0(sig0000000a),
        .I1(sig0000002a),
        .O(sig00000d0b));
  (* PK_HLUTNM = "___XLNM___6___U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/Mmux_mant_op[20]_GND_224_o_MUX_361_o11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk00000d2b
       (.I0(sig0000000a),
        .I1(sig00000029),
        .O(sig00000d0c));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h54)) 
    blk00000d2c
       (.I0(sig0000000b),
        .I1(sig0000000c),
        .I2(sig00000028),
        .O(sig00000d0d));
  (* PK_HLUTNM = "___XLNM___4___U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/Mmux_exp_op[0]_GND_224_o_MUX_312_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h54)) 
    blk00000d2d
       (.I0(sig00000009),
        .I1(sig0000000d),
        .I2(sig00000046),
        .O(sig00000d0e));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h54)) 
    blk00000d2e
       (.I0(sig00000009),
        .I1(sig0000000d),
        .I2(sig00000045),
        .O(sig00000d0f));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h54)) 
    blk00000d2f
       (.I0(sig00000009),
        .I1(sig0000000d),
        .I2(sig00000044),
        .O(sig00000d10));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h54)) 
    blk00000d30
       (.I0(sig00000009),
        .I1(sig0000000d),
        .I2(sig00000043),
        .O(sig00000d11));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h54)) 
    blk00000d31
       (.I0(sig00000009),
        .I1(sig0000000d),
        .I2(sig00000042),
        .O(sig00000d12));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h54)) 
    blk00000d32
       (.I0(sig00000009),
        .I1(sig0000000d),
        .I2(sig00000041),
        .O(sig00000d13));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h54)) 
    blk00000d33
       (.I0(sig00000009),
        .I1(sig0000000d),
        .I2(sig00000040),
        .O(sig00000d14));
  (* PK_HLUTNM = "___XLNM___4___U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/Mmux_exp_op[0]_GND_224_o_MUX_312_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h54)) 
    blk00000d34
       (.I0(sig00000009),
        .I1(sig0000000d),
        .I2(sig0000003f),
        .O(sig00000d15));
  (* PK_HLUTNM = "___XLNM___18___U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/EXP/Mmux_state_int_up2_SW0" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h1)) 
    blk00000d35
       (.I0(sig00000077),
        .I1(sig00000078),
        .O(sig00000d16));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFFFFFFFF51554055)) 
    blk00000d36
       (.I0(sig0000007c),
        .I1(sig00000088),
        .I2(sig0000007a),
        .I3(sig00000d16),
        .I4(sig00000079),
        .I5(sig0000007d),
        .O(sig00000069));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h0001)) 
    blk00000d37
       (.I0(sig00000082),
        .I1(sig0000007f),
        .I2(sig00000085),
        .I3(sig00000084),
        .O(sig00000d17));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h2222222022222222)) 
    blk00000d38
       (.I0(sig00000086),
        .I1(sig00000087),
        .I2(sig00000081),
        .I3(sig00000080),
        .I4(sig00000083),
        .I5(sig00000d17),
        .O(sig00000063));
  (* PK_HLUTNM = "___XLNM___19___U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/EXP/COND_DET_B/MANT_LUTS.chunk_is_zero_ip<1><22>_SW0" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'hE)) 
    blk00000d39
       (.I0(b[17]),
        .I1(b[16]),
        .O(sig00000d18));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    blk00000d3a
       (.I0(b[22]),
        .I1(b[21]),
        .I2(b[20]),
        .I3(b[19]),
        .I4(b[18]),
        .I5(sig00000d18),
        .O(sig0000008f));
  (* PK_HLUTNM = "___XLNM___2___U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/EXP/COND_DET_B/EXP_DET_LUT.exp_all_zero_ip<30>_SW0" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hFE)) 
    blk00000d3b
       (.I0(b[25]),
        .I1(b[24]),
        .I2(b[23]),
        .O(sig00000d19));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    blk00000d3c
       (.I0(b[30]),
        .I1(b[29]),
        .I2(b[28]),
        .I3(b[27]),
        .I4(b[26]),
        .I5(sig00000d19),
        .O(sig00000090));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    blk00000d3d
       (.I0(b[1]),
        .I1(b[0]),
        .I2(b[2]),
        .I3(b[3]),
        .I4(b[4]),
        .I5(b[5]),
        .O(sig00000d1a));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    blk00000d3e
       (.I0(b[7]),
        .I1(b[6]),
        .I2(b[8]),
        .I3(b[9]),
        .I4(b[10]),
        .I5(b[11]),
        .O(sig00000d1b));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h0000000000000008)) 
    blk00000d3f
       (.I0(sig00000d1b),
        .I1(sig00000d1a),
        .I2(b[13]),
        .I3(b[12]),
        .I4(b[14]),
        .I5(b[15]),
        .O(sig00000091));
  (* PK_HLUTNM = "___XLNM___2___U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/EXP/COND_DET_B/EXP_DET_LUT.exp_all_zero_ip<30>_SW0" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h80)) 
    blk00000d40
       (.I0(b[25]),
        .I1(b[24]),
        .I2(b[23]),
        .O(sig00000d1c));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    blk00000d41
       (.I0(b[30]),
        .I1(b[29]),
        .I2(b[28]),
        .I3(b[27]),
        .I4(b[26]),
        .I5(sig00000d1c),
        .O(sig00000092));
  (* PK_HLUTNM = "___XLNM___17___U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/EXP/COND_DET_A/MANT_LUTS.chunk_is_zero_ip<1><22>_SW0" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'hE)) 
    blk00000d42
       (.I0(a[17]),
        .I1(a[16]),
        .O(sig00000d1d));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    blk00000d43
       (.I0(a[22]),
        .I1(a[21]),
        .I2(a[20]),
        .I3(a[19]),
        .I4(a[18]),
        .I5(sig00000d1d),
        .O(sig00000095));
  (* PK_HLUTNM = "___XLNM___1___U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/EXP/COND_DET_A/EXP_DET_LUT.exp_all_zero_ip<30>_SW0" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hFE)) 
    blk00000d44
       (.I0(a[25]),
        .I1(a[24]),
        .I2(a[23]),
        .O(sig00000d1e));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    blk00000d45
       (.I0(a[30]),
        .I1(a[29]),
        .I2(a[28]),
        .I3(a[27]),
        .I4(a[26]),
        .I5(sig00000d1e),
        .O(sig00000096));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    blk00000d46
       (.I0(a[1]),
        .I1(a[0]),
        .I2(a[2]),
        .I3(a[3]),
        .I4(a[4]),
        .I5(a[5]),
        .O(sig00000d1f));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    blk00000d47
       (.I0(a[7]),
        .I1(a[6]),
        .I2(a[8]),
        .I3(a[9]),
        .I4(a[10]),
        .I5(a[11]),
        .O(sig00000d20));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h0000000000000008)) 
    blk00000d48
       (.I0(sig00000d20),
        .I1(sig00000d1f),
        .I2(a[13]),
        .I3(a[12]),
        .I4(a[14]),
        .I5(a[15]),
        .O(sig00000097));
  (* PK_HLUTNM = "___XLNM___1___U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/EXP/COND_DET_A/EXP_DET_LUT.exp_all_zero_ip<30>_SW0" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h80)) 
    blk00000d49
       (.I0(a[25]),
        .I1(a[24]),
        .I2(a[23]),
        .O(sig00000d21));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    blk00000d4a
       (.I0(a[30]),
        .I1(a[29]),
        .I2(a[28]),
        .I3(a[27]),
        .I4(a[26]),
        .I5(sig00000d21),
        .O(sig00000098));
  (* XSTLIB *) 
  LUT1 #(
    .INIT(2'h2)) 
    blk00000d4b
       (.I0(sig00000cac),
        .O(sig00000d22));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hFFFF7F2A)) 
    blk00000d4c
       (.I0(sig0000008a),
        .I1(sig00000093),
        .I2(sig00000094),
        .I3(sig00000089),
        .I4(sig0000008d),
        .O(sig00000064));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h00AA80AA00008000)) 
    blk00000d4d
       (.I0(sig0000007e),
        .I1(sig0000009a),
        .I2(sig00000099),
        .I3(sig0000008d),
        .I4(sig0000008a),
        .I5(sig00000d23),
        .O(sig00000066));
  (* PK_HLUTNM = "___XLNM___5___U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/EXP/COND_DET_B/MANT_ALL_ZERO1" *) 
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'hBF151515)) 
    blk00000d4e
       (.I0(sig0000008a),
        .I1(sig0000008c),
        .I2(sig00000089),
        .I3(sig00000093),
        .I4(sig00000094),
        .O(sig00000d23));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000d4f
       (.C(clk),
        .CE(1'b1),
        .D(sig000000a8),
        .Q(sig00000d24),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "INV" *) 
  (* XILINX_TRANSFORM_PINMAP = "I:I0" *) 
  (* XSTLIB *) 
  LUT1 #(
    .INIT(2'h1)) 
    blk00000d50
       (.I0(sig0000000e),
        .O(sig00000c94));
  (* BUS_INFO = "5:INPUT:A<4:0>" *) 
  (* XSTLIB *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    blk00000d51
       (.A({1'b1,1'b0,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(clk),
        .D(sig00000085),
        .Q(sig00000002),
        .Q31(NLW_blk00000d51_Q31_UNCONNECTED));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk00000d52
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig00000511),
        .Q(sig00000d25));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000d53
       (.C(clk),
        .CE(1'b1),
        .D(sig00000d25),
        .Q(sig00000088),
        .R(1'b0));
  (* BUS_INFO = "5:INPUT:A<4:0>" *) 
  (* XSTLIB *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    blk00000d54
       (.A({1'b1,1'b0,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(clk),
        .D(sig00000086),
        .Q(sig00000001),
        .Q31(NLW_blk00000d54_Q31_UNCONNECTED));
  (* BUS_INFO = "5:INPUT:A<4:0>" *) 
  (* XSTLIB *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    blk00000d55
       (.A({1'b1,1'b0,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(clk),
        .D(sig00000084),
        .Q(sig00000003),
        .Q31(NLW_blk00000d55_Q31_UNCONNECTED));
  (* BUS_INFO = "5:INPUT:A<4:0>" *) 
  (* XSTLIB *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    blk00000d56
       (.A({1'b1,1'b0,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(clk),
        .D(sig00000083),
        .Q(sig00000004),
        .Q31(NLW_blk00000d56_Q31_UNCONNECTED));
  (* BUS_INFO = "5:INPUT:A<4:0>" *) 
  (* XSTLIB *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    blk00000d57
       (.A({1'b1,1'b0,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(clk),
        .D(sig00000080),
        .Q(sig00000007),
        .Q31(NLW_blk00000d57_Q31_UNCONNECTED));
  (* BUS_INFO = "5:INPUT:A<4:0>" *) 
  (* XSTLIB *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    blk00000d58
       (.A({1'b1,1'b0,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(clk),
        .D(sig00000082),
        .Q(sig00000005),
        .Q31(NLW_blk00000d58_Q31_UNCONNECTED));
  (* BUS_INFO = "5:INPUT:A<4:0>" *) 
  (* XSTLIB *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    blk00000d59
       (.A({1'b1,1'b0,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(clk),
        .D(sig00000081),
        .Q(sig00000006),
        .Q31(NLW_blk00000d59_Q31_UNCONNECTED));
  (* BUS_INFO = "5:INPUT:A<4:0>" *) 
  (* XSTLIB *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    blk00000d5a
       (.A({1'b1,1'b0,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(clk),
        .D(sig0000007f),
        .Q(sig00000008),
        .Q31(NLW_blk00000d5a_Q31_UNCONNECTED));
  (* BUS_INFO = "5:INPUT:A<4:0>" *) 
  (* XSTLIB *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    blk00000d5b
       (.A({1'b1,1'b0,1'b1,1'b0,1'b0}),
        .CE(1'b1),
        .CLK(clk),
        .D(sig000000a6),
        .Q(sig00000d26),
        .Q31(NLW_blk00000d5b_Q31_UNCONNECTED));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000d5c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000d26),
        .Q(sig0000005e),
        .R(1'b0));
  (* BUS_INFO = "5:INPUT:A<4:0>" *) 
  (* XSTLIB *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    blk00000d5d
       (.A({1'b1,1'b0,1'b1,1'b1,1'b0}),
        .CE(1'b1),
        .CLK(clk),
        .D(sig000004e2),
        .Q(sig00000d27),
        .Q31(NLW_blk00000d5d_Q31_UNCONNECTED));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000d5e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000d27),
        .Q(sig0000000f),
        .R(1'b0));
  (* BUS_INFO = "5:INPUT:A<4:0>" *) 
  (* XSTLIB *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    blk00000d5f
       (.A({1'b1,1'b0,1'b1,1'b0,1'b0}),
        .CE(1'b1),
        .CLK(clk),
        .D(sig000000a5),
        .Q(sig00000d28),
        .Q31(NLW_blk00000d5f_Q31_UNCONNECTED));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000d60
       (.C(clk),
        .CE(1'b1),
        .D(sig00000d28),
        .Q(sig0000005d),
        .R(1'b0));
  (* BUS_INFO = "5:INPUT:A<4:0>" *) 
  (* XSTLIB *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    blk00000d61
       (.A({1'b1,1'b0,1'b1,1'b0,1'b0}),
        .CE(1'b1),
        .CLK(clk),
        .D(sig000000a7),
        .Q(sig00000d29),
        .Q31(NLW_blk00000d61_Q31_UNCONNECTED));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000d62
       (.C(clk),
        .CE(1'b1),
        .D(sig00000d29),
        .Q(sig00000076),
        .R(1'b0));
  (* BUS_INFO = "5:INPUT:A<4:0>" *) 
  (* XSTLIB *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    blk00000d63
       (.A({1'b1,1'b0,1'b1,1'b0,1'b1}),
        .CE(1'b1),
        .CLK(clk),
        .D(sig000004b3),
        .Q(sig00000d2a),
        .Q31(NLW_blk00000d63_Q31_UNCONNECTED));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000d64
       (.C(clk),
        .CE(1'b1),
        .D(sig00000d2a),
        .Q(sig00000010),
        .R(1'b0));
  (* BUS_INFO = "5:INPUT:A<4:0>" *) 
  (* XSTLIB *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    blk00000d65
       (.A({1'b1,1'b0,1'b1,1'b0,1'b0}),
        .CE(1'b1),
        .CLK(clk),
        .D(sig00000484),
        .Q(sig00000d2b),
        .Q31(NLW_blk00000d65_Q31_UNCONNECTED));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000d66
       (.C(clk),
        .CE(1'b1),
        .D(sig00000d2b),
        .Q(sig00000011),
        .R(1'b0));
  (* BUS_INFO = "5:INPUT:A<4:0>" *) 
  (* XSTLIB *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    blk00000d67
       (.A({1'b1,1'b0,1'b0,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(clk),
        .D(sig00000455),
        .Q(sig00000d2c),
        .Q31(NLW_blk00000d67_Q31_UNCONNECTED));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000d68
       (.C(clk),
        .CE(1'b1),
        .D(sig00000d2c),
        .Q(sig00000012),
        .R(1'b0));
  (* BUS_INFO = "5:INPUT:A<4:0>" *) 
  (* XSTLIB *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    blk00000d69
       (.A({1'b1,1'b0,1'b0,1'b1,1'b0}),
        .CE(1'b1),
        .CLK(clk),
        .D(sig00000426),
        .Q(sig00000d2d),
        .Q31(NLW_blk00000d69_Q31_UNCONNECTED));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000d6a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000d2d),
        .Q(sig00000013),
        .R(1'b0));
  (* BUS_INFO = "5:INPUT:A<4:0>" *) 
  (* XSTLIB *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    blk00000d6b
       (.A({1'b1,1'b0,1'b0,1'b0,1'b1}),
        .CE(1'b1),
        .CLK(clk),
        .D(sig000003f7),
        .Q(sig00000d2e),
        .Q31(NLW_blk00000d6b_Q31_UNCONNECTED));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000d6c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000d2e),
        .Q(sig00000014),
        .R(1'b0));
  (* BUS_INFO = "5:INPUT:A<4:0>" *) 
  (* XSTLIB *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    blk00000d6d
       (.A({1'b1,1'b0,1'b0,1'b0,1'b0}),
        .CE(1'b1),
        .CLK(clk),
        .D(sig000003c8),
        .Q(sig00000d2f),
        .Q31(NLW_blk00000d6d_Q31_UNCONNECTED));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000d6e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000d2f),
        .Q(sig00000015),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk00000d6f
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b1),
        .A3(1'b1),
        .CE(1'b1),
        .CLK(clk),
        .D(sig0000033b),
        .Q(sig00000d30));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000d70
       (.C(clk),
        .CE(1'b1),
        .D(sig00000d30),
        .Q(sig00000018),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk00000d71
       (.A0(1'b1),
        .A1(1'b1),
        .A2(1'b1),
        .A3(1'b1),
        .CE(1'b1),
        .CLK(clk),
        .D(sig00000399),
        .Q(sig00000d31));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000d72
       (.C(clk),
        .CE(1'b1),
        .D(sig00000d31),
        .Q(sig00000016),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk00000d73
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b1),
        .A3(1'b1),
        .CE(1'b1),
        .CLK(clk),
        .D(sig0000036a),
        .Q(sig00000d32));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000d74
       (.C(clk),
        .CE(1'b1),
        .D(sig00000d32),
        .Q(sig00000017),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk00000d75
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b1),
        .A3(1'b1),
        .CE(1'b1),
        .CLK(clk),
        .D(sig0000030c),
        .Q(sig00000d33));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000d76
       (.C(clk),
        .CE(1'b1),
        .D(sig00000d33),
        .Q(sig00000019),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk00000d77
       (.A0(1'b1),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b1),
        .CE(1'b1),
        .CLK(clk),
        .D(sig000002dd),
        .Q(sig00000d34));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000d78
       (.C(clk),
        .CE(1'b1),
        .D(sig00000d34),
        .Q(sig0000001a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk00000d79
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b1),
        .CE(1'b1),
        .CLK(clk),
        .D(sig000002ae),
        .Q(sig00000d35));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000d7a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000d35),
        .Q(sig0000001b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk00000d7b
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b1),
        .CE(1'b1),
        .CLK(clk),
        .D(sig0000027f),
        .Q(sig00000d36));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000d7c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000d36),
        .Q(sig0000001c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk00000d7d
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b1),
        .CE(1'b1),
        .CLK(clk),
        .D(sig00000250),
        .Q(sig00000d37));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000d7e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000d37),
        .Q(sig0000001d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk00000d7f
       (.A0(1'b1),
        .A1(1'b1),
        .A2(1'b1),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig00000221),
        .Q(sig00000d38));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000d80
       (.C(clk),
        .CE(1'b1),
        .D(sig00000d38),
        .Q(sig0000001e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk00000d81
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b1),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig00000194),
        .Q(sig00000d39));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000d82
       (.C(clk),
        .CE(1'b1),
        .D(sig00000d39),
        .Q(sig00000021),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk00000d83
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b1),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig000001f2),
        .Q(sig00000d3a));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000d84
       (.C(clk),
        .CE(1'b1),
        .D(sig00000d3a),
        .Q(sig0000001f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk00000d85
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b1),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig000001c3),
        .Q(sig00000d3b));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000d86
       (.C(clk),
        .CE(1'b1),
        .D(sig00000d3b),
        .Q(sig00000020),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk00000d87
       (.A0(1'b1),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig00000165),
        .Q(sig00000d3c));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000d88
       (.C(clk),
        .CE(1'b1),
        .D(sig00000d3c),
        .Q(sig00000022),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk00000d89
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig00000136),
        .Q(sig00000d3d));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000d8a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000d3d),
        .Q(sig00000023),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk00000d8b
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig00000107),
        .Q(sig00000d3e));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000d8c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000d3e),
        .Q(sig00000024),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk00000d8d
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig000000d8),
        .Q(sig00000d3f));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000d8e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000d3f),
        .Q(sig00000025),
        .R(1'b0));
  (* BUS_INFO = "5:INPUT:A<4:0>" *) 
  (* XSTLIB *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    blk00000d8f
       (.A({1'b1,1'b0,1'b1,1'b1,1'b0}),
        .CE(1'b1),
        .CLK(clk),
        .D(sig000000a4),
        .Q(sig00000d40),
        .Q31(NLW_blk00000d8f_Q31_UNCONNECTED));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000d90
       (.C(clk),
        .CE(1'b1),
        .D(sig00000d40),
        .Q(\U0/op_inst/FLT_PT_OP/DIV_OP.SPD.OP/OP/sign_op ),
        .R(1'b0));
  (* BUS_INFO = "5:INPUT:A<4:0>" *) 
  (* XSTLIB *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    blk00000d91
       (.A({1'b1,1'b0,1'b1,1'b0,1'b0}),
        .CE(1'b1),
        .CLK(clk),
        .D(sig00000088),
        .Q(sig00000d41),
        .Q31(NLW_blk00000d91_Q31_UNCONNECTED));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000d92
       (.C(clk),
        .CE(1'b1),
        .D(sig00000d41),
        .Q(sig000000a8),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "softmax_divider_wrapper" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_softmax_divider_wrapper
   (ila_smax_dw_quotient,
    ila_smax_dw_dividend,
    ila_smax_dw_divisor,
    CO,
    ila_smax_dw_division_complete,
    ila_smax_dw_quotient_result_valid,
    ila_smax_dw_rd_en,
    Q,
    \ila_smax_dw_quotient_counter[15] ,
    \ila_smax_dw_hold_counter[4] ,
    ila_smax_exp_fifo_rd_en,
    \outbuff_din_reg[31] ,
    ila_smax_dw_division_reg,
    outbuff_din1,
    m00_axi_aclk,
    \num_elements_reg[7] ,
    \num_elements_reg[15] ,
    m00_axi_aresetn,
    m00_axi_aresetn_0,
    \FSM_sequential_current_state_reg[1] ,
    ila_smax_exp_fifo_valid,
    summing_complete_reg,
    empty_fwft_i_reg,
    \current_state_reg[1]_0 ,
    \num_elements_reg[15]_0 ,
    full,
    dout,
    m00_axi_aresetn_1,
    m00_axi_aresetn_2,
    D,
    m00_axi_aresetn_3);
  output [31:0]ila_smax_dw_quotient;
  output [31:0]ila_smax_dw_dividend;
  output [31:0]ila_smax_dw_divisor;
  output [0:0]CO;
  output ila_smax_dw_division_complete;
  output ila_smax_dw_quotient_result_valid;
  output ila_smax_dw_rd_en;
  output [1:0]Q;
  output [15:0]\ila_smax_dw_quotient_counter[15] ;
  output [4:0]\ila_smax_dw_hold_counter[4] ;
  output ila_smax_exp_fifo_rd_en;
  output [31:0]\outbuff_din_reg[31] ;
  output [31:0]ila_smax_dw_division_reg;
  output outbuff_din1;
  input m00_axi_aclk;
  input [3:0]\num_elements_reg[7] ;
  input [3:0]\num_elements_reg[15] ;
  input m00_axi_aresetn;
  input m00_axi_aresetn_0;
  input \FSM_sequential_current_state_reg[1] ;
  input ila_smax_exp_fifo_valid;
  input summing_complete_reg;
  input empty_fwft_i_reg;
  input [1:0]\current_state_reg[1]_0 ;
  input [15:0]\num_elements_reg[15]_0 ;
  input full;
  input [31:0]dout;
  input m00_axi_aresetn_1;
  input m00_axi_aresetn_2;
  input [31:0]D;
  input m00_axi_aresetn_3;

  wire [0:0]CO;
  wire [31:0]D;
  wire \FSM_sequential_current_state_reg[1] ;
  wire [1:0]Q;
  wire \current_state[0]_i_2__1_n_0 ;
  wire \current_state[1]_i_2__0_n_0 ;
  wire [1:0]\current_state_reg[1]_0 ;
  wire \dividend[0]_i_1_n_0 ;
  wire \dividend[10]_i_1_n_0 ;
  wire \dividend[11]_i_1_n_0 ;
  wire \dividend[12]_i_1_n_0 ;
  wire \dividend[13]_i_1_n_0 ;
  wire \dividend[14]_i_1_n_0 ;
  wire \dividend[15]_i_1_n_0 ;
  wire \dividend[16]_i_1_n_0 ;
  wire \dividend[17]_i_1_n_0 ;
  wire \dividend[18]_i_1_n_0 ;
  wire \dividend[19]_i_1_n_0 ;
  wire \dividend[1]_i_1_n_0 ;
  wire \dividend[20]_i_1_n_0 ;
  wire \dividend[21]_i_1_n_0 ;
  wire \dividend[22]_i_1_n_0 ;
  wire \dividend[23]_i_1_n_0 ;
  wire \dividend[24]_i_1_n_0 ;
  wire \dividend[25]_i_1_n_0 ;
  wire \dividend[26]_i_1_n_0 ;
  wire \dividend[27]_i_1_n_0 ;
  wire \dividend[28]_i_1_n_0 ;
  wire \dividend[29]_i_1_n_0 ;
  wire \dividend[2]_i_1_n_0 ;
  wire \dividend[30]_i_1_n_0 ;
  wire \dividend[31]_i_1_n_0 ;
  wire \dividend[3]_i_1_n_0 ;
  wire \dividend[4]_i_1_n_0 ;
  wire \dividend[5]_i_1_n_0 ;
  wire \dividend[6]_i_1_n_0 ;
  wire \dividend[7]_i_1_n_0 ;
  wire \dividend[8]_i_1_n_0 ;
  wire \dividend[9]_i_1_n_0 ;
  wire division_complete_i_1_n_0;
  wire \division_reg[0]_i_1_n_0 ;
  wire \division_reg[10]_i_1_n_0 ;
  wire \division_reg[11]_i_1_n_0 ;
  wire \division_reg[12]_i_1_n_0 ;
  wire \division_reg[13]_i_1_n_0 ;
  wire \division_reg[14]_i_1_n_0 ;
  wire \division_reg[15]_i_1_n_0 ;
  wire \division_reg[16]_i_1_n_0 ;
  wire \division_reg[17]_i_1_n_0 ;
  wire \division_reg[18]_i_1_n_0 ;
  wire \division_reg[19]_i_1_n_0 ;
  wire \division_reg[1]_i_1_n_0 ;
  wire \division_reg[20]_i_1_n_0 ;
  wire \division_reg[21]_i_1_n_0 ;
  wire \division_reg[22]_i_1_n_0 ;
  wire \division_reg[23]_i_1_n_0 ;
  wire \division_reg[24]_i_1_n_0 ;
  wire \division_reg[25]_i_1_n_0 ;
  wire \division_reg[26]_i_1_n_0 ;
  wire \division_reg[27]_i_1_n_0 ;
  wire \division_reg[28]_i_1_n_0 ;
  wire \division_reg[29]_i_1_n_0 ;
  wire \division_reg[2]_i_1_n_0 ;
  wire \division_reg[30]_i_1_n_0 ;
  wire \division_reg[31]_i_1_n_0 ;
  wire \division_reg[31]_i_2_n_0 ;
  wire \division_reg[3]_i_1_n_0 ;
  wire \division_reg[4]_i_1_n_0 ;
  wire \division_reg[5]_i_1_n_0 ;
  wire \division_reg[6]_i_1_n_0 ;
  wire \division_reg[7]_i_1_n_0 ;
  wire \division_reg[8]_i_1_n_0 ;
  wire \division_reg[9]_i_1_n_0 ;
  wire \divisor[31]_i_1_n_0 ;
  wire [31:0]dout;
  wire empty_fwft_i_reg;
  wire full;
  wire \hold_counter[0]_i_1__0_n_0 ;
  wire \hold_counter[1]_i_1__0_n_0 ;
  wire \hold_counter[2]_i_1__0_n_0 ;
  wire \hold_counter[3]_i_1__1_n_0 ;
  wire \hold_counter[4]_i_1_n_0 ;
  wire \hold_counter[4]_i_2_n_0 ;
  wire i__carry__0_i_5__1_n_0;
  wire i__carry__0_i_6__1_n_0;
  wire i__carry__0_i_7__1_n_0;
  wire i__carry__0_i_8__1_n_0;
  wire i__carry_i_5__1_n_0;
  wire i__carry_i_6__1_n_0;
  wire i__carry_i_7__1_n_0;
  wire i__carry_i_8__1_n_0;
  wire [31:0]ila_smax_dw_dividend;
  wire ila_smax_dw_division_complete;
  wire [31:0]ila_smax_dw_division_reg;
  wire [31:0]ila_smax_dw_divisor;
  wire [4:0]\ila_smax_dw_hold_counter[4] ;
  wire [31:0]ila_smax_dw_quotient;
  wire [15:0]\ila_smax_dw_quotient_counter[15] ;
  wire ila_smax_dw_quotient_result_valid;
  wire ila_smax_dw_rd_en;
  wire ila_smax_exp_fifo_rd_en;
  wire ila_smax_exp_fifo_valid;
  wire m00_axi_aclk;
  wire m00_axi_aresetn;
  wire m00_axi_aresetn_0;
  wire m00_axi_aresetn_1;
  wire m00_axi_aresetn_2;
  wire m00_axi_aresetn_3;
  wire [1:0]next_state;
  wire \next_state1_inferred__0/i__carry__0_n_1 ;
  wire \next_state1_inferred__0/i__carry__0_n_2 ;
  wire \next_state1_inferred__0/i__carry__0_n_3 ;
  wire \next_state1_inferred__0/i__carry_n_0 ;
  wire \next_state1_inferred__0/i__carry_n_1 ;
  wire \next_state1_inferred__0/i__carry_n_2 ;
  wire \next_state1_inferred__0/i__carry_n_3 ;
  wire [3:0]\num_elements_reg[15] ;
  wire [15:0]\num_elements_reg[15]_0 ;
  wire [3:0]\num_elements_reg[7] ;
  wire outbuff_din1;
  wire [31:0]\outbuff_din_reg[31] ;
  wire \quotient_counter[0]_i_1_n_0 ;
  wire \quotient_counter[10]_i_1_n_0 ;
  wire \quotient_counter[11]_i_1_n_0 ;
  wire \quotient_counter[12]_i_1_n_0 ;
  wire \quotient_counter[12]_i_3_n_0 ;
  wire \quotient_counter[12]_i_4_n_0 ;
  wire \quotient_counter[12]_i_5_n_0 ;
  wire \quotient_counter[12]_i_6_n_0 ;
  wire \quotient_counter[13]_i_1_n_0 ;
  wire \quotient_counter[14]_i_1_n_0 ;
  wire \quotient_counter[15]_i_1_n_0 ;
  wire \quotient_counter[15]_i_2_n_0 ;
  wire \quotient_counter[15]_i_4_n_0 ;
  wire \quotient_counter[15]_i_5_n_0 ;
  wire \quotient_counter[15]_i_6_n_0 ;
  wire \quotient_counter[1]_i_1_n_0 ;
  wire \quotient_counter[2]_i_1_n_0 ;
  wire \quotient_counter[3]_i_1_n_0 ;
  wire \quotient_counter[4]_i_1_n_0 ;
  wire \quotient_counter[4]_i_3_n_0 ;
  wire \quotient_counter[4]_i_4_n_0 ;
  wire \quotient_counter[4]_i_5_n_0 ;
  wire \quotient_counter[4]_i_6_n_0 ;
  wire \quotient_counter[5]_i_1_n_0 ;
  wire \quotient_counter[6]_i_1_n_0 ;
  wire \quotient_counter[7]_i_1_n_0 ;
  wire \quotient_counter[8]_i_1_n_0 ;
  wire \quotient_counter[8]_i_3_n_0 ;
  wire \quotient_counter[8]_i_4_n_0 ;
  wire \quotient_counter[8]_i_5_n_0 ;
  wire \quotient_counter[8]_i_6_n_0 ;
  wire \quotient_counter[9]_i_1_n_0 ;
  wire \quotient_counter_reg[12]_i_2_n_0 ;
  wire \quotient_counter_reg[12]_i_2_n_1 ;
  wire \quotient_counter_reg[12]_i_2_n_2 ;
  wire \quotient_counter_reg[12]_i_2_n_3 ;
  wire \quotient_counter_reg[12]_i_2_n_4 ;
  wire \quotient_counter_reg[12]_i_2_n_5 ;
  wire \quotient_counter_reg[12]_i_2_n_6 ;
  wire \quotient_counter_reg[12]_i_2_n_7 ;
  wire \quotient_counter_reg[15]_i_3_n_2 ;
  wire \quotient_counter_reg[15]_i_3_n_3 ;
  wire \quotient_counter_reg[15]_i_3_n_5 ;
  wire \quotient_counter_reg[15]_i_3_n_6 ;
  wire \quotient_counter_reg[15]_i_3_n_7 ;
  wire \quotient_counter_reg[4]_i_2_n_0 ;
  wire \quotient_counter_reg[4]_i_2_n_1 ;
  wire \quotient_counter_reg[4]_i_2_n_2 ;
  wire \quotient_counter_reg[4]_i_2_n_3 ;
  wire \quotient_counter_reg[4]_i_2_n_4 ;
  wire \quotient_counter_reg[4]_i_2_n_5 ;
  wire \quotient_counter_reg[4]_i_2_n_6 ;
  wire \quotient_counter_reg[4]_i_2_n_7 ;
  wire \quotient_counter_reg[8]_i_2_n_0 ;
  wire \quotient_counter_reg[8]_i_2_n_1 ;
  wire \quotient_counter_reg[8]_i_2_n_2 ;
  wire \quotient_counter_reg[8]_i_2_n_3 ;
  wire \quotient_counter_reg[8]_i_2_n_4 ;
  wire \quotient_counter_reg[8]_i_2_n_5 ;
  wire \quotient_counter_reg[8]_i_2_n_6 ;
  wire \quotient_counter_reg[8]_i_2_n_7 ;
  wire quotient_result_valid_i_1_n_0;
  wire summing_complete_reg;
  wire [3:0]\NLW_next_state1_inferred__0/i__carry_O_UNCONNECTED ;
  wire [3:0]\NLW_next_state1_inferred__0/i__carry__0_O_UNCONNECTED ;
  wire [3:2]\NLW_quotient_counter_reg[15]_i_3_CO_UNCONNECTED ;
  wire [3:3]\NLW_quotient_counter_reg[15]_i_3_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hAAAA0080)) 
    \current_state[0]_i_1__1 
       (.I0(\current_state[0]_i_2__1_n_0 ),
        .I1(ila_smax_exp_fifo_valid),
        .I2(summing_complete_reg),
        .I3(empty_fwft_i_reg),
        .I4(Q[1]),
        .O(next_state[0]));
  LUT6 #(
    .INIT(64'h7343434343434343)) 
    \current_state[0]_i_2__1 
       (.I0(\FSM_sequential_current_state_reg[1] ),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(\ila_smax_dw_hold_counter[4] [4]),
        .I4(\ila_smax_dw_hold_counter[4] [3]),
        .I5(\ila_smax_dw_hold_counter[4] [2]),
        .O(\current_state[0]_i_2__1_n_0 ));
  LUT5 #(
    .INIT(32'h7747CCCC)) 
    \current_state[1]_i_1__1 
       (.I0(\FSM_sequential_current_state_reg[1] ),
        .I1(Q[0]),
        .I2(CO),
        .I3(\current_state[1]_i_2__0_n_0 ),
        .I4(Q[1]),
        .O(next_state[1]));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    \current_state[1]_i_2__0 
       (.I0(\ila_smax_dw_hold_counter[4] [2]),
        .I1(\ila_smax_dw_hold_counter[4] [3]),
        .I2(\ila_smax_dw_hold_counter[4] [4]),
        .O(\current_state[1]_i_2__0_n_0 ));
  FDCE \current_state_reg[0] 
       (.C(m00_axi_aclk),
        .CE(1'b1),
        .CLR(m00_axi_aresetn_1),
        .D(next_state[0]),
        .Q(Q[0]));
  FDCE \current_state_reg[1] 
       (.C(m00_axi_aclk),
        .CE(1'b1),
        .CLR(m00_axi_aresetn_1),
        .D(next_state[1]),
        .Q(Q[1]));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \dividend[0]_i_1 
       (.I0(dout[0]),
        .I1(Q[0]),
        .O(\dividend[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \dividend[10]_i_1 
       (.I0(dout[10]),
        .I1(Q[0]),
        .O(\dividend[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \dividend[11]_i_1 
       (.I0(dout[11]),
        .I1(Q[0]),
        .O(\dividend[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \dividend[12]_i_1 
       (.I0(dout[12]),
        .I1(Q[0]),
        .O(\dividend[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \dividend[13]_i_1 
       (.I0(dout[13]),
        .I1(Q[0]),
        .O(\dividend[13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \dividend[14]_i_1 
       (.I0(dout[14]),
        .I1(Q[0]),
        .O(\dividend[14]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \dividend[15]_i_1 
       (.I0(dout[15]),
        .I1(Q[0]),
        .O(\dividend[15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \dividend[16]_i_1 
       (.I0(dout[16]),
        .I1(Q[0]),
        .O(\dividend[16]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \dividend[17]_i_1 
       (.I0(dout[17]),
        .I1(Q[0]),
        .O(\dividend[17]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \dividend[18]_i_1 
       (.I0(dout[18]),
        .I1(Q[0]),
        .O(\dividend[18]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \dividend[19]_i_1 
       (.I0(dout[19]),
        .I1(Q[0]),
        .O(\dividend[19]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \dividend[1]_i_1 
       (.I0(dout[1]),
        .I1(Q[0]),
        .O(\dividend[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \dividend[20]_i_1 
       (.I0(dout[20]),
        .I1(Q[0]),
        .O(\dividend[20]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \dividend[21]_i_1 
       (.I0(dout[21]),
        .I1(Q[0]),
        .O(\dividend[21]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \dividend[22]_i_1 
       (.I0(dout[22]),
        .I1(Q[0]),
        .O(\dividend[22]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \dividend[23]_i_1 
       (.I0(dout[23]),
        .I1(Q[0]),
        .O(\dividend[23]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \dividend[24]_i_1 
       (.I0(dout[24]),
        .I1(Q[0]),
        .O(\dividend[24]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \dividend[25]_i_1 
       (.I0(dout[25]),
        .I1(Q[0]),
        .O(\dividend[25]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \dividend[26]_i_1 
       (.I0(dout[26]),
        .I1(Q[0]),
        .O(\dividend[26]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \dividend[27]_i_1 
       (.I0(dout[27]),
        .I1(Q[0]),
        .O(\dividend[27]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \dividend[28]_i_1 
       (.I0(dout[28]),
        .I1(Q[0]),
        .O(\dividend[28]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \dividend[29]_i_1 
       (.I0(dout[29]),
        .I1(Q[0]),
        .O(\dividend[29]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \dividend[2]_i_1 
       (.I0(dout[2]),
        .I1(Q[0]),
        .O(\dividend[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \dividend[30]_i_1 
       (.I0(dout[30]),
        .I1(Q[0]),
        .O(\dividend[30]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \dividend[31]_i_1 
       (.I0(dout[31]),
        .I1(Q[0]),
        .O(\dividend[31]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \dividend[3]_i_1 
       (.I0(dout[3]),
        .I1(Q[0]),
        .O(\dividend[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \dividend[4]_i_1 
       (.I0(dout[4]),
        .I1(Q[0]),
        .O(\dividend[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \dividend[5]_i_1 
       (.I0(dout[5]),
        .I1(Q[0]),
        .O(\dividend[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \dividend[6]_i_1 
       (.I0(dout[6]),
        .I1(Q[0]),
        .O(\dividend[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \dividend[7]_i_1 
       (.I0(dout[7]),
        .I1(Q[0]),
        .O(\dividend[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \dividend[8]_i_1 
       (.I0(dout[8]),
        .I1(Q[0]),
        .O(\dividend[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \dividend[9]_i_1 
       (.I0(dout[9]),
        .I1(Q[0]),
        .O(\dividend[9]_i_1_n_0 ));
  FDCE \dividend_reg[0] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(\dividend[0]_i_1_n_0 ),
        .Q(ila_smax_dw_dividend[0]));
  FDCE \dividend_reg[10] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(\dividend[10]_i_1_n_0 ),
        .Q(ila_smax_dw_dividend[10]));
  FDCE \dividend_reg[11] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(\dividend[11]_i_1_n_0 ),
        .Q(ila_smax_dw_dividend[11]));
  FDCE \dividend_reg[12] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(\dividend[12]_i_1_n_0 ),
        .Q(ila_smax_dw_dividend[12]));
  FDCE \dividend_reg[13] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(\dividend[13]_i_1_n_0 ),
        .Q(ila_smax_dw_dividend[13]));
  FDCE \dividend_reg[14] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(\dividend[14]_i_1_n_0 ),
        .Q(ila_smax_dw_dividend[14]));
  FDCE \dividend_reg[15] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(\dividend[15]_i_1_n_0 ),
        .Q(ila_smax_dw_dividend[15]));
  FDCE \dividend_reg[16] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(\dividend[16]_i_1_n_0 ),
        .Q(ila_smax_dw_dividend[16]));
  FDCE \dividend_reg[17] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(\dividend[17]_i_1_n_0 ),
        .Q(ila_smax_dw_dividend[17]));
  FDCE \dividend_reg[18] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(\dividend[18]_i_1_n_0 ),
        .Q(ila_smax_dw_dividend[18]));
  FDCE \dividend_reg[19] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(\dividend[19]_i_1_n_0 ),
        .Q(ila_smax_dw_dividend[19]));
  FDCE \dividend_reg[1] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(\dividend[1]_i_1_n_0 ),
        .Q(ila_smax_dw_dividend[1]));
  FDCE \dividend_reg[20] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(\dividend[20]_i_1_n_0 ),
        .Q(ila_smax_dw_dividend[20]));
  FDCE \dividend_reg[21] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(\dividend[21]_i_1_n_0 ),
        .Q(ila_smax_dw_dividend[21]));
  FDCE \dividend_reg[22] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(\dividend[22]_i_1_n_0 ),
        .Q(ila_smax_dw_dividend[22]));
  FDCE \dividend_reg[23] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(\dividend[23]_i_1_n_0 ),
        .Q(ila_smax_dw_dividend[23]));
  FDCE \dividend_reg[24] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(\dividend[24]_i_1_n_0 ),
        .Q(ila_smax_dw_dividend[24]));
  FDCE \dividend_reg[25] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(\dividend[25]_i_1_n_0 ),
        .Q(ila_smax_dw_dividend[25]));
  FDCE \dividend_reg[26] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(\dividend[26]_i_1_n_0 ),
        .Q(ila_smax_dw_dividend[26]));
  FDCE \dividend_reg[27] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(\dividend[27]_i_1_n_0 ),
        .Q(ila_smax_dw_dividend[27]));
  FDCE \dividend_reg[28] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(\dividend[28]_i_1_n_0 ),
        .Q(ila_smax_dw_dividend[28]));
  FDCE \dividend_reg[29] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(\dividend[29]_i_1_n_0 ),
        .Q(ila_smax_dw_dividend[29]));
  FDCE \dividend_reg[2] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(\dividend[2]_i_1_n_0 ),
        .Q(ila_smax_dw_dividend[2]));
  FDCE \dividend_reg[30] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(\dividend[30]_i_1_n_0 ),
        .Q(ila_smax_dw_dividend[30]));
  FDCE \dividend_reg[31] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(\dividend[31]_i_1_n_0 ),
        .Q(ila_smax_dw_dividend[31]));
  FDCE \dividend_reg[3] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(\dividend[3]_i_1_n_0 ),
        .Q(ila_smax_dw_dividend[3]));
  FDCE \dividend_reg[4] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(\dividend[4]_i_1_n_0 ),
        .Q(ila_smax_dw_dividend[4]));
  FDCE \dividend_reg[5] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(\dividend[5]_i_1_n_0 ),
        .Q(ila_smax_dw_dividend[5]));
  FDCE \dividend_reg[6] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(\dividend[6]_i_1_n_0 ),
        .Q(ila_smax_dw_dividend[6]));
  FDCE \dividend_reg[7] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(\dividend[7]_i_1_n_0 ),
        .Q(ila_smax_dw_dividend[7]));
  FDCE \dividend_reg[8] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(\dividend[8]_i_1_n_0 ),
        .Q(ila_smax_dw_dividend[8]));
  FDCE \dividend_reg[9] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(\dividend[9]_i_1_n_0 ),
        .Q(ila_smax_dw_dividend[9]));
  final_accelerator_Softmax_Layer_32bit_0_0_softmax_divider_32bit divider
       (.a(ila_smax_dw_dividend),
        .b(ila_smax_dw_divisor),
        .clk(m00_axi_aclk),
        .result(ila_smax_dw_quotient));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    division_complete_i_1
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(ila_smax_dw_division_complete),
        .O(division_complete_i_1_n_0));
  FDCE division_complete_reg
       (.C(m00_axi_aclk),
        .CE(1'b1),
        .CLR(m00_axi_aresetn),
        .D(division_complete_i_1_n_0),
        .Q(ila_smax_dw_division_complete));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \division_reg[0]_i_1 
       (.I0(Q[1]),
        .I1(ila_smax_dw_quotient[0]),
        .O(\division_reg[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \division_reg[10]_i_1 
       (.I0(Q[1]),
        .I1(ila_smax_dw_quotient[10]),
        .O(\division_reg[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \division_reg[11]_i_1 
       (.I0(Q[1]),
        .I1(ila_smax_dw_quotient[11]),
        .O(\division_reg[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \division_reg[12]_i_1 
       (.I0(Q[1]),
        .I1(ila_smax_dw_quotient[12]),
        .O(\division_reg[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \division_reg[13]_i_1 
       (.I0(Q[1]),
        .I1(ila_smax_dw_quotient[13]),
        .O(\division_reg[13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \division_reg[14]_i_1 
       (.I0(Q[1]),
        .I1(ila_smax_dw_quotient[14]),
        .O(\division_reg[14]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \division_reg[15]_i_1 
       (.I0(Q[1]),
        .I1(ila_smax_dw_quotient[15]),
        .O(\division_reg[15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \division_reg[16]_i_1 
       (.I0(Q[1]),
        .I1(ila_smax_dw_quotient[16]),
        .O(\division_reg[16]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \division_reg[17]_i_1 
       (.I0(Q[1]),
        .I1(ila_smax_dw_quotient[17]),
        .O(\division_reg[17]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \division_reg[18]_i_1 
       (.I0(Q[1]),
        .I1(ila_smax_dw_quotient[18]),
        .O(\division_reg[18]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \division_reg[19]_i_1 
       (.I0(Q[1]),
        .I1(ila_smax_dw_quotient[19]),
        .O(\division_reg[19]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \division_reg[1]_i_1 
       (.I0(Q[1]),
        .I1(ila_smax_dw_quotient[1]),
        .O(\division_reg[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \division_reg[20]_i_1 
       (.I0(Q[1]),
        .I1(ila_smax_dw_quotient[20]),
        .O(\division_reg[20]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \division_reg[21]_i_1 
       (.I0(Q[1]),
        .I1(ila_smax_dw_quotient[21]),
        .O(\division_reg[21]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \division_reg[22]_i_1 
       (.I0(Q[1]),
        .I1(ila_smax_dw_quotient[22]),
        .O(\division_reg[22]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \division_reg[23]_i_1 
       (.I0(Q[1]),
        .I1(ila_smax_dw_quotient[23]),
        .O(\division_reg[23]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \division_reg[24]_i_1 
       (.I0(Q[1]),
        .I1(ila_smax_dw_quotient[24]),
        .O(\division_reg[24]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \division_reg[25]_i_1 
       (.I0(Q[1]),
        .I1(ila_smax_dw_quotient[25]),
        .O(\division_reg[25]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \division_reg[26]_i_1 
       (.I0(Q[1]),
        .I1(ila_smax_dw_quotient[26]),
        .O(\division_reg[26]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \division_reg[27]_i_1 
       (.I0(Q[1]),
        .I1(ila_smax_dw_quotient[27]),
        .O(\division_reg[27]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \division_reg[28]_i_1 
       (.I0(Q[1]),
        .I1(ila_smax_dw_quotient[28]),
        .O(\division_reg[28]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \division_reg[29]_i_1 
       (.I0(Q[1]),
        .I1(ila_smax_dw_quotient[29]),
        .O(\division_reg[29]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \division_reg[2]_i_1 
       (.I0(Q[1]),
        .I1(ila_smax_dw_quotient[2]),
        .O(\division_reg[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \division_reg[30]_i_1 
       (.I0(Q[1]),
        .I1(ila_smax_dw_quotient[30]),
        .O(\division_reg[30]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h000080FF)) 
    \division_reg[31]_i_1 
       (.I0(\ila_smax_dw_hold_counter[4] [2]),
        .I1(\ila_smax_dw_hold_counter[4] [3]),
        .I2(\ila_smax_dw_hold_counter[4] [4]),
        .I3(Q[1]),
        .I4(Q[0]),
        .O(\division_reg[31]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \division_reg[31]_i_2 
       (.I0(Q[1]),
        .I1(ila_smax_dw_quotient[31]),
        .O(\division_reg[31]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \division_reg[3]_i_1 
       (.I0(Q[1]),
        .I1(ila_smax_dw_quotient[3]),
        .O(\division_reg[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \division_reg[4]_i_1 
       (.I0(Q[1]),
        .I1(ila_smax_dw_quotient[4]),
        .O(\division_reg[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \division_reg[5]_i_1 
       (.I0(Q[1]),
        .I1(ila_smax_dw_quotient[5]),
        .O(\division_reg[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \division_reg[6]_i_1 
       (.I0(Q[1]),
        .I1(ila_smax_dw_quotient[6]),
        .O(\division_reg[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \division_reg[7]_i_1 
       (.I0(Q[1]),
        .I1(ila_smax_dw_quotient[7]),
        .O(\division_reg[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \division_reg[8]_i_1 
       (.I0(Q[1]),
        .I1(ila_smax_dw_quotient[8]),
        .O(\division_reg[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \division_reg[9]_i_1 
       (.I0(Q[1]),
        .I1(ila_smax_dw_quotient[9]),
        .O(\division_reg[9]_i_1_n_0 ));
  FDCE \division_reg_reg[0] 
       (.C(m00_axi_aclk),
        .CE(\division_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn),
        .D(\division_reg[0]_i_1_n_0 ),
        .Q(ila_smax_dw_division_reg[0]));
  FDCE \division_reg_reg[10] 
       (.C(m00_axi_aclk),
        .CE(\division_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn),
        .D(\division_reg[10]_i_1_n_0 ),
        .Q(ila_smax_dw_division_reg[10]));
  FDCE \division_reg_reg[11] 
       (.C(m00_axi_aclk),
        .CE(\division_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn),
        .D(\division_reg[11]_i_1_n_0 ),
        .Q(ila_smax_dw_division_reg[11]));
  FDCE \division_reg_reg[12] 
       (.C(m00_axi_aclk),
        .CE(\division_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn),
        .D(\division_reg[12]_i_1_n_0 ),
        .Q(ila_smax_dw_division_reg[12]));
  FDCE \division_reg_reg[13] 
       (.C(m00_axi_aclk),
        .CE(\division_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn),
        .D(\division_reg[13]_i_1_n_0 ),
        .Q(ila_smax_dw_division_reg[13]));
  FDCE \division_reg_reg[14] 
       (.C(m00_axi_aclk),
        .CE(\division_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn),
        .D(\division_reg[14]_i_1_n_0 ),
        .Q(ila_smax_dw_division_reg[14]));
  FDCE \division_reg_reg[15] 
       (.C(m00_axi_aclk),
        .CE(\division_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn),
        .D(\division_reg[15]_i_1_n_0 ),
        .Q(ila_smax_dw_division_reg[15]));
  FDCE \division_reg_reg[16] 
       (.C(m00_axi_aclk),
        .CE(\division_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn),
        .D(\division_reg[16]_i_1_n_0 ),
        .Q(ila_smax_dw_division_reg[16]));
  FDCE \division_reg_reg[17] 
       (.C(m00_axi_aclk),
        .CE(\division_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn),
        .D(\division_reg[17]_i_1_n_0 ),
        .Q(ila_smax_dw_division_reg[17]));
  FDCE \division_reg_reg[18] 
       (.C(m00_axi_aclk),
        .CE(\division_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn),
        .D(\division_reg[18]_i_1_n_0 ),
        .Q(ila_smax_dw_division_reg[18]));
  FDCE \division_reg_reg[19] 
       (.C(m00_axi_aclk),
        .CE(\division_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn),
        .D(\division_reg[19]_i_1_n_0 ),
        .Q(ila_smax_dw_division_reg[19]));
  FDCE \division_reg_reg[1] 
       (.C(m00_axi_aclk),
        .CE(\division_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn),
        .D(\division_reg[1]_i_1_n_0 ),
        .Q(ila_smax_dw_division_reg[1]));
  FDCE \division_reg_reg[20] 
       (.C(m00_axi_aclk),
        .CE(\division_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn),
        .D(\division_reg[20]_i_1_n_0 ),
        .Q(ila_smax_dw_division_reg[20]));
  FDCE \division_reg_reg[21] 
       (.C(m00_axi_aclk),
        .CE(\division_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn),
        .D(\division_reg[21]_i_1_n_0 ),
        .Q(ila_smax_dw_division_reg[21]));
  FDCE \division_reg_reg[22] 
       (.C(m00_axi_aclk),
        .CE(\division_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn),
        .D(\division_reg[22]_i_1_n_0 ),
        .Q(ila_smax_dw_division_reg[22]));
  FDCE \division_reg_reg[23] 
       (.C(m00_axi_aclk),
        .CE(\division_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn),
        .D(\division_reg[23]_i_1_n_0 ),
        .Q(ila_smax_dw_division_reg[23]));
  FDCE \division_reg_reg[24] 
       (.C(m00_axi_aclk),
        .CE(\division_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn),
        .D(\division_reg[24]_i_1_n_0 ),
        .Q(ila_smax_dw_division_reg[24]));
  FDCE \division_reg_reg[25] 
       (.C(m00_axi_aclk),
        .CE(\division_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn),
        .D(\division_reg[25]_i_1_n_0 ),
        .Q(ila_smax_dw_division_reg[25]));
  FDCE \division_reg_reg[26] 
       (.C(m00_axi_aclk),
        .CE(\division_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn),
        .D(\division_reg[26]_i_1_n_0 ),
        .Q(ila_smax_dw_division_reg[26]));
  FDCE \division_reg_reg[27] 
       (.C(m00_axi_aclk),
        .CE(\division_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn),
        .D(\division_reg[27]_i_1_n_0 ),
        .Q(ila_smax_dw_division_reg[27]));
  FDCE \division_reg_reg[28] 
       (.C(m00_axi_aclk),
        .CE(\division_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn),
        .D(\division_reg[28]_i_1_n_0 ),
        .Q(ila_smax_dw_division_reg[28]));
  FDCE \division_reg_reg[29] 
       (.C(m00_axi_aclk),
        .CE(\division_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn),
        .D(\division_reg[29]_i_1_n_0 ),
        .Q(ila_smax_dw_division_reg[29]));
  FDCE \division_reg_reg[2] 
       (.C(m00_axi_aclk),
        .CE(\division_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn),
        .D(\division_reg[2]_i_1_n_0 ),
        .Q(ila_smax_dw_division_reg[2]));
  FDCE \division_reg_reg[30] 
       (.C(m00_axi_aclk),
        .CE(\division_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn),
        .D(\division_reg[30]_i_1_n_0 ),
        .Q(ila_smax_dw_division_reg[30]));
  FDCE \division_reg_reg[31] 
       (.C(m00_axi_aclk),
        .CE(\division_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn),
        .D(\division_reg[31]_i_2_n_0 ),
        .Q(ila_smax_dw_division_reg[31]));
  FDCE \division_reg_reg[3] 
       (.C(m00_axi_aclk),
        .CE(\division_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn),
        .D(\division_reg[3]_i_1_n_0 ),
        .Q(ila_smax_dw_division_reg[3]));
  FDCE \division_reg_reg[4] 
       (.C(m00_axi_aclk),
        .CE(\division_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn),
        .D(\division_reg[4]_i_1_n_0 ),
        .Q(ila_smax_dw_division_reg[4]));
  FDCE \division_reg_reg[5] 
       (.C(m00_axi_aclk),
        .CE(\division_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn),
        .D(\division_reg[5]_i_1_n_0 ),
        .Q(ila_smax_dw_division_reg[5]));
  FDCE \division_reg_reg[6] 
       (.C(m00_axi_aclk),
        .CE(\division_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn),
        .D(\division_reg[6]_i_1_n_0 ),
        .Q(ila_smax_dw_division_reg[6]));
  FDCE \division_reg_reg[7] 
       (.C(m00_axi_aclk),
        .CE(\division_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn),
        .D(\division_reg[7]_i_1_n_0 ),
        .Q(ila_smax_dw_division_reg[7]));
  FDCE \division_reg_reg[8] 
       (.C(m00_axi_aclk),
        .CE(\division_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn),
        .D(\division_reg[8]_i_1_n_0 ),
        .Q(ila_smax_dw_division_reg[8]));
  FDCE \division_reg_reg[9] 
       (.C(m00_axi_aclk),
        .CE(\division_reg[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn),
        .D(\division_reg[9]_i_1_n_0 ),
        .Q(ila_smax_dw_division_reg[9]));
  LUT3 #(
    .INIT(8'h45)) 
    \divisor[31]_i_1 
       (.I0(Q[1]),
        .I1(CO),
        .I2(Q[0]),
        .O(\divisor[31]_i_1_n_0 ));
  FDCE \divisor_reg[0] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(D[0]),
        .Q(ila_smax_dw_divisor[0]));
  FDCE \divisor_reg[10] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(D[10]),
        .Q(ila_smax_dw_divisor[10]));
  FDCE \divisor_reg[11] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(D[11]),
        .Q(ila_smax_dw_divisor[11]));
  FDCE \divisor_reg[12] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(D[12]),
        .Q(ila_smax_dw_divisor[12]));
  FDCE \divisor_reg[13] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(D[13]),
        .Q(ila_smax_dw_divisor[13]));
  FDCE \divisor_reg[14] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(D[14]),
        .Q(ila_smax_dw_divisor[14]));
  FDCE \divisor_reg[15] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(D[15]),
        .Q(ila_smax_dw_divisor[15]));
  FDCE \divisor_reg[16] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(D[16]),
        .Q(ila_smax_dw_divisor[16]));
  FDCE \divisor_reg[17] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(D[17]),
        .Q(ila_smax_dw_divisor[17]));
  FDCE \divisor_reg[18] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(D[18]),
        .Q(ila_smax_dw_divisor[18]));
  FDCE \divisor_reg[19] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(D[19]),
        .Q(ila_smax_dw_divisor[19]));
  FDCE \divisor_reg[1] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(D[1]),
        .Q(ila_smax_dw_divisor[1]));
  FDCE \divisor_reg[20] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(D[20]),
        .Q(ila_smax_dw_divisor[20]));
  FDCE \divisor_reg[21] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(D[21]),
        .Q(ila_smax_dw_divisor[21]));
  FDCE \divisor_reg[22] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(D[22]),
        .Q(ila_smax_dw_divisor[22]));
  FDCE \divisor_reg[23] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(D[23]),
        .Q(ila_smax_dw_divisor[23]));
  FDCE \divisor_reg[24] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(D[24]),
        .Q(ila_smax_dw_divisor[24]));
  FDCE \divisor_reg[25] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(D[25]),
        .Q(ila_smax_dw_divisor[25]));
  FDCE \divisor_reg[26] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(D[26]),
        .Q(ila_smax_dw_divisor[26]));
  FDCE \divisor_reg[27] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(D[27]),
        .Q(ila_smax_dw_divisor[27]));
  FDCE \divisor_reg[28] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(D[28]),
        .Q(ila_smax_dw_divisor[28]));
  FDCE \divisor_reg[29] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(D[29]),
        .Q(ila_smax_dw_divisor[29]));
  FDCE \divisor_reg[2] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(D[2]),
        .Q(ila_smax_dw_divisor[2]));
  FDCE \divisor_reg[30] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(D[30]),
        .Q(ila_smax_dw_divisor[30]));
  FDCE \divisor_reg[31] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(D[31]),
        .Q(ila_smax_dw_divisor[31]));
  FDCE \divisor_reg[3] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(D[3]),
        .Q(ila_smax_dw_divisor[3]));
  FDCE \divisor_reg[4] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(D[4]),
        .Q(ila_smax_dw_divisor[4]));
  FDCE \divisor_reg[5] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(D[5]),
        .Q(ila_smax_dw_divisor[5]));
  FDCE \divisor_reg[6] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(D[6]),
        .Q(ila_smax_dw_divisor[6]));
  FDCE \divisor_reg[7] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(D[7]),
        .Q(ila_smax_dw_divisor[7]));
  FDCE \divisor_reg[8] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(D[8]),
        .Q(ila_smax_dw_divisor[8]));
  FDCE \divisor_reg[9] 
       (.C(m00_axi_aclk),
        .CE(\divisor[31]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_3),
        .D(D[9]),
        .Q(ila_smax_dw_divisor[9]));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT5 #(
    .INIT(32'h15550000)) 
    \hold_counter[0]_i_1__0 
       (.I0(\ila_smax_dw_hold_counter[4] [0]),
        .I1(\ila_smax_dw_hold_counter[4] [2]),
        .I2(\ila_smax_dw_hold_counter[4] [3]),
        .I3(\ila_smax_dw_hold_counter[4] [4]),
        .I4(Q[1]),
        .O(\hold_counter[0]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0666666600000000)) 
    \hold_counter[1]_i_1__0 
       (.I0(\ila_smax_dw_hold_counter[4] [1]),
        .I1(\ila_smax_dw_hold_counter[4] [0]),
        .I2(\ila_smax_dw_hold_counter[4] [2]),
        .I3(\ila_smax_dw_hold_counter[4] [3]),
        .I4(\ila_smax_dw_hold_counter[4] [4]),
        .I5(Q[1]),
        .O(\hold_counter[1]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h00707070F0000000)) 
    \hold_counter[2]_i_1__0 
       (.I0(\ila_smax_dw_hold_counter[4] [3]),
        .I1(\ila_smax_dw_hold_counter[4] [4]),
        .I2(Q[1]),
        .I3(\ila_smax_dw_hold_counter[4] [0]),
        .I4(\ila_smax_dw_hold_counter[4] [1]),
        .I5(\ila_smax_dw_hold_counter[4] [2]),
        .O(\hold_counter[2]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0F807F8000000000)) 
    \hold_counter[3]_i_1__1 
       (.I0(\ila_smax_dw_hold_counter[4] [1]),
        .I1(\ila_smax_dw_hold_counter[4] [0]),
        .I2(\ila_smax_dw_hold_counter[4] [2]),
        .I3(\ila_smax_dw_hold_counter[4] [3]),
        .I4(\ila_smax_dw_hold_counter[4] [4]),
        .I5(Q[1]),
        .O(\hold_counter[3]_i_1__1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \hold_counter[4]_i_1 
       (.I0(Q[0]),
        .O(\hold_counter[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0FFF800000000000)) 
    \hold_counter[4]_i_2 
       (.I0(\ila_smax_dw_hold_counter[4] [0]),
        .I1(\ila_smax_dw_hold_counter[4] [1]),
        .I2(\ila_smax_dw_hold_counter[4] [2]),
        .I3(\ila_smax_dw_hold_counter[4] [3]),
        .I4(\ila_smax_dw_hold_counter[4] [4]),
        .I5(Q[1]),
        .O(\hold_counter[4]_i_2_n_0 ));
  FDCE \hold_counter_reg[0] 
       (.C(m00_axi_aclk),
        .CE(\hold_counter[4]_i_1_n_0 ),
        .CLR(m00_axi_aresetn),
        .D(\hold_counter[0]_i_1__0_n_0 ),
        .Q(\ila_smax_dw_hold_counter[4] [0]));
  FDCE \hold_counter_reg[1] 
       (.C(m00_axi_aclk),
        .CE(\hold_counter[4]_i_1_n_0 ),
        .CLR(m00_axi_aresetn),
        .D(\hold_counter[1]_i_1__0_n_0 ),
        .Q(\ila_smax_dw_hold_counter[4] [1]));
  FDCE \hold_counter_reg[2] 
       (.C(m00_axi_aclk),
        .CE(\hold_counter[4]_i_1_n_0 ),
        .CLR(m00_axi_aresetn),
        .D(\hold_counter[2]_i_1__0_n_0 ),
        .Q(\ila_smax_dw_hold_counter[4] [2]));
  FDCE \hold_counter_reg[3] 
       (.C(m00_axi_aclk),
        .CE(\hold_counter[4]_i_1_n_0 ),
        .CLR(m00_axi_aresetn),
        .D(\hold_counter[3]_i_1__1_n_0 ),
        .Q(\ila_smax_dw_hold_counter[4] [3]));
  FDCE \hold_counter_reg[4] 
       (.C(m00_axi_aclk),
        .CE(\hold_counter[4]_i_1_n_0 ),
        .CLR(m00_axi_aresetn),
        .D(\hold_counter[4]_i_2_n_0 ),
        .Q(\ila_smax_dw_hold_counter[4] [4]));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_5__1
       (.I0(\ila_smax_dw_quotient_counter[15] [15]),
        .I1(\num_elements_reg[15]_0 [15]),
        .I2(\ila_smax_dw_quotient_counter[15] [14]),
        .I3(\num_elements_reg[15]_0 [14]),
        .O(i__carry__0_i_5__1_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_6__1
       (.I0(\ila_smax_dw_quotient_counter[15] [13]),
        .I1(\num_elements_reg[15]_0 [13]),
        .I2(\ila_smax_dw_quotient_counter[15] [12]),
        .I3(\num_elements_reg[15]_0 [12]),
        .O(i__carry__0_i_6__1_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_7__1
       (.I0(\ila_smax_dw_quotient_counter[15] [11]),
        .I1(\num_elements_reg[15]_0 [11]),
        .I2(\ila_smax_dw_quotient_counter[15] [10]),
        .I3(\num_elements_reg[15]_0 [10]),
        .O(i__carry__0_i_7__1_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_8__1
       (.I0(\ila_smax_dw_quotient_counter[15] [9]),
        .I1(\num_elements_reg[15]_0 [9]),
        .I2(\ila_smax_dw_quotient_counter[15] [8]),
        .I3(\num_elements_reg[15]_0 [8]),
        .O(i__carry__0_i_8__1_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_5__1
       (.I0(\ila_smax_dw_quotient_counter[15] [7]),
        .I1(\num_elements_reg[15]_0 [7]),
        .I2(\ila_smax_dw_quotient_counter[15] [6]),
        .I3(\num_elements_reg[15]_0 [6]),
        .O(i__carry_i_5__1_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_6__1
       (.I0(\ila_smax_dw_quotient_counter[15] [5]),
        .I1(\num_elements_reg[15]_0 [5]),
        .I2(\ila_smax_dw_quotient_counter[15] [4]),
        .I3(\num_elements_reg[15]_0 [4]),
        .O(i__carry_i_6__1_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_7__1
       (.I0(\ila_smax_dw_quotient_counter[15] [3]),
        .I1(\num_elements_reg[15]_0 [3]),
        .I2(\ila_smax_dw_quotient_counter[15] [2]),
        .I3(\num_elements_reg[15]_0 [2]),
        .O(i__carry_i_7__1_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_8__1
       (.I0(\ila_smax_dw_quotient_counter[15] [1]),
        .I1(\num_elements_reg[15]_0 [1]),
        .I2(\ila_smax_dw_quotient_counter[15] [0]),
        .I3(\num_elements_reg[15]_0 [0]),
        .O(i__carry_i_8__1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT3 #(
    .INIT(8'h40)) 
    ila_smax_dw_rd_en_INST_0
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(CO),
        .O(ila_smax_dw_rd_en));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT5 #(
    .INIT(32'h08FF0808)) 
    ila_smax_exp_fifo_rd_en_INST_0
       (.I0(CO),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(\current_state_reg[1]_0 [1]),
        .I4(\current_state_reg[1]_0 [0]),
        .O(ila_smax_exp_fifo_rd_en));
  CARRY4 \next_state1_inferred__0/i__carry 
       (.CI(1'b0),
        .CO({\next_state1_inferred__0/i__carry_n_0 ,\next_state1_inferred__0/i__carry_n_1 ,\next_state1_inferred__0/i__carry_n_2 ,\next_state1_inferred__0/i__carry_n_3 }),
        .CYINIT(1'b0),
        .DI(\num_elements_reg[7] ),
        .O(\NLW_next_state1_inferred__0/i__carry_O_UNCONNECTED [3:0]),
        .S({i__carry_i_5__1_n_0,i__carry_i_6__1_n_0,i__carry_i_7__1_n_0,i__carry_i_8__1_n_0}));
  CARRY4 \next_state1_inferred__0/i__carry__0 
       (.CI(\next_state1_inferred__0/i__carry_n_0 ),
        .CO({CO,\next_state1_inferred__0/i__carry__0_n_1 ,\next_state1_inferred__0/i__carry__0_n_2 ,\next_state1_inferred__0/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI(\num_elements_reg[15] ),
        .O(\NLW_next_state1_inferred__0/i__carry__0_O_UNCONNECTED [3:0]),
        .S({i__carry__0_i_5__1_n_0,i__carry__0_i_6__1_n_0,i__carry__0_i_7__1_n_0,i__carry__0_i_8__1_n_0}));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \outbuff_din[0]_i_1 
       (.I0(ila_smax_dw_division_reg[0]),
        .I1(full),
        .I2(ila_smax_dw_quotient_result_valid),
        .I3(ila_smax_dw_division_complete),
        .O(\outbuff_din_reg[31] [0]));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \outbuff_din[10]_i_1 
       (.I0(ila_smax_dw_division_reg[10]),
        .I1(full),
        .I2(ila_smax_dw_quotient_result_valid),
        .I3(ila_smax_dw_division_complete),
        .O(\outbuff_din_reg[31] [10]));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \outbuff_din[11]_i_1 
       (.I0(ila_smax_dw_division_reg[11]),
        .I1(full),
        .I2(ila_smax_dw_quotient_result_valid),
        .I3(ila_smax_dw_division_complete),
        .O(\outbuff_din_reg[31] [11]));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \outbuff_din[12]_i_1 
       (.I0(ila_smax_dw_division_reg[12]),
        .I1(full),
        .I2(ila_smax_dw_quotient_result_valid),
        .I3(ila_smax_dw_division_complete),
        .O(\outbuff_din_reg[31] [12]));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \outbuff_din[13]_i_1 
       (.I0(ila_smax_dw_division_reg[13]),
        .I1(full),
        .I2(ila_smax_dw_quotient_result_valid),
        .I3(ila_smax_dw_division_complete),
        .O(\outbuff_din_reg[31] [13]));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \outbuff_din[14]_i_1 
       (.I0(ila_smax_dw_division_reg[14]),
        .I1(full),
        .I2(ila_smax_dw_quotient_result_valid),
        .I3(ila_smax_dw_division_complete),
        .O(\outbuff_din_reg[31] [14]));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \outbuff_din[15]_i_1 
       (.I0(ila_smax_dw_division_reg[15]),
        .I1(full),
        .I2(ila_smax_dw_quotient_result_valid),
        .I3(ila_smax_dw_division_complete),
        .O(\outbuff_din_reg[31] [15]));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \outbuff_din[16]_i_1 
       (.I0(ila_smax_dw_division_reg[16]),
        .I1(full),
        .I2(ila_smax_dw_quotient_result_valid),
        .I3(ila_smax_dw_division_complete),
        .O(\outbuff_din_reg[31] [16]));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \outbuff_din[17]_i_1 
       (.I0(ila_smax_dw_division_reg[17]),
        .I1(full),
        .I2(ila_smax_dw_quotient_result_valid),
        .I3(ila_smax_dw_division_complete),
        .O(\outbuff_din_reg[31] [17]));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \outbuff_din[18]_i_1 
       (.I0(ila_smax_dw_division_reg[18]),
        .I1(full),
        .I2(ila_smax_dw_quotient_result_valid),
        .I3(ila_smax_dw_division_complete),
        .O(\outbuff_din_reg[31] [18]));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \outbuff_din[19]_i_1 
       (.I0(ila_smax_dw_division_reg[19]),
        .I1(full),
        .I2(ila_smax_dw_quotient_result_valid),
        .I3(ila_smax_dw_division_complete),
        .O(\outbuff_din_reg[31] [19]));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \outbuff_din[1]_i_1 
       (.I0(ila_smax_dw_division_reg[1]),
        .I1(full),
        .I2(ila_smax_dw_quotient_result_valid),
        .I3(ila_smax_dw_division_complete),
        .O(\outbuff_din_reg[31] [1]));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \outbuff_din[20]_i_1 
       (.I0(ila_smax_dw_division_reg[20]),
        .I1(full),
        .I2(ila_smax_dw_quotient_result_valid),
        .I3(ila_smax_dw_division_complete),
        .O(\outbuff_din_reg[31] [20]));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \outbuff_din[21]_i_1 
       (.I0(ila_smax_dw_division_reg[21]),
        .I1(full),
        .I2(ila_smax_dw_quotient_result_valid),
        .I3(ila_smax_dw_division_complete),
        .O(\outbuff_din_reg[31] [21]));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \outbuff_din[22]_i_1 
       (.I0(ila_smax_dw_division_reg[22]),
        .I1(full),
        .I2(ila_smax_dw_quotient_result_valid),
        .I3(ila_smax_dw_division_complete),
        .O(\outbuff_din_reg[31] [22]));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \outbuff_din[23]_i_1 
       (.I0(ila_smax_dw_division_reg[23]),
        .I1(full),
        .I2(ila_smax_dw_quotient_result_valid),
        .I3(ila_smax_dw_division_complete),
        .O(\outbuff_din_reg[31] [23]));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \outbuff_din[24]_i_1 
       (.I0(ila_smax_dw_division_reg[24]),
        .I1(full),
        .I2(ila_smax_dw_quotient_result_valid),
        .I3(ila_smax_dw_division_complete),
        .O(\outbuff_din_reg[31] [24]));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \outbuff_din[25]_i_1 
       (.I0(ila_smax_dw_division_reg[25]),
        .I1(full),
        .I2(ila_smax_dw_quotient_result_valid),
        .I3(ila_smax_dw_division_complete),
        .O(\outbuff_din_reg[31] [25]));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \outbuff_din[26]_i_1 
       (.I0(ila_smax_dw_division_reg[26]),
        .I1(full),
        .I2(ila_smax_dw_quotient_result_valid),
        .I3(ila_smax_dw_division_complete),
        .O(\outbuff_din_reg[31] [26]));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \outbuff_din[27]_i_1 
       (.I0(ila_smax_dw_division_reg[27]),
        .I1(full),
        .I2(ila_smax_dw_quotient_result_valid),
        .I3(ila_smax_dw_division_complete),
        .O(\outbuff_din_reg[31] [27]));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \outbuff_din[28]_i_1 
       (.I0(ila_smax_dw_division_reg[28]),
        .I1(full),
        .I2(ila_smax_dw_quotient_result_valid),
        .I3(ila_smax_dw_division_complete),
        .O(\outbuff_din_reg[31] [28]));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \outbuff_din[29]_i_1 
       (.I0(ila_smax_dw_division_reg[29]),
        .I1(full),
        .I2(ila_smax_dw_quotient_result_valid),
        .I3(ila_smax_dw_division_complete),
        .O(\outbuff_din_reg[31] [29]));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \outbuff_din[2]_i_1 
       (.I0(ila_smax_dw_division_reg[2]),
        .I1(full),
        .I2(ila_smax_dw_quotient_result_valid),
        .I3(ila_smax_dw_division_complete),
        .O(\outbuff_din_reg[31] [2]));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \outbuff_din[30]_i_1 
       (.I0(ila_smax_dw_division_reg[30]),
        .I1(full),
        .I2(ila_smax_dw_quotient_result_valid),
        .I3(ila_smax_dw_division_complete),
        .O(\outbuff_din_reg[31] [30]));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \outbuff_din[31]_i_2 
       (.I0(ila_smax_dw_division_reg[31]),
        .I1(full),
        .I2(ila_smax_dw_quotient_result_valid),
        .I3(ila_smax_dw_division_complete),
        .O(\outbuff_din_reg[31] [31]));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \outbuff_din[3]_i_1 
       (.I0(ila_smax_dw_division_reg[3]),
        .I1(full),
        .I2(ila_smax_dw_quotient_result_valid),
        .I3(ila_smax_dw_division_complete),
        .O(\outbuff_din_reg[31] [3]));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \outbuff_din[4]_i_1 
       (.I0(ila_smax_dw_division_reg[4]),
        .I1(full),
        .I2(ila_smax_dw_quotient_result_valid),
        .I3(ila_smax_dw_division_complete),
        .O(\outbuff_din_reg[31] [4]));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \outbuff_din[5]_i_1 
       (.I0(ila_smax_dw_division_reg[5]),
        .I1(full),
        .I2(ila_smax_dw_quotient_result_valid),
        .I3(ila_smax_dw_division_complete),
        .O(\outbuff_din_reg[31] [5]));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \outbuff_din[6]_i_1 
       (.I0(ila_smax_dw_division_reg[6]),
        .I1(full),
        .I2(ila_smax_dw_quotient_result_valid),
        .I3(ila_smax_dw_division_complete),
        .O(\outbuff_din_reg[31] [6]));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \outbuff_din[7]_i_1 
       (.I0(ila_smax_dw_division_reg[7]),
        .I1(full),
        .I2(ila_smax_dw_quotient_result_valid),
        .I3(ila_smax_dw_division_complete),
        .O(\outbuff_din_reg[31] [7]));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \outbuff_din[8]_i_1 
       (.I0(ila_smax_dw_division_reg[8]),
        .I1(full),
        .I2(ila_smax_dw_quotient_result_valid),
        .I3(ila_smax_dw_division_complete),
        .O(\outbuff_din_reg[31] [8]));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \outbuff_din[9]_i_1 
       (.I0(ila_smax_dw_division_reg[9]),
        .I1(full),
        .I2(ila_smax_dw_quotient_result_valid),
        .I3(ila_smax_dw_division_complete),
        .O(\outbuff_din_reg[31] [9]));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT3 #(
    .INIT(8'h04)) 
    outbuff_wr_en_i_1
       (.I0(full),
        .I1(ila_smax_dw_quotient_result_valid),
        .I2(ila_smax_dw_division_complete),
        .O(outbuff_din1));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \quotient_counter[0]_i_1 
       (.I0(\ila_smax_dw_quotient_counter[15] [0]),
        .I1(Q[0]),
        .I2(CO),
        .O(\quotient_counter[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \quotient_counter[10]_i_1 
       (.I0(\quotient_counter_reg[12]_i_2_n_6 ),
        .I1(Q[0]),
        .I2(CO),
        .O(\quotient_counter[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \quotient_counter[11]_i_1 
       (.I0(\quotient_counter_reg[12]_i_2_n_5 ),
        .I1(Q[0]),
        .I2(CO),
        .O(\quotient_counter[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \quotient_counter[12]_i_1 
       (.I0(\quotient_counter_reg[12]_i_2_n_4 ),
        .I1(Q[0]),
        .I2(CO),
        .O(\quotient_counter[12]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \quotient_counter[12]_i_3 
       (.I0(\ila_smax_dw_quotient_counter[15] [12]),
        .O(\quotient_counter[12]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \quotient_counter[12]_i_4 
       (.I0(\ila_smax_dw_quotient_counter[15] [11]),
        .O(\quotient_counter[12]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \quotient_counter[12]_i_5 
       (.I0(\ila_smax_dw_quotient_counter[15] [10]),
        .O(\quotient_counter[12]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \quotient_counter[12]_i_6 
       (.I0(\ila_smax_dw_quotient_counter[15] [9]),
        .O(\quotient_counter[12]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \quotient_counter[13]_i_1 
       (.I0(\quotient_counter_reg[15]_i_3_n_7 ),
        .I1(Q[0]),
        .I2(CO),
        .O(\quotient_counter[13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \quotient_counter[14]_i_1 
       (.I0(\quotient_counter_reg[15]_i_3_n_6 ),
        .I1(Q[0]),
        .I2(CO),
        .O(\quotient_counter[14]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \quotient_counter[15]_i_1 
       (.I0(Q[1]),
        .O(\quotient_counter[15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \quotient_counter[15]_i_2 
       (.I0(\quotient_counter_reg[15]_i_3_n_5 ),
        .I1(Q[0]),
        .I2(CO),
        .O(\quotient_counter[15]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \quotient_counter[15]_i_4 
       (.I0(\ila_smax_dw_quotient_counter[15] [15]),
        .O(\quotient_counter[15]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \quotient_counter[15]_i_5 
       (.I0(\ila_smax_dw_quotient_counter[15] [14]),
        .O(\quotient_counter[15]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \quotient_counter[15]_i_6 
       (.I0(\ila_smax_dw_quotient_counter[15] [13]),
        .O(\quotient_counter[15]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \quotient_counter[1]_i_1 
       (.I0(\quotient_counter_reg[4]_i_2_n_7 ),
        .I1(Q[0]),
        .I2(CO),
        .O(\quotient_counter[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \quotient_counter[2]_i_1 
       (.I0(\quotient_counter_reg[4]_i_2_n_6 ),
        .I1(Q[0]),
        .I2(CO),
        .O(\quotient_counter[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \quotient_counter[3]_i_1 
       (.I0(\quotient_counter_reg[4]_i_2_n_5 ),
        .I1(Q[0]),
        .I2(CO),
        .O(\quotient_counter[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \quotient_counter[4]_i_1 
       (.I0(\quotient_counter_reg[4]_i_2_n_4 ),
        .I1(Q[0]),
        .I2(CO),
        .O(\quotient_counter[4]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \quotient_counter[4]_i_3 
       (.I0(\ila_smax_dw_quotient_counter[15] [4]),
        .O(\quotient_counter[4]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \quotient_counter[4]_i_4 
       (.I0(\ila_smax_dw_quotient_counter[15] [3]),
        .O(\quotient_counter[4]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \quotient_counter[4]_i_5 
       (.I0(\ila_smax_dw_quotient_counter[15] [2]),
        .O(\quotient_counter[4]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \quotient_counter[4]_i_6 
       (.I0(\ila_smax_dw_quotient_counter[15] [1]),
        .O(\quotient_counter[4]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \quotient_counter[5]_i_1 
       (.I0(\quotient_counter_reg[8]_i_2_n_7 ),
        .I1(Q[0]),
        .I2(CO),
        .O(\quotient_counter[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \quotient_counter[6]_i_1 
       (.I0(\quotient_counter_reg[8]_i_2_n_6 ),
        .I1(Q[0]),
        .I2(CO),
        .O(\quotient_counter[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \quotient_counter[7]_i_1 
       (.I0(\quotient_counter_reg[8]_i_2_n_5 ),
        .I1(Q[0]),
        .I2(CO),
        .O(\quotient_counter[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \quotient_counter[8]_i_1 
       (.I0(\quotient_counter_reg[8]_i_2_n_4 ),
        .I1(Q[0]),
        .I2(CO),
        .O(\quotient_counter[8]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \quotient_counter[8]_i_3 
       (.I0(\ila_smax_dw_quotient_counter[15] [8]),
        .O(\quotient_counter[8]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \quotient_counter[8]_i_4 
       (.I0(\ila_smax_dw_quotient_counter[15] [7]),
        .O(\quotient_counter[8]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \quotient_counter[8]_i_5 
       (.I0(\ila_smax_dw_quotient_counter[15] [6]),
        .O(\quotient_counter[8]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \quotient_counter[8]_i_6 
       (.I0(\ila_smax_dw_quotient_counter[15] [5]),
        .O(\quotient_counter[8]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \quotient_counter[9]_i_1 
       (.I0(\quotient_counter_reg[12]_i_2_n_7 ),
        .I1(Q[0]),
        .I2(CO),
        .O(\quotient_counter[9]_i_1_n_0 ));
  FDCE \quotient_counter_reg[0] 
       (.C(m00_axi_aclk),
        .CE(\quotient_counter[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_0),
        .D(\quotient_counter[0]_i_1_n_0 ),
        .Q(\ila_smax_dw_quotient_counter[15] [0]));
  FDCE \quotient_counter_reg[10] 
       (.C(m00_axi_aclk),
        .CE(\quotient_counter[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_2),
        .D(\quotient_counter[10]_i_1_n_0 ),
        .Q(\ila_smax_dw_quotient_counter[15] [10]));
  FDCE \quotient_counter_reg[11] 
       (.C(m00_axi_aclk),
        .CE(\quotient_counter[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_2),
        .D(\quotient_counter[11]_i_1_n_0 ),
        .Q(\ila_smax_dw_quotient_counter[15] [11]));
  FDCE \quotient_counter_reg[12] 
       (.C(m00_axi_aclk),
        .CE(\quotient_counter[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_2),
        .D(\quotient_counter[12]_i_1_n_0 ),
        .Q(\ila_smax_dw_quotient_counter[15] [12]));
  CARRY4 \quotient_counter_reg[12]_i_2 
       (.CI(\quotient_counter_reg[8]_i_2_n_0 ),
        .CO({\quotient_counter_reg[12]_i_2_n_0 ,\quotient_counter_reg[12]_i_2_n_1 ,\quotient_counter_reg[12]_i_2_n_2 ,\quotient_counter_reg[12]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\quotient_counter_reg[12]_i_2_n_4 ,\quotient_counter_reg[12]_i_2_n_5 ,\quotient_counter_reg[12]_i_2_n_6 ,\quotient_counter_reg[12]_i_2_n_7 }),
        .S({\quotient_counter[12]_i_3_n_0 ,\quotient_counter[12]_i_4_n_0 ,\quotient_counter[12]_i_5_n_0 ,\quotient_counter[12]_i_6_n_0 }));
  FDCE \quotient_counter_reg[13] 
       (.C(m00_axi_aclk),
        .CE(\quotient_counter[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_2),
        .D(\quotient_counter[13]_i_1_n_0 ),
        .Q(\ila_smax_dw_quotient_counter[15] [13]));
  FDCE \quotient_counter_reg[14] 
       (.C(m00_axi_aclk),
        .CE(\quotient_counter[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_2),
        .D(\quotient_counter[14]_i_1_n_0 ),
        .Q(\ila_smax_dw_quotient_counter[15] [14]));
  FDCE \quotient_counter_reg[15] 
       (.C(m00_axi_aclk),
        .CE(\quotient_counter[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_2),
        .D(\quotient_counter[15]_i_2_n_0 ),
        .Q(\ila_smax_dw_quotient_counter[15] [15]));
  CARRY4 \quotient_counter_reg[15]_i_3 
       (.CI(\quotient_counter_reg[12]_i_2_n_0 ),
        .CO({\NLW_quotient_counter_reg[15]_i_3_CO_UNCONNECTED [3:2],\quotient_counter_reg[15]_i_3_n_2 ,\quotient_counter_reg[15]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_quotient_counter_reg[15]_i_3_O_UNCONNECTED [3],\quotient_counter_reg[15]_i_3_n_5 ,\quotient_counter_reg[15]_i_3_n_6 ,\quotient_counter_reg[15]_i_3_n_7 }),
        .S({1'b0,\quotient_counter[15]_i_4_n_0 ,\quotient_counter[15]_i_5_n_0 ,\quotient_counter[15]_i_6_n_0 }));
  FDCE \quotient_counter_reg[1] 
       (.C(m00_axi_aclk),
        .CE(\quotient_counter[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_0),
        .D(\quotient_counter[1]_i_1_n_0 ),
        .Q(\ila_smax_dw_quotient_counter[15] [1]));
  FDCE \quotient_counter_reg[2] 
       (.C(m00_axi_aclk),
        .CE(\quotient_counter[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_2),
        .D(\quotient_counter[2]_i_1_n_0 ),
        .Q(\ila_smax_dw_quotient_counter[15] [2]));
  FDCE \quotient_counter_reg[3] 
       (.C(m00_axi_aclk),
        .CE(\quotient_counter[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_2),
        .D(\quotient_counter[3]_i_1_n_0 ),
        .Q(\ila_smax_dw_quotient_counter[15] [3]));
  FDCE \quotient_counter_reg[4] 
       (.C(m00_axi_aclk),
        .CE(\quotient_counter[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_2),
        .D(\quotient_counter[4]_i_1_n_0 ),
        .Q(\ila_smax_dw_quotient_counter[15] [4]));
  CARRY4 \quotient_counter_reg[4]_i_2 
       (.CI(1'b0),
        .CO({\quotient_counter_reg[4]_i_2_n_0 ,\quotient_counter_reg[4]_i_2_n_1 ,\quotient_counter_reg[4]_i_2_n_2 ,\quotient_counter_reg[4]_i_2_n_3 }),
        .CYINIT(\ila_smax_dw_quotient_counter[15] [0]),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\quotient_counter_reg[4]_i_2_n_4 ,\quotient_counter_reg[4]_i_2_n_5 ,\quotient_counter_reg[4]_i_2_n_6 ,\quotient_counter_reg[4]_i_2_n_7 }),
        .S({\quotient_counter[4]_i_3_n_0 ,\quotient_counter[4]_i_4_n_0 ,\quotient_counter[4]_i_5_n_0 ,\quotient_counter[4]_i_6_n_0 }));
  FDCE \quotient_counter_reg[5] 
       (.C(m00_axi_aclk),
        .CE(\quotient_counter[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_2),
        .D(\quotient_counter[5]_i_1_n_0 ),
        .Q(\ila_smax_dw_quotient_counter[15] [5]));
  FDCE \quotient_counter_reg[6] 
       (.C(m00_axi_aclk),
        .CE(\quotient_counter[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_2),
        .D(\quotient_counter[6]_i_1_n_0 ),
        .Q(\ila_smax_dw_quotient_counter[15] [6]));
  FDCE \quotient_counter_reg[7] 
       (.C(m00_axi_aclk),
        .CE(\quotient_counter[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_2),
        .D(\quotient_counter[7]_i_1_n_0 ),
        .Q(\ila_smax_dw_quotient_counter[15] [7]));
  FDCE \quotient_counter_reg[8] 
       (.C(m00_axi_aclk),
        .CE(\quotient_counter[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_2),
        .D(\quotient_counter[8]_i_1_n_0 ),
        .Q(\ila_smax_dw_quotient_counter[15] [8]));
  CARRY4 \quotient_counter_reg[8]_i_2 
       (.CI(\quotient_counter_reg[4]_i_2_n_0 ),
        .CO({\quotient_counter_reg[8]_i_2_n_0 ,\quotient_counter_reg[8]_i_2_n_1 ,\quotient_counter_reg[8]_i_2_n_2 ,\quotient_counter_reg[8]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\quotient_counter_reg[8]_i_2_n_4 ,\quotient_counter_reg[8]_i_2_n_5 ,\quotient_counter_reg[8]_i_2_n_6 ,\quotient_counter_reg[8]_i_2_n_7 }),
        .S({\quotient_counter[8]_i_3_n_0 ,\quotient_counter[8]_i_4_n_0 ,\quotient_counter[8]_i_5_n_0 ,\quotient_counter[8]_i_6_n_0 }));
  FDCE \quotient_counter_reg[9] 
       (.C(m00_axi_aclk),
        .CE(\quotient_counter[15]_i_1_n_0 ),
        .CLR(m00_axi_aresetn_2),
        .D(\quotient_counter[9]_i_1_n_0 ),
        .Q(\ila_smax_dw_quotient_counter[15] [9]));
  LUT6 #(
    .INIT(64'hFFFF000000800000)) 
    quotient_result_valid_i_1
       (.I0(\ila_smax_dw_hold_counter[4] [2]),
        .I1(\ila_smax_dw_hold_counter[4] [3]),
        .I2(\ila_smax_dw_hold_counter[4] [4]),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(ila_smax_dw_quotient_result_valid),
        .O(quotient_result_valid_i_1_n_0));
  FDCE quotient_result_valid_reg
       (.C(m00_axi_aclk),
        .CE(1'b1),
        .CLR(m00_axi_aresetn_0),
        .D(quotient_result_valid_i_1_n_0),
        .Q(ila_smax_dw_quotient_result_valid));
endmodule

(* CHECK_LICENSE_TYPE = "softmax_fifo_buffer,fifo_generator_v13_1_3,{}" *) (* ORIG_REF_NAME = "softmax_fifo_buffer" *) (* downgradeipidentifiedwarnings = "yes" *) 
(* x_core_info = "fifo_generator_v13_1_3,Vivado 2016.4" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_softmax_fifo_buffer
   (rst,
    wr_clk,
    rd_clk,
    din,
    wr_en,
    rd_en,
    dout,
    full,
    almost_full,
    empty,
    almost_empty,
    valid);
  input rst;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 write_clk CLK" *) input wr_clk;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 read_clk CLK" *) input rd_clk;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_DATA" *) input [31:0]din;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_EN" *) input wr_en;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_EN" *) input rd_en;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_DATA" *) output [31:0]dout;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE FULL" *) output full;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE ALMOST_FULL" *) output almost_full;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ EMPTY" *) output empty;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ ALMOST_EMPTY" *) output almost_empty;
  output valid;

  wire almost_empty;
  wire almost_full;
  wire [31:0]din;
  wire [31:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire valid;
  wire wr_clk;
  wire wr_en;
  wire NLW_U0_axi_ar_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_overflow_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_full_UNCONNECTED;
  wire NLW_U0_axi_ar_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_underflow_UNCONNECTED;
  wire NLW_U0_axi_aw_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_overflow_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_full_UNCONNECTED;
  wire NLW_U0_axi_aw_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_underflow_UNCONNECTED;
  wire NLW_U0_axi_b_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_overflow_UNCONNECTED;
  wire NLW_U0_axi_b_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_b_prog_full_UNCONNECTED;
  wire NLW_U0_axi_b_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_underflow_UNCONNECTED;
  wire NLW_U0_axi_r_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_overflow_UNCONNECTED;
  wire NLW_U0_axi_r_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_r_prog_full_UNCONNECTED;
  wire NLW_U0_axi_r_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_underflow_UNCONNECTED;
  wire NLW_U0_axi_w_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_overflow_UNCONNECTED;
  wire NLW_U0_axi_w_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_w_prog_full_UNCONNECTED;
  wire NLW_U0_axi_w_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_underflow_UNCONNECTED;
  wire NLW_U0_axis_dbiterr_UNCONNECTED;
  wire NLW_U0_axis_overflow_UNCONNECTED;
  wire NLW_U0_axis_prog_empty_UNCONNECTED;
  wire NLW_U0_axis_prog_full_UNCONNECTED;
  wire NLW_U0_axis_sbiterr_UNCONNECTED;
  wire NLW_U0_axis_underflow_UNCONNECTED;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_m_axi_arvalid_UNCONNECTED;
  wire NLW_U0_m_axi_awvalid_UNCONNECTED;
  wire NLW_U0_m_axi_bready_UNCONNECTED;
  wire NLW_U0_m_axi_rready_UNCONNECTED;
  wire NLW_U0_m_axi_wlast_UNCONNECTED;
  wire NLW_U0_m_axi_wvalid_UNCONNECTED;
  wire NLW_U0_m_axis_tlast_UNCONNECTED;
  wire NLW_U0_m_axis_tvalid_UNCONNECTED;
  wire NLW_U0_overflow_UNCONNECTED;
  wire NLW_U0_prog_empty_UNCONNECTED;
  wire NLW_U0_prog_full_UNCONNECTED;
  wire NLW_U0_rd_rst_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axis_tready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_underflow_UNCONNECTED;
  wire NLW_U0_wr_ack_UNCONNECTED;
  wire NLW_U0_wr_rst_busy_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_wr_data_count_UNCONNECTED;
  wire [9:0]NLW_U0_data_count_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_arlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_aruser_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_awlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awuser_UNCONNECTED;
  wire [63:0]NLW_U0_m_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wuser_UNCONNECTED;
  wire [7:0]NLW_U0_m_axis_tdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tdest_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tid_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tkeep_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tstrb_UNCONNECTED;
  wire [3:0]NLW_U0_m_axis_tuser_UNCONNECTED;
  wire [9:0]NLW_U0_rd_data_count_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_buser_UNCONNECTED;
  wire [63:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_ruser_UNCONNECTED;
  wire [9:0]NLW_U0_wr_data_count_UNCONNECTED;

  (* C_ADD_NGC_CONSTRAINT = "0" *) 
  (* C_APPLICATION_TYPE_AXIS = "0" *) 
  (* C_APPLICATION_TYPE_RACH = "0" *) 
  (* C_APPLICATION_TYPE_RDCH = "0" *) 
  (* C_APPLICATION_TYPE_WACH = "0" *) 
  (* C_APPLICATION_TYPE_WDCH = "0" *) 
  (* C_APPLICATION_TYPE_WRCH = "0" *) 
  (* C_AXIS_TDATA_WIDTH = "8" *) 
  (* C_AXIS_TDEST_WIDTH = "1" *) 
  (* C_AXIS_TID_WIDTH = "1" *) 
  (* C_AXIS_TKEEP_WIDTH = "1" *) 
  (* C_AXIS_TSTRB_WIDTH = "1" *) 
  (* C_AXIS_TUSER_WIDTH = "4" *) 
  (* C_AXIS_TYPE = "0" *) 
  (* C_AXI_ADDR_WIDTH = "32" *) 
  (* C_AXI_ARUSER_WIDTH = "1" *) 
  (* C_AXI_AWUSER_WIDTH = "1" *) 
  (* C_AXI_BUSER_WIDTH = "1" *) 
  (* C_AXI_DATA_WIDTH = "64" *) 
  (* C_AXI_ID_WIDTH = "1" *) 
  (* C_AXI_LEN_WIDTH = "8" *) 
  (* C_AXI_LOCK_WIDTH = "1" *) 
  (* C_AXI_RUSER_WIDTH = "1" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_AXI_WUSER_WIDTH = "1" *) 
  (* C_COMMON_CLOCK = "0" *) 
  (* C_COUNT_TYPE = "0" *) 
  (* C_DATA_COUNT_WIDTH = "10" *) 
  (* C_DEFAULT_VALUE = "BlankString" *) 
  (* C_DIN_WIDTH = "32" *) 
  (* C_DIN_WIDTH_AXIS = "1" *) 
  (* C_DIN_WIDTH_RACH = "32" *) 
  (* C_DIN_WIDTH_RDCH = "64" *) 
  (* C_DIN_WIDTH_WACH = "1" *) 
  (* C_DIN_WIDTH_WDCH = "64" *) 
  (* C_DIN_WIDTH_WRCH = "2" *) 
  (* C_DOUT_RST_VAL = "0" *) 
  (* C_DOUT_WIDTH = "32" *) 
  (* C_ENABLE_RLOCS = "0" *) 
  (* C_ENABLE_RST_SYNC = "1" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_ERROR_INJECTION_TYPE = "0" *) 
  (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
  (* C_FAMILY = "artix7" *) 
  (* C_FULL_FLAGS_RST_VAL = "1" *) 
  (* C_HAS_ALMOST_EMPTY = "1" *) 
  (* C_HAS_ALMOST_FULL = "1" *) 
  (* C_HAS_AXIS_TDATA = "1" *) 
  (* C_HAS_AXIS_TDEST = "0" *) 
  (* C_HAS_AXIS_TID = "0" *) 
  (* C_HAS_AXIS_TKEEP = "0" *) 
  (* C_HAS_AXIS_TLAST = "0" *) 
  (* C_HAS_AXIS_TREADY = "1" *) 
  (* C_HAS_AXIS_TSTRB = "0" *) 
  (* C_HAS_AXIS_TUSER = "1" *) 
  (* C_HAS_AXI_ARUSER = "0" *) 
  (* C_HAS_AXI_AWUSER = "0" *) 
  (* C_HAS_AXI_BUSER = "0" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_AXI_RD_CHANNEL = "1" *) 
  (* C_HAS_AXI_RUSER = "0" *) 
  (* C_HAS_AXI_WR_CHANNEL = "1" *) 
  (* C_HAS_AXI_WUSER = "0" *) 
  (* C_HAS_BACKUP = "0" *) 
  (* C_HAS_DATA_COUNT = "0" *) 
  (* C_HAS_DATA_COUNTS_AXIS = "0" *) 
  (* C_HAS_DATA_COUNTS_RACH = "0" *) 
  (* C_HAS_DATA_COUNTS_RDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WACH = "0" *) 
  (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WRCH = "0" *) 
  (* C_HAS_INT_CLK = "0" *) 
  (* C_HAS_MASTER_CE = "0" *) 
  (* C_HAS_MEMINIT_FILE = "0" *) 
  (* C_HAS_OVERFLOW = "0" *) 
  (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
  (* C_HAS_PROG_FLAGS_RACH = "0" *) 
  (* C_HAS_PROG_FLAGS_RDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WACH = "0" *) 
  (* C_HAS_PROG_FLAGS_WDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WRCH = "0" *) 
  (* C_HAS_RD_DATA_COUNT = "0" *) 
  (* C_HAS_RD_RST = "0" *) 
  (* C_HAS_RST = "1" *) 
  (* C_HAS_SLAVE_CE = "0" *) 
  (* C_HAS_SRST = "0" *) 
  (* C_HAS_UNDERFLOW = "0" *) 
  (* C_HAS_VALID = "1" *) 
  (* C_HAS_WR_ACK = "0" *) 
  (* C_HAS_WR_DATA_COUNT = "0" *) 
  (* C_HAS_WR_RST = "0" *) 
  (* C_IMPLEMENTATION_TYPE = "2" *) 
  (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WRCH = "1" *) 
  (* C_INIT_WR_PNTR_VAL = "0" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_MEMORY_TYPE = "1" *) 
  (* C_MIF_FILE_NAME = "BlankString" *) 
  (* C_MSGON_VAL = "1" *) 
  (* C_OPTIMIZATION_MODE = "0" *) 
  (* C_OVERFLOW_LOW = "0" *) 
  (* C_POWER_SAVING_MODE = "0" *) 
  (* C_PRELOAD_LATENCY = "0" *) 
  (* C_PRELOAD_REGS = "1" *) 
  (* C_PRIM_FIFO_TYPE = "1kx36" *) 
  (* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) 
  (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_RDCH = "1kx36" *) 
  (* C_PRIM_FIFO_TYPE_WACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_WDCH = "1kx36" *) 
  (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) 
  (* C_PROG_EMPTY_TYPE = "0" *) 
  (* C_PROG_EMPTY_TYPE_AXIS = "0" *) 
  (* C_PROG_EMPTY_TYPE_RACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) 
  (* C_PROG_FULL_THRESH_NEGATE_VAL = "1022" *) 
  (* C_PROG_FULL_TYPE = "0" *) 
  (* C_PROG_FULL_TYPE_AXIS = "0" *) 
  (* C_PROG_FULL_TYPE_RACH = "0" *) 
  (* C_PROG_FULL_TYPE_RDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WACH = "0" *) 
  (* C_PROG_FULL_TYPE_WDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WRCH = "0" *) 
  (* C_RACH_TYPE = "0" *) 
  (* C_RDCH_TYPE = "0" *) 
  (* C_RD_DATA_COUNT_WIDTH = "10" *) 
  (* C_RD_DEPTH = "1024" *) 
  (* C_RD_FREQ = "1" *) 
  (* C_RD_PNTR_WIDTH = "10" *) 
  (* C_REG_SLICE_MODE_AXIS = "0" *) 
  (* C_REG_SLICE_MODE_RACH = "0" *) 
  (* C_REG_SLICE_MODE_RDCH = "0" *) 
  (* C_REG_SLICE_MODE_WACH = "0" *) 
  (* C_REG_SLICE_MODE_WDCH = "0" *) 
  (* C_REG_SLICE_MODE_WRCH = "0" *) 
  (* C_SELECT_XPM = "0" *) 
  (* C_SYNCHRONIZER_STAGE = "2" *) 
  (* C_UNDERFLOW_LOW = "0" *) 
  (* C_USE_COMMON_OVERFLOW = "0" *) 
  (* C_USE_COMMON_UNDERFLOW = "0" *) 
  (* C_USE_DEFAULT_SETTINGS = "0" *) 
  (* C_USE_DOUT_RST = "1" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_ECC_AXIS = "0" *) 
  (* C_USE_ECC_RACH = "0" *) 
  (* C_USE_ECC_RDCH = "0" *) 
  (* C_USE_ECC_WACH = "0" *) 
  (* C_USE_ECC_WDCH = "0" *) 
  (* C_USE_ECC_WRCH = "0" *) 
  (* C_USE_EMBEDDED_REG = "0" *) 
  (* C_USE_FIFO16_FLAGS = "0" *) 
  (* C_USE_FWFT_DATA_COUNT = "0" *) 
  (* C_USE_PIPELINE_REG = "0" *) 
  (* C_VALID_LOW = "0" *) 
  (* C_WACH_TYPE = "0" *) 
  (* C_WDCH_TYPE = "0" *) 
  (* C_WRCH_TYPE = "0" *) 
  (* C_WR_ACK_LOW = "0" *) 
  (* C_WR_DATA_COUNT_WIDTH = "10" *) 
  (* C_WR_DEPTH = "1024" *) 
  (* C_WR_DEPTH_AXIS = "1024" *) 
  (* C_WR_DEPTH_RACH = "16" *) 
  (* C_WR_DEPTH_RDCH = "1024" *) 
  (* C_WR_DEPTH_WACH = "16" *) 
  (* C_WR_DEPTH_WDCH = "1024" *) 
  (* C_WR_DEPTH_WRCH = "16" *) 
  (* C_WR_FREQ = "1" *) 
  (* C_WR_PNTR_WIDTH = "10" *) 
  (* C_WR_PNTR_WIDTH_AXIS = "10" *) 
  (* C_WR_PNTR_WIDTH_RACH = "4" *) 
  (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WACH = "4" *) 
  (* C_WR_PNTR_WIDTH_WDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
  (* C_WR_RESPONSE_LATENCY = "1" *) 
  final_accelerator_Softmax_Layer_32bit_0_0_fifo_generator_v13_1_3 U0
       (.almost_empty(almost_empty),
        .almost_full(almost_full),
        .axi_ar_data_count(NLW_U0_axi_ar_data_count_UNCONNECTED[4:0]),
        .axi_ar_dbiterr(NLW_U0_axi_ar_dbiterr_UNCONNECTED),
        .axi_ar_injectdbiterr(1'b0),
        .axi_ar_injectsbiterr(1'b0),
        .axi_ar_overflow(NLW_U0_axi_ar_overflow_UNCONNECTED),
        .axi_ar_prog_empty(NLW_U0_axi_ar_prog_empty_UNCONNECTED),
        .axi_ar_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_prog_full(NLW_U0_axi_ar_prog_full_UNCONNECTED),
        .axi_ar_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_rd_data_count(NLW_U0_axi_ar_rd_data_count_UNCONNECTED[4:0]),
        .axi_ar_sbiterr(NLW_U0_axi_ar_sbiterr_UNCONNECTED),
        .axi_ar_underflow(NLW_U0_axi_ar_underflow_UNCONNECTED),
        .axi_ar_wr_data_count(NLW_U0_axi_ar_wr_data_count_UNCONNECTED[4:0]),
        .axi_aw_data_count(NLW_U0_axi_aw_data_count_UNCONNECTED[4:0]),
        .axi_aw_dbiterr(NLW_U0_axi_aw_dbiterr_UNCONNECTED),
        .axi_aw_injectdbiterr(1'b0),
        .axi_aw_injectsbiterr(1'b0),
        .axi_aw_overflow(NLW_U0_axi_aw_overflow_UNCONNECTED),
        .axi_aw_prog_empty(NLW_U0_axi_aw_prog_empty_UNCONNECTED),
        .axi_aw_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_prog_full(NLW_U0_axi_aw_prog_full_UNCONNECTED),
        .axi_aw_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_rd_data_count(NLW_U0_axi_aw_rd_data_count_UNCONNECTED[4:0]),
        .axi_aw_sbiterr(NLW_U0_axi_aw_sbiterr_UNCONNECTED),
        .axi_aw_underflow(NLW_U0_axi_aw_underflow_UNCONNECTED),
        .axi_aw_wr_data_count(NLW_U0_axi_aw_wr_data_count_UNCONNECTED[4:0]),
        .axi_b_data_count(NLW_U0_axi_b_data_count_UNCONNECTED[4:0]),
        .axi_b_dbiterr(NLW_U0_axi_b_dbiterr_UNCONNECTED),
        .axi_b_injectdbiterr(1'b0),
        .axi_b_injectsbiterr(1'b0),
        .axi_b_overflow(NLW_U0_axi_b_overflow_UNCONNECTED),
        .axi_b_prog_empty(NLW_U0_axi_b_prog_empty_UNCONNECTED),
        .axi_b_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_prog_full(NLW_U0_axi_b_prog_full_UNCONNECTED),
        .axi_b_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_rd_data_count(NLW_U0_axi_b_rd_data_count_UNCONNECTED[4:0]),
        .axi_b_sbiterr(NLW_U0_axi_b_sbiterr_UNCONNECTED),
        .axi_b_underflow(NLW_U0_axi_b_underflow_UNCONNECTED),
        .axi_b_wr_data_count(NLW_U0_axi_b_wr_data_count_UNCONNECTED[4:0]),
        .axi_r_data_count(NLW_U0_axi_r_data_count_UNCONNECTED[10:0]),
        .axi_r_dbiterr(NLW_U0_axi_r_dbiterr_UNCONNECTED),
        .axi_r_injectdbiterr(1'b0),
        .axi_r_injectsbiterr(1'b0),
        .axi_r_overflow(NLW_U0_axi_r_overflow_UNCONNECTED),
        .axi_r_prog_empty(NLW_U0_axi_r_prog_empty_UNCONNECTED),
        .axi_r_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_prog_full(NLW_U0_axi_r_prog_full_UNCONNECTED),
        .axi_r_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_rd_data_count(NLW_U0_axi_r_rd_data_count_UNCONNECTED[10:0]),
        .axi_r_sbiterr(NLW_U0_axi_r_sbiterr_UNCONNECTED),
        .axi_r_underflow(NLW_U0_axi_r_underflow_UNCONNECTED),
        .axi_r_wr_data_count(NLW_U0_axi_r_wr_data_count_UNCONNECTED[10:0]),
        .axi_w_data_count(NLW_U0_axi_w_data_count_UNCONNECTED[10:0]),
        .axi_w_dbiterr(NLW_U0_axi_w_dbiterr_UNCONNECTED),
        .axi_w_injectdbiterr(1'b0),
        .axi_w_injectsbiterr(1'b0),
        .axi_w_overflow(NLW_U0_axi_w_overflow_UNCONNECTED),
        .axi_w_prog_empty(NLW_U0_axi_w_prog_empty_UNCONNECTED),
        .axi_w_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_prog_full(NLW_U0_axi_w_prog_full_UNCONNECTED),
        .axi_w_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_rd_data_count(NLW_U0_axi_w_rd_data_count_UNCONNECTED[10:0]),
        .axi_w_sbiterr(NLW_U0_axi_w_sbiterr_UNCONNECTED),
        .axi_w_underflow(NLW_U0_axi_w_underflow_UNCONNECTED),
        .axi_w_wr_data_count(NLW_U0_axi_w_wr_data_count_UNCONNECTED[10:0]),
        .axis_data_count(NLW_U0_axis_data_count_UNCONNECTED[10:0]),
        .axis_dbiterr(NLW_U0_axis_dbiterr_UNCONNECTED),
        .axis_injectdbiterr(1'b0),
        .axis_injectsbiterr(1'b0),
        .axis_overflow(NLW_U0_axis_overflow_UNCONNECTED),
        .axis_prog_empty(NLW_U0_axis_prog_empty_UNCONNECTED),
        .axis_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_prog_full(NLW_U0_axis_prog_full_UNCONNECTED),
        .axis_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_rd_data_count(NLW_U0_axis_rd_data_count_UNCONNECTED[10:0]),
        .axis_sbiterr(NLW_U0_axis_sbiterr_UNCONNECTED),
        .axis_underflow(NLW_U0_axis_underflow_UNCONNECTED),
        .axis_wr_data_count(NLW_U0_axis_wr_data_count_UNCONNECTED[10:0]),
        .backup(1'b0),
        .backup_marker(1'b0),
        .clk(1'b0),
        .data_count(NLW_U0_data_count_UNCONNECTED[9:0]),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .int_clk(1'b0),
        .m_aclk(1'b0),
        .m_aclk_en(1'b0),
        .m_axi_araddr(NLW_U0_m_axi_araddr_UNCONNECTED[31:0]),
        .m_axi_arburst(NLW_U0_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arcache(NLW_U0_m_axi_arcache_UNCONNECTED[3:0]),
        .m_axi_arid(NLW_U0_m_axi_arid_UNCONNECTED[0]),
        .m_axi_arlen(NLW_U0_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arlock(NLW_U0_m_axi_arlock_UNCONNECTED[0]),
        .m_axi_arprot(NLW_U0_m_axi_arprot_UNCONNECTED[2:0]),
        .m_axi_arqos(NLW_U0_m_axi_arqos_UNCONNECTED[3:0]),
        .m_axi_arready(1'b0),
        .m_axi_arregion(NLW_U0_m_axi_arregion_UNCONNECTED[3:0]),
        .m_axi_arsize(NLW_U0_m_axi_arsize_UNCONNECTED[2:0]),
        .m_axi_aruser(NLW_U0_m_axi_aruser_UNCONNECTED[0]),
        .m_axi_arvalid(NLW_U0_m_axi_arvalid_UNCONNECTED),
        .m_axi_awaddr(NLW_U0_m_axi_awaddr_UNCONNECTED[31:0]),
        .m_axi_awburst(NLW_U0_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awcache(NLW_U0_m_axi_awcache_UNCONNECTED[3:0]),
        .m_axi_awid(NLW_U0_m_axi_awid_UNCONNECTED[0]),
        .m_axi_awlen(NLW_U0_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awlock(NLW_U0_m_axi_awlock_UNCONNECTED[0]),
        .m_axi_awprot(NLW_U0_m_axi_awprot_UNCONNECTED[2:0]),
        .m_axi_awqos(NLW_U0_m_axi_awqos_UNCONNECTED[3:0]),
        .m_axi_awready(1'b0),
        .m_axi_awregion(NLW_U0_m_axi_awregion_UNCONNECTED[3:0]),
        .m_axi_awsize(NLW_U0_m_axi_awsize_UNCONNECTED[2:0]),
        .m_axi_awuser(NLW_U0_m_axi_awuser_UNCONNECTED[0]),
        .m_axi_awvalid(NLW_U0_m_axi_awvalid_UNCONNECTED),
        .m_axi_bid(1'b0),
        .m_axi_bready(NLW_U0_m_axi_bready_UNCONNECTED),
        .m_axi_bresp({1'b0,1'b0}),
        .m_axi_buser(1'b0),
        .m_axi_bvalid(1'b0),
        .m_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rid(1'b0),
        .m_axi_rlast(1'b0),
        .m_axi_rready(NLW_U0_m_axi_rready_UNCONNECTED),
        .m_axi_rresp({1'b0,1'b0}),
        .m_axi_ruser(1'b0),
        .m_axi_rvalid(1'b0),
        .m_axi_wdata(NLW_U0_m_axi_wdata_UNCONNECTED[63:0]),
        .m_axi_wid(NLW_U0_m_axi_wid_UNCONNECTED[0]),
        .m_axi_wlast(NLW_U0_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(1'b0),
        .m_axi_wstrb(NLW_U0_m_axi_wstrb_UNCONNECTED[7:0]),
        .m_axi_wuser(NLW_U0_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(NLW_U0_m_axi_wvalid_UNCONNECTED),
        .m_axis_tdata(NLW_U0_m_axis_tdata_UNCONNECTED[7:0]),
        .m_axis_tdest(NLW_U0_m_axis_tdest_UNCONNECTED[0]),
        .m_axis_tid(NLW_U0_m_axis_tid_UNCONNECTED[0]),
        .m_axis_tkeep(NLW_U0_m_axis_tkeep_UNCONNECTED[0]),
        .m_axis_tlast(NLW_U0_m_axis_tlast_UNCONNECTED),
        .m_axis_tready(1'b0),
        .m_axis_tstrb(NLW_U0_m_axis_tstrb_UNCONNECTED[0]),
        .m_axis_tuser(NLW_U0_m_axis_tuser_UNCONNECTED[3:0]),
        .m_axis_tvalid(NLW_U0_m_axis_tvalid_UNCONNECTED),
        .overflow(NLW_U0_overflow_UNCONNECTED),
        .prog_empty(NLW_U0_prog_empty_UNCONNECTED),
        .prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full(NLW_U0_prog_full_UNCONNECTED),
        .prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rd_clk(rd_clk),
        .rd_data_count(NLW_U0_rd_data_count_UNCONNECTED[9:0]),
        .rd_en(rd_en),
        .rd_rst(1'b0),
        .rd_rst_busy(NLW_U0_rd_rst_busy_UNCONNECTED),
        .rst(rst),
        .s_aclk(1'b0),
        .s_aclk_en(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arid(1'b0),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlock(1'b0),
        .s_axi_arprot({1'b0,1'b0,1'b0}),
        .s_axi_arqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_aruser(1'b0),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awid(1'b0),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlock(1'b0),
        .s_axi_awprot({1'b0,1'b0,1'b0}),
        .s_axi_awqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awuser(1'b0),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_buser(NLW_U0_s_axi_buser_UNCONNECTED[0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[63:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_ruser(NLW_U0_s_axi_ruser_UNCONNECTED[0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wid(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(1'b0),
        .s_axis_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tdest(1'b0),
        .s_axis_tid(1'b0),
        .s_axis_tkeep(1'b0),
        .s_axis_tlast(1'b0),
        .s_axis_tready(NLW_U0_s_axis_tready_UNCONNECTED),
        .s_axis_tstrb(1'b0),
        .s_axis_tuser({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .srst(1'b0),
        .underflow(NLW_U0_underflow_UNCONNECTED),
        .valid(valid),
        .wr_ack(NLW_U0_wr_ack_UNCONNECTED),
        .wr_clk(wr_clk),
        .wr_data_count(NLW_U0_wr_data_count_UNCONNECTED[9:0]),
        .wr_en(wr_en),
        .wr_rst(1'b0),
        .wr_rst_busy(NLW_U0_wr_rst_busy_UNCONNECTED));
endmodule

(* CHECK_LICENSE_TYPE = "softmax_fifo_buffer,fifo_generator_v13_1_3,{}" *) (* ORIG_REF_NAME = "softmax_fifo_buffer" *) (* downgradeipidentifiedwarnings = "yes" *) 
(* x_core_info = "fifo_generator_v13_1_3,Vivado 2016.4" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_softmax_fifo_buffer__xdcDup__1
   (rst,
    wr_clk,
    rd_clk,
    din,
    wr_en,
    rd_en,
    dout,
    full,
    almost_full,
    empty,
    almost_empty,
    valid);
  input rst;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 write_clk CLK" *) input wr_clk;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 read_clk CLK" *) input rd_clk;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_DATA" *) input [31:0]din;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_EN" *) input wr_en;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_EN" *) input rd_en;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_DATA" *) output [31:0]dout;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE FULL" *) output full;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE ALMOST_FULL" *) output almost_full;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ EMPTY" *) output empty;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ ALMOST_EMPTY" *) output almost_empty;
  output valid;

  wire almost_empty;
  wire almost_full;
  wire [31:0]din;
  wire [31:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire valid;
  wire wr_clk;
  wire wr_en;
  wire NLW_U0_axi_ar_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_overflow_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_full_UNCONNECTED;
  wire NLW_U0_axi_ar_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_underflow_UNCONNECTED;
  wire NLW_U0_axi_aw_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_overflow_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_full_UNCONNECTED;
  wire NLW_U0_axi_aw_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_underflow_UNCONNECTED;
  wire NLW_U0_axi_b_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_overflow_UNCONNECTED;
  wire NLW_U0_axi_b_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_b_prog_full_UNCONNECTED;
  wire NLW_U0_axi_b_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_underflow_UNCONNECTED;
  wire NLW_U0_axi_r_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_overflow_UNCONNECTED;
  wire NLW_U0_axi_r_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_r_prog_full_UNCONNECTED;
  wire NLW_U0_axi_r_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_underflow_UNCONNECTED;
  wire NLW_U0_axi_w_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_overflow_UNCONNECTED;
  wire NLW_U0_axi_w_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_w_prog_full_UNCONNECTED;
  wire NLW_U0_axi_w_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_underflow_UNCONNECTED;
  wire NLW_U0_axis_dbiterr_UNCONNECTED;
  wire NLW_U0_axis_overflow_UNCONNECTED;
  wire NLW_U0_axis_prog_empty_UNCONNECTED;
  wire NLW_U0_axis_prog_full_UNCONNECTED;
  wire NLW_U0_axis_sbiterr_UNCONNECTED;
  wire NLW_U0_axis_underflow_UNCONNECTED;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_m_axi_arvalid_UNCONNECTED;
  wire NLW_U0_m_axi_awvalid_UNCONNECTED;
  wire NLW_U0_m_axi_bready_UNCONNECTED;
  wire NLW_U0_m_axi_rready_UNCONNECTED;
  wire NLW_U0_m_axi_wlast_UNCONNECTED;
  wire NLW_U0_m_axi_wvalid_UNCONNECTED;
  wire NLW_U0_m_axis_tlast_UNCONNECTED;
  wire NLW_U0_m_axis_tvalid_UNCONNECTED;
  wire NLW_U0_overflow_UNCONNECTED;
  wire NLW_U0_prog_empty_UNCONNECTED;
  wire NLW_U0_prog_full_UNCONNECTED;
  wire NLW_U0_rd_rst_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axis_tready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_underflow_UNCONNECTED;
  wire NLW_U0_wr_ack_UNCONNECTED;
  wire NLW_U0_wr_rst_busy_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_wr_data_count_UNCONNECTED;
  wire [9:0]NLW_U0_data_count_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_arlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_aruser_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_awlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awuser_UNCONNECTED;
  wire [63:0]NLW_U0_m_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wuser_UNCONNECTED;
  wire [7:0]NLW_U0_m_axis_tdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tdest_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tid_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tkeep_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tstrb_UNCONNECTED;
  wire [3:0]NLW_U0_m_axis_tuser_UNCONNECTED;
  wire [9:0]NLW_U0_rd_data_count_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_buser_UNCONNECTED;
  wire [63:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_ruser_UNCONNECTED;
  wire [9:0]NLW_U0_wr_data_count_UNCONNECTED;

  (* C_ADD_NGC_CONSTRAINT = "0" *) 
  (* C_APPLICATION_TYPE_AXIS = "0" *) 
  (* C_APPLICATION_TYPE_RACH = "0" *) 
  (* C_APPLICATION_TYPE_RDCH = "0" *) 
  (* C_APPLICATION_TYPE_WACH = "0" *) 
  (* C_APPLICATION_TYPE_WDCH = "0" *) 
  (* C_APPLICATION_TYPE_WRCH = "0" *) 
  (* C_AXIS_TDATA_WIDTH = "8" *) 
  (* C_AXIS_TDEST_WIDTH = "1" *) 
  (* C_AXIS_TID_WIDTH = "1" *) 
  (* C_AXIS_TKEEP_WIDTH = "1" *) 
  (* C_AXIS_TSTRB_WIDTH = "1" *) 
  (* C_AXIS_TUSER_WIDTH = "4" *) 
  (* C_AXIS_TYPE = "0" *) 
  (* C_AXI_ADDR_WIDTH = "32" *) 
  (* C_AXI_ARUSER_WIDTH = "1" *) 
  (* C_AXI_AWUSER_WIDTH = "1" *) 
  (* C_AXI_BUSER_WIDTH = "1" *) 
  (* C_AXI_DATA_WIDTH = "64" *) 
  (* C_AXI_ID_WIDTH = "1" *) 
  (* C_AXI_LEN_WIDTH = "8" *) 
  (* C_AXI_LOCK_WIDTH = "1" *) 
  (* C_AXI_RUSER_WIDTH = "1" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_AXI_WUSER_WIDTH = "1" *) 
  (* C_COMMON_CLOCK = "0" *) 
  (* C_COUNT_TYPE = "0" *) 
  (* C_DATA_COUNT_WIDTH = "10" *) 
  (* C_DEFAULT_VALUE = "BlankString" *) 
  (* C_DIN_WIDTH = "32" *) 
  (* C_DIN_WIDTH_AXIS = "1" *) 
  (* C_DIN_WIDTH_RACH = "32" *) 
  (* C_DIN_WIDTH_RDCH = "64" *) 
  (* C_DIN_WIDTH_WACH = "1" *) 
  (* C_DIN_WIDTH_WDCH = "64" *) 
  (* C_DIN_WIDTH_WRCH = "2" *) 
  (* C_DOUT_RST_VAL = "0" *) 
  (* C_DOUT_WIDTH = "32" *) 
  (* C_ENABLE_RLOCS = "0" *) 
  (* C_ENABLE_RST_SYNC = "1" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_ERROR_INJECTION_TYPE = "0" *) 
  (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
  (* C_FAMILY = "artix7" *) 
  (* C_FULL_FLAGS_RST_VAL = "1" *) 
  (* C_HAS_ALMOST_EMPTY = "1" *) 
  (* C_HAS_ALMOST_FULL = "1" *) 
  (* C_HAS_AXIS_TDATA = "1" *) 
  (* C_HAS_AXIS_TDEST = "0" *) 
  (* C_HAS_AXIS_TID = "0" *) 
  (* C_HAS_AXIS_TKEEP = "0" *) 
  (* C_HAS_AXIS_TLAST = "0" *) 
  (* C_HAS_AXIS_TREADY = "1" *) 
  (* C_HAS_AXIS_TSTRB = "0" *) 
  (* C_HAS_AXIS_TUSER = "1" *) 
  (* C_HAS_AXI_ARUSER = "0" *) 
  (* C_HAS_AXI_AWUSER = "0" *) 
  (* C_HAS_AXI_BUSER = "0" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_AXI_RD_CHANNEL = "1" *) 
  (* C_HAS_AXI_RUSER = "0" *) 
  (* C_HAS_AXI_WR_CHANNEL = "1" *) 
  (* C_HAS_AXI_WUSER = "0" *) 
  (* C_HAS_BACKUP = "0" *) 
  (* C_HAS_DATA_COUNT = "0" *) 
  (* C_HAS_DATA_COUNTS_AXIS = "0" *) 
  (* C_HAS_DATA_COUNTS_RACH = "0" *) 
  (* C_HAS_DATA_COUNTS_RDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WACH = "0" *) 
  (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WRCH = "0" *) 
  (* C_HAS_INT_CLK = "0" *) 
  (* C_HAS_MASTER_CE = "0" *) 
  (* C_HAS_MEMINIT_FILE = "0" *) 
  (* C_HAS_OVERFLOW = "0" *) 
  (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
  (* C_HAS_PROG_FLAGS_RACH = "0" *) 
  (* C_HAS_PROG_FLAGS_RDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WACH = "0" *) 
  (* C_HAS_PROG_FLAGS_WDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WRCH = "0" *) 
  (* C_HAS_RD_DATA_COUNT = "0" *) 
  (* C_HAS_RD_RST = "0" *) 
  (* C_HAS_RST = "1" *) 
  (* C_HAS_SLAVE_CE = "0" *) 
  (* C_HAS_SRST = "0" *) 
  (* C_HAS_UNDERFLOW = "0" *) 
  (* C_HAS_VALID = "1" *) 
  (* C_HAS_WR_ACK = "0" *) 
  (* C_HAS_WR_DATA_COUNT = "0" *) 
  (* C_HAS_WR_RST = "0" *) 
  (* C_IMPLEMENTATION_TYPE = "2" *) 
  (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WRCH = "1" *) 
  (* C_INIT_WR_PNTR_VAL = "0" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_MEMORY_TYPE = "1" *) 
  (* C_MIF_FILE_NAME = "BlankString" *) 
  (* C_MSGON_VAL = "1" *) 
  (* C_OPTIMIZATION_MODE = "0" *) 
  (* C_OVERFLOW_LOW = "0" *) 
  (* C_POWER_SAVING_MODE = "0" *) 
  (* C_PRELOAD_LATENCY = "0" *) 
  (* C_PRELOAD_REGS = "1" *) 
  (* C_PRIM_FIFO_TYPE = "1kx36" *) 
  (* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) 
  (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_RDCH = "1kx36" *) 
  (* C_PRIM_FIFO_TYPE_WACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_WDCH = "1kx36" *) 
  (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) 
  (* C_PROG_EMPTY_TYPE = "0" *) 
  (* C_PROG_EMPTY_TYPE_AXIS = "0" *) 
  (* C_PROG_EMPTY_TYPE_RACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) 
  (* C_PROG_FULL_THRESH_NEGATE_VAL = "1022" *) 
  (* C_PROG_FULL_TYPE = "0" *) 
  (* C_PROG_FULL_TYPE_AXIS = "0" *) 
  (* C_PROG_FULL_TYPE_RACH = "0" *) 
  (* C_PROG_FULL_TYPE_RDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WACH = "0" *) 
  (* C_PROG_FULL_TYPE_WDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WRCH = "0" *) 
  (* C_RACH_TYPE = "0" *) 
  (* C_RDCH_TYPE = "0" *) 
  (* C_RD_DATA_COUNT_WIDTH = "10" *) 
  (* C_RD_DEPTH = "1024" *) 
  (* C_RD_FREQ = "1" *) 
  (* C_RD_PNTR_WIDTH = "10" *) 
  (* C_REG_SLICE_MODE_AXIS = "0" *) 
  (* C_REG_SLICE_MODE_RACH = "0" *) 
  (* C_REG_SLICE_MODE_RDCH = "0" *) 
  (* C_REG_SLICE_MODE_WACH = "0" *) 
  (* C_REG_SLICE_MODE_WDCH = "0" *) 
  (* C_REG_SLICE_MODE_WRCH = "0" *) 
  (* C_SELECT_XPM = "0" *) 
  (* C_SYNCHRONIZER_STAGE = "2" *) 
  (* C_UNDERFLOW_LOW = "0" *) 
  (* C_USE_COMMON_OVERFLOW = "0" *) 
  (* C_USE_COMMON_UNDERFLOW = "0" *) 
  (* C_USE_DEFAULT_SETTINGS = "0" *) 
  (* C_USE_DOUT_RST = "1" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_ECC_AXIS = "0" *) 
  (* C_USE_ECC_RACH = "0" *) 
  (* C_USE_ECC_RDCH = "0" *) 
  (* C_USE_ECC_WACH = "0" *) 
  (* C_USE_ECC_WDCH = "0" *) 
  (* C_USE_ECC_WRCH = "0" *) 
  (* C_USE_EMBEDDED_REG = "0" *) 
  (* C_USE_FIFO16_FLAGS = "0" *) 
  (* C_USE_FWFT_DATA_COUNT = "0" *) 
  (* C_USE_PIPELINE_REG = "0" *) 
  (* C_VALID_LOW = "0" *) 
  (* C_WACH_TYPE = "0" *) 
  (* C_WDCH_TYPE = "0" *) 
  (* C_WRCH_TYPE = "0" *) 
  (* C_WR_ACK_LOW = "0" *) 
  (* C_WR_DATA_COUNT_WIDTH = "10" *) 
  (* C_WR_DEPTH = "1024" *) 
  (* C_WR_DEPTH_AXIS = "1024" *) 
  (* C_WR_DEPTH_RACH = "16" *) 
  (* C_WR_DEPTH_RDCH = "1024" *) 
  (* C_WR_DEPTH_WACH = "16" *) 
  (* C_WR_DEPTH_WDCH = "1024" *) 
  (* C_WR_DEPTH_WRCH = "16" *) 
  (* C_WR_FREQ = "1" *) 
  (* C_WR_PNTR_WIDTH = "10" *) 
  (* C_WR_PNTR_WIDTH_AXIS = "10" *) 
  (* C_WR_PNTR_WIDTH_RACH = "4" *) 
  (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WACH = "4" *) 
  (* C_WR_PNTR_WIDTH_WDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
  (* C_WR_RESPONSE_LATENCY = "1" *) 
  final_accelerator_Softmax_Layer_32bit_0_0_fifo_generator_v13_1_3__4 U0
       (.almost_empty(almost_empty),
        .almost_full(almost_full),
        .axi_ar_data_count(NLW_U0_axi_ar_data_count_UNCONNECTED[4:0]),
        .axi_ar_dbiterr(NLW_U0_axi_ar_dbiterr_UNCONNECTED),
        .axi_ar_injectdbiterr(1'b0),
        .axi_ar_injectsbiterr(1'b0),
        .axi_ar_overflow(NLW_U0_axi_ar_overflow_UNCONNECTED),
        .axi_ar_prog_empty(NLW_U0_axi_ar_prog_empty_UNCONNECTED),
        .axi_ar_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_prog_full(NLW_U0_axi_ar_prog_full_UNCONNECTED),
        .axi_ar_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_rd_data_count(NLW_U0_axi_ar_rd_data_count_UNCONNECTED[4:0]),
        .axi_ar_sbiterr(NLW_U0_axi_ar_sbiterr_UNCONNECTED),
        .axi_ar_underflow(NLW_U0_axi_ar_underflow_UNCONNECTED),
        .axi_ar_wr_data_count(NLW_U0_axi_ar_wr_data_count_UNCONNECTED[4:0]),
        .axi_aw_data_count(NLW_U0_axi_aw_data_count_UNCONNECTED[4:0]),
        .axi_aw_dbiterr(NLW_U0_axi_aw_dbiterr_UNCONNECTED),
        .axi_aw_injectdbiterr(1'b0),
        .axi_aw_injectsbiterr(1'b0),
        .axi_aw_overflow(NLW_U0_axi_aw_overflow_UNCONNECTED),
        .axi_aw_prog_empty(NLW_U0_axi_aw_prog_empty_UNCONNECTED),
        .axi_aw_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_prog_full(NLW_U0_axi_aw_prog_full_UNCONNECTED),
        .axi_aw_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_rd_data_count(NLW_U0_axi_aw_rd_data_count_UNCONNECTED[4:0]),
        .axi_aw_sbiterr(NLW_U0_axi_aw_sbiterr_UNCONNECTED),
        .axi_aw_underflow(NLW_U0_axi_aw_underflow_UNCONNECTED),
        .axi_aw_wr_data_count(NLW_U0_axi_aw_wr_data_count_UNCONNECTED[4:0]),
        .axi_b_data_count(NLW_U0_axi_b_data_count_UNCONNECTED[4:0]),
        .axi_b_dbiterr(NLW_U0_axi_b_dbiterr_UNCONNECTED),
        .axi_b_injectdbiterr(1'b0),
        .axi_b_injectsbiterr(1'b0),
        .axi_b_overflow(NLW_U0_axi_b_overflow_UNCONNECTED),
        .axi_b_prog_empty(NLW_U0_axi_b_prog_empty_UNCONNECTED),
        .axi_b_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_prog_full(NLW_U0_axi_b_prog_full_UNCONNECTED),
        .axi_b_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_rd_data_count(NLW_U0_axi_b_rd_data_count_UNCONNECTED[4:0]),
        .axi_b_sbiterr(NLW_U0_axi_b_sbiterr_UNCONNECTED),
        .axi_b_underflow(NLW_U0_axi_b_underflow_UNCONNECTED),
        .axi_b_wr_data_count(NLW_U0_axi_b_wr_data_count_UNCONNECTED[4:0]),
        .axi_r_data_count(NLW_U0_axi_r_data_count_UNCONNECTED[10:0]),
        .axi_r_dbiterr(NLW_U0_axi_r_dbiterr_UNCONNECTED),
        .axi_r_injectdbiterr(1'b0),
        .axi_r_injectsbiterr(1'b0),
        .axi_r_overflow(NLW_U0_axi_r_overflow_UNCONNECTED),
        .axi_r_prog_empty(NLW_U0_axi_r_prog_empty_UNCONNECTED),
        .axi_r_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_prog_full(NLW_U0_axi_r_prog_full_UNCONNECTED),
        .axi_r_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_rd_data_count(NLW_U0_axi_r_rd_data_count_UNCONNECTED[10:0]),
        .axi_r_sbiterr(NLW_U0_axi_r_sbiterr_UNCONNECTED),
        .axi_r_underflow(NLW_U0_axi_r_underflow_UNCONNECTED),
        .axi_r_wr_data_count(NLW_U0_axi_r_wr_data_count_UNCONNECTED[10:0]),
        .axi_w_data_count(NLW_U0_axi_w_data_count_UNCONNECTED[10:0]),
        .axi_w_dbiterr(NLW_U0_axi_w_dbiterr_UNCONNECTED),
        .axi_w_injectdbiterr(1'b0),
        .axi_w_injectsbiterr(1'b0),
        .axi_w_overflow(NLW_U0_axi_w_overflow_UNCONNECTED),
        .axi_w_prog_empty(NLW_U0_axi_w_prog_empty_UNCONNECTED),
        .axi_w_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_prog_full(NLW_U0_axi_w_prog_full_UNCONNECTED),
        .axi_w_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_rd_data_count(NLW_U0_axi_w_rd_data_count_UNCONNECTED[10:0]),
        .axi_w_sbiterr(NLW_U0_axi_w_sbiterr_UNCONNECTED),
        .axi_w_underflow(NLW_U0_axi_w_underflow_UNCONNECTED),
        .axi_w_wr_data_count(NLW_U0_axi_w_wr_data_count_UNCONNECTED[10:0]),
        .axis_data_count(NLW_U0_axis_data_count_UNCONNECTED[10:0]),
        .axis_dbiterr(NLW_U0_axis_dbiterr_UNCONNECTED),
        .axis_injectdbiterr(1'b0),
        .axis_injectsbiterr(1'b0),
        .axis_overflow(NLW_U0_axis_overflow_UNCONNECTED),
        .axis_prog_empty(NLW_U0_axis_prog_empty_UNCONNECTED),
        .axis_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_prog_full(NLW_U0_axis_prog_full_UNCONNECTED),
        .axis_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_rd_data_count(NLW_U0_axis_rd_data_count_UNCONNECTED[10:0]),
        .axis_sbiterr(NLW_U0_axis_sbiterr_UNCONNECTED),
        .axis_underflow(NLW_U0_axis_underflow_UNCONNECTED),
        .axis_wr_data_count(NLW_U0_axis_wr_data_count_UNCONNECTED[10:0]),
        .backup(1'b0),
        .backup_marker(1'b0),
        .clk(1'b0),
        .data_count(NLW_U0_data_count_UNCONNECTED[9:0]),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .int_clk(1'b0),
        .m_aclk(1'b0),
        .m_aclk_en(1'b0),
        .m_axi_araddr(NLW_U0_m_axi_araddr_UNCONNECTED[31:0]),
        .m_axi_arburst(NLW_U0_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arcache(NLW_U0_m_axi_arcache_UNCONNECTED[3:0]),
        .m_axi_arid(NLW_U0_m_axi_arid_UNCONNECTED[0]),
        .m_axi_arlen(NLW_U0_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arlock(NLW_U0_m_axi_arlock_UNCONNECTED[0]),
        .m_axi_arprot(NLW_U0_m_axi_arprot_UNCONNECTED[2:0]),
        .m_axi_arqos(NLW_U0_m_axi_arqos_UNCONNECTED[3:0]),
        .m_axi_arready(1'b0),
        .m_axi_arregion(NLW_U0_m_axi_arregion_UNCONNECTED[3:0]),
        .m_axi_arsize(NLW_U0_m_axi_arsize_UNCONNECTED[2:0]),
        .m_axi_aruser(NLW_U0_m_axi_aruser_UNCONNECTED[0]),
        .m_axi_arvalid(NLW_U0_m_axi_arvalid_UNCONNECTED),
        .m_axi_awaddr(NLW_U0_m_axi_awaddr_UNCONNECTED[31:0]),
        .m_axi_awburst(NLW_U0_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awcache(NLW_U0_m_axi_awcache_UNCONNECTED[3:0]),
        .m_axi_awid(NLW_U0_m_axi_awid_UNCONNECTED[0]),
        .m_axi_awlen(NLW_U0_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awlock(NLW_U0_m_axi_awlock_UNCONNECTED[0]),
        .m_axi_awprot(NLW_U0_m_axi_awprot_UNCONNECTED[2:0]),
        .m_axi_awqos(NLW_U0_m_axi_awqos_UNCONNECTED[3:0]),
        .m_axi_awready(1'b0),
        .m_axi_awregion(NLW_U0_m_axi_awregion_UNCONNECTED[3:0]),
        .m_axi_awsize(NLW_U0_m_axi_awsize_UNCONNECTED[2:0]),
        .m_axi_awuser(NLW_U0_m_axi_awuser_UNCONNECTED[0]),
        .m_axi_awvalid(NLW_U0_m_axi_awvalid_UNCONNECTED),
        .m_axi_bid(1'b0),
        .m_axi_bready(NLW_U0_m_axi_bready_UNCONNECTED),
        .m_axi_bresp({1'b0,1'b0}),
        .m_axi_buser(1'b0),
        .m_axi_bvalid(1'b0),
        .m_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rid(1'b0),
        .m_axi_rlast(1'b0),
        .m_axi_rready(NLW_U0_m_axi_rready_UNCONNECTED),
        .m_axi_rresp({1'b0,1'b0}),
        .m_axi_ruser(1'b0),
        .m_axi_rvalid(1'b0),
        .m_axi_wdata(NLW_U0_m_axi_wdata_UNCONNECTED[63:0]),
        .m_axi_wid(NLW_U0_m_axi_wid_UNCONNECTED[0]),
        .m_axi_wlast(NLW_U0_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(1'b0),
        .m_axi_wstrb(NLW_U0_m_axi_wstrb_UNCONNECTED[7:0]),
        .m_axi_wuser(NLW_U0_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(NLW_U0_m_axi_wvalid_UNCONNECTED),
        .m_axis_tdata(NLW_U0_m_axis_tdata_UNCONNECTED[7:0]),
        .m_axis_tdest(NLW_U0_m_axis_tdest_UNCONNECTED[0]),
        .m_axis_tid(NLW_U0_m_axis_tid_UNCONNECTED[0]),
        .m_axis_tkeep(NLW_U0_m_axis_tkeep_UNCONNECTED[0]),
        .m_axis_tlast(NLW_U0_m_axis_tlast_UNCONNECTED),
        .m_axis_tready(1'b0),
        .m_axis_tstrb(NLW_U0_m_axis_tstrb_UNCONNECTED[0]),
        .m_axis_tuser(NLW_U0_m_axis_tuser_UNCONNECTED[3:0]),
        .m_axis_tvalid(NLW_U0_m_axis_tvalid_UNCONNECTED),
        .overflow(NLW_U0_overflow_UNCONNECTED),
        .prog_empty(NLW_U0_prog_empty_UNCONNECTED),
        .prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full(NLW_U0_prog_full_UNCONNECTED),
        .prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rd_clk(rd_clk),
        .rd_data_count(NLW_U0_rd_data_count_UNCONNECTED[9:0]),
        .rd_en(rd_en),
        .rd_rst(1'b0),
        .rd_rst_busy(NLW_U0_rd_rst_busy_UNCONNECTED),
        .rst(rst),
        .s_aclk(1'b0),
        .s_aclk_en(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arid(1'b0),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlock(1'b0),
        .s_axi_arprot({1'b0,1'b0,1'b0}),
        .s_axi_arqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_aruser(1'b0),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awid(1'b0),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlock(1'b0),
        .s_axi_awprot({1'b0,1'b0,1'b0}),
        .s_axi_awqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awuser(1'b0),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_buser(NLW_U0_s_axi_buser_UNCONNECTED[0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[63:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_ruser(NLW_U0_s_axi_ruser_UNCONNECTED[0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wid(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(1'b0),
        .s_axis_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tdest(1'b0),
        .s_axis_tid(1'b0),
        .s_axis_tkeep(1'b0),
        .s_axis_tlast(1'b0),
        .s_axis_tready(NLW_U0_s_axis_tready_UNCONNECTED),
        .s_axis_tstrb(1'b0),
        .s_axis_tuser({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .srst(1'b0),
        .underflow(NLW_U0_underflow_UNCONNECTED),
        .valid(valid),
        .wr_ack(NLW_U0_wr_ack_UNCONNECTED),
        .wr_clk(wr_clk),
        .wr_data_count(NLW_U0_wr_data_count_UNCONNECTED[9:0]),
        .wr_en(wr_en),
        .wr_rst(1'b0),
        .wr_rst_busy(NLW_U0_wr_rst_busy_UNCONNECTED));
endmodule

(* CHECK_LICENSE_TYPE = "softmax_fifo_buffer,fifo_generator_v13_1_3,{}" *) (* ORIG_REF_NAME = "softmax_fifo_buffer" *) (* downgradeipidentifiedwarnings = "yes" *) 
(* x_core_info = "fifo_generator_v13_1_3,Vivado 2016.4" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_softmax_fifo_buffer__xdcDup__2
   (rst,
    wr_clk,
    rd_clk,
    din,
    wr_en,
    rd_en,
    dout,
    full,
    almost_full,
    empty,
    almost_empty,
    valid);
  input rst;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 write_clk CLK" *) input wr_clk;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 read_clk CLK" *) input rd_clk;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_DATA" *) input [31:0]din;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_EN" *) input wr_en;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_EN" *) input rd_en;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_DATA" *) output [31:0]dout;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE FULL" *) output full;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE ALMOST_FULL" *) output almost_full;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ EMPTY" *) output empty;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ ALMOST_EMPTY" *) output almost_empty;
  output valid;

  wire almost_empty;
  wire almost_full;
  wire [31:0]din;
  wire [31:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire valid;
  wire wr_clk;
  wire wr_en;
  wire NLW_U0_axi_ar_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_overflow_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_full_UNCONNECTED;
  wire NLW_U0_axi_ar_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_underflow_UNCONNECTED;
  wire NLW_U0_axi_aw_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_overflow_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_full_UNCONNECTED;
  wire NLW_U0_axi_aw_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_underflow_UNCONNECTED;
  wire NLW_U0_axi_b_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_overflow_UNCONNECTED;
  wire NLW_U0_axi_b_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_b_prog_full_UNCONNECTED;
  wire NLW_U0_axi_b_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_underflow_UNCONNECTED;
  wire NLW_U0_axi_r_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_overflow_UNCONNECTED;
  wire NLW_U0_axi_r_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_r_prog_full_UNCONNECTED;
  wire NLW_U0_axi_r_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_underflow_UNCONNECTED;
  wire NLW_U0_axi_w_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_overflow_UNCONNECTED;
  wire NLW_U0_axi_w_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_w_prog_full_UNCONNECTED;
  wire NLW_U0_axi_w_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_underflow_UNCONNECTED;
  wire NLW_U0_axis_dbiterr_UNCONNECTED;
  wire NLW_U0_axis_overflow_UNCONNECTED;
  wire NLW_U0_axis_prog_empty_UNCONNECTED;
  wire NLW_U0_axis_prog_full_UNCONNECTED;
  wire NLW_U0_axis_sbiterr_UNCONNECTED;
  wire NLW_U0_axis_underflow_UNCONNECTED;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_m_axi_arvalid_UNCONNECTED;
  wire NLW_U0_m_axi_awvalid_UNCONNECTED;
  wire NLW_U0_m_axi_bready_UNCONNECTED;
  wire NLW_U0_m_axi_rready_UNCONNECTED;
  wire NLW_U0_m_axi_wlast_UNCONNECTED;
  wire NLW_U0_m_axi_wvalid_UNCONNECTED;
  wire NLW_U0_m_axis_tlast_UNCONNECTED;
  wire NLW_U0_m_axis_tvalid_UNCONNECTED;
  wire NLW_U0_overflow_UNCONNECTED;
  wire NLW_U0_prog_empty_UNCONNECTED;
  wire NLW_U0_prog_full_UNCONNECTED;
  wire NLW_U0_rd_rst_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axis_tready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_underflow_UNCONNECTED;
  wire NLW_U0_wr_ack_UNCONNECTED;
  wire NLW_U0_wr_rst_busy_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_wr_data_count_UNCONNECTED;
  wire [9:0]NLW_U0_data_count_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_arlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_aruser_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_awlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awuser_UNCONNECTED;
  wire [63:0]NLW_U0_m_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wuser_UNCONNECTED;
  wire [7:0]NLW_U0_m_axis_tdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tdest_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tid_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tkeep_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tstrb_UNCONNECTED;
  wire [3:0]NLW_U0_m_axis_tuser_UNCONNECTED;
  wire [9:0]NLW_U0_rd_data_count_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_buser_UNCONNECTED;
  wire [63:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_ruser_UNCONNECTED;
  wire [9:0]NLW_U0_wr_data_count_UNCONNECTED;

  (* C_ADD_NGC_CONSTRAINT = "0" *) 
  (* C_APPLICATION_TYPE_AXIS = "0" *) 
  (* C_APPLICATION_TYPE_RACH = "0" *) 
  (* C_APPLICATION_TYPE_RDCH = "0" *) 
  (* C_APPLICATION_TYPE_WACH = "0" *) 
  (* C_APPLICATION_TYPE_WDCH = "0" *) 
  (* C_APPLICATION_TYPE_WRCH = "0" *) 
  (* C_AXIS_TDATA_WIDTH = "8" *) 
  (* C_AXIS_TDEST_WIDTH = "1" *) 
  (* C_AXIS_TID_WIDTH = "1" *) 
  (* C_AXIS_TKEEP_WIDTH = "1" *) 
  (* C_AXIS_TSTRB_WIDTH = "1" *) 
  (* C_AXIS_TUSER_WIDTH = "4" *) 
  (* C_AXIS_TYPE = "0" *) 
  (* C_AXI_ADDR_WIDTH = "32" *) 
  (* C_AXI_ARUSER_WIDTH = "1" *) 
  (* C_AXI_AWUSER_WIDTH = "1" *) 
  (* C_AXI_BUSER_WIDTH = "1" *) 
  (* C_AXI_DATA_WIDTH = "64" *) 
  (* C_AXI_ID_WIDTH = "1" *) 
  (* C_AXI_LEN_WIDTH = "8" *) 
  (* C_AXI_LOCK_WIDTH = "1" *) 
  (* C_AXI_RUSER_WIDTH = "1" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_AXI_WUSER_WIDTH = "1" *) 
  (* C_COMMON_CLOCK = "0" *) 
  (* C_COUNT_TYPE = "0" *) 
  (* C_DATA_COUNT_WIDTH = "10" *) 
  (* C_DEFAULT_VALUE = "BlankString" *) 
  (* C_DIN_WIDTH = "32" *) 
  (* C_DIN_WIDTH_AXIS = "1" *) 
  (* C_DIN_WIDTH_RACH = "32" *) 
  (* C_DIN_WIDTH_RDCH = "64" *) 
  (* C_DIN_WIDTH_WACH = "1" *) 
  (* C_DIN_WIDTH_WDCH = "64" *) 
  (* C_DIN_WIDTH_WRCH = "2" *) 
  (* C_DOUT_RST_VAL = "0" *) 
  (* C_DOUT_WIDTH = "32" *) 
  (* C_ENABLE_RLOCS = "0" *) 
  (* C_ENABLE_RST_SYNC = "1" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_ERROR_INJECTION_TYPE = "0" *) 
  (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
  (* C_FAMILY = "artix7" *) 
  (* C_FULL_FLAGS_RST_VAL = "1" *) 
  (* C_HAS_ALMOST_EMPTY = "1" *) 
  (* C_HAS_ALMOST_FULL = "1" *) 
  (* C_HAS_AXIS_TDATA = "1" *) 
  (* C_HAS_AXIS_TDEST = "0" *) 
  (* C_HAS_AXIS_TID = "0" *) 
  (* C_HAS_AXIS_TKEEP = "0" *) 
  (* C_HAS_AXIS_TLAST = "0" *) 
  (* C_HAS_AXIS_TREADY = "1" *) 
  (* C_HAS_AXIS_TSTRB = "0" *) 
  (* C_HAS_AXIS_TUSER = "1" *) 
  (* C_HAS_AXI_ARUSER = "0" *) 
  (* C_HAS_AXI_AWUSER = "0" *) 
  (* C_HAS_AXI_BUSER = "0" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_AXI_RD_CHANNEL = "1" *) 
  (* C_HAS_AXI_RUSER = "0" *) 
  (* C_HAS_AXI_WR_CHANNEL = "1" *) 
  (* C_HAS_AXI_WUSER = "0" *) 
  (* C_HAS_BACKUP = "0" *) 
  (* C_HAS_DATA_COUNT = "0" *) 
  (* C_HAS_DATA_COUNTS_AXIS = "0" *) 
  (* C_HAS_DATA_COUNTS_RACH = "0" *) 
  (* C_HAS_DATA_COUNTS_RDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WACH = "0" *) 
  (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WRCH = "0" *) 
  (* C_HAS_INT_CLK = "0" *) 
  (* C_HAS_MASTER_CE = "0" *) 
  (* C_HAS_MEMINIT_FILE = "0" *) 
  (* C_HAS_OVERFLOW = "0" *) 
  (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
  (* C_HAS_PROG_FLAGS_RACH = "0" *) 
  (* C_HAS_PROG_FLAGS_RDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WACH = "0" *) 
  (* C_HAS_PROG_FLAGS_WDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WRCH = "0" *) 
  (* C_HAS_RD_DATA_COUNT = "0" *) 
  (* C_HAS_RD_RST = "0" *) 
  (* C_HAS_RST = "1" *) 
  (* C_HAS_SLAVE_CE = "0" *) 
  (* C_HAS_SRST = "0" *) 
  (* C_HAS_UNDERFLOW = "0" *) 
  (* C_HAS_VALID = "1" *) 
  (* C_HAS_WR_ACK = "0" *) 
  (* C_HAS_WR_DATA_COUNT = "0" *) 
  (* C_HAS_WR_RST = "0" *) 
  (* C_IMPLEMENTATION_TYPE = "2" *) 
  (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WRCH = "1" *) 
  (* C_INIT_WR_PNTR_VAL = "0" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_MEMORY_TYPE = "1" *) 
  (* C_MIF_FILE_NAME = "BlankString" *) 
  (* C_MSGON_VAL = "1" *) 
  (* C_OPTIMIZATION_MODE = "0" *) 
  (* C_OVERFLOW_LOW = "0" *) 
  (* C_POWER_SAVING_MODE = "0" *) 
  (* C_PRELOAD_LATENCY = "0" *) 
  (* C_PRELOAD_REGS = "1" *) 
  (* C_PRIM_FIFO_TYPE = "1kx36" *) 
  (* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) 
  (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_RDCH = "1kx36" *) 
  (* C_PRIM_FIFO_TYPE_WACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_WDCH = "1kx36" *) 
  (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) 
  (* C_PROG_EMPTY_TYPE = "0" *) 
  (* C_PROG_EMPTY_TYPE_AXIS = "0" *) 
  (* C_PROG_EMPTY_TYPE_RACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) 
  (* C_PROG_FULL_THRESH_NEGATE_VAL = "1022" *) 
  (* C_PROG_FULL_TYPE = "0" *) 
  (* C_PROG_FULL_TYPE_AXIS = "0" *) 
  (* C_PROG_FULL_TYPE_RACH = "0" *) 
  (* C_PROG_FULL_TYPE_RDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WACH = "0" *) 
  (* C_PROG_FULL_TYPE_WDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WRCH = "0" *) 
  (* C_RACH_TYPE = "0" *) 
  (* C_RDCH_TYPE = "0" *) 
  (* C_RD_DATA_COUNT_WIDTH = "10" *) 
  (* C_RD_DEPTH = "1024" *) 
  (* C_RD_FREQ = "1" *) 
  (* C_RD_PNTR_WIDTH = "10" *) 
  (* C_REG_SLICE_MODE_AXIS = "0" *) 
  (* C_REG_SLICE_MODE_RACH = "0" *) 
  (* C_REG_SLICE_MODE_RDCH = "0" *) 
  (* C_REG_SLICE_MODE_WACH = "0" *) 
  (* C_REG_SLICE_MODE_WDCH = "0" *) 
  (* C_REG_SLICE_MODE_WRCH = "0" *) 
  (* C_SELECT_XPM = "0" *) 
  (* C_SYNCHRONIZER_STAGE = "2" *) 
  (* C_UNDERFLOW_LOW = "0" *) 
  (* C_USE_COMMON_OVERFLOW = "0" *) 
  (* C_USE_COMMON_UNDERFLOW = "0" *) 
  (* C_USE_DEFAULT_SETTINGS = "0" *) 
  (* C_USE_DOUT_RST = "1" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_ECC_AXIS = "0" *) 
  (* C_USE_ECC_RACH = "0" *) 
  (* C_USE_ECC_RDCH = "0" *) 
  (* C_USE_ECC_WACH = "0" *) 
  (* C_USE_ECC_WDCH = "0" *) 
  (* C_USE_ECC_WRCH = "0" *) 
  (* C_USE_EMBEDDED_REG = "0" *) 
  (* C_USE_FIFO16_FLAGS = "0" *) 
  (* C_USE_FWFT_DATA_COUNT = "0" *) 
  (* C_USE_PIPELINE_REG = "0" *) 
  (* C_VALID_LOW = "0" *) 
  (* C_WACH_TYPE = "0" *) 
  (* C_WDCH_TYPE = "0" *) 
  (* C_WRCH_TYPE = "0" *) 
  (* C_WR_ACK_LOW = "0" *) 
  (* C_WR_DATA_COUNT_WIDTH = "10" *) 
  (* C_WR_DEPTH = "1024" *) 
  (* C_WR_DEPTH_AXIS = "1024" *) 
  (* C_WR_DEPTH_RACH = "16" *) 
  (* C_WR_DEPTH_RDCH = "1024" *) 
  (* C_WR_DEPTH_WACH = "16" *) 
  (* C_WR_DEPTH_WDCH = "1024" *) 
  (* C_WR_DEPTH_WRCH = "16" *) 
  (* C_WR_FREQ = "1" *) 
  (* C_WR_PNTR_WIDTH = "10" *) 
  (* C_WR_PNTR_WIDTH_AXIS = "10" *) 
  (* C_WR_PNTR_WIDTH_RACH = "4" *) 
  (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WACH = "4" *) 
  (* C_WR_PNTR_WIDTH_WDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
  (* C_WR_RESPONSE_LATENCY = "1" *) 
  final_accelerator_Softmax_Layer_32bit_0_0_fifo_generator_v13_1_3__3 U0
       (.almost_empty(almost_empty),
        .almost_full(almost_full),
        .axi_ar_data_count(NLW_U0_axi_ar_data_count_UNCONNECTED[4:0]),
        .axi_ar_dbiterr(NLW_U0_axi_ar_dbiterr_UNCONNECTED),
        .axi_ar_injectdbiterr(1'b0),
        .axi_ar_injectsbiterr(1'b0),
        .axi_ar_overflow(NLW_U0_axi_ar_overflow_UNCONNECTED),
        .axi_ar_prog_empty(NLW_U0_axi_ar_prog_empty_UNCONNECTED),
        .axi_ar_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_prog_full(NLW_U0_axi_ar_prog_full_UNCONNECTED),
        .axi_ar_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_rd_data_count(NLW_U0_axi_ar_rd_data_count_UNCONNECTED[4:0]),
        .axi_ar_sbiterr(NLW_U0_axi_ar_sbiterr_UNCONNECTED),
        .axi_ar_underflow(NLW_U0_axi_ar_underflow_UNCONNECTED),
        .axi_ar_wr_data_count(NLW_U0_axi_ar_wr_data_count_UNCONNECTED[4:0]),
        .axi_aw_data_count(NLW_U0_axi_aw_data_count_UNCONNECTED[4:0]),
        .axi_aw_dbiterr(NLW_U0_axi_aw_dbiterr_UNCONNECTED),
        .axi_aw_injectdbiterr(1'b0),
        .axi_aw_injectsbiterr(1'b0),
        .axi_aw_overflow(NLW_U0_axi_aw_overflow_UNCONNECTED),
        .axi_aw_prog_empty(NLW_U0_axi_aw_prog_empty_UNCONNECTED),
        .axi_aw_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_prog_full(NLW_U0_axi_aw_prog_full_UNCONNECTED),
        .axi_aw_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_rd_data_count(NLW_U0_axi_aw_rd_data_count_UNCONNECTED[4:0]),
        .axi_aw_sbiterr(NLW_U0_axi_aw_sbiterr_UNCONNECTED),
        .axi_aw_underflow(NLW_U0_axi_aw_underflow_UNCONNECTED),
        .axi_aw_wr_data_count(NLW_U0_axi_aw_wr_data_count_UNCONNECTED[4:0]),
        .axi_b_data_count(NLW_U0_axi_b_data_count_UNCONNECTED[4:0]),
        .axi_b_dbiterr(NLW_U0_axi_b_dbiterr_UNCONNECTED),
        .axi_b_injectdbiterr(1'b0),
        .axi_b_injectsbiterr(1'b0),
        .axi_b_overflow(NLW_U0_axi_b_overflow_UNCONNECTED),
        .axi_b_prog_empty(NLW_U0_axi_b_prog_empty_UNCONNECTED),
        .axi_b_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_prog_full(NLW_U0_axi_b_prog_full_UNCONNECTED),
        .axi_b_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_rd_data_count(NLW_U0_axi_b_rd_data_count_UNCONNECTED[4:0]),
        .axi_b_sbiterr(NLW_U0_axi_b_sbiterr_UNCONNECTED),
        .axi_b_underflow(NLW_U0_axi_b_underflow_UNCONNECTED),
        .axi_b_wr_data_count(NLW_U0_axi_b_wr_data_count_UNCONNECTED[4:0]),
        .axi_r_data_count(NLW_U0_axi_r_data_count_UNCONNECTED[10:0]),
        .axi_r_dbiterr(NLW_U0_axi_r_dbiterr_UNCONNECTED),
        .axi_r_injectdbiterr(1'b0),
        .axi_r_injectsbiterr(1'b0),
        .axi_r_overflow(NLW_U0_axi_r_overflow_UNCONNECTED),
        .axi_r_prog_empty(NLW_U0_axi_r_prog_empty_UNCONNECTED),
        .axi_r_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_prog_full(NLW_U0_axi_r_prog_full_UNCONNECTED),
        .axi_r_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_rd_data_count(NLW_U0_axi_r_rd_data_count_UNCONNECTED[10:0]),
        .axi_r_sbiterr(NLW_U0_axi_r_sbiterr_UNCONNECTED),
        .axi_r_underflow(NLW_U0_axi_r_underflow_UNCONNECTED),
        .axi_r_wr_data_count(NLW_U0_axi_r_wr_data_count_UNCONNECTED[10:0]),
        .axi_w_data_count(NLW_U0_axi_w_data_count_UNCONNECTED[10:0]),
        .axi_w_dbiterr(NLW_U0_axi_w_dbiterr_UNCONNECTED),
        .axi_w_injectdbiterr(1'b0),
        .axi_w_injectsbiterr(1'b0),
        .axi_w_overflow(NLW_U0_axi_w_overflow_UNCONNECTED),
        .axi_w_prog_empty(NLW_U0_axi_w_prog_empty_UNCONNECTED),
        .axi_w_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_prog_full(NLW_U0_axi_w_prog_full_UNCONNECTED),
        .axi_w_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_rd_data_count(NLW_U0_axi_w_rd_data_count_UNCONNECTED[10:0]),
        .axi_w_sbiterr(NLW_U0_axi_w_sbiterr_UNCONNECTED),
        .axi_w_underflow(NLW_U0_axi_w_underflow_UNCONNECTED),
        .axi_w_wr_data_count(NLW_U0_axi_w_wr_data_count_UNCONNECTED[10:0]),
        .axis_data_count(NLW_U0_axis_data_count_UNCONNECTED[10:0]),
        .axis_dbiterr(NLW_U0_axis_dbiterr_UNCONNECTED),
        .axis_injectdbiterr(1'b0),
        .axis_injectsbiterr(1'b0),
        .axis_overflow(NLW_U0_axis_overflow_UNCONNECTED),
        .axis_prog_empty(NLW_U0_axis_prog_empty_UNCONNECTED),
        .axis_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_prog_full(NLW_U0_axis_prog_full_UNCONNECTED),
        .axis_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_rd_data_count(NLW_U0_axis_rd_data_count_UNCONNECTED[10:0]),
        .axis_sbiterr(NLW_U0_axis_sbiterr_UNCONNECTED),
        .axis_underflow(NLW_U0_axis_underflow_UNCONNECTED),
        .axis_wr_data_count(NLW_U0_axis_wr_data_count_UNCONNECTED[10:0]),
        .backup(1'b0),
        .backup_marker(1'b0),
        .clk(1'b0),
        .data_count(NLW_U0_data_count_UNCONNECTED[9:0]),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .int_clk(1'b0),
        .m_aclk(1'b0),
        .m_aclk_en(1'b0),
        .m_axi_araddr(NLW_U0_m_axi_araddr_UNCONNECTED[31:0]),
        .m_axi_arburst(NLW_U0_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arcache(NLW_U0_m_axi_arcache_UNCONNECTED[3:0]),
        .m_axi_arid(NLW_U0_m_axi_arid_UNCONNECTED[0]),
        .m_axi_arlen(NLW_U0_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arlock(NLW_U0_m_axi_arlock_UNCONNECTED[0]),
        .m_axi_arprot(NLW_U0_m_axi_arprot_UNCONNECTED[2:0]),
        .m_axi_arqos(NLW_U0_m_axi_arqos_UNCONNECTED[3:0]),
        .m_axi_arready(1'b0),
        .m_axi_arregion(NLW_U0_m_axi_arregion_UNCONNECTED[3:0]),
        .m_axi_arsize(NLW_U0_m_axi_arsize_UNCONNECTED[2:0]),
        .m_axi_aruser(NLW_U0_m_axi_aruser_UNCONNECTED[0]),
        .m_axi_arvalid(NLW_U0_m_axi_arvalid_UNCONNECTED),
        .m_axi_awaddr(NLW_U0_m_axi_awaddr_UNCONNECTED[31:0]),
        .m_axi_awburst(NLW_U0_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awcache(NLW_U0_m_axi_awcache_UNCONNECTED[3:0]),
        .m_axi_awid(NLW_U0_m_axi_awid_UNCONNECTED[0]),
        .m_axi_awlen(NLW_U0_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awlock(NLW_U0_m_axi_awlock_UNCONNECTED[0]),
        .m_axi_awprot(NLW_U0_m_axi_awprot_UNCONNECTED[2:0]),
        .m_axi_awqos(NLW_U0_m_axi_awqos_UNCONNECTED[3:0]),
        .m_axi_awready(1'b0),
        .m_axi_awregion(NLW_U0_m_axi_awregion_UNCONNECTED[3:0]),
        .m_axi_awsize(NLW_U0_m_axi_awsize_UNCONNECTED[2:0]),
        .m_axi_awuser(NLW_U0_m_axi_awuser_UNCONNECTED[0]),
        .m_axi_awvalid(NLW_U0_m_axi_awvalid_UNCONNECTED),
        .m_axi_bid(1'b0),
        .m_axi_bready(NLW_U0_m_axi_bready_UNCONNECTED),
        .m_axi_bresp({1'b0,1'b0}),
        .m_axi_buser(1'b0),
        .m_axi_bvalid(1'b0),
        .m_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rid(1'b0),
        .m_axi_rlast(1'b0),
        .m_axi_rready(NLW_U0_m_axi_rready_UNCONNECTED),
        .m_axi_rresp({1'b0,1'b0}),
        .m_axi_ruser(1'b0),
        .m_axi_rvalid(1'b0),
        .m_axi_wdata(NLW_U0_m_axi_wdata_UNCONNECTED[63:0]),
        .m_axi_wid(NLW_U0_m_axi_wid_UNCONNECTED[0]),
        .m_axi_wlast(NLW_U0_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(1'b0),
        .m_axi_wstrb(NLW_U0_m_axi_wstrb_UNCONNECTED[7:0]),
        .m_axi_wuser(NLW_U0_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(NLW_U0_m_axi_wvalid_UNCONNECTED),
        .m_axis_tdata(NLW_U0_m_axis_tdata_UNCONNECTED[7:0]),
        .m_axis_tdest(NLW_U0_m_axis_tdest_UNCONNECTED[0]),
        .m_axis_tid(NLW_U0_m_axis_tid_UNCONNECTED[0]),
        .m_axis_tkeep(NLW_U0_m_axis_tkeep_UNCONNECTED[0]),
        .m_axis_tlast(NLW_U0_m_axis_tlast_UNCONNECTED),
        .m_axis_tready(1'b0),
        .m_axis_tstrb(NLW_U0_m_axis_tstrb_UNCONNECTED[0]),
        .m_axis_tuser(NLW_U0_m_axis_tuser_UNCONNECTED[3:0]),
        .m_axis_tvalid(NLW_U0_m_axis_tvalid_UNCONNECTED),
        .overflow(NLW_U0_overflow_UNCONNECTED),
        .prog_empty(NLW_U0_prog_empty_UNCONNECTED),
        .prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full(NLW_U0_prog_full_UNCONNECTED),
        .prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rd_clk(rd_clk),
        .rd_data_count(NLW_U0_rd_data_count_UNCONNECTED[9:0]),
        .rd_en(rd_en),
        .rd_rst(1'b0),
        .rd_rst_busy(NLW_U0_rd_rst_busy_UNCONNECTED),
        .rst(rst),
        .s_aclk(1'b0),
        .s_aclk_en(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arid(1'b0),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlock(1'b0),
        .s_axi_arprot({1'b0,1'b0,1'b0}),
        .s_axi_arqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_aruser(1'b0),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awid(1'b0),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlock(1'b0),
        .s_axi_awprot({1'b0,1'b0,1'b0}),
        .s_axi_awqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awuser(1'b0),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_buser(NLW_U0_s_axi_buser_UNCONNECTED[0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[63:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_ruser(NLW_U0_s_axi_ruser_UNCONNECTED[0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wid(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(1'b0),
        .s_axis_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tdest(1'b0),
        .s_axis_tid(1'b0),
        .s_axis_tkeep(1'b0),
        .s_axis_tlast(1'b0),
        .s_axis_tready(NLW_U0_s_axis_tready_UNCONNECTED),
        .s_axis_tstrb(1'b0),
        .s_axis_tuser({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .srst(1'b0),
        .underflow(NLW_U0_underflow_UNCONNECTED),
        .valid(valid),
        .wr_ack(NLW_U0_wr_ack_UNCONNECTED),
        .wr_clk(wr_clk),
        .wr_data_count(NLW_U0_wr_data_count_UNCONNECTED[9:0]),
        .wr_en(wr_en),
        .wr_rst(1'b0),
        .wr_rst_busy(NLW_U0_wr_rst_busy_UNCONNECTED));
endmodule

(* BUS_INFO = "32:OUTPUT:result<31:0>" *) (* CHECK_LICENSE_TYPE = "softmax_multiply_32bit,floating_point_v5_0,{}" *) (* NLW_MACRO_ALIAS = "softmax_multiply_32bit_softmax_multiply_32bit" *) 
(* NLW_MACRO_TAG = "0" *) (* NLW_UNIQUE_ID = "0" *) (* ORIG_REF_NAME = "softmax_multiply_32bit" *) 
(* SHREG_EXTRACT_NGC = "Yes" *) (* SHREG_MIN_SIZE = "-1" *) (* TYPE = "softmax_multiply_32bit" *) 
(* x_core_info = "floating_point_v5_0, Xilinx CORE Generator 14.7" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_softmax_multiply_32bit
   (clk,
    a,
    b,
    result);
  input clk;
  input [31:0]a;
  input [31:0]b;
  output [31:0]result;

  wire [7:0]\U0/op_inst/FLT_PT_OP/MULT.OP/OP/exp_op ;
  wire [22:0]\U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op ;
  wire \U0/op_inst/FLT_PT_OP/MULT.OP/OP/sign_op ;
  wire [31:0]a;
  wire [31:0]b;
  wire clk;
  wire sig00000002;
  wire sig00000003;
  wire sig00000004;
  wire sig00000005;
  wire sig00000006;
  wire sig00000007;
  wire sig00000008;
  wire sig00000009;
  wire sig0000000a;
  wire sig0000000b;
  wire sig0000000c;
  wire sig0000000d;
  wire sig0000000e;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000000f;
  wire sig00000010;
  wire sig00000011;
  wire sig00000012;
  wire sig00000013;
  wire sig00000014;
  wire sig00000015;
  wire sig00000016;
  wire sig00000017;
  wire sig00000018;
  wire sig00000019;
  wire sig0000001a;
  wire sig0000001b;
  wire sig0000001c;
  wire sig0000001d;
  wire sig0000001e;
  wire sig0000001f;
  wire sig00000020;
  wire sig00000021;
  wire sig00000022;
  wire sig00000023;
  wire sig00000024;
  wire sig00000025;
  wire sig00000026;
  wire sig00000027;
  wire sig00000028;
  wire sig00000029;
  wire sig0000002a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000002b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000002c;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000002d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000002e;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000002f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000030;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000031;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000032;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000033;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000034;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000035;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000036;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000037;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000038;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000039;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000003a;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000003b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000003c;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000003d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000003e;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000003f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000040;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000041;
  wire sig00000042;
  wire sig00000043;
  wire sig00000044;
  wire sig00000045;
  wire sig00000046;
  wire sig00000047;
  wire sig00000048;
  wire sig00000049;
  wire sig0000004a;
  wire sig0000004b;
  wire sig0000004c;
  wire sig0000004d;
  wire sig0000004e;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000004f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000050;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000051;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000052;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000053;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000054;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000055;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000056;
  wire sig00000057;
  wire sig00000058;
  wire sig00000059;
  wire sig0000005a;
  wire sig0000005b;
  wire sig0000005c;
  wire sig0000005d;
  wire sig0000005e;
  wire sig0000005f;
  wire sig00000060;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000061;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000062;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000063;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000064;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000065;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000066;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000067;
  wire sig00000068;
  wire sig00000069;
  wire sig0000006a;
  wire sig0000006b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000006c;
  wire sig0000006d;
  wire sig0000006e;
  wire sig0000006f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000070;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000071;
  wire sig00000072;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000073;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000074;
  wire sig00000075;
  wire sig00000076;
  wire sig00000077;
  wire sig00000078;
  wire sig00000079;
  wire sig0000007a;
  wire sig0000007b;
  wire sig0000007c;
  wire sig0000007d;
  wire sig0000007e;
  wire sig0000007f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000080;
  wire sig00000081;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000082;
  wire sig00000083;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000084;
  wire sig00000085;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000086;
  wire sig00000087;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000088;
  wire sig00000089;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000008a;
  wire sig0000008b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000008c;
  wire sig0000008d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000008e;
  wire sig0000008f;
  wire sig00000090;
  wire sig00000091;
  wire sig00000092;
  wire sig00000093;
  wire sig00000094;
  wire sig00000095;
  wire sig00000096;
  wire sig00000097;
  wire sig00000098;
  wire sig00000099;
  wire sig0000009a;
  wire sig0000009b;
  wire sig0000009c;
  wire sig0000009d;
  wire sig0000009e;
  wire sig0000009f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000a0;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000a1;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000a2;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000a3;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000a4;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig000000a5;
  wire sig000000a6;
  wire sig000000a7;
  wire sig000000a8;
  wire sig000000a9;
  wire sig000000aa;
  wire sig000000ab;
  wire sig000000ac;
  wire sig000000ad;
  wire sig000000ae;
  wire sig000000af;
  wire sig000000b0;
  wire sig000000b1;
  wire sig000000b2;
  wire sig000000b3;
  wire sig000000b4;
  wire sig000000b5;
  wire sig000000b6;
  wire sig000000b7;
  wire sig000000b8;
  wire sig000000b9;
  wire sig000000ba;
  wire sig000000bb;
  wire sig000000bc;
  wire sig000000bd;
  wire sig000000be;
  wire sig000000bf;
  wire sig000000c0;
  wire sig000000c1;
  wire sig000000c2;
  wire sig000000c3;
  wire sig000000c4;
  wire sig000000c5;
  wire sig000000c6;
  wire sig000000c7;
  wire sig000000c8;
  wire sig000000c9;
  wire sig000000ca;
  wire sig000000cb;
  wire sig000000cc;
  wire sig000000cd;
  wire sig000000ce;
  wire sig000000cf;
  wire sig000000d0;
  wire sig000000d1;
  wire sig000000d2;
  wire sig000000d3;
  wire sig000000d4;
  wire sig000000d5;
  wire sig000000d6;
  wire sig000000d7;
  wire sig000000d8;
  wire sig000000d9;
  wire sig000000da;
  wire sig000000db;
  wire sig000000dc;
  wire sig000000dd;
  wire sig000000de;
  wire sig000000df;
  wire sig000000e0;
  wire sig000000e1;
  wire sig000000e2;
  wire sig000000e3;
  wire sig000000e4;
  wire sig000000e5;
  wire sig000000e6;
  wire sig000000e7;
  wire sig000000e8;
  wire sig000000e9;
  wire sig000000ea;
  wire sig000000eb;
  wire sig000000ec;
  wire sig000000ed;
  wire sig000000ee;
  wire sig000000ef;
  wire sig000000f0;
  wire sig000000f1;
  wire sig000000f2;
  wire sig000000f3;
  wire sig000000f4;
  wire sig000000f5;
  wire sig000000f6;
  wire sig000000f7;
  wire sig000000f8;
  wire sig000000f9;
  wire sig000000fa;
  wire sig000000fb;
  wire sig000000fc;
  wire sig000000fd;
  wire sig000000fe;
  wire sig000000ff;
  wire sig00000100;
  wire sig00000101;
  wire sig00000102;
  wire sig00000103;
  wire sig00000104;
  wire sig00000105;
  wire sig00000106;
  wire sig00000107;
  wire sig00000108;
  wire sig00000109;
  wire sig0000010a;
  wire sig0000010b;
  wire sig0000010c;
  wire sig0000010d;
  wire sig0000010e;
  wire sig0000010f;
  wire sig00000110;
  wire sig00000111;
  wire sig00000112;
  wire sig00000113;
  wire sig00000114;
  wire sig00000115;
  wire sig00000116;
  wire sig00000117;
  wire sig00000118;
  wire sig00000119;
  wire sig0000011a;
  wire sig0000011b;
  wire sig0000011c;
  wire sig0000011d;
  wire sig0000011e;
  wire sig0000011f;
  wire sig00000120;
  wire sig00000121;
  wire sig00000122;
  wire sig00000123;
  wire sig00000124;
  wire sig00000125;
  wire sig00000126;
  wire sig00000127;
  wire sig00000128;
  wire sig00000129;
  wire sig0000012a;
  wire sig0000012b;
  wire sig0000012c;
  wire sig0000012d;
  wire sig0000012e;
  wire sig0000012f;
  wire sig00000130;
  wire sig00000131;
  wire sig00000132;
  wire sig00000133;
  wire sig00000134;
  wire sig00000135;
  wire sig00000136;
  wire sig00000137;
  wire sig00000138;
  wire sig00000139;
  wire sig0000013a;
  wire sig0000013b;
  wire sig0000013c;
  wire sig0000013d;
  wire sig0000013e;
  wire sig0000013f;
  wire sig00000140;
  wire sig00000141;
  wire sig00000142;
  wire sig00000143;
  wire sig00000144;
  wire sig00000145;
  wire sig00000146;
  wire sig00000147;
  wire sig00000148;
  wire sig00000149;
  wire sig0000014a;
  wire sig0000014b;
  wire sig0000014c;
  wire sig0000014d;
  wire sig0000014e;
  wire sig0000014f;
  wire sig00000150;
  wire sig00000151;
  wire sig00000152;
  wire sig00000153;
  wire sig00000154;
  wire sig00000155;
  wire sig00000156;
  wire sig00000157;
  wire sig00000158;
  wire sig00000159;
  wire sig0000015a;
  wire sig0000015b;
  wire sig0000015c;
  wire sig0000015d;
  wire sig0000015e;
  wire sig0000015f;
  wire sig00000160;
  wire sig00000161;
  wire sig00000162;
  wire sig00000163;
  wire sig00000164;
  wire sig00000165;
  wire sig00000166;
  wire sig00000167;
  wire sig00000168;
  wire sig00000169;
  wire sig0000016a;
  wire sig0000016b;
  wire sig0000016c;
  wire sig0000016d;
  wire sig0000016e;
  wire sig0000016f;
  wire sig00000170;
  wire sig00000171;
  wire sig00000172;
  wire sig00000173;
  wire sig00000174;
  wire sig00000175;
  wire sig00000176;
  wire sig00000177;
  wire sig00000178;
  wire sig00000179;
  wire sig0000017a;
  wire sig0000017b;
  wire sig0000017c;
  wire sig0000017d;
  wire sig0000017e;
  wire sig0000017f;
  wire sig00000180;
  wire sig00000181;
  wire sig00000182;
  wire sig00000183;
  wire sig00000184;
  wire sig00000185;
  wire sig00000186;
  wire sig00000187;
  wire sig00000188;
  wire sig00000189;
  wire sig0000018a;
  wire sig0000018b;
  wire sig0000018c;
  wire sig0000018d;
  wire sig0000018e;
  wire sig0000018f;
  wire sig00000190;
  wire sig00000191;
  wire sig00000192;
  wire sig00000193;
  wire sig00000194;
  wire sig00000195;
  wire sig00000196;
  wire sig00000197;
  wire sig00000198;
  wire sig00000199;
  wire sig0000019a;
  wire sig0000019b;
  wire sig0000019c;
  wire sig0000019d;
  wire sig0000019e;
  wire sig0000019f;
  wire sig000001a0;
  wire sig000001a1;
  wire sig000001a2;
  wire sig000001a3;
  wire sig000001a4;
  wire sig000001a5;
  wire sig000001a6;
  wire sig000001a7;
  wire sig000001a8;
  wire sig000001a9;
  wire sig000001aa;
  wire sig000001ab;
  wire sig000001ac;
  wire sig000001ad;
  wire sig000001ae;
  wire sig000001af;
  wire sig000001b0;
  wire sig000001b1;
  wire sig000001b2;
  wire sig000001b3;
  wire sig000001b4;
  wire sig000001b5;
  wire sig000001b6;
  wire sig000001b7;
  wire sig000001b8;
  wire sig000001b9;
  wire sig000001ba;
  wire sig000001bb;
  wire sig000001bc;
  wire sig000001bd;
  wire sig000001be;
  wire sig000001bf;
  wire sig000001c0;
  wire sig000001c1;
  wire sig000001c2;
  wire sig000001c3;
  wire sig000001c4;
  wire sig000001c5;
  wire sig000001c6;
  wire sig000001c7;
  wire sig000001c8;
  wire sig000001c9;
  wire sig000001ca;
  wire sig000001cb;
  wire sig000001cc;
  wire sig000001cd;
  wire sig000001ce;
  wire sig000001cf;
  wire sig000001d0;
  wire sig000001d1;
  wire sig000001d2;
  wire sig000001d3;
  wire sig000001d4;
  wire sig000001d5;
  wire sig000001d6;
  wire sig000001d7;
  wire sig000001d8;
  wire sig000001d9;
  wire sig000001da;
  wire sig000001db;
  wire sig000001dc;
  wire sig000001dd;
  wire sig000001de;
  wire sig000001df;
  wire sig000001e0;
  wire sig000001e1;
  wire sig000001e2;
  wire sig000001e3;
  wire sig000001e4;
  wire sig000001e5;
  wire sig000001e6;
  wire sig000001e7;
  wire sig000001e8;
  wire sig000001e9;
  wire sig000001ea;
  wire sig000001eb;
  wire sig000001ec;
  wire sig000001ed;
  wire sig000001ee;
  wire sig000001ef;
  wire sig000001f0;
  wire sig000001f1;
  wire sig000001f2;
  wire sig000001f3;
  wire sig000001f4;
  wire sig000001f5;
  wire sig000001f6;
  wire sig000001f7;
  wire sig000001f8;
  wire sig000001f9;
  wire sig000001fa;
  wire sig000001fb;
  wire sig000001fc;
  wire sig000001fd;
  wire sig000001fe;
  wire sig000001ff;
  wire sig00000200;
  wire sig00000201;
  wire sig00000202;
  wire sig00000203;
  wire sig00000204;
  wire sig00000205;
  wire sig00000206;
  wire sig00000207;
  wire sig00000208;
  wire sig00000209;
  wire sig0000020a;
  wire sig0000020b;
  wire sig0000020c;
  wire sig0000020d;
  wire sig0000020e;
  wire sig0000020f;
  wire sig00000210;
  wire sig00000211;
  wire sig00000212;
  wire sig00000213;
  wire sig00000214;
  wire sig00000215;
  wire sig00000216;
  wire sig00000217;
  wire sig00000218;
  wire sig00000219;
  wire sig0000021a;
  wire sig0000021b;
  wire sig0000021c;
  wire sig0000021d;
  wire sig0000021e;
  wire sig0000021f;
  wire sig00000220;
  wire sig00000221;
  wire sig00000222;
  wire sig00000223;
  wire sig00000224;
  wire sig00000225;
  wire sig00000226;
  wire sig00000227;
  wire sig00000228;
  wire sig00000229;
  wire sig0000022a;
  wire sig0000022b;
  wire sig0000022c;
  wire sig0000022d;
  wire sig0000022e;
  wire sig0000022f;
  wire sig00000230;
  wire sig00000231;
  wire sig00000232;
  wire sig00000233;
  wire sig00000234;
  wire sig00000235;
  wire sig00000236;
  wire sig00000237;
  wire sig00000238;
  wire sig00000239;
  wire sig0000023a;
  wire sig0000023b;
  wire sig0000023c;
  wire sig0000023d;
  wire sig0000023e;
  wire sig0000023f;
  wire sig00000240;
  wire sig00000241;
  wire sig00000242;
  wire sig00000243;
  wire sig00000244;
  wire sig00000245;
  wire sig00000246;
  wire sig00000247;
  wire sig00000248;
  wire sig00000249;
  wire sig0000024a;
  wire sig0000024b;
  wire sig0000024c;
  wire sig0000024d;
  wire sig0000024e;
  wire sig0000024f;
  wire sig00000250;
  wire sig00000251;
  wire sig00000252;
  wire sig00000253;
  wire sig00000254;
  wire sig00000255;
  wire sig00000256;
  wire sig00000257;
  wire sig00000258;
  wire sig00000259;
  wire sig0000025a;
  wire sig0000025b;
  wire sig0000025c;
  wire sig0000025d;
  wire sig0000025e;
  wire sig0000025f;
  wire sig00000260;
  wire sig00000261;
  wire sig00000262;
  wire sig00000263;
  wire sig00000264;
  wire sig00000265;
  wire sig00000266;
  wire sig00000267;
  wire sig00000268;
  wire sig00000269;
  wire sig0000026a;
  wire sig0000026b;
  wire sig0000026c;
  wire sig0000026d;
  wire sig0000026e;
  wire sig0000026f;
  wire sig00000270;
  wire sig00000271;
  wire sig00000272;
  wire sig00000273;
  wire sig00000274;
  wire sig00000275;
  wire sig00000276;
  wire sig00000277;
  wire sig00000278;
  wire sig00000279;
  wire sig0000027a;
  wire sig0000027b;
  wire sig0000027c;
  wire sig0000027d;
  wire sig0000027e;
  wire sig0000027f;
  wire sig00000280;
  wire sig00000281;
  wire sig00000282;
  wire sig00000283;
  wire sig00000284;
  wire sig00000285;
  wire sig00000286;
  wire sig00000287;
  wire sig00000288;
  wire sig00000289;
  wire sig0000028a;
  wire sig0000028b;
  wire sig0000028c;
  wire sig0000028d;
  wire sig0000028e;
  wire sig0000028f;
  wire sig00000290;
  wire sig00000291;
  wire sig00000292;
  wire sig00000293;
  wire sig00000294;
  wire sig00000295;
  wire sig00000296;
  wire sig00000297;
  wire sig00000298;
  wire sig00000299;
  wire sig0000029a;
  wire sig0000029b;
  wire sig0000029c;
  wire sig0000029d;
  wire sig0000029e;
  wire sig0000029f;
  wire sig000002a0;
  wire sig000002a1;
  wire sig000002a2;
  wire sig000002a3;
  wire sig000002a4;
  wire sig000002a5;
  wire sig000002a6;
  wire sig000002a7;
  wire sig000002a8;
  wire sig000002a9;
  wire sig000002aa;
  wire sig000002ab;
  wire sig000002ac;
  wire sig000002ad;
  wire sig000002ae;
  wire sig000002af;
  wire sig000002b0;
  wire sig000002b1;
  wire sig000002b2;
  wire sig000002b3;
  wire sig000002b4;
  wire sig000002b5;
  wire sig000002b6;
  wire sig000002b7;
  wire sig000002b8;
  wire sig000002b9;
  wire sig000002ba;
  wire sig000002bb;
  wire sig000002bc;
  wire sig000002bd;
  wire sig000002be;
  wire sig000002bf;
  wire sig000002c0;
  wire sig000002c1;
  wire sig000002c2;
  wire sig000002c3;
  wire sig000002c4;
  wire sig000002c5;
  wire sig000002c6;
  wire sig000002c7;
  wire sig000002c8;
  wire sig000002c9;
  wire sig000002ca;
  wire sig000002cb;
  wire sig000002cc;
  wire sig000002cd;
  wire sig000002ce;
  wire sig000002cf;
  wire sig000002d0;
  wire sig000002d1;
  wire sig000002d2;
  wire sig000002d3;
  wire sig000002d4;
  wire sig000002d5;
  wire sig000002d6;
  wire sig000002d7;
  wire sig000002d8;
  wire sig000002d9;
  wire sig000002da;
  wire sig000002db;
  wire sig000002dc;
  wire sig000002dd;
  wire sig000002de;
  wire sig000002df;
  wire sig000002e0;
  wire sig000002e1;
  wire sig000002e2;
  wire sig000002e3;
  wire sig000002e4;
  wire sig000002e5;
  wire sig000002e6;
  wire sig000002e7;
  wire sig000002e8;
  wire sig000002e9;
  wire sig000002ea;
  wire sig000002eb;
  wire sig000002ec;
  wire sig000002ed;
  wire sig000002ee;
  wire sig000002ef;
  wire sig000002f0;
  wire sig000002f1;
  wire sig000002f2;
  wire sig000002f3;
  wire sig000002f4;
  wire sig000002f5;
  wire sig000002f6;
  wire sig000002f7;
  wire sig000002f8;
  wire sig000002f9;
  wire sig000002fa;
  wire sig000002fb;
  wire sig000002fc;
  wire sig000002fd;
  wire sig000002fe;
  wire sig000002ff;
  wire sig00000300;
  wire sig00000301;
  wire sig00000302;
  wire sig00000303;
  wire sig00000304;
  wire sig00000305;
  wire sig00000306;
  wire sig00000307;
  wire sig00000308;
  wire sig00000309;
  wire sig0000030a;
  wire sig0000030b;
  wire sig0000030c;
  wire sig0000030d;
  wire sig0000030e;
  wire sig0000030f;
  wire sig00000310;
  wire sig00000311;
  wire sig00000312;
  wire sig00000313;
  wire sig00000314;
  wire sig00000315;
  wire sig00000316;
  wire sig00000317;
  wire sig00000318;
  wire sig00000319;
  wire sig0000031a;
  wire sig0000031b;
  wire sig0000031c;
  wire sig0000031d;
  wire sig0000031e;
  wire sig0000031f;
  wire sig00000320;
  wire sig00000321;
  wire sig00000322;
  wire sig00000323;
  wire sig00000324;
  wire sig00000325;
  wire sig00000326;
  wire sig00000327;
  wire sig00000328;
  wire sig00000329;
  wire sig0000032a;
  wire sig0000032b;
  wire sig0000032c;
  wire sig0000032d;
  wire sig0000032e;
  wire sig0000032f;
  wire sig00000330;
  wire sig00000331;
  wire sig00000332;
  wire sig00000333;
  wire sig00000334;
  wire sig00000335;
  wire sig00000336;
  wire sig00000337;
  wire sig00000338;
  wire sig00000339;
  wire sig0000033a;
  wire sig0000033b;
  wire sig0000033c;
  wire sig0000033d;
  wire sig0000033e;
  wire sig0000033f;
  wire sig00000340;
  wire sig00000341;
  wire sig00000342;
  wire sig00000343;
  wire sig00000344;
  wire sig00000345;
  wire sig00000346;
  wire sig00000347;
  wire sig00000348;
  wire sig00000349;
  wire sig0000034a;
  wire sig0000034b;
  wire sig0000034c;
  wire sig0000034d;
  wire sig0000034e;
  wire sig0000034f;
  wire sig00000350;
  wire sig00000351;
  wire sig00000352;
  wire sig00000353;
  wire sig00000354;
  wire sig00000355;
  wire sig00000356;
  wire sig00000357;
  wire sig00000358;
  wire sig00000359;
  wire sig0000035a;
  wire sig0000035b;
  wire sig0000035c;
  wire sig0000035d;
  wire sig0000035e;
  wire sig0000035f;
  wire sig00000360;
  wire sig00000361;
  wire sig00000362;
  wire sig00000363;
  wire sig00000364;
  wire sig00000365;
  wire sig00000366;
  wire sig00000367;
  wire sig00000368;
  wire sig00000369;
  wire sig0000036a;
  wire sig0000036b;
  wire sig0000036c;
  wire sig0000036d;
  wire sig0000036e;
  wire sig0000036f;
  wire sig00000370;
  wire sig00000371;
  wire sig00000372;
  wire sig00000373;
  wire sig00000374;
  wire sig00000375;
  wire sig00000376;
  wire sig00000377;
  wire sig00000378;
  wire sig00000379;
  wire sig0000037a;
  wire sig0000037b;
  wire sig0000037c;
  wire sig0000037d;
  wire sig0000037e;
  wire sig0000037f;
  wire sig00000380;
  wire sig00000381;
  wire sig00000382;
  wire sig00000383;
  wire sig00000384;
  wire sig00000385;
  wire sig00000386;
  wire sig00000387;
  wire sig00000388;
  wire sig00000389;
  wire sig0000038a;
  wire sig0000038b;
  wire sig0000038c;
  wire sig0000038d;
  wire sig0000038e;
  wire sig0000038f;
  wire sig00000390;
  wire sig00000391;
  wire sig00000392;
  wire sig00000393;
  wire sig00000394;
  wire sig00000395;
  wire sig00000396;
  wire sig00000397;
  wire sig00000398;
  wire sig00000399;
  wire sig0000039a;
  wire sig0000039b;
  wire sig0000039c;
  wire sig0000039d;
  wire sig0000039e;
  wire sig0000039f;
  wire sig000003a0;
  wire sig000003a1;
  wire sig000003a2;
  wire sig000003a3;
  wire sig000003a4;
  wire sig000003a5;
  wire sig000003a6;
  wire sig000003a7;
  wire sig000003a8;
  wire sig000003a9;
  wire sig000003aa;
  wire sig000003ab;
  wire sig000003ac;
  wire sig000003ad;
  wire sig000003ae;
  wire sig000003af;
  wire sig000003b0;
  wire sig000003b1;
  wire sig000003b2;
  wire sig000003b3;
  wire sig000003b4;
  wire sig000003b5;
  wire sig000003b6;
  wire sig000003b7;
  wire sig000003b8;
  wire sig000003b9;
  wire sig000003ba;
  wire sig000003bb;
  wire sig000003bc;
  wire sig000003bd;
  wire sig000003be;
  wire sig000003bf;
  wire sig000003c0;
  wire sig000003c1;
  wire sig000003c2;
  wire sig000003c3;
  wire sig000003c4;
  wire sig000003c5;
  wire sig000003c6;
  wire sig000003c7;
  wire sig000003c8;
  wire sig000003c9;
  wire sig000003ca;
  wire sig000003cb;
  wire sig000003cc;
  wire sig000003cd;
  wire sig000003ce;
  wire sig000003cf;
  wire sig000003d0;
  wire sig000003d1;
  wire sig000003d2;
  wire sig000003d3;
  wire sig000003d4;
  wire sig000003d5;
  wire sig000003d6;
  wire sig000003d7;
  wire sig000003d8;
  wire sig000003d9;
  wire sig000003da;
  wire sig000003db;
  wire sig000003dc;
  wire sig000003dd;
  wire sig000003de;
  wire sig000003df;
  wire sig000003e0;
  wire sig000003e1;
  wire sig000003e2;
  wire sig000003e3;
  wire sig000003e4;
  wire sig000003e5;
  wire sig000003e6;
  wire sig000003e7;
  wire sig000003e8;
  wire sig000003e9;
  wire sig000003ea;
  wire sig000003eb;
  wire sig000003ec;
  wire sig000003ed;
  wire sig000003ee;
  wire sig000003ef;
  wire sig000003f0;
  wire sig000003f1;
  wire sig000003f2;
  wire sig000003f3;
  wire sig000003f4;
  wire sig000003f5;
  wire sig000003f6;
  wire sig000003f7;
  wire sig000003f8;
  wire sig000003f9;
  wire sig000003fa;
  wire sig000003fb;
  wire sig000003fc;
  wire sig000003fd;
  wire sig000003fe;
  wire sig000003ff;
  wire sig00000400;
  wire sig00000401;
  wire sig00000402;
  wire sig00000403;
  wire sig00000404;
  wire sig00000405;
  wire sig00000406;
  wire sig00000407;
  wire sig00000408;
  wire sig00000409;
  wire sig0000040a;
  wire sig0000040b;
  wire sig0000040c;
  wire sig0000040d;
  wire sig0000040e;
  wire sig0000040f;
  wire sig00000410;
  wire sig00000411;
  wire sig00000412;
  wire sig00000413;
  wire sig00000414;
  wire sig00000415;
  wire sig00000416;
  wire sig00000417;
  wire sig00000418;
  wire sig00000419;
  wire sig0000041a;
  wire sig0000041b;
  wire sig0000041c;
  wire sig0000041d;
  wire sig0000041e;
  wire sig0000041f;
  wire sig00000420;
  wire sig00000421;
  wire sig00000422;
  wire sig00000423;
  wire sig00000424;
  wire sig00000425;
  wire sig00000426;
  wire sig00000427;
  wire sig00000428;
  wire sig00000429;
  wire sig0000042a;
  wire sig0000042b;
  wire sig0000042c;
  wire sig0000042d;
  wire sig0000042e;
  wire sig0000042f;
  wire sig00000430;
  wire sig00000431;
  wire sig00000432;
  wire sig00000433;
  wire sig00000434;
  wire sig00000435;
  wire sig00000436;
  wire sig00000437;
  wire sig00000438;
  wire sig00000439;
  wire sig0000043a;
  wire sig0000043b;
  wire sig0000043c;
  wire sig0000043d;
  wire sig0000043e;
  wire sig0000043f;
  wire sig00000440;
  wire sig00000441;
  wire sig00000442;
  wire sig00000443;
  wire sig00000444;
  wire sig00000445;
  wire sig00000446;
  wire sig00000447;
  wire sig00000448;
  wire sig00000449;
  wire sig0000044a;
  wire sig0000044b;
  wire sig0000044c;
  wire sig0000044d;
  wire sig0000044e;
  wire sig0000044f;
  wire sig00000450;
  wire sig00000451;
  wire sig00000452;
  wire sig00000453;
  wire sig00000454;
  wire sig00000455;
  wire sig00000456;
  wire sig00000457;
  wire sig00000458;
  wire sig00000459;
  wire sig0000045a;
  wire sig0000045b;
  wire sig0000045c;
  wire sig0000045d;
  wire sig0000045e;
  wire sig0000045f;
  wire sig00000460;
  wire sig00000461;
  wire sig00000462;
  wire sig00000463;
  wire sig00000464;
  wire sig00000465;
  wire sig00000466;
  wire sig00000467;
  wire sig00000468;
  wire sig00000469;
  wire sig0000046a;
  wire sig0000046b;
  wire sig0000046c;
  wire sig0000046d;
  wire sig0000046e;
  wire sig0000046f;
  wire sig00000470;
  wire sig00000471;
  wire sig00000472;
  wire sig00000473;
  wire sig00000474;
  wire sig00000475;
  wire sig00000476;
  wire sig00000477;
  wire sig00000478;
  wire sig00000479;
  wire sig0000047a;
  wire sig0000047b;
  wire sig0000047c;
  wire sig0000047d;
  wire sig0000047e;
  wire sig0000047f;
  wire sig00000480;
  wire sig00000481;
  wire sig00000482;
  wire sig00000483;
  wire sig00000484;
  wire sig00000485;
  wire sig00000486;
  wire sig00000487;
  wire sig00000488;
  wire sig00000489;
  wire sig0000048a;
  wire sig0000048b;
  wire sig0000048c;
  wire sig0000048d;
  wire sig0000048e;
  wire sig0000048f;
  wire sig00000490;
  wire sig00000491;
  wire sig00000492;
  wire sig00000493;
  wire sig00000494;
  wire sig00000495;
  wire sig00000496;
  wire sig00000497;
  wire sig00000498;
  wire sig00000499;
  wire sig0000049a;
  wire sig0000049b;
  wire sig0000049c;
  wire sig0000049d;
  wire sig0000049e;
  wire sig0000049f;
  wire sig000004a0;
  wire sig000004a1;
  wire sig000004a2;
  wire sig000004a3;
  wire sig000004a4;
  wire sig000004a5;
  wire sig000004a6;
  wire sig000004a7;
  wire sig000004a8;
  wire sig000004a9;
  wire sig000004aa;
  wire sig000004ab;
  wire sig000004ac;
  wire sig000004ad;
  wire sig000004ae;
  wire sig000004af;
  wire sig000004b0;
  wire sig000004b1;
  wire sig000004b2;
  wire sig000004b3;
  wire sig000004b4;
  wire sig000004b5;
  wire sig000004b6;
  wire sig000004b7;
  wire sig000004b8;
  wire sig000004b9;
  wire sig000004ba;
  wire sig000004bb;
  wire sig000004bc;
  wire sig000004bd;
  wire sig000004be;
  wire sig000004bf;
  wire sig000004c0;
  wire sig000004c1;
  wire sig000004c2;
  wire sig000004c3;
  wire sig000004c4;
  wire sig000004c5;
  wire sig000004c6;
  wire sig000004c7;
  wire sig000004c8;
  wire sig000004c9;
  wire sig000004ca;
  wire sig000004cb;
  wire sig000004cc;
  wire sig000004cd;
  wire sig000004ce;
  wire sig000004cf;
  wire sig000004d0;
  wire sig000004d1;
  wire sig000004d2;
  wire sig000004d3;
  wire sig000004d4;
  wire sig000004d5;
  wire sig000004d6;
  wire sig000004d7;
  wire sig000004d8;
  wire sig000004d9;
  wire sig000004da;
  wire sig000004db;
  wire sig000004dc;
  wire sig000004dd;
  wire sig000004de;
  wire sig000004df;
  wire sig000004e0;
  wire sig000004e1;
  wire sig000004e2;
  wire sig000004e3;
  wire sig000004e4;
  wire sig000004e5;
  wire sig000004e6;
  wire sig000004e7;
  wire sig000004e8;
  wire sig000004e9;
  wire sig000004ea;
  wire sig000004eb;
  wire sig000004ec;
  wire sig000004ed;
  wire sig000004ee;
  wire sig000004ef;
  wire sig000004f0;
  wire sig000004f1;
  wire sig000004f2;
  wire sig000004f3;
  wire sig000004f4;
  wire sig000004f5;
  wire sig000004f6;
  wire sig000004f7;
  wire sig000004f8;
  wire sig000004f9;
  wire sig000004fa;
  wire sig000004fb;
  wire sig000004fc;
  wire sig000004fd;
  wire sig000004fe;
  wire sig000004ff;
  wire sig00000500;
  wire sig00000501;
  wire sig00000502;
  wire sig00000503;
  wire sig00000504;
  wire sig00000505;
  wire sig00000506;
  wire sig00000507;
  wire sig00000508;
  wire sig00000509;
  wire sig0000050a;
  wire sig0000050b;
  wire sig0000050c;
  wire sig0000050d;
  wire sig0000050e;
  wire sig0000050f;
  wire sig00000510;
  wire sig00000511;
  wire sig00000512;
  wire sig00000513;
  wire sig00000514;
  wire sig00000515;
  wire sig00000516;
  wire sig00000517;
  wire sig00000518;
  wire sig00000519;
  wire sig0000051a;
  wire sig0000051b;
  wire sig0000051c;
  wire sig0000051d;
  wire sig0000051e;
  wire sig0000051f;
  wire sig00000520;
  wire sig00000521;
  wire sig00000522;
  wire sig00000523;
  wire sig00000524;
  wire sig00000525;
  wire sig00000526;
  wire sig00000527;
  wire sig00000528;
  wire sig00000529;
  wire sig0000052a;
  wire sig0000052b;
  wire sig0000052c;
  wire sig0000052d;
  wire sig0000052e;
  wire sig0000052f;
  wire sig00000530;
  wire sig00000531;
  wire sig00000532;
  wire sig00000533;
  wire sig00000534;
  wire sig00000535;
  wire sig00000536;
  wire sig00000537;
  wire sig00000538;
  wire sig00000539;
  wire sig0000053a;
  wire sig0000053b;
  wire sig0000053c;
  wire sig0000053d;
  wire sig0000053e;
  wire sig0000053f;
  wire sig00000540;
  wire sig00000541;
  wire sig00000542;
  wire sig00000543;
  wire sig00000544;
  wire sig00000545;
  wire sig00000546;
  wire sig00000547;
  wire sig00000548;
  wire sig00000549;
  wire sig0000054a;
  wire sig0000054b;
  wire sig0000054c;
  wire sig0000054d;
  wire sig0000054e;
  wire sig0000054f;
  wire sig00000550;
  wire sig00000551;
  wire sig00000552;
  wire sig00000553;
  wire sig00000554;
  wire sig00000555;
  wire sig00000556;
  wire sig00000557;
  wire sig00000558;
  wire sig00000559;
  wire sig0000055a;
  wire sig0000055b;
  wire sig0000055c;
  wire sig0000055d;
  wire sig0000055e;
  wire sig0000055f;
  wire sig00000560;
  wire sig00000561;
  wire sig00000562;
  wire sig00000563;
  wire sig00000564;
  wire sig00000565;
  wire sig00000566;
  wire sig00000567;
  wire sig00000568;
  wire sig00000569;
  wire sig0000056a;
  wire sig0000056b;
  wire sig0000056c;
  wire sig0000056d;
  wire sig0000056e;
  wire sig0000056f;
  wire sig00000570;
  wire sig00000571;
  wire sig00000572;
  wire sig00000573;
  wire sig00000574;
  wire sig00000575;
  wire sig00000576;
  wire sig00000577;
  wire sig00000578;
  wire sig00000579;
  wire sig0000057a;
  wire sig0000057b;
  wire sig0000057c;
  wire sig0000057d;
  wire sig0000057e;
  wire sig0000057f;
  wire sig00000580;
  wire sig00000581;
  wire sig00000582;
  wire sig00000583;
  wire sig00000584;
  wire sig00000585;
  wire sig00000586;
  wire sig00000587;
  wire sig00000588;
  wire sig00000589;
  wire sig0000058a;
  wire sig0000058b;
  wire sig0000058c;
  wire sig0000058d;
  wire sig0000058e;
  wire sig0000058f;
  wire sig00000590;
  wire sig00000591;
  wire sig00000592;
  wire sig00000593;
  wire sig00000594;
  wire sig00000595;
  wire sig00000596;
  wire sig00000597;
  wire sig00000598;
  wire sig00000599;
  wire sig0000059a;
  wire sig0000059b;
  wire sig0000059c;
  wire sig0000059d;
  wire sig0000059e;
  wire sig0000059f;
  wire sig000005a0;
  wire sig000005a1;
  wire sig000005a2;
  wire sig000005a3;
  wire sig000005a4;
  wire sig000005a5;
  wire sig000005a6;
  wire sig000005a7;
  wire sig000005a8;
  wire sig000005a9;
  wire sig000005aa;
  wire sig000005ab;
  wire sig000005ac;
  wire sig000005ad;
  wire sig000005ae;
  wire sig000005af;
  wire sig000005b0;
  wire sig000005b1;
  wire sig000005b2;
  wire sig000005b3;
  wire sig000005b4;
  wire sig000005b5;
  wire sig000005b6;
  wire sig000005b7;
  wire sig000005b8;
  wire sig000005b9;
  wire sig000005ba;
  wire sig000005bb;
  wire sig000005bc;
  wire sig000005bd;
  wire sig000005be;
  wire sig000005bf;
  wire sig000005c0;
  wire sig000005c1;
  wire sig000005c2;
  wire sig000005c3;
  wire sig000005c4;
  wire sig000005c5;
  wire sig000005c6;
  wire sig000005c7;
  wire sig000005c8;
  wire sig000005c9;
  wire sig000005ca;
  wire sig000005cb;
  wire sig000005cc;
  wire sig000005cd;
  wire sig000005ce;
  wire sig000005cf;
  wire sig000005d0;
  wire sig000005d1;
  wire sig000005d2;
  wire sig000005d3;
  wire sig000005d4;
  wire sig000005d5;
  wire sig000005d6;
  wire sig000005d7;
  wire sig000005d8;
  wire sig000005d9;
  wire sig000005da;
  wire sig000005db;
  wire sig000005dc;
  wire sig000005dd;
  wire sig000005de;
  wire sig000005df;
  wire sig000005e0;
  wire sig000005e1;
  wire sig000005e2;
  wire sig000005e3;
  wire sig000005e4;
  wire sig000005e5;
  wire sig000005e6;
  wire sig000005e7;
  wire sig000005e8;
  wire sig000005e9;
  wire sig000005ea;
  wire sig000005eb;
  wire sig000005ec;
  wire sig000005ed;
  wire sig000005ee;
  wire sig000005ef;
  wire sig000005f0;
  wire sig000005f1;
  wire sig000005f2;
  wire sig000005f3;
  wire sig000005f4;
  wire sig000005f5;
  wire sig000005f6;
  wire sig000005f7;
  wire sig000005f8;
  wire sig000005f9;
  wire sig000005fa;
  wire sig000005fb;
  wire sig000005fc;
  wire sig000005fd;
  wire sig000005fe;
  wire sig000005ff;
  wire sig00000600;
  wire sig00000601;
  wire sig00000602;
  wire sig00000603;
  wire sig00000604;
  wire sig00000605;
  wire sig00000606;
  wire sig00000607;
  wire sig00000608;
  wire sig00000609;
  wire sig0000060a;
  wire sig0000060b;
  wire sig0000060c;
  wire sig0000060d;
  wire sig0000060e;
  wire sig0000060f;
  wire sig00000610;
  wire sig00000611;
  wire sig00000612;
  wire sig00000613;
  wire sig00000614;
  wire sig00000615;
  wire sig00000616;
  wire sig00000617;
  wire sig00000618;
  wire sig00000619;
  wire sig0000061a;
  wire sig0000061b;
  wire sig0000061c;
  wire sig0000061d;
  wire sig0000061e;
  wire sig0000061f;
  wire sig00000620;
  wire sig00000621;
  wire sig00000622;
  wire sig00000623;
  wire sig00000624;
  wire sig00000625;
  wire sig00000626;
  wire sig00000627;
  wire sig00000628;
  wire sig00000629;
  wire sig0000062a;
  wire sig0000062b;
  wire sig0000062c;
  wire sig0000062d;
  wire sig0000062e;
  wire sig0000062f;
  wire sig00000630;
  wire sig00000631;
  wire sig00000632;
  wire sig00000633;
  wire sig00000634;
  wire sig00000635;
  wire sig00000636;
  wire sig00000637;
  wire sig00000638;
  wire sig00000639;
  wire sig0000063a;
  wire sig0000063b;
  wire sig0000063c;
  wire sig0000063d;
  wire sig0000063e;
  wire sig0000063f;
  wire sig00000640;
  wire sig00000641;
  wire sig00000642;
  wire sig00000643;
  wire sig00000644;
  wire sig00000645;
  wire sig00000646;
  wire sig00000647;
  wire sig00000648;
  wire sig00000649;
  wire sig0000064a;
  wire sig0000064b;
  wire sig0000064c;
  wire sig0000064d;
  wire sig0000064e;
  wire sig0000064f;
  wire sig00000650;
  wire sig00000651;
  wire sig00000652;
  wire sig00000653;
  wire sig00000654;
  wire sig00000655;
  wire sig00000656;
  wire sig00000657;
  wire sig00000658;
  wire sig00000659;
  wire sig0000065a;
  wire sig0000065b;
  wire sig0000065c;
  wire sig0000065d;
  wire sig0000065e;
  wire sig0000065f;
  wire sig00000660;
  wire sig00000661;
  wire sig00000662;
  wire sig00000663;
  wire sig00000664;
  wire sig00000665;
  wire sig00000666;
  wire sig00000667;
  wire sig00000668;
  wire sig00000669;
  wire sig0000066a;
  wire sig0000066b;
  wire sig0000066c;
  wire sig0000066d;
  wire sig0000066e;
  wire sig0000066f;
  wire sig00000670;
  wire sig00000671;
  wire sig00000672;
  wire sig00000673;
  wire sig00000674;
  wire sig00000675;
  wire sig00000676;
  wire sig00000677;
  wire sig00000678;
  wire sig00000679;
  wire sig0000067a;
  wire sig0000067b;
  wire sig0000067c;
  wire sig0000067d;
  wire sig0000067e;
  wire sig0000067f;
  wire sig00000680;
  wire sig00000681;
  wire sig00000682;
  wire sig00000683;
  wire sig00000684;
  wire sig00000685;
  wire sig00000686;
  wire sig00000687;
  wire sig00000688;
  wire sig00000689;
  wire sig0000068a;
  wire sig0000068b;
  wire sig0000068c;
  wire sig0000068d;
  wire sig0000068e;
  wire sig0000068f;
  wire sig00000690;
  wire sig00000691;
  wire sig00000692;
  wire sig00000693;
  wire sig00000694;
  wire sig00000695;
  wire sig00000696;
  wire sig00000697;
  wire sig00000698;
  wire sig00000699;
  wire sig0000069a;
  wire sig0000069b;
  wire sig0000069c;
  wire sig0000069d;
  wire sig0000069e;
  wire sig0000069f;
  wire sig000006a0;
  wire sig000006a1;
  wire sig000006a2;
  wire sig000006a3;
  wire sig000006a4;
  wire sig000006a5;
  wire sig000006a6;
  wire sig000006a7;
  wire sig000006a8;
  wire sig000006a9;
  wire sig000006aa;
  wire sig000006ab;
  wire sig000006ac;
  wire sig000006ad;
  wire sig000006ae;
  wire sig000006af;
  wire sig000006b0;
  wire sig000006b1;
  wire sig000006b2;
  wire sig000006b3;
  wire sig000006b4;
  wire sig000006b5;
  wire sig000006b6;
  wire sig000006b7;
  wire sig000006b8;
  wire sig000006b9;
  wire sig000006ba;
  wire sig000006bb;
  wire sig000006bc;
  wire sig000006bd;
  wire sig000006be;
  wire sig000006bf;
  wire sig000006c0;
  wire sig000006c1;
  wire sig000006c2;
  wire sig000006c3;
  wire sig000006c4;
  wire sig000006c5;
  wire sig000006c6;
  wire sig000006c7;
  wire sig000006c8;
  wire sig000006c9;
  wire sig000006ca;
  wire sig000006cb;
  wire sig000006cc;
  wire sig000006cd;
  wire sig000006ce;
  wire sig000006cf;
  wire sig000006d0;
  wire sig000006d1;
  wire sig000006d2;
  wire sig000006d3;
  wire sig000006d4;
  wire sig000006d5;
  wire sig000006d6;
  wire sig000006d7;
  wire sig000006d8;
  wire sig000006d9;
  wire sig000006da;
  wire sig000006db;
  wire sig000006dc;
  wire sig000006dd;
  wire sig000006de;
  wire sig000006df;
  wire sig000006e0;
  wire sig000006e1;
  wire sig000006e2;
  wire sig000006e3;
  wire sig000006e4;
  wire sig000006e5;
  wire sig000006e6;
  wire sig000006e7;
  wire sig000006e8;
  wire sig000006e9;
  wire sig000006ea;
  wire sig000006eb;
  wire sig000006ec;
  wire sig000006ed;
  wire sig000006ee;
  wire sig000006ef;
  wire sig000006f0;
  wire sig000006f1;
  wire sig000006f2;
  wire sig000006f3;
  wire sig000006f4;
  wire sig000006f5;
  wire sig000006f6;
  wire sig000006f7;
  wire sig000006f8;
  wire sig000006f9;
  wire sig000006fa;
  wire sig000006fb;
  wire sig000006fc;
  wire sig000006fd;
  wire sig000006fe;
  wire sig000006ff;
  wire sig00000700;
  wire sig00000701;
  wire sig00000702;
  wire sig00000703;
  wire sig00000704;
  wire sig00000705;
  wire sig00000706;
  wire sig00000707;
  wire sig00000708;
  wire sig00000709;
  wire sig0000070a;
  wire sig0000070b;
  wire sig0000070c;
  wire sig0000070d;
  wire sig0000070e;
  wire sig0000070f;
  wire sig00000710;
  wire sig00000711;
  wire sig00000712;
  wire sig00000713;
  wire sig00000714;
  wire sig00000715;
  wire sig00000716;
  wire sig00000717;
  wire sig00000718;
  wire sig00000719;
  wire sig0000071a;
  wire sig0000071b;
  wire sig0000071c;
  wire sig0000071d;
  wire sig0000071e;
  wire sig0000071f;
  wire sig00000720;
  wire sig00000721;
  wire sig00000722;
  wire sig00000723;
  wire sig00000724;
  wire sig00000725;
  wire sig00000726;
  wire sig00000727;
  wire sig00000728;
  wire sig00000729;
  wire sig0000072a;
  wire sig0000072b;
  wire sig0000072c;
  wire sig0000072d;
  wire sig0000072e;
  wire sig0000072f;
  wire sig00000730;
  wire sig00000731;
  wire sig00000732;
  wire sig00000733;
  wire sig00000734;
  wire sig00000735;
  wire sig00000736;
  wire sig00000737;
  wire sig00000738;
  wire sig00000739;
  wire sig0000073a;
  wire sig0000073b;
  wire sig0000073c;
  wire sig0000073d;
  wire sig0000073e;
  wire sig0000073f;
  wire sig00000740;
  wire sig00000741;
  wire sig00000742;
  wire sig00000743;
  wire sig00000744;
  wire sig00000745;
  wire sig00000746;
  wire sig00000747;
  wire sig00000748;
  wire sig00000749;
  wire sig0000074a;
  wire sig0000074b;
  wire sig0000074c;
  wire sig0000074d;
  wire sig0000074e;
  wire sig0000074f;
  wire sig00000750;
  wire sig00000751;
  wire sig00000752;
  wire sig00000753;
  wire sig00000754;
  wire sig00000755;
  wire sig00000756;
  wire sig00000757;
  wire sig00000758;
  wire sig00000759;
  wire sig0000075a;
  wire sig0000075b;
  wire sig0000075c;
  wire sig0000075d;
  wire sig0000075e;
  wire sig0000075f;
  wire sig00000760;
  wire sig00000761;
  wire sig00000762;
  wire sig00000763;
  wire sig00000764;
  wire sig00000765;
  wire sig00000766;
  wire sig00000767;
  wire sig00000768;
  wire sig00000769;
  wire sig0000076a;
  wire sig0000076b;
  wire sig0000076c;
  wire sig0000076d;
  wire sig0000076e;
  wire sig0000076f;
  wire sig00000770;
  wire sig00000771;
  wire sig00000772;
  wire sig00000773;
  wire sig00000774;
  wire sig00000775;
  wire sig00000776;
  wire sig00000777;
  wire sig00000778;
  wire sig00000779;
  wire sig0000077a;
  wire sig0000077b;
  wire sig0000077c;
  wire sig0000077d;
  wire sig0000077e;
  wire sig0000077f;
  wire sig00000780;
  wire sig00000781;
  wire sig00000782;
  wire sig00000783;
  wire sig00000784;
  wire sig00000785;
  wire sig00000786;
  wire sig00000787;
  wire sig00000788;
  wire sig00000789;
  wire sig0000078a;
  wire sig0000078b;
  wire sig0000078c;
  wire sig0000078d;
  wire sig0000078e;
  wire sig0000078f;
  wire sig00000790;
  wire sig00000791;
  wire sig00000792;
  wire sig00000793;
  wire sig00000794;
  wire sig00000795;
  wire sig00000796;
  wire sig00000797;
  wire sig00000798;
  wire sig00000799;
  wire sig0000079a;
  wire sig0000079b;
  wire sig0000079c;
  wire sig0000079d;
  wire sig0000079e;
  wire sig0000079f;
  wire sig000007a0;
  wire sig000007a1;
  wire sig000007a2;
  wire sig000007a3;
  wire sig000007a4;
  wire sig000007a5;
  wire sig000007a6;
  wire sig000007a7;
  wire sig000007a8;
  wire sig000007a9;
  wire sig000007aa;
  wire sig000007ab;
  wire sig000007ac;
  wire sig000007ad;
  wire sig000007ae;
  wire sig000007af;
  wire sig000007b0;
  wire sig000007b1;
  wire sig000007b2;
  wire sig000007b3;
  wire sig000007b4;
  wire sig000007b5;
  wire sig000007b6;
  wire sig000007b7;
  wire sig000007b8;
  wire sig000007b9;
  wire sig000007ba;
  wire sig000007bb;
  wire sig000007bc;
  wire sig000007bd;
  wire sig000007be;
  wire sig000007bf;
  wire sig000007c0;
  wire sig000007c1;
  wire sig000007c2;
  wire sig000007c3;
  wire sig000007c4;
  wire sig000007c5;
  wire sig000007c6;
  wire sig000007c7;
  wire sig000007c8;
  wire sig000007c9;
  wire sig000007ca;
  wire sig000007cb;
  wire sig000007cc;
  wire sig000007cd;
  wire sig000007ce;
  wire sig000007cf;
  wire sig000007d0;
  wire sig000007d1;
  wire sig000007d2;
  wire sig000007d3;
  wire sig000007d4;
  wire sig000007d5;
  wire sig000007d6;
  wire sig000007d7;
  wire sig000007d8;
  wire sig000007d9;
  wire sig000007da;
  wire sig000007db;
  wire sig000007dc;
  wire sig000007dd;
  wire sig000007de;
  wire sig000007df;
  wire sig000007e0;
  wire sig000007e1;
  wire sig000007e2;
  wire sig000007e3;
  wire sig000007e4;
  wire sig000007e5;
  wire sig000007e6;
  wire sig000007e7;
  wire sig000007e8;
  wire sig000007e9;
  wire sig000007ea;
  wire sig000007eb;
  wire sig000007ec;
  wire sig000007ed;
  wire sig000007ee;
  wire sig000007ef;
  wire sig000007f0;
  wire sig000007f1;
  wire sig000007f2;
  wire sig000007f3;
  wire sig000007f4;
  wire sig000007f5;
  wire sig000007f6;
  wire sig000007f7;
  wire sig000007f8;
  wire sig000007f9;
  wire sig000007fa;
  wire sig000007fb;
  wire sig000007fc;
  wire sig000007fd;
  wire sig000007fe;
  wire sig000007ff;
  wire sig00000800;
  wire sig00000801;
  wire sig00000802;
  wire sig00000803;
  wire sig00000804;
  wire sig00000805;
  wire sig00000806;
  wire sig00000807;
  wire sig00000808;
  wire sig00000809;
  wire sig0000080a;
  wire sig0000080b;
  wire sig0000080c;
  wire sig0000080d;
  wire sig0000080e;
  wire sig0000080f;
  wire sig00000810;
  wire sig00000811;
  wire sig00000812;
  wire sig00000813;
  wire sig00000814;
  wire sig00000815;
  wire sig00000816;
  wire sig00000817;
  wire sig00000818;
  wire sig00000819;
  wire sig0000081a;
  wire sig0000081b;
  wire sig0000081c;
  wire sig0000081d;
  wire sig0000081e;
  wire sig0000081f;
  wire sig00000820;
  wire sig00000821;
  wire sig00000822;
  wire sig00000823;
  wire sig00000824;
  wire sig00000825;
  wire sig00000826;
  wire sig00000827;
  wire sig00000828;
  wire sig00000829;
  wire sig0000082a;
  wire sig0000082b;
  wire sig0000082c;
  wire sig0000082d;
  wire sig0000082e;
  wire sig0000082f;
  wire sig00000830;
  wire sig00000831;
  wire sig00000832;
  wire sig00000833;
  wire sig00000834;
  wire sig00000835;
  wire sig00000836;
  wire sig00000837;
  wire sig00000838;
  wire sig00000839;
  wire sig0000083a;
  wire sig0000083b;
  wire sig0000083c;
  wire sig0000083d;
  wire sig0000083e;
  wire sig0000083f;
  wire sig00000840;
  wire sig00000841;
  wire sig00000842;
  wire sig00000843;
  wire sig00000844;
  wire sig00000845;
  wire sig00000846;
  wire sig00000847;
  wire sig00000848;
  wire sig00000849;
  wire sig0000084a;
  wire sig0000084b;
  wire sig0000084c;
  wire sig0000084d;
  wire sig0000084e;
  wire sig0000084f;
  wire sig00000850;
  wire sig00000851;
  wire sig00000852;
  wire sig00000853;
  wire sig00000854;
  wire sig00000855;
  wire sig00000856;
  wire sig00000857;
  wire sig00000858;
  wire sig00000859;
  wire sig0000085a;
  wire sig0000085b;
  wire sig0000085c;
  wire sig0000085d;
  wire sig0000085e;
  wire sig0000085f;
  wire sig00000860;
  wire sig00000861;
  wire sig00000862;
  wire sig00000863;
  wire sig00000864;
  wire sig00000865;
  wire sig00000866;
  wire sig00000867;
  wire sig00000868;
  wire sig00000869;
  wire sig0000086a;
  wire sig0000086b;
  wire sig0000086c;
  wire sig0000086d;
  wire sig0000086e;
  wire sig0000086f;
  wire sig00000870;
  wire sig00000871;
  wire sig00000872;
  wire sig00000873;
  wire sig00000874;
  wire sig00000875;
  wire sig00000876;
  wire sig00000877;
  wire sig00000878;
  wire sig00000879;
  wire sig0000087a;
  wire sig0000087b;
  wire sig0000087c;
  wire sig0000087d;
  wire sig0000087e;
  wire sig0000087f;
  wire sig00000880;
  wire sig00000881;
  wire sig00000882;
  wire sig00000883;
  wire sig00000884;
  wire sig00000885;
  wire sig00000886;
  wire sig00000887;
  wire sig00000888;
  wire sig00000889;
  wire sig0000088a;
  wire sig0000088b;
  wire sig0000088c;
  wire sig0000088d;
  wire sig0000088e;
  wire sig0000088f;
  wire sig00000890;
  wire sig00000891;
  wire sig00000892;
  wire sig00000893;
  wire sig00000894;
  wire sig00000895;
  wire sig00000896;
  wire sig00000897;
  wire sig00000898;
  wire sig00000899;
  wire sig0000089a;
  wire sig0000089b;
  wire sig0000089c;
  wire sig0000089d;
  wire sig0000089e;
  wire sig0000089f;
  wire sig000008a0;
  wire sig000008a1;
  wire sig000008a2;
  wire sig000008a3;
  wire sig000008a4;
  wire sig000008a5;
  wire sig000008a6;
  wire sig000008a7;
  wire sig000008a8;
  wire sig000008a9;
  wire sig000008aa;
  wire sig000008ab;
  wire sig000008ac;
  wire sig000008ad;
  wire sig000008ae;
  wire sig000008af;
  wire sig000008b0;
  wire sig000008b1;
  wire sig000008b2;
  wire sig000008b3;
  wire sig000008b4;
  wire sig000008b5;
  wire sig000008b6;
  wire sig000008b7;
  wire sig000008b8;
  wire sig000008b9;
  wire sig000008ba;
  wire sig000008bb;
  wire sig000008bc;
  wire sig000008bd;
  wire sig000008be;
  wire sig000008bf;
  wire sig000008c0;
  wire sig000008c1;
  wire sig000008c2;
  wire sig000008c3;
  wire sig000008c4;
  wire sig000008c5;
  wire sig000008c6;
  wire sig000008c7;
  wire sig000008c8;
  wire sig000008c9;
  wire sig000008ca;
  wire sig000008cb;
  wire sig000008cc;
  wire sig000008cd;
  wire sig000008ce;
  wire sig000008cf;
  wire sig000008d0;
  wire sig000008d1;
  wire sig000008d2;
  wire sig000008d3;
  wire sig000008d4;
  wire sig000008d5;
  wire sig000008d6;
  wire sig000008d7;
  wire sig000008d8;
  wire sig000008d9;
  wire sig000008da;
  wire sig000008db;
  wire sig000008dc;
  wire sig000008dd;
  wire sig000008de;
  wire sig000008df;
  wire sig000008e0;
  wire sig000008e1;
  wire sig000008e2;
  wire sig000008e3;
  wire sig000008e4;
  wire sig000008e5;
  wire sig000008e6;
  wire sig000008e7;
  wire sig000008e8;
  wire sig000008e9;
  wire sig000008ea;
  wire sig000008eb;
  wire sig000008ec;
  wire sig000008ed;
  wire sig000008ee;
  wire sig000008ef;
  wire sig000008f0;
  wire sig000008f1;
  wire sig000008f2;
  wire sig000008f3;
  wire sig000008f4;
  wire sig000008f5;
  wire sig000008f6;
  wire sig000008f7;
  wire sig000008f8;
  wire sig000008f9;
  wire sig000008fa;
  wire sig000008fb;
  wire sig000008fc;
  wire sig000008fd;
  wire sig000008fe;
  wire sig000008ff;
  wire sig00000900;
  wire sig00000901;
  wire sig00000902;
  wire sig00000903;
  wire sig00000904;
  wire sig00000905;
  wire sig00000906;
  wire sig00000907;
  wire sig00000908;
  wire sig00000909;
  wire sig0000090a;
  wire sig0000090b;
  wire sig0000090c;
  wire sig0000090d;
  wire sig0000090e;
  wire sig0000090f;
  wire sig00000910;
  wire sig00000911;
  wire sig00000912;
  wire sig00000913;
  wire sig00000914;
  wire sig00000915;
  wire sig00000916;
  wire sig00000917;
  wire sig00000918;
  wire sig00000919;
  wire sig0000091a;
  wire sig0000091b;
  wire sig0000091c;
  wire sig0000091d;
  wire sig0000091e;
  wire sig0000091f;
  wire sig00000920;
  wire sig00000921;
  wire sig00000922;
  wire sig00000923;
  wire sig00000924;
  wire sig00000925;
  wire sig00000926;
  wire sig00000927;
  wire sig00000928;
  wire sig00000929;
  wire sig0000092a;
  wire sig0000092b;
  wire sig0000092c;
  wire sig0000092d;
  wire sig0000092e;
  wire sig0000092f;
  wire sig00000930;
  wire sig00000931;
  wire sig00000932;
  wire sig00000933;
  wire sig00000934;
  wire sig00000935;
  wire sig00000936;
  wire sig00000937;
  wire sig00000938;
  wire sig00000939;
  wire sig0000093a;
  wire sig0000093b;
  wire sig0000093c;
  wire sig0000093d;
  wire sig0000093e;
  wire sig0000093f;
  wire sig00000940;
  wire sig00000941;
  wire sig00000942;
  wire sig00000943;
  wire sig00000944;
  wire sig00000945;
  wire sig00000946;
  wire sig00000947;
  wire sig00000948;
  wire sig00000949;
  wire sig0000094a;
  wire sig0000094b;
  wire sig0000094c;
  wire sig0000094d;
  wire sig0000094e;
  wire sig0000094f;
  wire sig00000950;
  wire sig00000951;
  wire sig00000952;
  wire sig00000953;
  wire sig00000954;
  wire sig00000955;
  wire sig00000956;
  wire sig00000957;
  wire sig00000958;
  wire sig0000095a;
  wire sig0000095b;
  wire sig0000095c;
  wire sig0000095d;
  wire sig0000095e;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000095f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000960;
  wire sig00000961;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000962;
  wire sig00000963;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000964;
  wire sig00000965;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000966;
  wire sig00000967;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000968;
  wire sig00000969;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000096a;
  wire sig0000096b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000096c;
  wire sig0000096d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000096e;
  wire sig0000096f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000970;
  wire sig00000971;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000972;
  wire sig00000973;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000974;
  wire sig00000975;
  wire sig00000976;
  wire sig00000977;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000978;
  wire sig00000979;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000097a;
  wire sig0000097b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000097c;
  wire sig0000097d;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000097e;
  wire sig0000097f;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000980;
  wire sig00000981;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000982;
  wire sig00000983;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000984;
  wire sig00000985;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000986;
  wire sig00000987;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig00000988;
  wire sig00000989;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000098a;
  wire sig0000098b;
  (* SHREG_EXTRACT_NGC = "no" *) wire sig0000098c;
  wire sig0000098d;
  wire sig0000098e;
  wire sig0000098f;
  wire sig00000990;
  wire sig00000991;
  wire sig00000992;
  wire sig00000993;
  wire sig00000994;
  wire sig00000995;
  wire sig00000996;
  wire sig00000997;
  wire sig00000998;
  wire sig00000999;
  wire sig0000099a;
  wire sig0000099b;
  wire sig0000099c;
  wire sig0000099d;
  wire sig0000099e;
  wire sig0000099f;
  wire sig000009a0;
  wire sig000009a1;
  wire sig000009a2;
  wire sig000009a3;
  wire sig000009a4;
  wire sig000009a5;
  wire sig000009a6;
  wire sig000009a7;
  wire sig000009a8;
  wire sig000009a9;
  wire sig000009aa;
  wire sig000009ab;
  wire sig000009ac;
  wire sig000009ad;
  wire sig000009ae;
  wire sig000009af;
  wire sig000009b0;
  wire sig000009b1;
  wire sig000009b2;
  wire sig000009b3;
  wire sig000009b4;
  wire sig000009b5;
  wire sig000009b6;
  wire sig000009b7;
  wire sig000009b8;
  wire sig000009b9;
  wire sig000009ba;
  wire sig000009bb;
  wire sig000009bc;
  wire sig000009bd;
  wire sig000009be;
  wire sig000009bf;
  wire sig000009c0;
  wire sig000009c1;
  wire sig000009c2;
  wire sig000009c3;
  wire sig000009c4;
  wire sig000009c5;
  wire sig000009c6;
  wire sig000009c7;
  wire sig000009c8;
  wire sig000009c9;
  wire [3:0]NLW_blk0000000e_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_blk0000000e_CARRY4_DI_UNCONNECTED;
  wire [3:1]NLW_blk0000000e_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk0000000e_CARRY4_S_UNCONNECTED;
  wire [3:0]NLW_blk00000028_CARRY4_O_UNCONNECTED;
  wire [3:0]NLW_blk0000002d_CARRY4_O_UNCONNECTED;
  wire [3:0]NLW_blk0000003e_CARRY4_O_UNCONNECTED;
  wire [3:2]NLW_blk00000049_CARRY4_CO_UNCONNECTED;
  wire [3:2]NLW_blk00000049_CARRY4_DI_UNCONNECTED;
  wire [3:0]NLW_blk00000049_CARRY4_O_UNCONNECTED;
  wire [3:2]NLW_blk00000049_CARRY4_S_UNCONNECTED;
  wire [3:1]NLW_blk00000069_CARRY4_CO_UNCONNECTED;
  wire [3:1]NLW_blk00000069_CARRY4_DI_UNCONNECTED;
  wire [3:2]NLW_blk00000069_CARRY4_O_UNCONNECTED;
  wire [3:2]NLW_blk00000069_CARRY4_S_UNCONNECTED;
  wire [3:1]NLW_blk000000e0_CARRY4_CO_UNCONNECTED;
  wire [3:1]NLW_blk000000e0_CARRY4_DI_UNCONNECTED;
  wire [3:2]NLW_blk000000e0_CARRY4_O_UNCONNECTED;
  wire [3:2]NLW_blk000000e0_CARRY4_S_UNCONNECTED;
  wire [3:1]NLW_blk000000fe_CARRY4_CO_UNCONNECTED;
  wire [3:1]NLW_blk000000fe_CARRY4_DI_UNCONNECTED;
  wire [3:0]NLW_blk000000fe_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk000000fe_CARRY4_S_UNCONNECTED;
  wire [3:1]NLW_blk00000103_CARRY4_CO_UNCONNECTED;
  wire [3:1]NLW_blk00000103_CARRY4_DI_UNCONNECTED;
  wire [3:0]NLW_blk00000103_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk00000103_CARRY4_S_UNCONNECTED;
  wire NLW_blk0000013d_O_UNCONNECTED;
  wire [0:0]NLW_blk0000013e_CARRY4_O_UNCONNECTED;
  wire [3:0]NLW_blk0000016d_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_blk0000016d_CARRY4_DI_UNCONNECTED;
  wire [3:1]NLW_blk0000016d_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk0000016d_CARRY4_S_UNCONNECTED;
  wire NLW_blk000001a0_O_UNCONNECTED;
  wire [0:0]NLW_blk000001a1_CARRY4_O_UNCONNECTED;
  wire [3:0]NLW_blk000001d0_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_blk000001d0_CARRY4_DI_UNCONNECTED;
  wire [3:1]NLW_blk000001d0_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk000001d0_CARRY4_S_UNCONNECTED;
  wire NLW_blk00000203_O_UNCONNECTED;
  wire [0:0]NLW_blk00000204_CARRY4_O_UNCONNECTED;
  wire [3:0]NLW_blk00000233_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_blk00000233_CARRY4_DI_UNCONNECTED;
  wire [3:1]NLW_blk00000233_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk00000233_CARRY4_S_UNCONNECTED;
  wire NLW_blk00000266_O_UNCONNECTED;
  wire [0:0]NLW_blk00000267_CARRY4_O_UNCONNECTED;
  wire [3:0]NLW_blk00000296_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_blk00000296_CARRY4_DI_UNCONNECTED;
  wire [3:1]NLW_blk00000296_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk00000296_CARRY4_S_UNCONNECTED;
  wire NLW_blk000002c9_O_UNCONNECTED;
  wire [0:0]NLW_blk000002ca_CARRY4_O_UNCONNECTED;
  wire [3:0]NLW_blk000002f9_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_blk000002f9_CARRY4_DI_UNCONNECTED;
  wire [3:1]NLW_blk000002f9_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk000002f9_CARRY4_S_UNCONNECTED;
  wire NLW_blk0000032c_O_UNCONNECTED;
  wire [0:0]NLW_blk0000032d_CARRY4_O_UNCONNECTED;
  wire [3:0]NLW_blk0000035c_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_blk0000035c_CARRY4_DI_UNCONNECTED;
  wire [3:1]NLW_blk0000035c_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk0000035c_CARRY4_S_UNCONNECTED;
  wire NLW_blk0000038f_O_UNCONNECTED;
  wire [0:0]NLW_blk00000390_CARRY4_O_UNCONNECTED;
  wire [3:0]NLW_blk000003bf_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_blk000003bf_CARRY4_DI_UNCONNECTED;
  wire [3:1]NLW_blk000003bf_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk000003bf_CARRY4_S_UNCONNECTED;
  wire NLW_blk000003f2_O_UNCONNECTED;
  wire [0:0]NLW_blk000003f3_CARRY4_O_UNCONNECTED;
  wire [3:0]NLW_blk00000422_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_blk00000422_CARRY4_DI_UNCONNECTED;
  wire [3:1]NLW_blk00000422_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk00000422_CARRY4_S_UNCONNECTED;
  wire NLW_blk0000057b_Q_UNCONNECTED;
  wire NLW_blk0000057c_Q_UNCONNECTED;
  wire [3:0]NLW_blk0000057d_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_blk0000057d_CARRY4_DI_UNCONNECTED;
  wire [3:1]NLW_blk0000057d_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_blk0000057d_CARRY4_S_UNCONNECTED;
  wire [0:0]NLW_blk000005ac_CARRY4_O_UNCONNECTED;
  wire NLW_blk000005ad_O_UNCONNECTED;
  wire [3:2]NLW_blk000005fb_CARRY4_CO_UNCONNECTED;
  wire [3:2]NLW_blk000005fb_CARRY4_DI_UNCONNECTED;
  wire [3:3]NLW_blk000005fb_CARRY4_O_UNCONNECTED;
  wire [3:3]NLW_blk000005fb_CARRY4_S_UNCONNECTED;
  wire [3:2]NLW_blk0000064b_CARRY4_CO_UNCONNECTED;
  wire [3:2]NLW_blk0000064b_CARRY4_DI_UNCONNECTED;
  wire [3:3]NLW_blk0000064b_CARRY4_O_UNCONNECTED;
  wire [3:3]NLW_blk0000064b_CARRY4_S_UNCONNECTED;
  wire [3:2]NLW_blk0000069b_CARRY4_CO_UNCONNECTED;
  wire [3:2]NLW_blk0000069b_CARRY4_DI_UNCONNECTED;
  wire [3:3]NLW_blk0000069b_CARRY4_O_UNCONNECTED;
  wire [3:3]NLW_blk0000069b_CARRY4_S_UNCONNECTED;
  wire [3:2]NLW_blk000006eb_CARRY4_CO_UNCONNECTED;
  wire [3:2]NLW_blk000006eb_CARRY4_DI_UNCONNECTED;
  wire [3:3]NLW_blk000006eb_CARRY4_O_UNCONNECTED;
  wire [3:3]NLW_blk000006eb_CARRY4_S_UNCONNECTED;
  wire [3:3]NLW_blk0000081f_CARRY4_CO_UNCONNECTED;
  wire [3:3]NLW_blk0000081f_CARRY4_DI_UNCONNECTED;
  wire NLW_blk000008a3_Q_UNCONNECTED;
  wire [3:2]NLW_blk000008c0_CARRY4_CO_UNCONNECTED;
  wire [3:2]NLW_blk000008c0_CARRY4_DI_UNCONNECTED;
  wire [3:3]NLW_blk000008c0_CARRY4_O_UNCONNECTED;
  wire [3:3]NLW_blk000008c0_CARRY4_S_UNCONNECTED;
  wire [2:0]NLW_blk000008fc_CARRY4_O_UNCONNECTED;
  wire [3:3]NLW_blk00000929_CARRY4_CO_UNCONNECTED;
  wire [3:3]NLW_blk00000929_CARRY4_DI_UNCONNECTED;
  wire [2:2]NLW_blk00000929_CARRY4_O_UNCONNECTED;
  wire [3:3]NLW_blk0000094e_CARRY4_CO_UNCONNECTED;
  wire [3:3]NLW_blk0000094e_CARRY4_DI_UNCONNECTED;

  assign result[31] = \U0/op_inst/FLT_PT_OP/MULT.OP/OP/sign_op ;
  assign result[30:23] = \U0/op_inst/FLT_PT_OP/MULT.OP/OP/exp_op ;
  assign result[22:0] = \U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op ;
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000003
       (.C(clk),
        .CE(1'b1),
        .D(sig00000066),
        .Q(sig0000004f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000004
       (.C(clk),
        .CE(1'b1),
        .D(sig0000004f),
        .Q(sig00000050),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000005
       (.C(clk),
        .CE(1'b1),
        .D(sig00000050),
        .Q(sig00000051),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000006
       (.C(clk),
        .CE(1'b1),
        .D(sig00000051),
        .Q(sig00000052),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000007
       (.C(clk),
        .CE(1'b1),
        .D(sig00000052),
        .Q(sig0000006c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000008
       (.C(clk),
        .CE(1'b1),
        .D(sig0000005f),
        .Q(sig0000006f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000009
       (.C(clk),
        .CE(1'b1),
        .D(sig0000006c),
        .Q(sig0000000f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000000a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000056),
        .Q(sig00000070),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000000b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000055),
        .Q(sig00000071),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000000c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000054),
        .Q(sig00000073),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000000d
       (.C(clk),
        .CE(1'b1),
        .D(sig00000053),
        .Q(sig00000074),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000000e_CARRY4
       (.CI(sig00000081),
        .CO(NLW_blk0000000e_CARRY4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI(NLW_blk0000000e_CARRY4_DI_UNCONNECTED[3:0]),
        .O({NLW_blk0000000e_CARRY4_O_UNCONNECTED[3:1],sig0000007f}),
        .S({NLW_blk0000000e_CARRY4_S_UNCONNECTED[3:1],1'b0}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000016_CARRY4
       (.CI(sig00000089),
        .CO({sig00000081,sig00000083,sig00000085,sig00000087}),
        .CYINIT(1'b0),
        .DI(b[30:27]),
        .O({sig00000080,sig00000082,sig00000084,sig00000086}),
        .S({sig0000005e,sig0000005d,sig0000005c,sig0000005b}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000001e_CARRY4
       (.CI(1'b0),
        .CO({sig00000089,sig0000008b,sig0000008d,sig0000008f}),
        .CYINIT(1'b1),
        .DI(b[26:23]),
        .O({sig00000088,sig0000008a,sig0000008c,sig0000008e}),
        .S({sig0000005a,sig00000059,sig00000058,sig00000057}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000001f
       (.C(clk),
        .CE(1'b1),
        .D(sig0000007f),
        .Q(sig00000076),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000020
       (.C(clk),
        .CE(1'b1),
        .D(sig00000080),
        .Q(sig0000007e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000021
       (.C(clk),
        .CE(1'b1),
        .D(sig00000082),
        .Q(sig0000007d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000022
       (.C(clk),
        .CE(1'b1),
        .D(sig00000084),
        .Q(sig0000007c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000023
       (.C(clk),
        .CE(1'b1),
        .D(sig00000086),
        .Q(sig0000007b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000024
       (.C(clk),
        .CE(1'b1),
        .D(sig00000088),
        .Q(sig0000007a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000025
       (.C(clk),
        .CE(1'b1),
        .D(sig0000008a),
        .Q(sig00000079),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000026
       (.C(clk),
        .CE(1'b1),
        .D(sig0000008c),
        .Q(sig00000078),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000027
       (.C(clk),
        .CE(1'b1),
        .D(sig0000008e),
        .Q(sig00000077),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000028_CARRY4
       (.CI(1'b0),
        .CO({sig00000093,sig00000092,sig00000091,sig00000090}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_blk00000028_CARRY4_O_UNCONNECTED[3:0]),
        .S({sig00000097,sig00000094,sig00000095,sig00000096}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000002c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000093),
        .Q(sig00000075),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000002d_CARRY4
       (.CI(1'b0),
        .CO({sig0000009b,sig0000009a,sig00000099,sig00000098}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_blk0000002d_CARRY4_O_UNCONNECTED[3:0]),
        .S({sig0000009f,sig0000009c,sig0000009d,sig0000009e}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000031
       (.C(clk),
        .CE(1'b1),
        .D(sig0000009b),
        .Q(sig00000072),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000032
       (.C(clk),
        .CE(1'b1),
        .D(sig00000065),
        .Q(sig000000a1),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000033
       (.C(clk),
        .CE(1'b1),
        .D(sig00000064),
        .Q(sig000000a0),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000034
       (.C(clk),
        .CE(1'b1),
        .D(sig00000063),
        .Q(sig000000a5),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000035
       (.C(clk),
        .CE(1'b1),
        .D(sig00000067),
        .Q(sig000000a4),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000036
       (.C(clk),
        .CE(1'b1),
        .D(sig00000061),
        .Q(sig000000a3),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000037
       (.C(clk),
        .CE(1'b1),
        .D(sig00000062),
        .Q(sig000000a2),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000038
       (.C(clk),
        .CE(1'b1),
        .D(sig0000004d),
        .Q(sig0000000e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000039
       (.C(clk),
        .CE(1'b1),
        .D(sig0000004e),
        .Q(sig0000000c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000003a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000060),
        .Q(sig0000000a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000003b
       (.C(clk),
        .CE(1'b1),
        .D(sig0000004b),
        .Q(sig0000000b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000003c
       (.C(clk),
        .CE(1'b1),
        .D(sig0000004c),
        .Q(sig0000000d),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000003d
       (.C(clk),
        .CE(1'b1),
        .D(sig000000ac),
        .Q(sig0000002a),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000003e_CARRY4
       (.CI(1'b0),
        .CO({sig000000ad,sig000000ac,sig000000aa,sig000000a9}),
        .CYINIT(sig000004a0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_blk0000003e_CARRY4_O_UNCONNECTED[3:0]),
        .S({sig000000ab,sig000000a8,sig000000a7,sig000000a6}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h0001)) 
    blk00000041
       (.I0(sig000004a5),
        .I1(sig000004a6),
        .I2(sig000004a7),
        .I3(sig000004a8),
        .O(sig000000a7));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h0001)) 
    blk00000042
       (.I0(sig000004a1),
        .I1(sig000004a2),
        .I2(sig000004a3),
        .I3(sig000004a4),
        .O(sig000000a6));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h1)) 
    blk00000043
       (.I0(sig000004a9),
        .I1(sig000004aa),
        .O(sig000000a8));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT1 #(
    .INIT(2'h2)) 
    blk00000044
       (.I0(sig0000049e),
        .O(sig000000ab));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk00000046
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig0000049f),
        .Q(sig000000ae));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h1)) 
    blk00000047
       (.I0(sig000004f2),
        .I1(sig000004f3),
        .O(sig000000b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h0001)) 
    blk00000048
       (.I0(sig000004ee),
        .I1(sig000004ef),
        .I2(sig000004f0),
        .I3(sig000004f1),
        .O(sig000000af));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000049_CARRY4
       (.CI(1'b0),
        .CO({NLW_blk00000049_CARRY4_CO_UNCONNECTED[3:2],sig000000b2,sig000000b1}),
        .CYINIT(sig000004ed),
        .DI({NLW_blk00000049_CARRY4_DI_UNCONNECTED[3:2],1'b0,1'b0}),
        .O(NLW_blk00000049_CARRY4_O_UNCONNECTED[3:0]),
        .S({NLW_blk00000049_CARRY4_S_UNCONNECTED[3:2],sig000000b0,sig000000af}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk0000004b
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig000004c6),
        .Q(sig000000b3));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000069_CARRY4
       (.CI(sig000000d2),
        .CO({NLW_blk00000069_CARRY4_CO_UNCONNECTED[3:1],sig000000d1}),
        .CYINIT(1'b0),
        .DI({NLW_blk00000069_CARRY4_DI_UNCONNECTED[3:1],sig00000564}),
        .O({NLW_blk00000069_CARRY4_O_UNCONNECTED[3:2],sig000000b4,sig000000b5}),
        .S({NLW_blk00000069_CARRY4_S_UNCONNECTED[3:2],sig000000ef,sig000000f0}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000006d_CARRY4
       (.CI(sig000000d6),
        .CO({sig000000d2,sig000000d3,sig000000d4,sig000000d5}),
        .CYINIT(1'b0),
        .DI({sig00000564,sig00000564,sig00000564,sig00000564}),
        .O({sig000000b6,sig000000b7,sig000000b8,sig000000b9}),
        .S({sig000000f1,sig000000f2,sig000000f3,sig000000f4}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000071_CARRY4
       (.CI(sig000000da),
        .CO({sig000000d6,sig000000d7,sig000000d8,sig000000d9}),
        .CYINIT(1'b0),
        .DI({sig00000564,sig00000563,sig00000562,sig00000561}),
        .O({sig000000ba,sig000000bb,sig000000bc,sig000000bd}),
        .S({sig000000f5,sig000000f6,sig000000f7,sig000000f8}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000075_CARRY4
       (.CI(sig000000de),
        .CO({sig000000da,sig000000db,sig000000dc,sig000000dd}),
        .CYINIT(1'b0),
        .DI({sig00000560,sig0000055f,sig0000055e,sig0000055d}),
        .O({sig000000be,sig000000bf,sig000000c0,sig000000c1}),
        .S({sig000000f9,sig000000fa,sig000000fb,sig000000fc}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000079_CARRY4
       (.CI(sig000000e2),
        .CO({sig000000de,sig000000df,sig000000e0,sig000000e1}),
        .CYINIT(1'b0),
        .DI({sig0000055c,sig0000055b,sig0000055a,sig00000559}),
        .O({sig000000c2,sig000000c3,sig000000c4,sig000000c5}),
        .S({sig000000fd,sig000000fe,sig000000ff,sig00000100}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000007d_CARRY4
       (.CI(sig000000e6),
        .CO({sig000000e2,sig000000e3,sig000000e4,sig000000e5}),
        .CYINIT(1'b0),
        .DI({sig00000558,sig00000557,sig00000556,sig00000555}),
        .O({sig000000c6,sig000000c7,sig000000c8,sig000000c9}),
        .S({sig00000101,sig00000102,sig00000103,sig00000104}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000081_CARRY4
       (.CI(sig000000ea),
        .CO({sig000000e6,sig000000e7,sig000000e8,sig000000e9}),
        .CYINIT(1'b0),
        .DI({sig00000554,sig00000553,sig00000552,sig00000551}),
        .O({sig000000ca,sig000000cb,sig000000cc,sig000000cd}),
        .S({sig00000105,sig00000106,sig00000107,sig00000108}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000086_CARRY4
       (.CI(1'b0),
        .CO({sig000000ea,sig000000eb,sig000000ec,sig000000ee}),
        .CYINIT(sig000004eb),
        .DI({sig00000550,sig0000054f,sig0000054e,sig0000054d}),
        .O({sig000000ce,sig000000cf,sig000000d0,sig000000ed}),
        .S({sig00000109,sig0000010a,sig0000010b,sig0000010c}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000087
       (.I0(sig00000564),
        .I1(sig00000544),
        .I2(sig000004eb),
        .O(sig000000ef));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000088
       (.I0(sig00000564),
        .I1(sig00000543),
        .I2(sig000004eb),
        .O(sig000000f0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000089
       (.I0(sig00000564),
        .I1(sig00000542),
        .I2(sig000004eb),
        .O(sig000000f1));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000008a
       (.I0(sig00000564),
        .I1(sig00000541),
        .I2(sig000004eb),
        .O(sig000000f2));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000008b
       (.I0(sig00000564),
        .I1(sig00000540),
        .I2(sig000004eb),
        .O(sig000000f3));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000008c
       (.I0(sig00000564),
        .I1(sig0000053f),
        .I2(sig000004eb),
        .O(sig000000f4));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000008d
       (.I0(sig00000564),
        .I1(sig0000053e),
        .I2(sig000004eb),
        .O(sig000000f5));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000008e
       (.I0(sig00000563),
        .I1(sig0000053d),
        .I2(sig000004eb),
        .O(sig000000f6));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000008f
       (.I0(sig00000562),
        .I1(sig0000053c),
        .I2(sig000004eb),
        .O(sig000000f7));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000090
       (.I0(sig00000561),
        .I1(sig0000053b),
        .I2(sig000004eb),
        .O(sig000000f8));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000091
       (.I0(sig00000560),
        .I1(sig0000053a),
        .I2(sig000004eb),
        .O(sig000000f9));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000092
       (.I0(sig0000055f),
        .I1(sig00000539),
        .I2(sig000004eb),
        .O(sig000000fa));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000093
       (.I0(sig0000055e),
        .I1(sig00000538),
        .I2(sig000004eb),
        .O(sig000000fb));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000094
       (.I0(sig0000055d),
        .I1(sig00000537),
        .I2(sig000004eb),
        .O(sig000000fc));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000095
       (.I0(sig0000055c),
        .I1(sig00000536),
        .I2(sig000004eb),
        .O(sig000000fd));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000096
       (.I0(sig0000055b),
        .I1(sig00000535),
        .I2(sig000004eb),
        .O(sig000000fe));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000097
       (.I0(sig0000055a),
        .I1(sig00000534),
        .I2(sig000004eb),
        .O(sig000000ff));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000098
       (.I0(sig00000559),
        .I1(sig00000533),
        .I2(sig000004eb),
        .O(sig00000100));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000099
       (.I0(sig00000558),
        .I1(sig00000532),
        .I2(sig000004eb),
        .O(sig00000101));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000009a
       (.I0(sig00000557),
        .I1(sig00000531),
        .I2(sig000004eb),
        .O(sig00000102));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000009b
       (.I0(sig00000556),
        .I1(sig00000530),
        .I2(sig000004eb),
        .O(sig00000103));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000009c
       (.I0(sig00000555),
        .I1(sig0000052f),
        .I2(sig000004eb),
        .O(sig00000104));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000009d
       (.I0(sig00000554),
        .I1(sig0000052e),
        .I2(sig000004eb),
        .O(sig00000105));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000009e
       (.I0(sig00000553),
        .I1(sig0000052d),
        .I2(sig000004eb),
        .O(sig00000106));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000009f
       (.I0(sig00000552),
        .I1(sig0000052c),
        .I2(sig000004eb),
        .O(sig00000107));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000000a0
       (.I0(sig00000551),
        .I1(sig0000052b),
        .I2(sig000004eb),
        .O(sig00000108));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000000a1
       (.I0(sig00000550),
        .I1(sig0000052a),
        .I2(sig000004eb),
        .O(sig00000109));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000000a2
       (.I0(sig0000054f),
        .I1(sig00000529),
        .I2(sig000004eb),
        .O(sig0000010a));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000000a3
       (.I0(sig0000054e),
        .I1(sig00000528),
        .I2(sig000004eb),
        .O(sig0000010b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000000a4
       (.I0(sig0000054d),
        .I1(sig00000527),
        .I2(sig000004eb),
        .O(sig0000010c));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000000a5
       (.I0(sig0000058b),
        .I1(sig00000567),
        .I2(sig0000050c),
        .O(sig0000010d));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000000a6
       (.I0(sig0000058c),
        .I1(sig00000568),
        .I2(sig0000050c),
        .O(sig0000010e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000000a7
       (.I0(sig0000058d),
        .I1(sig00000569),
        .I2(sig0000050c),
        .O(sig0000010f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000000a8
       (.I0(sig0000058e),
        .I1(sig0000056a),
        .I2(sig0000050c),
        .O(sig00000110));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000000a9
       (.I0(sig0000058f),
        .I1(sig0000056b),
        .I2(sig0000050c),
        .O(sig00000111));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000000aa
       (.I0(sig00000590),
        .I1(sig0000056c),
        .I2(sig0000050c),
        .O(sig00000112));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000000ab
       (.I0(sig00000591),
        .I1(sig0000056d),
        .I2(sig0000050c),
        .O(sig00000113));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000000ac
       (.I0(sig00000592),
        .I1(sig0000056e),
        .I2(sig0000050c),
        .O(sig00000114));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000000ad
       (.I0(sig00000593),
        .I1(sig0000056f),
        .I2(sig0000050c),
        .O(sig00000115));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000000ae
       (.I0(sig00000594),
        .I1(sig00000570),
        .I2(sig0000050c),
        .O(sig00000116));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000000af
       (.I0(sig00000595),
        .I1(sig00000571),
        .I2(sig0000050c),
        .O(sig00000117));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000000b0
       (.I0(sig00000596),
        .I1(sig00000572),
        .I2(sig0000050c),
        .O(sig00000118));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000000b1
       (.I0(sig00000597),
        .I1(sig00000573),
        .I2(sig0000050c),
        .O(sig00000119));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000000b2
       (.I0(sig00000598),
        .I1(sig00000574),
        .I2(sig0000050c),
        .O(sig0000011a));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000000b3
       (.I0(sig00000599),
        .I1(sig00000575),
        .I2(sig0000050c),
        .O(sig0000011b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000000b4
       (.I0(sig0000059a),
        .I1(sig00000576),
        .I2(sig0000050c),
        .O(sig0000011c));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000000b5
       (.I0(sig0000059b),
        .I1(sig00000577),
        .I2(sig0000050c),
        .O(sig0000011d));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000000b6
       (.I0(sig0000059c),
        .I1(sig00000578),
        .I2(sig0000050c),
        .O(sig0000011e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000000b7
       (.I0(sig0000059d),
        .I1(sig00000579),
        .I2(sig0000050c),
        .O(sig0000011f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000000b8
       (.I0(sig0000059e),
        .I1(sig0000057a),
        .I2(sig0000050c),
        .O(sig00000120));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000000b9
       (.I0(sig0000059f),
        .I1(sig0000057b),
        .I2(sig0000050c),
        .O(sig00000121));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000000ba
       (.I0(sig000005a0),
        .I1(sig0000057c),
        .I2(sig0000050c),
        .O(sig00000122));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000000bb
       (.I0(sig000005a1),
        .I1(sig0000057d),
        .I2(sig0000050c),
        .O(sig00000123));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000000bc
       (.I0(sig000005a2),
        .I1(sig0000057e),
        .I2(sig0000050c),
        .O(sig00000124));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000000bd
       (.I0(sig000005a2),
        .I1(sig0000057f),
        .I2(sig0000050c),
        .O(sig00000125));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000000be
       (.I0(sig000005a2),
        .I1(sig00000580),
        .I2(sig0000050c),
        .O(sig00000126));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000000bf
       (.I0(sig000005a2),
        .I1(sig00000581),
        .I2(sig0000050c),
        .O(sig00000127));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000000c0
       (.I0(sig000005a2),
        .I1(sig00000582),
        .I2(sig0000050c),
        .O(sig00000128));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000000c1
       (.I0(sig000005a2),
        .I1(sig00000583),
        .I2(sig0000050c),
        .O(sig00000129));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000000c2
       (.I0(sig000005a2),
        .I1(sig00000584),
        .I2(sig0000050c),
        .O(sig0000012a));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000000c3_CARRY4
       (.CI(1'b0),
        .CO({sig0000012f,sig0000012e,sig0000012d,sig0000012b}),
        .CYINIT(sig0000050c),
        .DI({sig0000058e,sig0000058d,sig0000058c,sig0000058b}),
        .O({sig0000014b,sig0000014a,sig00000149,sig0000012c}),
        .S({sig00000110,sig0000010f,sig0000010e,sig0000010d}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000000c8_CARRY4
       (.CI(sig0000012f),
        .CO({sig00000133,sig00000132,sig00000131,sig00000130}),
        .CYINIT(1'b0),
        .DI({sig00000592,sig00000591,sig00000590,sig0000058f}),
        .O({sig0000014f,sig0000014e,sig0000014d,sig0000014c}),
        .S({sig00000114,sig00000113,sig00000112,sig00000111}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000000cc_CARRY4
       (.CI(sig00000133),
        .CO({sig00000137,sig00000136,sig00000135,sig00000134}),
        .CYINIT(1'b0),
        .DI({sig00000596,sig00000595,sig00000594,sig00000593}),
        .O({sig00000153,sig00000152,sig00000151,sig00000150}),
        .S({sig00000118,sig00000117,sig00000116,sig00000115}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000000d0_CARRY4
       (.CI(sig00000137),
        .CO({sig0000013b,sig0000013a,sig00000139,sig00000138}),
        .CYINIT(1'b0),
        .DI({sig0000059a,sig00000599,sig00000598,sig00000597}),
        .O({sig00000157,sig00000156,sig00000155,sig00000154}),
        .S({sig0000011c,sig0000011b,sig0000011a,sig00000119}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000000d4_CARRY4
       (.CI(sig0000013b),
        .CO({sig0000013f,sig0000013e,sig0000013d,sig0000013c}),
        .CYINIT(1'b0),
        .DI({sig0000059e,sig0000059d,sig0000059c,sig0000059b}),
        .O({sig0000015b,sig0000015a,sig00000159,sig00000158}),
        .S({sig00000120,sig0000011f,sig0000011e,sig0000011d}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000000d8_CARRY4
       (.CI(sig0000013f),
        .CO({sig00000143,sig00000142,sig00000141,sig00000140}),
        .CYINIT(1'b0),
        .DI({sig000005a2,sig000005a1,sig000005a0,sig0000059f}),
        .O({sig0000015f,sig0000015e,sig0000015d,sig0000015c}),
        .S({sig00000124,sig00000123,sig00000122,sig00000121}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000000dc_CARRY4
       (.CI(sig00000143),
        .CO({sig00000147,sig00000146,sig00000145,sig00000144}),
        .CYINIT(1'b0),
        .DI({sig000005a2,sig000005a2,sig000005a2,sig000005a2}),
        .O({sig00000163,sig00000162,sig00000161,sig00000160}),
        .S({sig00000128,sig00000127,sig00000126,sig00000125}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000000e0_CARRY4
       (.CI(sig00000147),
        .CO({NLW_blk000000e0_CARRY4_CO_UNCONNECTED[3:1],sig00000148}),
        .CYINIT(1'b0),
        .DI({NLW_blk000000e0_CARRY4_DI_UNCONNECTED[3:1],sig000005a2}),
        .O({NLW_blk000000e0_CARRY4_O_UNCONNECTED[3:2],sig00000165,sig00000164}),
        .S({NLW_blk000000e0_CARRY4_S_UNCONNECTED[3:2],sig0000012a,sig00000129}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000000fe_CARRY4
       (.CI(1'b0),
        .CO({NLW_blk000000fe_CARRY4_CO_UNCONNECTED[3:1],sig00000166}),
        .CYINIT(sig00000587),
        .DI({NLW_blk000000fe_CARRY4_DI_UNCONNECTED[3:1],1'b0}),
        .O(NLW_blk000000fe_CARRY4_O_UNCONNECTED[3:0]),
        .S({NLW_blk000000fe_CARRY4_S_UNCONNECTED[3:1],sig00000167}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h01)) 
    blk000000ff
       (.I0(sig00000588),
        .I1(sig00000589),
        .I2(sig0000058a),
        .O(sig00000167));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk00000100
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig000004ec),
        .Q(sig00000168));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk00000101
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig0000050d),
        .Q(sig00000169));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h01)) 
    blk00000102
       (.I0(sig00000673),
        .I1(sig00000674),
        .I2(sig00000675),
        .O(sig0000016a));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000103_CARRY4
       (.CI(1'b0),
        .CO({NLW_blk00000103_CARRY4_CO_UNCONNECTED[3:1],sig0000016b}),
        .CYINIT(1'b1),
        .DI({NLW_blk00000103_CARRY4_DI_UNCONNECTED[3:1],1'b0}),
        .O(NLW_blk00000103_CARRY4_O_UNCONNECTED[3:0]),
        .S({NLW_blk00000103_CARRY4_S_UNCONNECTED[3:1],sig0000016a}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* PK_HLUTNM = "___XLNM___15___U0/op_inst/FLT_PT_OP/MULT.OP/MULT/QQ_VARIANT.MULT/MANT_MULT/logic_multiplier.m1/ctl[1].nt.ct/m1/lt4.lt" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk00000104
       (.I0(b[2]),
        .I1(b[5]),
        .O(sig0000016c));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* PK_HLUTNM = "___XLNM___14___U0/op_inst/FLT_PT_OP/MULT.OP/MULT/QQ_VARIANT.MULT/MANT_MULT/logic_multiplier.m1/ctl[3].nt.ct/m1/lt4.lt" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk00000105
       (.I0(b[8]),
        .I1(b[11]),
        .O(sig0000016d));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* PK_HLUTNM = "___XLNM___16___U0/op_inst/FLT_PT_OP/MULT.OP/MULT/QQ_VARIANT.MULT/MANT_MULT/logic_multiplier.m1/ctl[5].nt.ct/m1/lt4.lt" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk00000106
       (.I0(b[14]),
        .I1(b[17]),
        .O(sig0000016e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* PK_HLUTNM = "___XLNM___21___U0/op_inst/FLT_PT_OP/MULT.OP/MULT/QQ_VARIANT.MULT/MANT_MULT/logic_multiplier.m1/ctl[7].nt.ct/m1/lt4.lt" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk00000107
       (.I0(b[20]),
        .I1(1'b1),
        .O(sig0000016f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* PK_HLUTNM = "___XLNM___22___U0/op_inst/FLT_PT_OP/MULT.OP/MULT/QQ_VARIANT.MULT/MANT_MULT/logic_multiplier.m1/l[9].tree.yl.signXor/lt2.lt" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk00000108
       (.I0(b[2]),
        .I1(b[8]),
        .O(sig00000170));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* PK_HLUTNM = "___XLNM___23___U0/op_inst/FLT_PT_OP/MULT.OP/MULT/QQ_VARIANT.MULT/MANT_MULT/logic_multiplier.m1/ctl[6].nt.ct/m1/lt4.lt" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk00000109
       (.I0(b[14]),
        .I1(b[20]),
        .O(sig00000171));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* PK_HLUTNM = "___XLNM___22___U0/op_inst/FLT_PT_OP/MULT.OP/MULT/QQ_VARIANT.MULT/MANT_MULT/logic_multiplier.m1/l[9].tree.yl.signXor/lt2.lt" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk0000010a
       (.I0(b[2]),
        .I1(b[14]),
        .O(sig00000172));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk0000010b
       (.I0(sig000006a5),
        .I1(sig000006a8),
        .I2(sig000006a9),
        .I3(sig000006a6),
        .O(sig00000173));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000010c
       (.I0(sig000006a5),
        .I1(sig000006a8),
        .O(sig00000174));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk0000010d
       (.I0(sig000006a5),
        .I1(1'b0),
        .I2(sig000006a8),
        .I3(sig000006a6),
        .O(sig00000175));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk0000010e
       (.I0(sig000006a5),
        .I1(sig000006a9),
        .I2(sig000006aa),
        .I3(sig000006a6),
        .O(sig00000176));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000010f
       (.I0(sig000006a5),
        .I1(sig000006a9),
        .O(sig00000177));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000110
       (.I0(sig000006a5),
        .I1(sig000006aa),
        .I2(sig000006ab),
        .I3(sig000006a6),
        .O(sig00000178));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000111
       (.I0(sig000006a5),
        .I1(sig000006aa),
        .O(sig00000179));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000112
       (.I0(sig000006a5),
        .I1(sig000006ab),
        .I2(sig000006ac),
        .I3(sig000006a6),
        .O(sig0000017a));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000113
       (.I0(sig000006a5),
        .I1(sig000006ab),
        .O(sig0000017b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000114
       (.I0(sig000006a5),
        .I1(sig000006ac),
        .I2(sig000006ad),
        .I3(sig000006a6),
        .O(sig0000017c));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000115
       (.I0(sig000006a5),
        .I1(sig000006ac),
        .O(sig0000017d));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000116
       (.I0(sig000006a5),
        .I1(sig000006ad),
        .I2(sig000006ae),
        .I3(sig000006a6),
        .O(sig0000017e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000117
       (.I0(sig000006a5),
        .I1(sig000006ad),
        .O(sig0000017f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000118
       (.I0(sig000006a5),
        .I1(sig000006ae),
        .I2(sig000006af),
        .I3(sig000006a6),
        .O(sig00000180));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000119
       (.I0(sig000006a5),
        .I1(sig000006ae),
        .O(sig00000181));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk0000011a
       (.I0(sig000006a5),
        .I1(sig000006af),
        .I2(sig000006b0),
        .I3(sig000006a6),
        .O(sig00000182));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000011b
       (.I0(sig000006a5),
        .I1(sig000006af),
        .O(sig00000183));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk0000011c
       (.I0(sig000006a5),
        .I1(sig000006b0),
        .I2(sig000006b1),
        .I3(sig000006a6),
        .O(sig00000184));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000011d
       (.I0(sig000006a5),
        .I1(sig000006b0),
        .O(sig00000185));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk0000011e
       (.I0(sig000006a5),
        .I1(sig000006b1),
        .I2(sig000006b2),
        .I3(sig000006a6),
        .O(sig00000186));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000011f
       (.I0(sig000006a5),
        .I1(sig000006b1),
        .O(sig00000187));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000120
       (.I0(sig000006a5),
        .I1(sig000006b2),
        .I2(sig000006b3),
        .I3(sig000006a6),
        .O(sig00000188));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000121
       (.I0(sig000006a5),
        .I1(sig000006b2),
        .O(sig00000189));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000122
       (.I0(sig000006a5),
        .I1(sig000006b3),
        .I2(sig000006b4),
        .I3(sig000006a6),
        .O(sig0000018a));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000123
       (.I0(sig000006a5),
        .I1(sig000006b3),
        .O(sig0000018b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000124
       (.I0(sig000006a5),
        .I1(sig000006b4),
        .I2(sig000006b5),
        .I3(sig000006a6),
        .O(sig0000018c));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000125
       (.I0(sig000006a5),
        .I1(sig000006b4),
        .O(sig0000018d));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000126
       (.I0(sig000006a5),
        .I1(sig000006b5),
        .I2(sig000006b6),
        .I3(sig000006a6),
        .O(sig0000018e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000127
       (.I0(sig000006a5),
        .I1(sig000006b5),
        .O(sig0000018f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000128
       (.I0(sig000006a5),
        .I1(sig000006b6),
        .I2(sig000006b7),
        .I3(sig000006a6),
        .O(sig00000190));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000129
       (.I0(sig000006a5),
        .I1(sig000006b6),
        .O(sig00000191));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk0000012a
       (.I0(sig000006a5),
        .I1(sig000006b7),
        .I2(sig000006b8),
        .I3(sig000006a6),
        .O(sig00000192));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000012b
       (.I0(sig000006a5),
        .I1(sig000006b7),
        .O(sig00000193));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk0000012c
       (.I0(sig000006a5),
        .I1(sig000006b8),
        .I2(sig000006b9),
        .I3(sig000006a6),
        .O(sig00000194));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000012d
       (.I0(sig000006a5),
        .I1(sig000006b8),
        .O(sig00000195));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk0000012e
       (.I0(sig000006a5),
        .I1(sig000006b9),
        .I2(sig000006ba),
        .I3(sig000006a6),
        .O(sig00000196));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000012f
       (.I0(sig000006a5),
        .I1(sig000006b9),
        .O(sig00000197));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000130
       (.I0(sig000006a5),
        .I1(sig000006ba),
        .I2(sig000006bb),
        .I3(sig000006a6),
        .O(sig00000198));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000131
       (.I0(sig000006a5),
        .I1(sig000006ba),
        .O(sig00000199));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000132
       (.I0(sig000006a5),
        .I1(sig000006bb),
        .I2(sig000006bc),
        .I3(sig000006a6),
        .O(sig0000019a));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000133
       (.I0(sig000006a5),
        .I1(sig000006bb),
        .O(sig0000019b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000134
       (.I0(sig000006a5),
        .I1(sig000006bc),
        .I2(sig000006bd),
        .I3(sig000006a6),
        .O(sig0000019c));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000135
       (.I0(sig000006a5),
        .I1(sig000006bc),
        .O(sig0000019d));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000136
       (.I0(sig000006a5),
        .I1(sig000006bd),
        .I2(sig000006be),
        .I3(sig000006a6),
        .O(sig0000019e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000137
       (.I0(sig000006a5),
        .I1(sig000006bd),
        .O(sig0000019f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000138
       (.I0(sig000006a5),
        .I1(sig000006be),
        .I2(sig000006bf),
        .I3(sig000006a6),
        .O(sig000001a0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000139
       (.I0(sig000006a5),
        .I1(sig000006be),
        .O(sig000001a1));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk0000013a
       (.I0(sig000006a5),
        .I1(sig000006bf),
        .I2(1'b0),
        .I3(sig000006a6),
        .O(sig000001a2));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000013b
       (.I0(sig000006a5),
        .I1(sig000006bf),
        .O(sig000001a3));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk0000013c
       (.I0(sig000006a5),
        .I1(1'b0),
        .I2(1'b0),
        .I3(sig000006a6),
        .O(sig000001a4));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000013d
       (.I0(sig000006a5),
        .I1(1'b0),
        .O(NLW_blk0000013d_O_UNCONNECTED));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000013e_CARRY4
       (.CI(1'b0),
        .CO({sig000001aa,sig000001a8,sig000001a6,sig000001a5}),
        .CYINIT(1'b0),
        .DI({sig0000017b,sig00000179,sig00000177,sig00000174}),
        .O({sig000001ab,sig000001a9,sig000001a7,NLW_blk0000013e_CARRY4_O_UNCONNECTED[0]}),
        .S({sig0000017a,sig00000178,sig00000176,sig00000173}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000145_CARRY4
       (.CI(sig000001aa),
        .CO({sig000001b2,sig000001b0,sig000001ae,sig000001ac}),
        .CYINIT(1'b0),
        .DI({sig00000183,sig00000181,sig0000017f,sig0000017d}),
        .O({sig000001b3,sig000001b1,sig000001af,sig000001ad}),
        .S({sig00000182,sig00000180,sig0000017e,sig0000017c}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000014d_CARRY4
       (.CI(sig000001b2),
        .CO({sig000001ba,sig000001b8,sig000001b6,sig000001b4}),
        .CYINIT(1'b0),
        .DI({sig0000018b,sig00000189,sig00000187,sig00000185}),
        .O({sig000001bb,sig000001b9,sig000001b7,sig000001b5}),
        .S({sig0000018a,sig00000188,sig00000186,sig00000184}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000155_CARRY4
       (.CI(sig000001ba),
        .CO({sig000001c2,sig000001c0,sig000001be,sig000001bc}),
        .CYINIT(1'b0),
        .DI({sig00000193,sig00000191,sig0000018f,sig0000018d}),
        .O({sig000001c3,sig000001c1,sig000001bf,sig000001bd}),
        .S({sig00000192,sig00000190,sig0000018e,sig0000018c}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000015d_CARRY4
       (.CI(sig000001c2),
        .CO({sig000001ca,sig000001c8,sig000001c6,sig000001c4}),
        .CYINIT(1'b0),
        .DI({sig0000019b,sig00000199,sig00000197,sig00000195}),
        .O({sig000001cb,sig000001c9,sig000001c7,sig000001c5}),
        .S({sig0000019a,sig00000198,sig00000196,sig00000194}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000165_CARRY4
       (.CI(sig000001ca),
        .CO({sig000001d2,sig000001d0,sig000001ce,sig000001cc}),
        .CYINIT(1'b0),
        .DI({sig000001a3,sig000001a1,sig0000019f,sig0000019d}),
        .O({sig000001d3,sig000001d1,sig000001cf,sig000001cd}),
        .S({sig000001a2,sig000001a0,sig0000019e,sig0000019c}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000016d_CARRY4
       (.CI(sig000001d2),
        .CO(NLW_blk0000016d_CARRY4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI(NLW_blk0000016d_CARRY4_DI_UNCONNECTED[3:0]),
        .O({NLW_blk0000016d_CARRY4_O_UNCONNECTED[3:1],sig000001d4}),
        .S({NLW_blk0000016d_CARRY4_S_UNCONNECTED[3:1],sig000001a4}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk0000016e
       (.I0(sig000006a2),
        .I1(sig000006a8),
        .I2(sig000006a9),
        .I3(sig000006a3),
        .O(sig000001d5));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000016f
       (.I0(sig000006a2),
        .I1(sig000006a8),
        .O(sig000001d6));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000170
       (.I0(sig000006a2),
        .I1(1'b0),
        .I2(sig000006a8),
        .I3(sig000006a3),
        .O(sig000001d7));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000171
       (.I0(sig000006a2),
        .I1(sig000006a9),
        .I2(sig000006aa),
        .I3(sig000006a3),
        .O(sig000001d8));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000172
       (.I0(sig000006a2),
        .I1(sig000006a9),
        .O(sig000001d9));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000173
       (.I0(sig000006a2),
        .I1(sig000006aa),
        .I2(sig000006ab),
        .I3(sig000006a3),
        .O(sig000001da));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000174
       (.I0(sig000006a2),
        .I1(sig000006aa),
        .O(sig000001db));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000175
       (.I0(sig000006a2),
        .I1(sig000006ab),
        .I2(sig000006ac),
        .I3(sig000006a3),
        .O(sig000001dc));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000176
       (.I0(sig000006a2),
        .I1(sig000006ab),
        .O(sig000001dd));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000177
       (.I0(sig000006a2),
        .I1(sig000006ac),
        .I2(sig000006ad),
        .I3(sig000006a3),
        .O(sig000001de));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000178
       (.I0(sig000006a2),
        .I1(sig000006ac),
        .O(sig000001df));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000179
       (.I0(sig000006a2),
        .I1(sig000006ad),
        .I2(sig000006ae),
        .I3(sig000006a3),
        .O(sig000001e0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000017a
       (.I0(sig000006a2),
        .I1(sig000006ad),
        .O(sig000001e1));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk0000017b
       (.I0(sig000006a2),
        .I1(sig000006ae),
        .I2(sig000006af),
        .I3(sig000006a3),
        .O(sig000001e2));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000017c
       (.I0(sig000006a2),
        .I1(sig000006ae),
        .O(sig000001e3));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk0000017d
       (.I0(sig000006a2),
        .I1(sig000006af),
        .I2(sig000006b0),
        .I3(sig000006a3),
        .O(sig000001e4));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000017e
       (.I0(sig000006a2),
        .I1(sig000006af),
        .O(sig000001e5));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk0000017f
       (.I0(sig000006a2),
        .I1(sig000006b0),
        .I2(sig000006b1),
        .I3(sig000006a3),
        .O(sig000001e6));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000180
       (.I0(sig000006a2),
        .I1(sig000006b0),
        .O(sig000001e7));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000181
       (.I0(sig000006a2),
        .I1(sig000006b1),
        .I2(sig000006b2),
        .I3(sig000006a3),
        .O(sig000001e8));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000182
       (.I0(sig000006a2),
        .I1(sig000006b1),
        .O(sig000001e9));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000183
       (.I0(sig000006a2),
        .I1(sig000006b2),
        .I2(sig000006b3),
        .I3(sig000006a3),
        .O(sig000001ea));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000184
       (.I0(sig000006a2),
        .I1(sig000006b2),
        .O(sig000001eb));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000185
       (.I0(sig000006a2),
        .I1(sig000006b3),
        .I2(sig000006b4),
        .I3(sig000006a3),
        .O(sig000001ec));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000186
       (.I0(sig000006a2),
        .I1(sig000006b3),
        .O(sig000001ed));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000187
       (.I0(sig000006a2),
        .I1(sig000006b4),
        .I2(sig000006b5),
        .I3(sig000006a3),
        .O(sig000001ee));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000188
       (.I0(sig000006a2),
        .I1(sig000006b4),
        .O(sig000001ef));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000189
       (.I0(sig000006a2),
        .I1(sig000006b5),
        .I2(sig000006b6),
        .I3(sig000006a3),
        .O(sig000001f0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000018a
       (.I0(sig000006a2),
        .I1(sig000006b5),
        .O(sig000001f1));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk0000018b
       (.I0(sig000006a2),
        .I1(sig000006b6),
        .I2(sig000006b7),
        .I3(sig000006a3),
        .O(sig000001f2));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000018c
       (.I0(sig000006a2),
        .I1(sig000006b6),
        .O(sig000001f3));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk0000018d
       (.I0(sig000006a2),
        .I1(sig000006b7),
        .I2(sig000006b8),
        .I3(sig000006a3),
        .O(sig000001f4));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000018e
       (.I0(sig000006a2),
        .I1(sig000006b7),
        .O(sig000001f5));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk0000018f
       (.I0(sig000006a2),
        .I1(sig000006b8),
        .I2(sig000006b9),
        .I3(sig000006a3),
        .O(sig000001f6));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000190
       (.I0(sig000006a2),
        .I1(sig000006b8),
        .O(sig000001f7));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000191
       (.I0(sig000006a2),
        .I1(sig000006b9),
        .I2(sig000006ba),
        .I3(sig000006a3),
        .O(sig000001f8));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000192
       (.I0(sig000006a2),
        .I1(sig000006b9),
        .O(sig000001f9));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000193
       (.I0(sig000006a2),
        .I1(sig000006ba),
        .I2(sig000006bb),
        .I3(sig000006a3),
        .O(sig000001fa));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000194
       (.I0(sig000006a2),
        .I1(sig000006ba),
        .O(sig000001fb));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000195
       (.I0(sig000006a2),
        .I1(sig000006bb),
        .I2(sig000006bc),
        .I3(sig000006a3),
        .O(sig000001fc));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000196
       (.I0(sig000006a2),
        .I1(sig000006bb),
        .O(sig000001fd));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000197
       (.I0(sig000006a2),
        .I1(sig000006bc),
        .I2(sig000006bd),
        .I3(sig000006a3),
        .O(sig000001fe));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000198
       (.I0(sig000006a2),
        .I1(sig000006bc),
        .O(sig000001ff));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000199
       (.I0(sig000006a2),
        .I1(sig000006bd),
        .I2(sig000006be),
        .I3(sig000006a3),
        .O(sig00000200));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000019a
       (.I0(sig000006a2),
        .I1(sig000006bd),
        .O(sig00000201));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk0000019b
       (.I0(sig000006a2),
        .I1(sig000006be),
        .I2(sig000006bf),
        .I3(sig000006a3),
        .O(sig00000202));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000019c
       (.I0(sig000006a2),
        .I1(sig000006be),
        .O(sig00000203));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk0000019d
       (.I0(sig000006a2),
        .I1(sig000006bf),
        .I2(1'b0),
        .I3(sig000006a3),
        .O(sig00000204));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000019e
       (.I0(sig000006a2),
        .I1(sig000006bf),
        .O(sig00000205));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk0000019f
       (.I0(sig000006a2),
        .I1(1'b0),
        .I2(1'b0),
        .I3(sig000006a3),
        .O(sig00000206));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000001a0
       (.I0(sig000006a2),
        .I1(1'b0),
        .O(NLW_blk000001a0_O_UNCONNECTED));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000001a1_CARRY4
       (.CI(1'b0),
        .CO({sig0000020c,sig0000020a,sig00000208,sig00000207}),
        .CYINIT(1'b0),
        .DI({sig000001dd,sig000001db,sig000001d9,sig000001d6}),
        .O({sig0000020d,sig0000020b,sig00000209,NLW_blk000001a1_CARRY4_O_UNCONNECTED[0]}),
        .S({sig000001dc,sig000001da,sig000001d8,sig000001d5}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000001a8_CARRY4
       (.CI(sig0000020c),
        .CO({sig00000214,sig00000212,sig00000210,sig0000020e}),
        .CYINIT(1'b0),
        .DI({sig000001e5,sig000001e3,sig000001e1,sig000001df}),
        .O({sig00000215,sig00000213,sig00000211,sig0000020f}),
        .S({sig000001e4,sig000001e2,sig000001e0,sig000001de}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000001b0_CARRY4
       (.CI(sig00000214),
        .CO({sig0000021c,sig0000021a,sig00000218,sig00000216}),
        .CYINIT(1'b0),
        .DI({sig000001ed,sig000001eb,sig000001e9,sig000001e7}),
        .O({sig0000021d,sig0000021b,sig00000219,sig00000217}),
        .S({sig000001ec,sig000001ea,sig000001e8,sig000001e6}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000001b8_CARRY4
       (.CI(sig0000021c),
        .CO({sig00000224,sig00000222,sig00000220,sig0000021e}),
        .CYINIT(1'b0),
        .DI({sig000001f5,sig000001f3,sig000001f1,sig000001ef}),
        .O({sig00000225,sig00000223,sig00000221,sig0000021f}),
        .S({sig000001f4,sig000001f2,sig000001f0,sig000001ee}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000001c0_CARRY4
       (.CI(sig00000224),
        .CO({sig0000022c,sig0000022a,sig00000228,sig00000226}),
        .CYINIT(1'b0),
        .DI({sig000001fd,sig000001fb,sig000001f9,sig000001f7}),
        .O({sig0000022d,sig0000022b,sig00000229,sig00000227}),
        .S({sig000001fc,sig000001fa,sig000001f8,sig000001f6}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000001c8_CARRY4
       (.CI(sig0000022c),
        .CO({sig00000234,sig00000232,sig00000230,sig0000022e}),
        .CYINIT(1'b0),
        .DI({sig00000205,sig00000203,sig00000201,sig000001ff}),
        .O({sig00000235,sig00000233,sig00000231,sig0000022f}),
        .S({sig00000204,sig00000202,sig00000200,sig000001fe}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000001d0_CARRY4
       (.CI(sig00000234),
        .CO(NLW_blk000001d0_CARRY4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI(NLW_blk000001d0_CARRY4_DI_UNCONNECTED[3:0]),
        .O({NLW_blk000001d0_CARRY4_O_UNCONNECTED[3:1],sig00000236}),
        .S({NLW_blk000001d0_CARRY4_S_UNCONNECTED[3:1],sig00000206}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000001d1
       (.I0(sig0000069f),
        .I1(sig000006a8),
        .I2(sig000006a9),
        .I3(sig000006a0),
        .O(sig00000237));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000001d2
       (.I0(sig0000069f),
        .I1(sig000006a8),
        .O(sig00000238));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000001d3
       (.I0(sig0000069f),
        .I1(1'b0),
        .I2(sig000006a8),
        .I3(sig000006a0),
        .O(sig00000239));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000001d4
       (.I0(sig0000069f),
        .I1(sig000006a9),
        .I2(sig000006aa),
        .I3(sig000006a0),
        .O(sig0000023a));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000001d5
       (.I0(sig0000069f),
        .I1(sig000006a9),
        .O(sig0000023b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000001d6
       (.I0(sig0000069f),
        .I1(sig000006aa),
        .I2(sig000006ab),
        .I3(sig000006a0),
        .O(sig0000023c));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000001d7
       (.I0(sig0000069f),
        .I1(sig000006aa),
        .O(sig0000023d));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000001d8
       (.I0(sig0000069f),
        .I1(sig000006ab),
        .I2(sig000006ac),
        .I3(sig000006a0),
        .O(sig0000023e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000001d9
       (.I0(sig0000069f),
        .I1(sig000006ab),
        .O(sig0000023f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000001da
       (.I0(sig0000069f),
        .I1(sig000006ac),
        .I2(sig000006ad),
        .I3(sig000006a0),
        .O(sig00000240));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000001db
       (.I0(sig0000069f),
        .I1(sig000006ac),
        .O(sig00000241));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000001dc
       (.I0(sig0000069f),
        .I1(sig000006ad),
        .I2(sig000006ae),
        .I3(sig000006a0),
        .O(sig00000242));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000001dd
       (.I0(sig0000069f),
        .I1(sig000006ad),
        .O(sig00000243));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000001de
       (.I0(sig0000069f),
        .I1(sig000006ae),
        .I2(sig000006af),
        .I3(sig000006a0),
        .O(sig00000244));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000001df
       (.I0(sig0000069f),
        .I1(sig000006ae),
        .O(sig00000245));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000001e0
       (.I0(sig0000069f),
        .I1(sig000006af),
        .I2(sig000006b0),
        .I3(sig000006a0),
        .O(sig00000246));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000001e1
       (.I0(sig0000069f),
        .I1(sig000006af),
        .O(sig00000247));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000001e2
       (.I0(sig0000069f),
        .I1(sig000006b0),
        .I2(sig000006b1),
        .I3(sig000006a0),
        .O(sig00000248));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000001e3
       (.I0(sig0000069f),
        .I1(sig000006b0),
        .O(sig00000249));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000001e4
       (.I0(sig0000069f),
        .I1(sig000006b1),
        .I2(sig000006b2),
        .I3(sig000006a0),
        .O(sig0000024a));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000001e5
       (.I0(sig0000069f),
        .I1(sig000006b1),
        .O(sig0000024b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000001e6
       (.I0(sig0000069f),
        .I1(sig000006b2),
        .I2(sig000006b3),
        .I3(sig000006a0),
        .O(sig0000024c));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000001e7
       (.I0(sig0000069f),
        .I1(sig000006b2),
        .O(sig0000024d));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000001e8
       (.I0(sig0000069f),
        .I1(sig000006b3),
        .I2(sig000006b4),
        .I3(sig000006a0),
        .O(sig0000024e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000001e9
       (.I0(sig0000069f),
        .I1(sig000006b3),
        .O(sig0000024f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000001ea
       (.I0(sig0000069f),
        .I1(sig000006b4),
        .I2(sig000006b5),
        .I3(sig000006a0),
        .O(sig00000250));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000001eb
       (.I0(sig0000069f),
        .I1(sig000006b4),
        .O(sig00000251));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000001ec
       (.I0(sig0000069f),
        .I1(sig000006b5),
        .I2(sig000006b6),
        .I3(sig000006a0),
        .O(sig00000252));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000001ed
       (.I0(sig0000069f),
        .I1(sig000006b5),
        .O(sig00000253));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000001ee
       (.I0(sig0000069f),
        .I1(sig000006b6),
        .I2(sig000006b7),
        .I3(sig000006a0),
        .O(sig00000254));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000001ef
       (.I0(sig0000069f),
        .I1(sig000006b6),
        .O(sig00000255));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000001f0
       (.I0(sig0000069f),
        .I1(sig000006b7),
        .I2(sig000006b8),
        .I3(sig000006a0),
        .O(sig00000256));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000001f1
       (.I0(sig0000069f),
        .I1(sig000006b7),
        .O(sig00000257));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000001f2
       (.I0(sig0000069f),
        .I1(sig000006b8),
        .I2(sig000006b9),
        .I3(sig000006a0),
        .O(sig00000258));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000001f3
       (.I0(sig0000069f),
        .I1(sig000006b8),
        .O(sig00000259));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000001f4
       (.I0(sig0000069f),
        .I1(sig000006b9),
        .I2(sig000006ba),
        .I3(sig000006a0),
        .O(sig0000025a));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000001f5
       (.I0(sig0000069f),
        .I1(sig000006b9),
        .O(sig0000025b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000001f6
       (.I0(sig0000069f),
        .I1(sig000006ba),
        .I2(sig000006bb),
        .I3(sig000006a0),
        .O(sig0000025c));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000001f7
       (.I0(sig0000069f),
        .I1(sig000006ba),
        .O(sig0000025d));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000001f8
       (.I0(sig0000069f),
        .I1(sig000006bb),
        .I2(sig000006bc),
        .I3(sig000006a0),
        .O(sig0000025e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000001f9
       (.I0(sig0000069f),
        .I1(sig000006bb),
        .O(sig0000025f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000001fa
       (.I0(sig0000069f),
        .I1(sig000006bc),
        .I2(sig000006bd),
        .I3(sig000006a0),
        .O(sig00000260));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000001fb
       (.I0(sig0000069f),
        .I1(sig000006bc),
        .O(sig00000261));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000001fc
       (.I0(sig0000069f),
        .I1(sig000006bd),
        .I2(sig000006be),
        .I3(sig000006a0),
        .O(sig00000262));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000001fd
       (.I0(sig0000069f),
        .I1(sig000006bd),
        .O(sig00000263));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000001fe
       (.I0(sig0000069f),
        .I1(sig000006be),
        .I2(sig000006bf),
        .I3(sig000006a0),
        .O(sig00000264));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000001ff
       (.I0(sig0000069f),
        .I1(sig000006be),
        .O(sig00000265));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000200
       (.I0(sig0000069f),
        .I1(sig000006bf),
        .I2(1'b0),
        .I3(sig000006a0),
        .O(sig00000266));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000201
       (.I0(sig0000069f),
        .I1(sig000006bf),
        .O(sig00000267));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000202
       (.I0(sig0000069f),
        .I1(1'b0),
        .I2(1'b0),
        .I3(sig000006a0),
        .O(sig00000268));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000203
       (.I0(sig0000069f),
        .I1(1'b0),
        .O(NLW_blk00000203_O_UNCONNECTED));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000204_CARRY4
       (.CI(1'b0),
        .CO({sig0000026e,sig0000026c,sig0000026a,sig00000269}),
        .CYINIT(1'b0),
        .DI({sig0000023f,sig0000023d,sig0000023b,sig00000238}),
        .O({sig0000026f,sig0000026d,sig0000026b,NLW_blk00000204_CARRY4_O_UNCONNECTED[0]}),
        .S({sig0000023e,sig0000023c,sig0000023a,sig00000237}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000020b_CARRY4
       (.CI(sig0000026e),
        .CO({sig00000276,sig00000274,sig00000272,sig00000270}),
        .CYINIT(1'b0),
        .DI({sig00000247,sig00000245,sig00000243,sig00000241}),
        .O({sig00000277,sig00000275,sig00000273,sig00000271}),
        .S({sig00000246,sig00000244,sig00000242,sig00000240}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000213_CARRY4
       (.CI(sig00000276),
        .CO({sig0000027e,sig0000027c,sig0000027a,sig00000278}),
        .CYINIT(1'b0),
        .DI({sig0000024f,sig0000024d,sig0000024b,sig00000249}),
        .O({sig0000027f,sig0000027d,sig0000027b,sig00000279}),
        .S({sig0000024e,sig0000024c,sig0000024a,sig00000248}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000021b_CARRY4
       (.CI(sig0000027e),
        .CO({sig00000286,sig00000284,sig00000282,sig00000280}),
        .CYINIT(1'b0),
        .DI({sig00000257,sig00000255,sig00000253,sig00000251}),
        .O({sig00000287,sig00000285,sig00000283,sig00000281}),
        .S({sig00000256,sig00000254,sig00000252,sig00000250}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000223_CARRY4
       (.CI(sig00000286),
        .CO({sig0000028e,sig0000028c,sig0000028a,sig00000288}),
        .CYINIT(1'b0),
        .DI({sig0000025f,sig0000025d,sig0000025b,sig00000259}),
        .O({sig0000028f,sig0000028d,sig0000028b,sig00000289}),
        .S({sig0000025e,sig0000025c,sig0000025a,sig00000258}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000022b_CARRY4
       (.CI(sig0000028e),
        .CO({sig00000296,sig00000294,sig00000292,sig00000290}),
        .CYINIT(1'b0),
        .DI({sig00000267,sig00000265,sig00000263,sig00000261}),
        .O({sig00000297,sig00000295,sig00000293,sig00000291}),
        .S({sig00000266,sig00000264,sig00000262,sig00000260}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000233_CARRY4
       (.CI(sig00000296),
        .CO(NLW_blk00000233_CARRY4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI(NLW_blk00000233_CARRY4_DI_UNCONNECTED[3:0]),
        .O({NLW_blk00000233_CARRY4_O_UNCONNECTED[3:1],sig00000298}),
        .S({NLW_blk00000233_CARRY4_S_UNCONNECTED[3:1],sig00000268}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000234
       (.I0(sig0000069c),
        .I1(sig000006a8),
        .I2(sig000006a9),
        .I3(sig0000069d),
        .O(sig00000299));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000235
       (.I0(sig0000069c),
        .I1(sig000006a8),
        .O(sig0000029a));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000236
       (.I0(sig0000069c),
        .I1(1'b0),
        .I2(sig000006a8),
        .I3(sig0000069d),
        .O(sig0000029b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000237
       (.I0(sig0000069c),
        .I1(sig000006a9),
        .I2(sig000006aa),
        .I3(sig0000069d),
        .O(sig0000029c));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000238
       (.I0(sig0000069c),
        .I1(sig000006a9),
        .O(sig0000029d));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000239
       (.I0(sig0000069c),
        .I1(sig000006aa),
        .I2(sig000006ab),
        .I3(sig0000069d),
        .O(sig0000029e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000023a
       (.I0(sig0000069c),
        .I1(sig000006aa),
        .O(sig0000029f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk0000023b
       (.I0(sig0000069c),
        .I1(sig000006ab),
        .I2(sig000006ac),
        .I3(sig0000069d),
        .O(sig000002a0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000023c
       (.I0(sig0000069c),
        .I1(sig000006ab),
        .O(sig000002a1));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk0000023d
       (.I0(sig0000069c),
        .I1(sig000006ac),
        .I2(sig000006ad),
        .I3(sig0000069d),
        .O(sig000002a2));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000023e
       (.I0(sig0000069c),
        .I1(sig000006ac),
        .O(sig000002a3));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk0000023f
       (.I0(sig0000069c),
        .I1(sig000006ad),
        .I2(sig000006ae),
        .I3(sig0000069d),
        .O(sig000002a4));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000240
       (.I0(sig0000069c),
        .I1(sig000006ad),
        .O(sig000002a5));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000241
       (.I0(sig0000069c),
        .I1(sig000006ae),
        .I2(sig000006af),
        .I3(sig0000069d),
        .O(sig000002a6));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000242
       (.I0(sig0000069c),
        .I1(sig000006ae),
        .O(sig000002a7));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000243
       (.I0(sig0000069c),
        .I1(sig000006af),
        .I2(sig000006b0),
        .I3(sig0000069d),
        .O(sig000002a8));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000244
       (.I0(sig0000069c),
        .I1(sig000006af),
        .O(sig000002a9));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000245
       (.I0(sig0000069c),
        .I1(sig000006b0),
        .I2(sig000006b1),
        .I3(sig0000069d),
        .O(sig000002aa));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000246
       (.I0(sig0000069c),
        .I1(sig000006b0),
        .O(sig000002ab));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000247
       (.I0(sig0000069c),
        .I1(sig000006b1),
        .I2(sig000006b2),
        .I3(sig0000069d),
        .O(sig000002ac));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000248
       (.I0(sig0000069c),
        .I1(sig000006b1),
        .O(sig000002ad));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000249
       (.I0(sig0000069c),
        .I1(sig000006b2),
        .I2(sig000006b3),
        .I3(sig0000069d),
        .O(sig000002ae));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000024a
       (.I0(sig0000069c),
        .I1(sig000006b2),
        .O(sig000002af));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk0000024b
       (.I0(sig0000069c),
        .I1(sig000006b3),
        .I2(sig000006b4),
        .I3(sig0000069d),
        .O(sig000002b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000024c
       (.I0(sig0000069c),
        .I1(sig000006b3),
        .O(sig000002b1));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk0000024d
       (.I0(sig0000069c),
        .I1(sig000006b4),
        .I2(sig000006b5),
        .I3(sig0000069d),
        .O(sig000002b2));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000024e
       (.I0(sig0000069c),
        .I1(sig000006b4),
        .O(sig000002b3));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk0000024f
       (.I0(sig0000069c),
        .I1(sig000006b5),
        .I2(sig000006b6),
        .I3(sig0000069d),
        .O(sig000002b4));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000250
       (.I0(sig0000069c),
        .I1(sig000006b5),
        .O(sig000002b5));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000251
       (.I0(sig0000069c),
        .I1(sig000006b6),
        .I2(sig000006b7),
        .I3(sig0000069d),
        .O(sig000002b6));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000252
       (.I0(sig0000069c),
        .I1(sig000006b6),
        .O(sig000002b7));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000253
       (.I0(sig0000069c),
        .I1(sig000006b7),
        .I2(sig000006b8),
        .I3(sig0000069d),
        .O(sig000002b8));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000254
       (.I0(sig0000069c),
        .I1(sig000006b7),
        .O(sig000002b9));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000255
       (.I0(sig0000069c),
        .I1(sig000006b8),
        .I2(sig000006b9),
        .I3(sig0000069d),
        .O(sig000002ba));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000256
       (.I0(sig0000069c),
        .I1(sig000006b8),
        .O(sig000002bb));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000257
       (.I0(sig0000069c),
        .I1(sig000006b9),
        .I2(sig000006ba),
        .I3(sig0000069d),
        .O(sig000002bc));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000258
       (.I0(sig0000069c),
        .I1(sig000006b9),
        .O(sig000002bd));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000259
       (.I0(sig0000069c),
        .I1(sig000006ba),
        .I2(sig000006bb),
        .I3(sig0000069d),
        .O(sig000002be));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000025a
       (.I0(sig0000069c),
        .I1(sig000006ba),
        .O(sig000002bf));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk0000025b
       (.I0(sig0000069c),
        .I1(sig000006bb),
        .I2(sig000006bc),
        .I3(sig0000069d),
        .O(sig000002c0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000025c
       (.I0(sig0000069c),
        .I1(sig000006bb),
        .O(sig000002c1));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk0000025d
       (.I0(sig0000069c),
        .I1(sig000006bc),
        .I2(sig000006bd),
        .I3(sig0000069d),
        .O(sig000002c2));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000025e
       (.I0(sig0000069c),
        .I1(sig000006bc),
        .O(sig000002c3));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk0000025f
       (.I0(sig0000069c),
        .I1(sig000006bd),
        .I2(sig000006be),
        .I3(sig0000069d),
        .O(sig000002c4));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000260
       (.I0(sig0000069c),
        .I1(sig000006bd),
        .O(sig000002c5));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000261
       (.I0(sig0000069c),
        .I1(sig000006be),
        .I2(sig000006bf),
        .I3(sig0000069d),
        .O(sig000002c6));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000262
       (.I0(sig0000069c),
        .I1(sig000006be),
        .O(sig000002c7));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000263
       (.I0(sig0000069c),
        .I1(sig000006bf),
        .I2(1'b0),
        .I3(sig0000069d),
        .O(sig000002c8));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000264
       (.I0(sig0000069c),
        .I1(sig000006bf),
        .O(sig000002c9));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000265
       (.I0(sig0000069c),
        .I1(1'b0),
        .I2(1'b0),
        .I3(sig0000069d),
        .O(sig000002ca));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000266
       (.I0(sig0000069c),
        .I1(1'b0),
        .O(NLW_blk00000266_O_UNCONNECTED));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000267_CARRY4
       (.CI(1'b0),
        .CO({sig000002d0,sig000002ce,sig000002cc,sig000002cb}),
        .CYINIT(1'b0),
        .DI({sig000002a1,sig0000029f,sig0000029d,sig0000029a}),
        .O({sig000002d1,sig000002cf,sig000002cd,NLW_blk00000267_CARRY4_O_UNCONNECTED[0]}),
        .S({sig000002a0,sig0000029e,sig0000029c,sig00000299}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000026e_CARRY4
       (.CI(sig000002d0),
        .CO({sig000002d8,sig000002d6,sig000002d4,sig000002d2}),
        .CYINIT(1'b0),
        .DI({sig000002a9,sig000002a7,sig000002a5,sig000002a3}),
        .O({sig000002d9,sig000002d7,sig000002d5,sig000002d3}),
        .S({sig000002a8,sig000002a6,sig000002a4,sig000002a2}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000276_CARRY4
       (.CI(sig000002d8),
        .CO({sig000002e0,sig000002de,sig000002dc,sig000002da}),
        .CYINIT(1'b0),
        .DI({sig000002b1,sig000002af,sig000002ad,sig000002ab}),
        .O({sig000002e1,sig000002df,sig000002dd,sig000002db}),
        .S({sig000002b0,sig000002ae,sig000002ac,sig000002aa}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000027e_CARRY4
       (.CI(sig000002e0),
        .CO({sig000002e8,sig000002e6,sig000002e4,sig000002e2}),
        .CYINIT(1'b0),
        .DI({sig000002b9,sig000002b7,sig000002b5,sig000002b3}),
        .O({sig000002e9,sig000002e7,sig000002e5,sig000002e3}),
        .S({sig000002b8,sig000002b6,sig000002b4,sig000002b2}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000286_CARRY4
       (.CI(sig000002e8),
        .CO({sig000002f0,sig000002ee,sig000002ec,sig000002ea}),
        .CYINIT(1'b0),
        .DI({sig000002c1,sig000002bf,sig000002bd,sig000002bb}),
        .O({sig000002f1,sig000002ef,sig000002ed,sig000002eb}),
        .S({sig000002c0,sig000002be,sig000002bc,sig000002ba}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000028e_CARRY4
       (.CI(sig000002f0),
        .CO({sig000002f8,sig000002f6,sig000002f4,sig000002f2}),
        .CYINIT(1'b0),
        .DI({sig000002c9,sig000002c7,sig000002c5,sig000002c3}),
        .O({sig000002f9,sig000002f7,sig000002f5,sig000002f3}),
        .S({sig000002c8,sig000002c6,sig000002c4,sig000002c2}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000296_CARRY4
       (.CI(sig000002f8),
        .CO(NLW_blk00000296_CARRY4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI(NLW_blk00000296_CARRY4_DI_UNCONNECTED[3:0]),
        .O({NLW_blk00000296_CARRY4_O_UNCONNECTED[3:1],sig000002fa}),
        .S({NLW_blk00000296_CARRY4_S_UNCONNECTED[3:1],sig000002ca}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000297
       (.I0(sig00000699),
        .I1(sig000006a8),
        .I2(sig000006a9),
        .I3(sig0000069a),
        .O(sig000002fb));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000298
       (.I0(sig00000699),
        .I1(sig000006a8),
        .O(sig000002fc));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000299
       (.I0(sig00000699),
        .I1(1'b0),
        .I2(sig000006a8),
        .I3(sig0000069a),
        .O(sig000002fd));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk0000029a
       (.I0(sig00000699),
        .I1(sig000006a9),
        .I2(sig000006aa),
        .I3(sig0000069a),
        .O(sig000002fe));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000029b
       (.I0(sig00000699),
        .I1(sig000006a9),
        .O(sig000002ff));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk0000029c
       (.I0(sig00000699),
        .I1(sig000006aa),
        .I2(sig000006ab),
        .I3(sig0000069a),
        .O(sig00000300));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000029d
       (.I0(sig00000699),
        .I1(sig000006aa),
        .O(sig00000301));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk0000029e
       (.I0(sig00000699),
        .I1(sig000006ab),
        .I2(sig000006ac),
        .I3(sig0000069a),
        .O(sig00000302));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000029f
       (.I0(sig00000699),
        .I1(sig000006ab),
        .O(sig00000303));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000002a0
       (.I0(sig00000699),
        .I1(sig000006ac),
        .I2(sig000006ad),
        .I3(sig0000069a),
        .O(sig00000304));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000002a1
       (.I0(sig00000699),
        .I1(sig000006ac),
        .O(sig00000305));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000002a2
       (.I0(sig00000699),
        .I1(sig000006ad),
        .I2(sig000006ae),
        .I3(sig0000069a),
        .O(sig00000306));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000002a3
       (.I0(sig00000699),
        .I1(sig000006ad),
        .O(sig00000307));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000002a4
       (.I0(sig00000699),
        .I1(sig000006ae),
        .I2(sig000006af),
        .I3(sig0000069a),
        .O(sig00000308));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000002a5
       (.I0(sig00000699),
        .I1(sig000006ae),
        .O(sig00000309));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000002a6
       (.I0(sig00000699),
        .I1(sig000006af),
        .I2(sig000006b0),
        .I3(sig0000069a),
        .O(sig0000030a));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000002a7
       (.I0(sig00000699),
        .I1(sig000006af),
        .O(sig0000030b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000002a8
       (.I0(sig00000699),
        .I1(sig000006b0),
        .I2(sig000006b1),
        .I3(sig0000069a),
        .O(sig0000030c));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000002a9
       (.I0(sig00000699),
        .I1(sig000006b0),
        .O(sig0000030d));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000002aa
       (.I0(sig00000699),
        .I1(sig000006b1),
        .I2(sig000006b2),
        .I3(sig0000069a),
        .O(sig0000030e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000002ab
       (.I0(sig00000699),
        .I1(sig000006b1),
        .O(sig0000030f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000002ac
       (.I0(sig00000699),
        .I1(sig000006b2),
        .I2(sig000006b3),
        .I3(sig0000069a),
        .O(sig00000310));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000002ad
       (.I0(sig00000699),
        .I1(sig000006b2),
        .O(sig00000311));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000002ae
       (.I0(sig00000699),
        .I1(sig000006b3),
        .I2(sig000006b4),
        .I3(sig0000069a),
        .O(sig00000312));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000002af
       (.I0(sig00000699),
        .I1(sig000006b3),
        .O(sig00000313));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000002b0
       (.I0(sig00000699),
        .I1(sig000006b4),
        .I2(sig000006b5),
        .I3(sig0000069a),
        .O(sig00000314));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000002b1
       (.I0(sig00000699),
        .I1(sig000006b4),
        .O(sig00000315));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000002b2
       (.I0(sig00000699),
        .I1(sig000006b5),
        .I2(sig000006b6),
        .I3(sig0000069a),
        .O(sig00000316));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000002b3
       (.I0(sig00000699),
        .I1(sig000006b5),
        .O(sig00000317));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000002b4
       (.I0(sig00000699),
        .I1(sig000006b6),
        .I2(sig000006b7),
        .I3(sig0000069a),
        .O(sig00000318));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000002b5
       (.I0(sig00000699),
        .I1(sig000006b6),
        .O(sig00000319));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000002b6
       (.I0(sig00000699),
        .I1(sig000006b7),
        .I2(sig000006b8),
        .I3(sig0000069a),
        .O(sig0000031a));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000002b7
       (.I0(sig00000699),
        .I1(sig000006b7),
        .O(sig0000031b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000002b8
       (.I0(sig00000699),
        .I1(sig000006b8),
        .I2(sig000006b9),
        .I3(sig0000069a),
        .O(sig0000031c));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000002b9
       (.I0(sig00000699),
        .I1(sig000006b8),
        .O(sig0000031d));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000002ba
       (.I0(sig00000699),
        .I1(sig000006b9),
        .I2(sig000006ba),
        .I3(sig0000069a),
        .O(sig0000031e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000002bb
       (.I0(sig00000699),
        .I1(sig000006b9),
        .O(sig0000031f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000002bc
       (.I0(sig00000699),
        .I1(sig000006ba),
        .I2(sig000006bb),
        .I3(sig0000069a),
        .O(sig00000320));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000002bd
       (.I0(sig00000699),
        .I1(sig000006ba),
        .O(sig00000321));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000002be
       (.I0(sig00000699),
        .I1(sig000006bb),
        .I2(sig000006bc),
        .I3(sig0000069a),
        .O(sig00000322));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000002bf
       (.I0(sig00000699),
        .I1(sig000006bb),
        .O(sig00000323));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000002c0
       (.I0(sig00000699),
        .I1(sig000006bc),
        .I2(sig000006bd),
        .I3(sig0000069a),
        .O(sig00000324));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000002c1
       (.I0(sig00000699),
        .I1(sig000006bc),
        .O(sig00000325));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000002c2
       (.I0(sig00000699),
        .I1(sig000006bd),
        .I2(sig000006be),
        .I3(sig0000069a),
        .O(sig00000326));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000002c3
       (.I0(sig00000699),
        .I1(sig000006bd),
        .O(sig00000327));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000002c4
       (.I0(sig00000699),
        .I1(sig000006be),
        .I2(sig000006bf),
        .I3(sig0000069a),
        .O(sig00000328));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000002c5
       (.I0(sig00000699),
        .I1(sig000006be),
        .O(sig00000329));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000002c6
       (.I0(sig00000699),
        .I1(sig000006bf),
        .I2(1'b0),
        .I3(sig0000069a),
        .O(sig0000032a));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000002c7
       (.I0(sig00000699),
        .I1(sig000006bf),
        .O(sig0000032b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000002c8
       (.I0(sig00000699),
        .I1(1'b0),
        .I2(1'b0),
        .I3(sig0000069a),
        .O(sig0000032c));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000002c9
       (.I0(sig00000699),
        .I1(1'b0),
        .O(NLW_blk000002c9_O_UNCONNECTED));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000002ca_CARRY4
       (.CI(1'b0),
        .CO({sig00000332,sig00000330,sig0000032e,sig0000032d}),
        .CYINIT(1'b0),
        .DI({sig00000303,sig00000301,sig000002ff,sig000002fc}),
        .O({sig00000333,sig00000331,sig0000032f,NLW_blk000002ca_CARRY4_O_UNCONNECTED[0]}),
        .S({sig00000302,sig00000300,sig000002fe,sig000002fb}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000002d1_CARRY4
       (.CI(sig00000332),
        .CO({sig0000033a,sig00000338,sig00000336,sig00000334}),
        .CYINIT(1'b0),
        .DI({sig0000030b,sig00000309,sig00000307,sig00000305}),
        .O({sig0000033b,sig00000339,sig00000337,sig00000335}),
        .S({sig0000030a,sig00000308,sig00000306,sig00000304}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000002d9_CARRY4
       (.CI(sig0000033a),
        .CO({sig00000342,sig00000340,sig0000033e,sig0000033c}),
        .CYINIT(1'b0),
        .DI({sig00000313,sig00000311,sig0000030f,sig0000030d}),
        .O({sig00000343,sig00000341,sig0000033f,sig0000033d}),
        .S({sig00000312,sig00000310,sig0000030e,sig0000030c}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000002e1_CARRY4
       (.CI(sig00000342),
        .CO({sig0000034a,sig00000348,sig00000346,sig00000344}),
        .CYINIT(1'b0),
        .DI({sig0000031b,sig00000319,sig00000317,sig00000315}),
        .O({sig0000034b,sig00000349,sig00000347,sig00000345}),
        .S({sig0000031a,sig00000318,sig00000316,sig00000314}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000002e9_CARRY4
       (.CI(sig0000034a),
        .CO({sig00000352,sig00000350,sig0000034e,sig0000034c}),
        .CYINIT(1'b0),
        .DI({sig00000323,sig00000321,sig0000031f,sig0000031d}),
        .O({sig00000353,sig00000351,sig0000034f,sig0000034d}),
        .S({sig00000322,sig00000320,sig0000031e,sig0000031c}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000002f1_CARRY4
       (.CI(sig00000352),
        .CO({sig0000035a,sig00000358,sig00000356,sig00000354}),
        .CYINIT(1'b0),
        .DI({sig0000032b,sig00000329,sig00000327,sig00000325}),
        .O({sig0000035b,sig00000359,sig00000357,sig00000355}),
        .S({sig0000032a,sig00000328,sig00000326,sig00000324}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000002f9_CARRY4
       (.CI(sig0000035a),
        .CO(NLW_blk000002f9_CARRY4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI(NLW_blk000002f9_CARRY4_DI_UNCONNECTED[3:0]),
        .O({NLW_blk000002f9_CARRY4_O_UNCONNECTED[3:1],sig0000035c}),
        .S({NLW_blk000002f9_CARRY4_S_UNCONNECTED[3:1],sig0000032c}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000002fa
       (.I0(sig00000696),
        .I1(sig000006a8),
        .I2(sig000006a9),
        .I3(sig00000697),
        .O(sig0000035d));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000002fb
       (.I0(sig00000696),
        .I1(sig000006a8),
        .O(sig0000035e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000002fc
       (.I0(sig00000696),
        .I1(1'b0),
        .I2(sig000006a8),
        .I3(sig00000697),
        .O(sig0000035f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000002fd
       (.I0(sig00000696),
        .I1(sig000006a9),
        .I2(sig000006aa),
        .I3(sig00000697),
        .O(sig00000360));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000002fe
       (.I0(sig00000696),
        .I1(sig000006a9),
        .O(sig00000361));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000002ff
       (.I0(sig00000696),
        .I1(sig000006aa),
        .I2(sig000006ab),
        .I3(sig00000697),
        .O(sig00000362));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000300
       (.I0(sig00000696),
        .I1(sig000006aa),
        .O(sig00000363));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000301
       (.I0(sig00000696),
        .I1(sig000006ab),
        .I2(sig000006ac),
        .I3(sig00000697),
        .O(sig00000364));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000302
       (.I0(sig00000696),
        .I1(sig000006ab),
        .O(sig00000365));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000303
       (.I0(sig00000696),
        .I1(sig000006ac),
        .I2(sig000006ad),
        .I3(sig00000697),
        .O(sig00000366));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000304
       (.I0(sig00000696),
        .I1(sig000006ac),
        .O(sig00000367));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000305
       (.I0(sig00000696),
        .I1(sig000006ad),
        .I2(sig000006ae),
        .I3(sig00000697),
        .O(sig00000368));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000306
       (.I0(sig00000696),
        .I1(sig000006ad),
        .O(sig00000369));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000307
       (.I0(sig00000696),
        .I1(sig000006ae),
        .I2(sig000006af),
        .I3(sig00000697),
        .O(sig0000036a));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000308
       (.I0(sig00000696),
        .I1(sig000006ae),
        .O(sig0000036b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000309
       (.I0(sig00000696),
        .I1(sig000006af),
        .I2(sig000006b0),
        .I3(sig00000697),
        .O(sig0000036c));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000030a
       (.I0(sig00000696),
        .I1(sig000006af),
        .O(sig0000036d));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk0000030b
       (.I0(sig00000696),
        .I1(sig000006b0),
        .I2(sig000006b1),
        .I3(sig00000697),
        .O(sig0000036e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000030c
       (.I0(sig00000696),
        .I1(sig000006b0),
        .O(sig0000036f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk0000030d
       (.I0(sig00000696),
        .I1(sig000006b1),
        .I2(sig000006b2),
        .I3(sig00000697),
        .O(sig00000370));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000030e
       (.I0(sig00000696),
        .I1(sig000006b1),
        .O(sig00000371));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk0000030f
       (.I0(sig00000696),
        .I1(sig000006b2),
        .I2(sig000006b3),
        .I3(sig00000697),
        .O(sig00000372));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000310
       (.I0(sig00000696),
        .I1(sig000006b2),
        .O(sig00000373));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000311
       (.I0(sig00000696),
        .I1(sig000006b3),
        .I2(sig000006b4),
        .I3(sig00000697),
        .O(sig00000374));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000312
       (.I0(sig00000696),
        .I1(sig000006b3),
        .O(sig00000375));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000313
       (.I0(sig00000696),
        .I1(sig000006b4),
        .I2(sig000006b5),
        .I3(sig00000697),
        .O(sig00000376));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000314
       (.I0(sig00000696),
        .I1(sig000006b4),
        .O(sig00000377));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000315
       (.I0(sig00000696),
        .I1(sig000006b5),
        .I2(sig000006b6),
        .I3(sig00000697),
        .O(sig00000378));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000316
       (.I0(sig00000696),
        .I1(sig000006b5),
        .O(sig00000379));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000317
       (.I0(sig00000696),
        .I1(sig000006b6),
        .I2(sig000006b7),
        .I3(sig00000697),
        .O(sig0000037a));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000318
       (.I0(sig00000696),
        .I1(sig000006b6),
        .O(sig0000037b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000319
       (.I0(sig00000696),
        .I1(sig000006b7),
        .I2(sig000006b8),
        .I3(sig00000697),
        .O(sig0000037c));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000031a
       (.I0(sig00000696),
        .I1(sig000006b7),
        .O(sig0000037d));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk0000031b
       (.I0(sig00000696),
        .I1(sig000006b8),
        .I2(sig000006b9),
        .I3(sig00000697),
        .O(sig0000037e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000031c
       (.I0(sig00000696),
        .I1(sig000006b8),
        .O(sig0000037f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk0000031d
       (.I0(sig00000696),
        .I1(sig000006b9),
        .I2(sig000006ba),
        .I3(sig00000697),
        .O(sig00000380));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000031e
       (.I0(sig00000696),
        .I1(sig000006b9),
        .O(sig00000381));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk0000031f
       (.I0(sig00000696),
        .I1(sig000006ba),
        .I2(sig000006bb),
        .I3(sig00000697),
        .O(sig00000382));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000320
       (.I0(sig00000696),
        .I1(sig000006ba),
        .O(sig00000383));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000321
       (.I0(sig00000696),
        .I1(sig000006bb),
        .I2(sig000006bc),
        .I3(sig00000697),
        .O(sig00000384));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000322
       (.I0(sig00000696),
        .I1(sig000006bb),
        .O(sig00000385));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000323
       (.I0(sig00000696),
        .I1(sig000006bc),
        .I2(sig000006bd),
        .I3(sig00000697),
        .O(sig00000386));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000324
       (.I0(sig00000696),
        .I1(sig000006bc),
        .O(sig00000387));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000325
       (.I0(sig00000696),
        .I1(sig000006bd),
        .I2(sig000006be),
        .I3(sig00000697),
        .O(sig00000388));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000326
       (.I0(sig00000696),
        .I1(sig000006bd),
        .O(sig00000389));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000327
       (.I0(sig00000696),
        .I1(sig000006be),
        .I2(sig000006bf),
        .I3(sig00000697),
        .O(sig0000038a));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000328
       (.I0(sig00000696),
        .I1(sig000006be),
        .O(sig0000038b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000329
       (.I0(sig00000696),
        .I1(sig000006bf),
        .I2(1'b0),
        .I3(sig00000697),
        .O(sig0000038c));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000032a
       (.I0(sig00000696),
        .I1(sig000006bf),
        .O(sig0000038d));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk0000032b
       (.I0(sig00000696),
        .I1(1'b0),
        .I2(1'b0),
        .I3(sig00000697),
        .O(sig0000038e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000032c
       (.I0(sig00000696),
        .I1(1'b0),
        .O(NLW_blk0000032c_O_UNCONNECTED));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000032d_CARRY4
       (.CI(1'b0),
        .CO({sig00000394,sig00000392,sig00000390,sig0000038f}),
        .CYINIT(1'b0),
        .DI({sig00000365,sig00000363,sig00000361,sig0000035e}),
        .O({sig00000395,sig00000393,sig00000391,NLW_blk0000032d_CARRY4_O_UNCONNECTED[0]}),
        .S({sig00000364,sig00000362,sig00000360,sig0000035d}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000334_CARRY4
       (.CI(sig00000394),
        .CO({sig0000039c,sig0000039a,sig00000398,sig00000396}),
        .CYINIT(1'b0),
        .DI({sig0000036d,sig0000036b,sig00000369,sig00000367}),
        .O({sig0000039d,sig0000039b,sig00000399,sig00000397}),
        .S({sig0000036c,sig0000036a,sig00000368,sig00000366}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000033c_CARRY4
       (.CI(sig0000039c),
        .CO({sig000003a4,sig000003a2,sig000003a0,sig0000039e}),
        .CYINIT(1'b0),
        .DI({sig00000375,sig00000373,sig00000371,sig0000036f}),
        .O({sig000003a5,sig000003a3,sig000003a1,sig0000039f}),
        .S({sig00000374,sig00000372,sig00000370,sig0000036e}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000344_CARRY4
       (.CI(sig000003a4),
        .CO({sig000003ac,sig000003aa,sig000003a8,sig000003a6}),
        .CYINIT(1'b0),
        .DI({sig0000037d,sig0000037b,sig00000379,sig00000377}),
        .O({sig000003ad,sig000003ab,sig000003a9,sig000003a7}),
        .S({sig0000037c,sig0000037a,sig00000378,sig00000376}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000034c_CARRY4
       (.CI(sig000003ac),
        .CO({sig000003b4,sig000003b2,sig000003b0,sig000003ae}),
        .CYINIT(1'b0),
        .DI({sig00000385,sig00000383,sig00000381,sig0000037f}),
        .O({sig000003b5,sig000003b3,sig000003b1,sig000003af}),
        .S({sig00000384,sig00000382,sig00000380,sig0000037e}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000354_CARRY4
       (.CI(sig000003b4),
        .CO({sig000003bc,sig000003ba,sig000003b8,sig000003b6}),
        .CYINIT(1'b0),
        .DI({sig0000038d,sig0000038b,sig00000389,sig00000387}),
        .O({sig000003bd,sig000003bb,sig000003b9,sig000003b7}),
        .S({sig0000038c,sig0000038a,sig00000388,sig00000386}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000035c_CARRY4
       (.CI(sig000003bc),
        .CO(NLW_blk0000035c_CARRY4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI(NLW_blk0000035c_CARRY4_DI_UNCONNECTED[3:0]),
        .O({NLW_blk0000035c_CARRY4_O_UNCONNECTED[3:1],sig000003be}),
        .S({NLW_blk0000035c_CARRY4_S_UNCONNECTED[3:1],sig0000038e}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk0000035d
       (.I0(sig00000693),
        .I1(sig000006a8),
        .I2(sig000006a9),
        .I3(sig00000694),
        .O(sig000003bf));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000035e
       (.I0(sig00000693),
        .I1(sig000006a8),
        .O(sig000003c0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk0000035f
       (.I0(sig00000693),
        .I1(1'b0),
        .I2(sig000006a8),
        .I3(sig00000694),
        .O(sig000003c1));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000360
       (.I0(sig00000693),
        .I1(sig000006a9),
        .I2(sig000006aa),
        .I3(sig00000694),
        .O(sig000003c2));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000361
       (.I0(sig00000693),
        .I1(sig000006a9),
        .O(sig000003c3));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000362
       (.I0(sig00000693),
        .I1(sig000006aa),
        .I2(sig000006ab),
        .I3(sig00000694),
        .O(sig000003c4));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000363
       (.I0(sig00000693),
        .I1(sig000006aa),
        .O(sig000003c5));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000364
       (.I0(sig00000693),
        .I1(sig000006ab),
        .I2(sig000006ac),
        .I3(sig00000694),
        .O(sig000003c6));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000365
       (.I0(sig00000693),
        .I1(sig000006ab),
        .O(sig000003c7));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000366
       (.I0(sig00000693),
        .I1(sig000006ac),
        .I2(sig000006ad),
        .I3(sig00000694),
        .O(sig000003c8));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000367
       (.I0(sig00000693),
        .I1(sig000006ac),
        .O(sig000003c9));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000368
       (.I0(sig00000693),
        .I1(sig000006ad),
        .I2(sig000006ae),
        .I3(sig00000694),
        .O(sig000003ca));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000369
       (.I0(sig00000693),
        .I1(sig000006ad),
        .O(sig000003cb));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk0000036a
       (.I0(sig00000693),
        .I1(sig000006ae),
        .I2(sig000006af),
        .I3(sig00000694),
        .O(sig000003cc));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000036b
       (.I0(sig00000693),
        .I1(sig000006ae),
        .O(sig000003cd));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk0000036c
       (.I0(sig00000693),
        .I1(sig000006af),
        .I2(sig000006b0),
        .I3(sig00000694),
        .O(sig000003ce));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000036d
       (.I0(sig00000693),
        .I1(sig000006af),
        .O(sig000003cf));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk0000036e
       (.I0(sig00000693),
        .I1(sig000006b0),
        .I2(sig000006b1),
        .I3(sig00000694),
        .O(sig000003d0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000036f
       (.I0(sig00000693),
        .I1(sig000006b0),
        .O(sig000003d1));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000370
       (.I0(sig00000693),
        .I1(sig000006b1),
        .I2(sig000006b2),
        .I3(sig00000694),
        .O(sig000003d2));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000371
       (.I0(sig00000693),
        .I1(sig000006b1),
        .O(sig000003d3));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000372
       (.I0(sig00000693),
        .I1(sig000006b2),
        .I2(sig000006b3),
        .I3(sig00000694),
        .O(sig000003d4));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000373
       (.I0(sig00000693),
        .I1(sig000006b2),
        .O(sig000003d5));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000374
       (.I0(sig00000693),
        .I1(sig000006b3),
        .I2(sig000006b4),
        .I3(sig00000694),
        .O(sig000003d6));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000375
       (.I0(sig00000693),
        .I1(sig000006b3),
        .O(sig000003d7));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000376
       (.I0(sig00000693),
        .I1(sig000006b4),
        .I2(sig000006b5),
        .I3(sig00000694),
        .O(sig000003d8));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000377
       (.I0(sig00000693),
        .I1(sig000006b4),
        .O(sig000003d9));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000378
       (.I0(sig00000693),
        .I1(sig000006b5),
        .I2(sig000006b6),
        .I3(sig00000694),
        .O(sig000003da));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000379
       (.I0(sig00000693),
        .I1(sig000006b5),
        .O(sig000003db));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk0000037a
       (.I0(sig00000693),
        .I1(sig000006b6),
        .I2(sig000006b7),
        .I3(sig00000694),
        .O(sig000003dc));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000037b
       (.I0(sig00000693),
        .I1(sig000006b6),
        .O(sig000003dd));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk0000037c
       (.I0(sig00000693),
        .I1(sig000006b7),
        .I2(sig000006b8),
        .I3(sig00000694),
        .O(sig000003de));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000037d
       (.I0(sig00000693),
        .I1(sig000006b7),
        .O(sig000003df));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk0000037e
       (.I0(sig00000693),
        .I1(sig000006b8),
        .I2(sig000006b9),
        .I3(sig00000694),
        .O(sig000003e0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000037f
       (.I0(sig00000693),
        .I1(sig000006b8),
        .O(sig000003e1));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000380
       (.I0(sig00000693),
        .I1(sig000006b9),
        .I2(sig000006ba),
        .I3(sig00000694),
        .O(sig000003e2));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000381
       (.I0(sig00000693),
        .I1(sig000006b9),
        .O(sig000003e3));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000382
       (.I0(sig00000693),
        .I1(sig000006ba),
        .I2(sig000006bb),
        .I3(sig00000694),
        .O(sig000003e4));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000383
       (.I0(sig00000693),
        .I1(sig000006ba),
        .O(sig000003e5));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000384
       (.I0(sig00000693),
        .I1(sig000006bb),
        .I2(sig000006bc),
        .I3(sig00000694),
        .O(sig000003e6));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000385
       (.I0(sig00000693),
        .I1(sig000006bb),
        .O(sig000003e7));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000386
       (.I0(sig00000693),
        .I1(sig000006bc),
        .I2(sig000006bd),
        .I3(sig00000694),
        .O(sig000003e8));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000387
       (.I0(sig00000693),
        .I1(sig000006bc),
        .O(sig000003e9));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk00000388
       (.I0(sig00000693),
        .I1(sig000006bd),
        .I2(sig000006be),
        .I3(sig00000694),
        .O(sig000003ea));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk00000389
       (.I0(sig00000693),
        .I1(sig000006bd),
        .O(sig000003eb));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk0000038a
       (.I0(sig00000693),
        .I1(sig000006be),
        .I2(sig000006bf),
        .I3(sig00000694),
        .O(sig000003ec));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000038b
       (.I0(sig00000693),
        .I1(sig000006be),
        .O(sig000003ed));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk0000038c
       (.I0(sig00000693),
        .I1(sig000006bf),
        .I2(1'b0),
        .I3(sig00000694),
        .O(sig000003ee));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000038d
       (.I0(sig00000693),
        .I1(sig000006bf),
        .O(sig000003ef));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk0000038e
       (.I0(sig00000693),
        .I1(1'b0),
        .I2(1'b0),
        .I3(sig00000694),
        .O(sig000003f0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk0000038f
       (.I0(sig00000693),
        .I1(1'b0),
        .O(NLW_blk0000038f_O_UNCONNECTED));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000390_CARRY4
       (.CI(1'b0),
        .CO({sig000003f6,sig000003f4,sig000003f2,sig000003f1}),
        .CYINIT(1'b0),
        .DI({sig000003c7,sig000003c5,sig000003c3,sig000003c0}),
        .O({sig000003f7,sig000003f5,sig000003f3,NLW_blk00000390_CARRY4_O_UNCONNECTED[0]}),
        .S({sig000003c6,sig000003c4,sig000003c2,sig000003bf}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000397_CARRY4
       (.CI(sig000003f6),
        .CO({sig000003fe,sig000003fc,sig000003fa,sig000003f8}),
        .CYINIT(1'b0),
        .DI({sig000003cf,sig000003cd,sig000003cb,sig000003c9}),
        .O({sig000003ff,sig000003fd,sig000003fb,sig000003f9}),
        .S({sig000003ce,sig000003cc,sig000003ca,sig000003c8}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000039f_CARRY4
       (.CI(sig000003fe),
        .CO({sig00000406,sig00000404,sig00000402,sig00000400}),
        .CYINIT(1'b0),
        .DI({sig000003d7,sig000003d5,sig000003d3,sig000003d1}),
        .O({sig00000407,sig00000405,sig00000403,sig00000401}),
        .S({sig000003d6,sig000003d4,sig000003d2,sig000003d0}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000003a7_CARRY4
       (.CI(sig00000406),
        .CO({sig0000040e,sig0000040c,sig0000040a,sig00000408}),
        .CYINIT(1'b0),
        .DI({sig000003df,sig000003dd,sig000003db,sig000003d9}),
        .O({sig0000040f,sig0000040d,sig0000040b,sig00000409}),
        .S({sig000003de,sig000003dc,sig000003da,sig000003d8}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000003af_CARRY4
       (.CI(sig0000040e),
        .CO({sig00000416,sig00000414,sig00000412,sig00000410}),
        .CYINIT(1'b0),
        .DI({sig000003e7,sig000003e5,sig000003e3,sig000003e1}),
        .O({sig00000417,sig00000415,sig00000413,sig00000411}),
        .S({sig000003e6,sig000003e4,sig000003e2,sig000003e0}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000003b7_CARRY4
       (.CI(sig00000416),
        .CO({sig0000041e,sig0000041c,sig0000041a,sig00000418}),
        .CYINIT(1'b0),
        .DI({sig000003ef,sig000003ed,sig000003eb,sig000003e9}),
        .O({sig0000041f,sig0000041d,sig0000041b,sig00000419}),
        .S({sig000003ee,sig000003ec,sig000003ea,sig000003e8}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000003bf_CARRY4
       (.CI(sig0000041e),
        .CO(NLW_blk000003bf_CARRY4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI(NLW_blk000003bf_CARRY4_DI_UNCONNECTED[3:0]),
        .O({NLW_blk000003bf_CARRY4_O_UNCONNECTED[3:1],sig00000420}),
        .S({NLW_blk000003bf_CARRY4_S_UNCONNECTED[3:1],sig000003f0}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000003c0
       (.I0(sig00000690),
        .I1(sig000006a8),
        .I2(sig000006a9),
        .I3(sig00000691),
        .O(sig00000421));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000003c1
       (.I0(sig00000690),
        .I1(sig000006a8),
        .O(sig00000422));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000003c2
       (.I0(sig00000690),
        .I1(1'b0),
        .I2(sig000006a8),
        .I3(sig00000691),
        .O(sig00000423));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000003c3
       (.I0(sig00000690),
        .I1(sig000006a9),
        .I2(sig000006aa),
        .I3(sig00000691),
        .O(sig00000424));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000003c4
       (.I0(sig00000690),
        .I1(sig000006a9),
        .O(sig00000425));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000003c5
       (.I0(sig00000690),
        .I1(sig000006aa),
        .I2(sig000006ab),
        .I3(sig00000691),
        .O(sig00000426));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000003c6
       (.I0(sig00000690),
        .I1(sig000006aa),
        .O(sig00000427));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000003c7
       (.I0(sig00000690),
        .I1(sig000006ab),
        .I2(sig000006ac),
        .I3(sig00000691),
        .O(sig00000428));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000003c8
       (.I0(sig00000690),
        .I1(sig000006ab),
        .O(sig00000429));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000003c9
       (.I0(sig00000690),
        .I1(sig000006ac),
        .I2(sig000006ad),
        .I3(sig00000691),
        .O(sig0000042a));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000003ca
       (.I0(sig00000690),
        .I1(sig000006ac),
        .O(sig0000042b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000003cb
       (.I0(sig00000690),
        .I1(sig000006ad),
        .I2(sig000006ae),
        .I3(sig00000691),
        .O(sig0000042c));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000003cc
       (.I0(sig00000690),
        .I1(sig000006ad),
        .O(sig0000042d));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000003cd
       (.I0(sig00000690),
        .I1(sig000006ae),
        .I2(sig000006af),
        .I3(sig00000691),
        .O(sig0000042e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000003ce
       (.I0(sig00000690),
        .I1(sig000006ae),
        .O(sig0000042f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000003cf
       (.I0(sig00000690),
        .I1(sig000006af),
        .I2(sig000006b0),
        .I3(sig00000691),
        .O(sig00000430));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000003d0
       (.I0(sig00000690),
        .I1(sig000006af),
        .O(sig00000431));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000003d1
       (.I0(sig00000690),
        .I1(sig000006b0),
        .I2(sig000006b1),
        .I3(sig00000691),
        .O(sig00000432));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000003d2
       (.I0(sig00000690),
        .I1(sig000006b0),
        .O(sig00000433));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000003d3
       (.I0(sig00000690),
        .I1(sig000006b1),
        .I2(sig000006b2),
        .I3(sig00000691),
        .O(sig00000434));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000003d4
       (.I0(sig00000690),
        .I1(sig000006b1),
        .O(sig00000435));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000003d5
       (.I0(sig00000690),
        .I1(sig000006b2),
        .I2(sig000006b3),
        .I3(sig00000691),
        .O(sig00000436));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000003d6
       (.I0(sig00000690),
        .I1(sig000006b2),
        .O(sig00000437));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000003d7
       (.I0(sig00000690),
        .I1(sig000006b3),
        .I2(sig000006b4),
        .I3(sig00000691),
        .O(sig00000438));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000003d8
       (.I0(sig00000690),
        .I1(sig000006b3),
        .O(sig00000439));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000003d9
       (.I0(sig00000690),
        .I1(sig000006b4),
        .I2(sig000006b5),
        .I3(sig00000691),
        .O(sig0000043a));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000003da
       (.I0(sig00000690),
        .I1(sig000006b4),
        .O(sig0000043b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000003db
       (.I0(sig00000690),
        .I1(sig000006b5),
        .I2(sig000006b6),
        .I3(sig00000691),
        .O(sig0000043c));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000003dc
       (.I0(sig00000690),
        .I1(sig000006b5),
        .O(sig0000043d));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000003dd
       (.I0(sig00000690),
        .I1(sig000006b6),
        .I2(sig000006b7),
        .I3(sig00000691),
        .O(sig0000043e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000003de
       (.I0(sig00000690),
        .I1(sig000006b6),
        .O(sig0000043f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000003df
       (.I0(sig00000690),
        .I1(sig000006b7),
        .I2(sig000006b8),
        .I3(sig00000691),
        .O(sig00000440));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000003e0
       (.I0(sig00000690),
        .I1(sig000006b7),
        .O(sig00000441));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000003e1
       (.I0(sig00000690),
        .I1(sig000006b8),
        .I2(sig000006b9),
        .I3(sig00000691),
        .O(sig00000442));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000003e2
       (.I0(sig00000690),
        .I1(sig000006b8),
        .O(sig00000443));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000003e3
       (.I0(sig00000690),
        .I1(sig000006b9),
        .I2(sig000006ba),
        .I3(sig00000691),
        .O(sig00000444));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000003e4
       (.I0(sig00000690),
        .I1(sig000006b9),
        .O(sig00000445));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000003e5
       (.I0(sig00000690),
        .I1(sig000006ba),
        .I2(sig000006bb),
        .I3(sig00000691),
        .O(sig00000446));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000003e6
       (.I0(sig00000690),
        .I1(sig000006ba),
        .O(sig00000447));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000003e7
       (.I0(sig00000690),
        .I1(sig000006bb),
        .I2(sig000006bc),
        .I3(sig00000691),
        .O(sig00000448));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000003e8
       (.I0(sig00000690),
        .I1(sig000006bb),
        .O(sig00000449));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000003e9
       (.I0(sig00000690),
        .I1(sig000006bc),
        .I2(sig000006bd),
        .I3(sig00000691),
        .O(sig0000044a));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000003ea
       (.I0(sig00000690),
        .I1(sig000006bc),
        .O(sig0000044b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000003eb
       (.I0(sig00000690),
        .I1(sig000006bd),
        .I2(sig000006be),
        .I3(sig00000691),
        .O(sig0000044c));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000003ec
       (.I0(sig00000690),
        .I1(sig000006bd),
        .O(sig0000044d));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000003ed
       (.I0(sig00000690),
        .I1(sig000006be),
        .I2(sig000006bf),
        .I3(sig00000691),
        .O(sig0000044e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000003ee
       (.I0(sig00000690),
        .I1(sig000006be),
        .O(sig0000044f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000003ef
       (.I0(sig00000690),
        .I1(sig000006bf),
        .I2(1'b0),
        .I3(sig00000691),
        .O(sig00000450));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000003f0
       (.I0(sig00000690),
        .I1(sig000006bf),
        .O(sig00000451));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000003f1
       (.I0(sig00000690),
        .I1(1'b0),
        .I2(1'b0),
        .I3(sig00000691),
        .O(sig00000452));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000003f2
       (.I0(sig00000690),
        .I1(1'b0),
        .O(NLW_blk000003f2_O_UNCONNECTED));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000003f3_CARRY4
       (.CI(1'b0),
        .CO({sig00000458,sig00000456,sig00000454,sig00000453}),
        .CYINIT(1'b0),
        .DI({sig00000429,sig00000427,sig00000425,sig00000422}),
        .O({sig00000459,sig00000457,sig00000455,NLW_blk000003f3_CARRY4_O_UNCONNECTED[0]}),
        .S({sig00000428,sig00000426,sig00000424,sig00000421}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000003fa_CARRY4
       (.CI(sig00000458),
        .CO({sig00000460,sig0000045e,sig0000045c,sig0000045a}),
        .CYINIT(1'b0),
        .DI({sig00000431,sig0000042f,sig0000042d,sig0000042b}),
        .O({sig00000461,sig0000045f,sig0000045d,sig0000045b}),
        .S({sig00000430,sig0000042e,sig0000042c,sig0000042a}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000402_CARRY4
       (.CI(sig00000460),
        .CO({sig00000468,sig00000466,sig00000464,sig00000462}),
        .CYINIT(1'b0),
        .DI({sig00000439,sig00000437,sig00000435,sig00000433}),
        .O({sig00000469,sig00000467,sig00000465,sig00000463}),
        .S({sig00000438,sig00000436,sig00000434,sig00000432}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000040a_CARRY4
       (.CI(sig00000468),
        .CO({sig00000470,sig0000046e,sig0000046c,sig0000046a}),
        .CYINIT(1'b0),
        .DI({sig00000441,sig0000043f,sig0000043d,sig0000043b}),
        .O({sig00000471,sig0000046f,sig0000046d,sig0000046b}),
        .S({sig00000440,sig0000043e,sig0000043c,sig0000043a}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000412_CARRY4
       (.CI(sig00000470),
        .CO({sig00000478,sig00000476,sig00000474,sig00000472}),
        .CYINIT(1'b0),
        .DI({sig00000449,sig00000447,sig00000445,sig00000443}),
        .O({sig00000479,sig00000477,sig00000475,sig00000473}),
        .S({sig00000448,sig00000446,sig00000444,sig00000442}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000041a_CARRY4
       (.CI(sig00000478),
        .CO({sig00000480,sig0000047e,sig0000047c,sig0000047a}),
        .CYINIT(1'b0),
        .DI({sig00000451,sig0000044f,sig0000044d,sig0000044b}),
        .O({sig00000481,sig0000047f,sig0000047d,sig0000047b}),
        .S({sig00000450,sig0000044e,sig0000044c,sig0000044a}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000422_CARRY4
       (.CI(sig00000480),
        .CO(NLW_blk00000422_CARRY4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI(NLW_blk00000422_CARRY4_DI_UNCONNECTED[3:0]),
        .O({NLW_blk00000422_CARRY4_O_UNCONNECTED[3:1],sig00000482}),
        .S({NLW_blk00000422_CARRY4_S_UNCONNECTED[3:1],sig00000452}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* PK_HLUTNM = "___XLNM___13___U0/op_inst/FLT_PT_OP/MULT.OP/MULT/QQ_VARIANT.MULT/MANT_MULT/logic_multiplier.m1/ctl[0].nt.ct/m1/lt4.lt" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h8001)) 
    blk00000423
       (.I0(1'b1),
        .I1(1'b0),
        .I2(1'b0),
        .I3(1'b0),
        .O(sig00000483));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* PK_HLUTNM = "___XLNM___7___U0/op_inst/FLT_PT_OP/MULT.OP/MULT/QQ_VARIANT.MULT/MANT_MULT/logic_multiplier.m1/ctl[7].nt.ct/m2/lt4.lt" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h8001)) 
    blk00000424
       (.I0(b[20]),
        .I1(b[21]),
        .I2(b[22]),
        .I3(1'b1),
        .O(sig00000484));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* PK_HLUTNM = "___XLNM___1___U0/op_inst/FLT_PT_OP/MULT.OP/MULT/QQ_VARIANT.MULT/MANT_MULT/logic_multiplier.m1/ctl[6].nt.ct/m2/lt4.lt" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h8001)) 
    blk00000425
       (.I0(b[17]),
        .I1(b[18]),
        .I2(b[19]),
        .I3(b[20]),
        .O(sig00000485));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* PK_HLUTNM = "___XLNM___2___U0/op_inst/FLT_PT_OP/MULT.OP/MULT/QQ_VARIANT.MULT/MANT_MULT/logic_multiplier.m1/ctl[5].nt.ct/m2/lt4.lt" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h8001)) 
    blk00000426
       (.I0(b[14]),
        .I1(b[15]),
        .I2(b[16]),
        .I3(b[17]),
        .O(sig00000486));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* PK_HLUTNM = "___XLNM___5___U0/op_inst/FLT_PT_OP/MULT.OP/MULT/QQ_VARIANT.MULT/MANT_MULT/logic_multiplier.m1/ctl[4].nt.ct/m2/lt4.lt" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h8001)) 
    blk00000427
       (.I0(b[11]),
        .I1(b[12]),
        .I2(b[13]),
        .I3(b[14]),
        .O(sig00000487));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* PK_HLUTNM = "___XLNM___0___U0/op_inst/FLT_PT_OP/MULT.OP/MULT/QQ_VARIANT.MULT/MANT_MULT/logic_multiplier.m1/ctl[3].nt.ct/m2/lt4.lt" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h8001)) 
    blk00000428
       (.I0(b[8]),
        .I1(b[9]),
        .I2(b[10]),
        .I3(b[11]),
        .O(sig00000488));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* PK_HLUTNM = "___XLNM___3___U0/op_inst/FLT_PT_OP/MULT.OP/MULT/QQ_VARIANT.MULT/MANT_MULT/logic_multiplier.m1/ctl[2].nt.ct/m2/lt4.lt" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h8001)) 
    blk00000429
       (.I0(b[5]),
        .I1(b[6]),
        .I2(b[7]),
        .I3(b[8]),
        .O(sig00000489));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* PK_HLUTNM = "___XLNM___4___U0/op_inst/FLT_PT_OP/MULT.OP/MULT/QQ_VARIANT.MULT/MANT_MULT/logic_multiplier.m1/ctl[1].nt.ct/m2/lt4.lt" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h8001)) 
    blk0000042a
       (.I0(b[2]),
        .I1(b[3]),
        .I2(b[4]),
        .I3(b[5]),
        .O(sig0000048a));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* PK_HLUTNM = "___XLNM___8___U0/op_inst/FLT_PT_OP/MULT.OP/MULT/QQ_VARIANT.MULT/MANT_MULT/logic_multiplier.m1/ctl[0].nt.ct/m2/lt4.lt" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h8001)) 
    blk0000042b
       (.I0(1'b0),
        .I1(b[0]),
        .I2(b[1]),
        .I3(b[2]),
        .O(sig0000048b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* PK_HLUTNM = "___XLNM___9___U0/op_inst/FLT_PT_OP/MULT.OP/MULT/QQ_VARIANT.MULT/MANT_MULT/logic_multiplier.m1/ctl[8].nt.ct/m1/lt4.lt" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h1998)) 
    blk0000042c
       (.I0(1'b1),
        .I1(1'b0),
        .I2(1'b0),
        .I3(1'b0),
        .O(sig0000048c));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* PK_HLUTNM = "___XLNM___7___U0/op_inst/FLT_PT_OP/MULT.OP/MULT/QQ_VARIANT.MULT/MANT_MULT/logic_multiplier.m1/ctl[7].nt.ct/m2/lt4.lt" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h1998)) 
    blk0000042d
       (.I0(b[20]),
        .I1(b[21]),
        .I2(b[22]),
        .I3(1'b1),
        .O(sig0000048d));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* PK_HLUTNM = "___XLNM___1___U0/op_inst/FLT_PT_OP/MULT.OP/MULT/QQ_VARIANT.MULT/MANT_MULT/logic_multiplier.m1/ctl[6].nt.ct/m2/lt4.lt" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h1998)) 
    blk0000042e
       (.I0(b[17]),
        .I1(b[18]),
        .I2(b[19]),
        .I3(b[20]),
        .O(sig0000048e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* PK_HLUTNM = "___XLNM___2___U0/op_inst/FLT_PT_OP/MULT.OP/MULT/QQ_VARIANT.MULT/MANT_MULT/logic_multiplier.m1/ctl[5].nt.ct/m2/lt4.lt" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h1998)) 
    blk0000042f
       (.I0(b[14]),
        .I1(b[15]),
        .I2(b[16]),
        .I3(b[17]),
        .O(sig0000048f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* PK_HLUTNM = "___XLNM___5___U0/op_inst/FLT_PT_OP/MULT.OP/MULT/QQ_VARIANT.MULT/MANT_MULT/logic_multiplier.m1/ctl[4].nt.ct/m2/lt4.lt" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h1998)) 
    blk00000430
       (.I0(b[11]),
        .I1(b[12]),
        .I2(b[13]),
        .I3(b[14]),
        .O(sig00000490));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* PK_HLUTNM = "___XLNM___0___U0/op_inst/FLT_PT_OP/MULT.OP/MULT/QQ_VARIANT.MULT/MANT_MULT/logic_multiplier.m1/ctl[3].nt.ct/m2/lt4.lt" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h1998)) 
    blk00000431
       (.I0(b[8]),
        .I1(b[9]),
        .I2(b[10]),
        .I3(b[11]),
        .O(sig00000491));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* PK_HLUTNM = "___XLNM___3___U0/op_inst/FLT_PT_OP/MULT.OP/MULT/QQ_VARIANT.MULT/MANT_MULT/logic_multiplier.m1/ctl[2].nt.ct/m2/lt4.lt" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h1998)) 
    blk00000432
       (.I0(b[5]),
        .I1(b[6]),
        .I2(b[7]),
        .I3(b[8]),
        .O(sig00000492));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* PK_HLUTNM = "___XLNM___4___U0/op_inst/FLT_PT_OP/MULT.OP/MULT/QQ_VARIANT.MULT/MANT_MULT/logic_multiplier.m1/ctl[1].nt.ct/m2/lt4.lt" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h1998)) 
    blk00000433
       (.I0(b[2]),
        .I1(b[3]),
        .I2(b[4]),
        .I3(b[5]),
        .O(sig00000493));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* PK_HLUTNM = "___XLNM___8___U0/op_inst/FLT_PT_OP/MULT.OP/MULT/QQ_VARIANT.MULT/MANT_MULT/logic_multiplier.m1/ctl[0].nt.ct/m2/lt4.lt" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h1998)) 
    blk00000434
       (.I0(1'b0),
        .I1(b[0]),
        .I2(b[1]),
        .I3(b[2]),
        .O(sig00000494));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* PK_HLUTNM = "___XLNM___9___U0/op_inst/FLT_PT_OP/MULT.OP/MULT/QQ_VARIANT.MULT/MANT_MULT/logic_multiplier.m1/ctl[8].nt.ct/m1/lt4.lt" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h07E0)) 
    blk00000435
       (.I0(1'b1),
        .I1(1'b0),
        .I2(1'b0),
        .I3(1'b0),
        .O(sig00000495));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* PK_HLUTNM = "___XLNM___21___U0/op_inst/FLT_PT_OP/MULT.OP/MULT/QQ_VARIANT.MULT/MANT_MULT/logic_multiplier.m1/ctl[7].nt.ct/m1/lt4.lt" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h07E0)) 
    blk00000436
       (.I0(b[20]),
        .I1(b[21]),
        .I2(b[22]),
        .I3(1'b1),
        .O(sig00000496));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* PK_HLUTNM = "___XLNM___23___U0/op_inst/FLT_PT_OP/MULT.OP/MULT/QQ_VARIANT.MULT/MANT_MULT/logic_multiplier.m1/ctl[6].nt.ct/m1/lt4.lt" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h07E0)) 
    blk00000437
       (.I0(b[17]),
        .I1(b[18]),
        .I2(b[19]),
        .I3(b[20]),
        .O(sig00000497));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* PK_HLUTNM = "___XLNM___16___U0/op_inst/FLT_PT_OP/MULT.OP/MULT/QQ_VARIANT.MULT/MANT_MULT/logic_multiplier.m1/ctl[5].nt.ct/m1/lt4.lt" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h07E0)) 
    blk00000438
       (.I0(b[14]),
        .I1(b[15]),
        .I2(b[16]),
        .I3(b[17]),
        .O(sig00000498));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h07E0)) 
    blk00000439
       (.I0(b[11]),
        .I1(b[12]),
        .I2(b[13]),
        .I3(b[14]),
        .O(sig00000499));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* PK_HLUTNM = "___XLNM___14___U0/op_inst/FLT_PT_OP/MULT.OP/MULT/QQ_VARIANT.MULT/MANT_MULT/logic_multiplier.m1/ctl[3].nt.ct/m1/lt4.lt" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h07E0)) 
    blk0000043a
       (.I0(b[8]),
        .I1(b[9]),
        .I2(b[10]),
        .I3(b[11]),
        .O(sig0000049a));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h07E0)) 
    blk0000043b
       (.I0(b[5]),
        .I1(b[6]),
        .I2(b[7]),
        .I3(b[8]),
        .O(sig0000049b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* PK_HLUTNM = "___XLNM___15___U0/op_inst/FLT_PT_OP/MULT.OP/MULT/QQ_VARIANT.MULT/MANT_MULT/logic_multiplier.m1/ctl[1].nt.ct/m1/lt4.lt" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h07E0)) 
    blk0000043c
       (.I0(b[2]),
        .I1(b[3]),
        .I2(b[4]),
        .I3(b[5]),
        .O(sig0000049c));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* PK_HLUTNM = "___XLNM___13___U0/op_inst/FLT_PT_OP/MULT.OP/MULT/QQ_VARIANT.MULT/MANT_MULT/logic_multiplier.m1/ctl[0].nt.ct/m1/lt4.lt" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h07E0)) 
    blk0000043d
       (.I0(1'b0),
        .I1(b[0]),
        .I2(b[1]),
        .I3(b[2]),
        .O(sig0000049d));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000043e
       (.C(clk),
        .CE(1'b1),
        .D(sig000000ae),
        .Q(sig0000049e),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000043f
       (.C(clk),
        .CE(1'b1),
        .D(sig000000b2),
        .Q(sig000004a0),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000440
       (.C(clk),
        .CE(1'b1),
        .D(sig000000b3),
        .Q(sig000004c5),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000441
       (.C(clk),
        .CE(1'b1),
        .D(sig00000547),
        .Q(sig000004c7),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000442
       (.C(clk),
        .CE(1'b1),
        .D(sig00000548),
        .Q(sig000004c8),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000443
       (.C(clk),
        .CE(1'b1),
        .D(sig00000549),
        .Q(sig000004c9),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000444
       (.C(clk),
        .CE(1'b1),
        .D(sig0000054a),
        .Q(sig000004ca),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000445
       (.C(clk),
        .CE(1'b1),
        .D(sig0000054b),
        .Q(sig000004cb),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000446
       (.C(clk),
        .CE(1'b1),
        .D(sig0000054c),
        .Q(sig000004cc),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000447
       (.C(clk),
        .CE(1'b1),
        .D(sig00000166),
        .Q(sig000004ed),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000448
       (.C(clk),
        .CE(1'b1),
        .D(sig00000168),
        .Q(sig000004eb),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000449
       (.C(clk),
        .CE(1'b1),
        .D(sig00000169),
        .Q(sig0000050c),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000044a
       (.C(clk),
        .CE(1'b1),
        .D(sig000005d7),
        .Q(sig00000527),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000044b
       (.C(clk),
        .CE(1'b1),
        .D(sig000005d8),
        .Q(sig00000528),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000044c
       (.C(clk),
        .CE(1'b1),
        .D(sig000005d9),
        .Q(sig00000529),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000044d
       (.C(clk),
        .CE(1'b1),
        .D(sig0000060b),
        .Q(sig00000547),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000044e
       (.C(clk),
        .CE(1'b1),
        .D(sig0000060c),
        .Q(sig00000548),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000044f
       (.C(clk),
        .CE(1'b1),
        .D(sig0000060d),
        .Q(sig00000549),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000450
       (.C(clk),
        .CE(1'b1),
        .D(sig0000063f),
        .Q(sig00000567),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000451
       (.C(clk),
        .CE(1'b1),
        .D(sig00000640),
        .Q(sig00000568),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000452
       (.C(clk),
        .CE(1'b1),
        .D(sig00000641),
        .Q(sig00000569),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000453
       (.C(clk),
        .CE(1'b1),
        .D(sig0000016b),
        .Q(sig00000587),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000454
       (.C(clk),
        .CE(1'b1),
        .D(sig000005a4),
        .Q(sig000005a3),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000455
       (.C(clk),
        .CE(1'b1),
        .D(sig00000586),
        .Q(sig00000585),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000456
       (.C(clk),
        .CE(1'b1),
        .D(sig00000566),
        .Q(sig00000565),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000457
       (.C(clk),
        .CE(1'b1),
        .D(sig00000546),
        .Q(sig00000545),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000458
       (.C(clk),
        .CE(1'b1),
        .D(sig0000016c),
        .Q(sig000005a4),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000459
       (.C(clk),
        .CE(1'b1),
        .D(sig0000016d),
        .Q(sig00000586),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000045a
       (.C(clk),
        .CE(1'b1),
        .D(sig0000016e),
        .Q(sig00000566),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000045b
       (.C(clk),
        .CE(1'b1),
        .D(sig0000016f),
        .Q(sig00000546),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000045c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000170),
        .Q(sig0000050d),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000045d
       (.C(clk),
        .CE(1'b1),
        .D(sig00000171),
        .Q(sig000004ec),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000045e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000172),
        .Q(sig000004c6),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000045f
       (.C(clk),
        .CE(1'b1),
        .D(sig00000483),
        .Q(sig0000068f),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000460
       (.C(clk),
        .CE(1'b1),
        .D(sig00000484),
        .Q(sig00000692),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000461
       (.C(clk),
        .CE(1'b1),
        .D(sig00000485),
        .Q(sig00000695),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000462
       (.C(clk),
        .CE(1'b1),
        .D(sig00000486),
        .Q(sig00000698),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000463
       (.C(clk),
        .CE(1'b1),
        .D(sig00000487),
        .Q(sig0000069b),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000464
       (.C(clk),
        .CE(1'b1),
        .D(sig00000488),
        .Q(sig0000069e),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000465
       (.C(clk),
        .CE(1'b1),
        .D(sig00000489),
        .Q(sig000006a1),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000466
       (.C(clk),
        .CE(1'b1),
        .D(sig0000048a),
        .Q(sig000006a4),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000467
       (.C(clk),
        .CE(1'b1),
        .D(sig0000048b),
        .Q(sig000006a7),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000468
       (.C(clk),
        .CE(1'b1),
        .D(sig0000048c),
        .Q(sig0000068e),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000469
       (.C(clk),
        .CE(1'b1),
        .D(sig0000048d),
        .Q(sig00000691),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000046a
       (.C(clk),
        .CE(1'b1),
        .D(sig0000048e),
        .Q(sig00000694),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000046b
       (.C(clk),
        .CE(1'b1),
        .D(sig0000048f),
        .Q(sig00000697),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000046c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000490),
        .Q(sig0000069a),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000046d
       (.C(clk),
        .CE(1'b1),
        .D(sig00000491),
        .Q(sig0000069d),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000046e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000492),
        .Q(sig000006a0),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000046f
       (.C(clk),
        .CE(1'b1),
        .D(sig00000493),
        .Q(sig000006a3),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000470
       (.C(clk),
        .CE(1'b1),
        .D(sig00000494),
        .Q(sig000006a6),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000471
       (.C(clk),
        .CE(1'b1),
        .D(b[2]),
        .Q(sig0000049f),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000472
       (.C(clk),
        .CE(1'b1),
        .D(sig0000049d),
        .Q(sig000006a5),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000473
       (.C(clk),
        .CE(1'b1),
        .D(sig0000049c),
        .Q(sig000006a2),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000474
       (.C(clk),
        .CE(1'b1),
        .D(sig0000049b),
        .Q(sig0000069f),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000475
       (.C(clk),
        .CE(1'b1),
        .D(sig0000049a),
        .Q(sig0000069c),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000476
       (.C(clk),
        .CE(1'b1),
        .D(sig00000499),
        .Q(sig00000699),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000477
       (.C(clk),
        .CE(1'b1),
        .D(sig00000498),
        .Q(sig00000696),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000478
       (.C(clk),
        .CE(1'b1),
        .D(sig00000497),
        .Q(sig00000693),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000479
       (.C(clk),
        .CE(1'b1),
        .D(sig00000496),
        .Q(sig00000690),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000047a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000495),
        .Q(sig0000068d),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000047b
       (.C(clk),
        .CE(1'b1),
        .D(1'b1),
        .Q(sig000006bf),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000047c
       (.C(clk),
        .CE(1'b1),
        .D(a[22]),
        .Q(sig000006be),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000047d
       (.C(clk),
        .CE(1'b1),
        .D(a[21]),
        .Q(sig000006bd),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000047e
       (.C(clk),
        .CE(1'b1),
        .D(a[20]),
        .Q(sig000006bc),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000047f
       (.C(clk),
        .CE(1'b1),
        .D(a[19]),
        .Q(sig000006bb),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000480
       (.C(clk),
        .CE(1'b1),
        .D(a[18]),
        .Q(sig000006ba),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000481
       (.C(clk),
        .CE(1'b1),
        .D(a[17]),
        .Q(sig000006b9),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000482
       (.C(clk),
        .CE(1'b1),
        .D(a[16]),
        .Q(sig000006b8),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000483
       (.C(clk),
        .CE(1'b1),
        .D(a[15]),
        .Q(sig000006b7),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000484
       (.C(clk),
        .CE(1'b1),
        .D(a[14]),
        .Q(sig000006b6),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000485
       (.C(clk),
        .CE(1'b1),
        .D(a[13]),
        .Q(sig000006b5),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000486
       (.C(clk),
        .CE(1'b1),
        .D(a[12]),
        .Q(sig000006b4),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000487
       (.C(clk),
        .CE(1'b1),
        .D(a[11]),
        .Q(sig000006b3),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000488
       (.C(clk),
        .CE(1'b1),
        .D(a[10]),
        .Q(sig000006b2),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000489
       (.C(clk),
        .CE(1'b1),
        .D(a[9]),
        .Q(sig000006b1),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000048a
       (.C(clk),
        .CE(1'b1),
        .D(a[8]),
        .Q(sig000006b0),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000048b
       (.C(clk),
        .CE(1'b1),
        .D(a[7]),
        .Q(sig000006af),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000048c
       (.C(clk),
        .CE(1'b1),
        .D(a[6]),
        .Q(sig000006ae),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000048d
       (.C(clk),
        .CE(1'b1),
        .D(a[5]),
        .Q(sig000006ad),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000048e
       (.C(clk),
        .CE(1'b1),
        .D(a[4]),
        .Q(sig000006ac),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000048f
       (.C(clk),
        .CE(1'b1),
        .D(a[3]),
        .Q(sig000006ab),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000490
       (.C(clk),
        .CE(1'b1),
        .D(a[2]),
        .Q(sig000006aa),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000491
       (.C(clk),
        .CE(1'b1),
        .D(a[1]),
        .Q(sig000006a9),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000492
       (.C(clk),
        .CE(1'b1),
        .D(a[0]),
        .Q(sig000006a8),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000493
       (.C(clk),
        .CE(1'b1),
        .D(sig000001d4),
        .Q(sig0000068c),
        .R(sig000006a7));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000494
       (.C(clk),
        .CE(1'b1),
        .D(sig000001d3),
        .Q(sig0000068b),
        .R(sig000006a7));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000495
       (.C(clk),
        .CE(1'b1),
        .D(sig000001d1),
        .Q(sig0000068a),
        .R(sig000006a7));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000496
       (.C(clk),
        .CE(1'b1),
        .D(sig000001cf),
        .Q(sig00000689),
        .R(sig000006a7));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000497
       (.C(clk),
        .CE(1'b1),
        .D(sig000001cd),
        .Q(sig00000688),
        .R(sig000006a7));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000498
       (.C(clk),
        .CE(1'b1),
        .D(sig000001cb),
        .Q(sig00000687),
        .R(sig000006a7));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000499
       (.C(clk),
        .CE(1'b1),
        .D(sig000001c9),
        .Q(sig00000686),
        .R(sig000006a7));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000049a
       (.C(clk),
        .CE(1'b1),
        .D(sig000001c7),
        .Q(sig00000685),
        .R(sig000006a7));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000049b
       (.C(clk),
        .CE(1'b1),
        .D(sig000001c5),
        .Q(sig00000684),
        .R(sig000006a7));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000049c
       (.C(clk),
        .CE(1'b1),
        .D(sig000001c3),
        .Q(sig00000683),
        .R(sig000006a7));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000049d
       (.C(clk),
        .CE(1'b1),
        .D(sig000001c1),
        .Q(sig00000682),
        .R(sig000006a7));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000049e
       (.C(clk),
        .CE(1'b1),
        .D(sig000001bf),
        .Q(sig00000681),
        .R(sig000006a7));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000049f
       (.C(clk),
        .CE(1'b1),
        .D(sig000001bd),
        .Q(sig00000680),
        .R(sig000006a7));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004a0
       (.C(clk),
        .CE(1'b1),
        .D(sig000001bb),
        .Q(sig0000067f),
        .R(sig000006a7));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004a1
       (.C(clk),
        .CE(1'b1),
        .D(sig000001b9),
        .Q(sig0000067e),
        .R(sig000006a7));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004a2
       (.C(clk),
        .CE(1'b1),
        .D(sig000001b7),
        .Q(sig0000067d),
        .R(sig000006a7));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004a3
       (.C(clk),
        .CE(1'b1),
        .D(sig000001b5),
        .Q(sig0000067c),
        .R(sig000006a7));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004a4
       (.C(clk),
        .CE(1'b1),
        .D(sig000001b3),
        .Q(sig0000067b),
        .R(sig000006a7));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004a5
       (.C(clk),
        .CE(1'b1),
        .D(sig000001b1),
        .Q(sig0000067a),
        .R(sig000006a7));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004a6
       (.C(clk),
        .CE(1'b1),
        .D(sig000001af),
        .Q(sig00000679),
        .R(sig000006a7));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004a7
       (.C(clk),
        .CE(1'b1),
        .D(sig000001ad),
        .Q(sig00000678),
        .R(sig000006a7));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004a8
       (.C(clk),
        .CE(1'b1),
        .D(sig000001ab),
        .Q(sig00000677),
        .R(sig000006a7));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004a9
       (.C(clk),
        .CE(1'b1),
        .D(sig000001a9),
        .Q(sig00000676),
        .R(sig000006a7));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004aa
       (.C(clk),
        .CE(1'b1),
        .D(sig000001a7),
        .Q(sig00000675),
        .R(sig000006a7));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004ab
       (.C(clk),
        .CE(1'b1),
        .D(sig00000173),
        .Q(sig00000674),
        .R(sig000006a7));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004ac
       (.C(clk),
        .CE(1'b1),
        .D(sig00000175),
        .Q(sig00000673),
        .R(sig000006a7));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004ad
       (.C(clk),
        .CE(1'b1),
        .D(sig00000236),
        .Q(sig00000672),
        .R(sig000006a4));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004ae
       (.C(clk),
        .CE(1'b1),
        .D(sig00000235),
        .Q(sig00000671),
        .R(sig000006a4));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004af
       (.C(clk),
        .CE(1'b1),
        .D(sig00000233),
        .Q(sig00000670),
        .R(sig000006a4));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004b0
       (.C(clk),
        .CE(1'b1),
        .D(sig00000231),
        .Q(sig0000066f),
        .R(sig000006a4));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004b1
       (.C(clk),
        .CE(1'b1),
        .D(sig0000022f),
        .Q(sig0000066e),
        .R(sig000006a4));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004b2
       (.C(clk),
        .CE(1'b1),
        .D(sig0000022d),
        .Q(sig0000066d),
        .R(sig000006a4));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004b3
       (.C(clk),
        .CE(1'b1),
        .D(sig0000022b),
        .Q(sig0000066c),
        .R(sig000006a4));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004b4
       (.C(clk),
        .CE(1'b1),
        .D(sig00000229),
        .Q(sig0000066b),
        .R(sig000006a4));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004b5
       (.C(clk),
        .CE(1'b1),
        .D(sig00000227),
        .Q(sig0000066a),
        .R(sig000006a4));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004b6
       (.C(clk),
        .CE(1'b1),
        .D(sig00000225),
        .Q(sig00000669),
        .R(sig000006a4));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004b7
       (.C(clk),
        .CE(1'b1),
        .D(sig00000223),
        .Q(sig00000668),
        .R(sig000006a4));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004b8
       (.C(clk),
        .CE(1'b1),
        .D(sig00000221),
        .Q(sig00000667),
        .R(sig000006a4));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004b9
       (.C(clk),
        .CE(1'b1),
        .D(sig0000021f),
        .Q(sig00000666),
        .R(sig000006a4));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004ba
       (.C(clk),
        .CE(1'b1),
        .D(sig0000021d),
        .Q(sig00000665),
        .R(sig000006a4));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004bb
       (.C(clk),
        .CE(1'b1),
        .D(sig0000021b),
        .Q(sig00000664),
        .R(sig000006a4));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004bc
       (.C(clk),
        .CE(1'b1),
        .D(sig00000219),
        .Q(sig00000663),
        .R(sig000006a4));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004bd
       (.C(clk),
        .CE(1'b1),
        .D(sig00000217),
        .Q(sig00000662),
        .R(sig000006a4));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004be
       (.C(clk),
        .CE(1'b1),
        .D(sig00000215),
        .Q(sig00000661),
        .R(sig000006a4));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004bf
       (.C(clk),
        .CE(1'b1),
        .D(sig00000213),
        .Q(sig00000660),
        .R(sig000006a4));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004c0
       (.C(clk),
        .CE(1'b1),
        .D(sig00000211),
        .Q(sig0000065f),
        .R(sig000006a4));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004c1
       (.C(clk),
        .CE(1'b1),
        .D(sig0000020f),
        .Q(sig0000065e),
        .R(sig000006a4));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004c2
       (.C(clk),
        .CE(1'b1),
        .D(sig0000020d),
        .Q(sig0000065d),
        .R(sig000006a4));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004c3
       (.C(clk),
        .CE(1'b1),
        .D(sig0000020b),
        .Q(sig0000065c),
        .R(sig000006a4));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004c4
       (.C(clk),
        .CE(1'b1),
        .D(sig00000209),
        .Q(sig0000065b),
        .R(sig000006a4));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004c5
       (.C(clk),
        .CE(1'b1),
        .D(sig000001d5),
        .Q(sig0000065a),
        .R(sig000006a4));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004c6
       (.C(clk),
        .CE(1'b1),
        .D(sig000001d7),
        .Q(sig00000659),
        .R(sig000006a4));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004c7
       (.C(clk),
        .CE(1'b1),
        .D(sig00000298),
        .Q(sig00000658),
        .R(sig000006a1));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004c8
       (.C(clk),
        .CE(1'b1),
        .D(sig00000297),
        .Q(sig00000657),
        .R(sig000006a1));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004c9
       (.C(clk),
        .CE(1'b1),
        .D(sig00000295),
        .Q(sig00000656),
        .R(sig000006a1));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004ca
       (.C(clk),
        .CE(1'b1),
        .D(sig00000293),
        .Q(sig00000655),
        .R(sig000006a1));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004cb
       (.C(clk),
        .CE(1'b1),
        .D(sig00000291),
        .Q(sig00000654),
        .R(sig000006a1));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004cc
       (.C(clk),
        .CE(1'b1),
        .D(sig0000028f),
        .Q(sig00000653),
        .R(sig000006a1));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004cd
       (.C(clk),
        .CE(1'b1),
        .D(sig0000028d),
        .Q(sig00000652),
        .R(sig000006a1));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004ce
       (.C(clk),
        .CE(1'b1),
        .D(sig0000028b),
        .Q(sig00000651),
        .R(sig000006a1));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004cf
       (.C(clk),
        .CE(1'b1),
        .D(sig00000289),
        .Q(sig00000650),
        .R(sig000006a1));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004d0
       (.C(clk),
        .CE(1'b1),
        .D(sig00000287),
        .Q(sig0000064f),
        .R(sig000006a1));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004d1
       (.C(clk),
        .CE(1'b1),
        .D(sig00000285),
        .Q(sig0000064e),
        .R(sig000006a1));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004d2
       (.C(clk),
        .CE(1'b1),
        .D(sig00000283),
        .Q(sig0000064d),
        .R(sig000006a1));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004d3
       (.C(clk),
        .CE(1'b1),
        .D(sig00000281),
        .Q(sig0000064c),
        .R(sig000006a1));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004d4
       (.C(clk),
        .CE(1'b1),
        .D(sig0000027f),
        .Q(sig0000064b),
        .R(sig000006a1));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004d5
       (.C(clk),
        .CE(1'b1),
        .D(sig0000027d),
        .Q(sig0000064a),
        .R(sig000006a1));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004d6
       (.C(clk),
        .CE(1'b1),
        .D(sig0000027b),
        .Q(sig00000649),
        .R(sig000006a1));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004d7
       (.C(clk),
        .CE(1'b1),
        .D(sig00000279),
        .Q(sig00000648),
        .R(sig000006a1));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004d8
       (.C(clk),
        .CE(1'b1),
        .D(sig00000277),
        .Q(sig00000647),
        .R(sig000006a1));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004d9
       (.C(clk),
        .CE(1'b1),
        .D(sig00000275),
        .Q(sig00000646),
        .R(sig000006a1));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004da
       (.C(clk),
        .CE(1'b1),
        .D(sig00000273),
        .Q(sig00000645),
        .R(sig000006a1));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004db
       (.C(clk),
        .CE(1'b1),
        .D(sig00000271),
        .Q(sig00000644),
        .R(sig000006a1));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004dc
       (.C(clk),
        .CE(1'b1),
        .D(sig0000026f),
        .Q(sig00000643),
        .R(sig000006a1));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004dd
       (.C(clk),
        .CE(1'b1),
        .D(sig0000026d),
        .Q(sig00000642),
        .R(sig000006a1));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004de
       (.C(clk),
        .CE(1'b1),
        .D(sig0000026b),
        .Q(sig00000641),
        .R(sig000006a1));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004df
       (.C(clk),
        .CE(1'b1),
        .D(sig00000237),
        .Q(sig00000640),
        .R(sig000006a1));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004e0
       (.C(clk),
        .CE(1'b1),
        .D(sig00000239),
        .Q(sig0000063f),
        .R(sig000006a1));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004e1
       (.C(clk),
        .CE(1'b1),
        .D(sig000002fa),
        .Q(sig0000063e),
        .R(sig0000069e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004e2
       (.C(clk),
        .CE(1'b1),
        .D(sig000002f9),
        .Q(sig0000063d),
        .R(sig0000069e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004e3
       (.C(clk),
        .CE(1'b1),
        .D(sig000002f7),
        .Q(sig0000063c),
        .R(sig0000069e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004e4
       (.C(clk),
        .CE(1'b1),
        .D(sig000002f5),
        .Q(sig0000063b),
        .R(sig0000069e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004e5
       (.C(clk),
        .CE(1'b1),
        .D(sig000002f3),
        .Q(sig0000063a),
        .R(sig0000069e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004e6
       (.C(clk),
        .CE(1'b1),
        .D(sig000002f1),
        .Q(sig00000639),
        .R(sig0000069e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004e7
       (.C(clk),
        .CE(1'b1),
        .D(sig000002ef),
        .Q(sig00000638),
        .R(sig0000069e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004e8
       (.C(clk),
        .CE(1'b1),
        .D(sig000002ed),
        .Q(sig00000637),
        .R(sig0000069e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004e9
       (.C(clk),
        .CE(1'b1),
        .D(sig000002eb),
        .Q(sig00000636),
        .R(sig0000069e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004ea
       (.C(clk),
        .CE(1'b1),
        .D(sig000002e9),
        .Q(sig00000635),
        .R(sig0000069e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004eb
       (.C(clk),
        .CE(1'b1),
        .D(sig000002e7),
        .Q(sig00000634),
        .R(sig0000069e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004ec
       (.C(clk),
        .CE(1'b1),
        .D(sig000002e5),
        .Q(sig00000633),
        .R(sig0000069e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004ed
       (.C(clk),
        .CE(1'b1),
        .D(sig000002e3),
        .Q(sig00000632),
        .R(sig0000069e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004ee
       (.C(clk),
        .CE(1'b1),
        .D(sig000002e1),
        .Q(sig00000631),
        .R(sig0000069e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004ef
       (.C(clk),
        .CE(1'b1),
        .D(sig000002df),
        .Q(sig00000630),
        .R(sig0000069e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004f0
       (.C(clk),
        .CE(1'b1),
        .D(sig000002dd),
        .Q(sig0000062f),
        .R(sig0000069e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004f1
       (.C(clk),
        .CE(1'b1),
        .D(sig000002db),
        .Q(sig0000062e),
        .R(sig0000069e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004f2
       (.C(clk),
        .CE(1'b1),
        .D(sig000002d9),
        .Q(sig0000062d),
        .R(sig0000069e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004f3
       (.C(clk),
        .CE(1'b1),
        .D(sig000002d7),
        .Q(sig0000062c),
        .R(sig0000069e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004f4
       (.C(clk),
        .CE(1'b1),
        .D(sig000002d5),
        .Q(sig0000062b),
        .R(sig0000069e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004f5
       (.C(clk),
        .CE(1'b1),
        .D(sig000002d3),
        .Q(sig0000062a),
        .R(sig0000069e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004f6
       (.C(clk),
        .CE(1'b1),
        .D(sig000002d1),
        .Q(sig00000629),
        .R(sig0000069e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004f7
       (.C(clk),
        .CE(1'b1),
        .D(sig000002cf),
        .Q(sig00000628),
        .R(sig0000069e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004f8
       (.C(clk),
        .CE(1'b1),
        .D(sig000002cd),
        .Q(sig00000627),
        .R(sig0000069e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004f9
       (.C(clk),
        .CE(1'b1),
        .D(sig00000299),
        .Q(sig00000626),
        .R(sig0000069e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004fa
       (.C(clk),
        .CE(1'b1),
        .D(sig0000029b),
        .Q(sig00000625),
        .R(sig0000069e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004fb
       (.C(clk),
        .CE(1'b1),
        .D(sig0000035c),
        .Q(sig00000624),
        .R(sig0000069b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004fc
       (.C(clk),
        .CE(1'b1),
        .D(sig0000035b),
        .Q(sig00000623),
        .R(sig0000069b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004fd
       (.C(clk),
        .CE(1'b1),
        .D(sig00000359),
        .Q(sig00000622),
        .R(sig0000069b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004fe
       (.C(clk),
        .CE(1'b1),
        .D(sig00000357),
        .Q(sig00000621),
        .R(sig0000069b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000004ff
       (.C(clk),
        .CE(1'b1),
        .D(sig00000355),
        .Q(sig00000620),
        .R(sig0000069b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000500
       (.C(clk),
        .CE(1'b1),
        .D(sig00000353),
        .Q(sig0000061f),
        .R(sig0000069b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000501
       (.C(clk),
        .CE(1'b1),
        .D(sig00000351),
        .Q(sig0000061e),
        .R(sig0000069b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000502
       (.C(clk),
        .CE(1'b1),
        .D(sig0000034f),
        .Q(sig0000061d),
        .R(sig0000069b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000503
       (.C(clk),
        .CE(1'b1),
        .D(sig0000034d),
        .Q(sig0000061c),
        .R(sig0000069b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000504
       (.C(clk),
        .CE(1'b1),
        .D(sig0000034b),
        .Q(sig0000061b),
        .R(sig0000069b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000505
       (.C(clk),
        .CE(1'b1),
        .D(sig00000349),
        .Q(sig0000061a),
        .R(sig0000069b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000506
       (.C(clk),
        .CE(1'b1),
        .D(sig00000347),
        .Q(sig00000619),
        .R(sig0000069b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000507
       (.C(clk),
        .CE(1'b1),
        .D(sig00000345),
        .Q(sig00000618),
        .R(sig0000069b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000508
       (.C(clk),
        .CE(1'b1),
        .D(sig00000343),
        .Q(sig00000617),
        .R(sig0000069b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000509
       (.C(clk),
        .CE(1'b1),
        .D(sig00000341),
        .Q(sig00000616),
        .R(sig0000069b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000050a
       (.C(clk),
        .CE(1'b1),
        .D(sig0000033f),
        .Q(sig00000615),
        .R(sig0000069b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000050b
       (.C(clk),
        .CE(1'b1),
        .D(sig0000033d),
        .Q(sig00000614),
        .R(sig0000069b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000050c
       (.C(clk),
        .CE(1'b1),
        .D(sig0000033b),
        .Q(sig00000613),
        .R(sig0000069b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000050d
       (.C(clk),
        .CE(1'b1),
        .D(sig00000339),
        .Q(sig00000612),
        .R(sig0000069b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000050e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000337),
        .Q(sig00000611),
        .R(sig0000069b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000050f
       (.C(clk),
        .CE(1'b1),
        .D(sig00000335),
        .Q(sig00000610),
        .R(sig0000069b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000510
       (.C(clk),
        .CE(1'b1),
        .D(sig00000333),
        .Q(sig0000060f),
        .R(sig0000069b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000511
       (.C(clk),
        .CE(1'b1),
        .D(sig00000331),
        .Q(sig0000060e),
        .R(sig0000069b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000512
       (.C(clk),
        .CE(1'b1),
        .D(sig0000032f),
        .Q(sig0000060d),
        .R(sig0000069b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000513
       (.C(clk),
        .CE(1'b1),
        .D(sig000002fb),
        .Q(sig0000060c),
        .R(sig0000069b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000514
       (.C(clk),
        .CE(1'b1),
        .D(sig000002fd),
        .Q(sig0000060b),
        .R(sig0000069b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000515
       (.C(clk),
        .CE(1'b1),
        .D(sig000003be),
        .Q(sig0000060a),
        .R(sig00000698));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000516
       (.C(clk),
        .CE(1'b1),
        .D(sig000003bd),
        .Q(sig00000609),
        .R(sig00000698));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000517
       (.C(clk),
        .CE(1'b1),
        .D(sig000003bb),
        .Q(sig00000608),
        .R(sig00000698));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000518
       (.C(clk),
        .CE(1'b1),
        .D(sig000003b9),
        .Q(sig00000607),
        .R(sig00000698));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000519
       (.C(clk),
        .CE(1'b1),
        .D(sig000003b7),
        .Q(sig00000606),
        .R(sig00000698));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000051a
       (.C(clk),
        .CE(1'b1),
        .D(sig000003b5),
        .Q(sig00000605),
        .R(sig00000698));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000051b
       (.C(clk),
        .CE(1'b1),
        .D(sig000003b3),
        .Q(sig00000604),
        .R(sig00000698));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000051c
       (.C(clk),
        .CE(1'b1),
        .D(sig000003b1),
        .Q(sig00000603),
        .R(sig00000698));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000051d
       (.C(clk),
        .CE(1'b1),
        .D(sig000003af),
        .Q(sig00000602),
        .R(sig00000698));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000051e
       (.C(clk),
        .CE(1'b1),
        .D(sig000003ad),
        .Q(sig00000601),
        .R(sig00000698));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000051f
       (.C(clk),
        .CE(1'b1),
        .D(sig000003ab),
        .Q(sig00000600),
        .R(sig00000698));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000520
       (.C(clk),
        .CE(1'b1),
        .D(sig000003a9),
        .Q(sig000005ff),
        .R(sig00000698));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000521
       (.C(clk),
        .CE(1'b1),
        .D(sig000003a7),
        .Q(sig000005fe),
        .R(sig00000698));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000522
       (.C(clk),
        .CE(1'b1),
        .D(sig000003a5),
        .Q(sig000005fd),
        .R(sig00000698));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000523
       (.C(clk),
        .CE(1'b1),
        .D(sig000003a3),
        .Q(sig000005fc),
        .R(sig00000698));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000524
       (.C(clk),
        .CE(1'b1),
        .D(sig000003a1),
        .Q(sig000005fb),
        .R(sig00000698));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000525
       (.C(clk),
        .CE(1'b1),
        .D(sig0000039f),
        .Q(sig000005fa),
        .R(sig00000698));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000526
       (.C(clk),
        .CE(1'b1),
        .D(sig0000039d),
        .Q(sig000005f9),
        .R(sig00000698));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000527
       (.C(clk),
        .CE(1'b1),
        .D(sig0000039b),
        .Q(sig000005f8),
        .R(sig00000698));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000528
       (.C(clk),
        .CE(1'b1),
        .D(sig00000399),
        .Q(sig000005f7),
        .R(sig00000698));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000529
       (.C(clk),
        .CE(1'b1),
        .D(sig00000397),
        .Q(sig000005f6),
        .R(sig00000698));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000052a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000395),
        .Q(sig000005f5),
        .R(sig00000698));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000052b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000393),
        .Q(sig000005f4),
        .R(sig00000698));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000052c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000391),
        .Q(sig000005f3),
        .R(sig00000698));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000052d
       (.C(clk),
        .CE(1'b1),
        .D(sig0000035d),
        .Q(sig000005f2),
        .R(sig00000698));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000052e
       (.C(clk),
        .CE(1'b1),
        .D(sig0000035f),
        .Q(sig000005f1),
        .R(sig00000698));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000052f
       (.C(clk),
        .CE(1'b1),
        .D(sig00000420),
        .Q(sig000005f0),
        .R(sig00000695));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000530
       (.C(clk),
        .CE(1'b1),
        .D(sig0000041f),
        .Q(sig000005ef),
        .R(sig00000695));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000531
       (.C(clk),
        .CE(1'b1),
        .D(sig0000041d),
        .Q(sig000005ee),
        .R(sig00000695));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000532
       (.C(clk),
        .CE(1'b1),
        .D(sig0000041b),
        .Q(sig000005ed),
        .R(sig00000695));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000533
       (.C(clk),
        .CE(1'b1),
        .D(sig00000419),
        .Q(sig000005ec),
        .R(sig00000695));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000534
       (.C(clk),
        .CE(1'b1),
        .D(sig00000417),
        .Q(sig000005eb),
        .R(sig00000695));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000535
       (.C(clk),
        .CE(1'b1),
        .D(sig00000415),
        .Q(sig000005ea),
        .R(sig00000695));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000536
       (.C(clk),
        .CE(1'b1),
        .D(sig00000413),
        .Q(sig000005e9),
        .R(sig00000695));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000537
       (.C(clk),
        .CE(1'b1),
        .D(sig00000411),
        .Q(sig000005e8),
        .R(sig00000695));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000538
       (.C(clk),
        .CE(1'b1),
        .D(sig0000040f),
        .Q(sig000005e7),
        .R(sig00000695));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000539
       (.C(clk),
        .CE(1'b1),
        .D(sig0000040d),
        .Q(sig000005e6),
        .R(sig00000695));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000053a
       (.C(clk),
        .CE(1'b1),
        .D(sig0000040b),
        .Q(sig000005e5),
        .R(sig00000695));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000053b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000409),
        .Q(sig000005e4),
        .R(sig00000695));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000053c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000407),
        .Q(sig000005e3),
        .R(sig00000695));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000053d
       (.C(clk),
        .CE(1'b1),
        .D(sig00000405),
        .Q(sig000005e2),
        .R(sig00000695));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000053e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000403),
        .Q(sig000005e1),
        .R(sig00000695));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000053f
       (.C(clk),
        .CE(1'b1),
        .D(sig00000401),
        .Q(sig000005e0),
        .R(sig00000695));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000540
       (.C(clk),
        .CE(1'b1),
        .D(sig000003ff),
        .Q(sig000005df),
        .R(sig00000695));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000541
       (.C(clk),
        .CE(1'b1),
        .D(sig000003fd),
        .Q(sig000005de),
        .R(sig00000695));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000542
       (.C(clk),
        .CE(1'b1),
        .D(sig000003fb),
        .Q(sig000005dd),
        .R(sig00000695));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000543
       (.C(clk),
        .CE(1'b1),
        .D(sig000003f9),
        .Q(sig000005dc),
        .R(sig00000695));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000544
       (.C(clk),
        .CE(1'b1),
        .D(sig000003f7),
        .Q(sig000005db),
        .R(sig00000695));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000545
       (.C(clk),
        .CE(1'b1),
        .D(sig000003f5),
        .Q(sig000005da),
        .R(sig00000695));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000546
       (.C(clk),
        .CE(1'b1),
        .D(sig000003f3),
        .Q(sig000005d9),
        .R(sig00000695));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000547
       (.C(clk),
        .CE(1'b1),
        .D(sig000003bf),
        .Q(sig000005d8),
        .R(sig00000695));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000548
       (.C(clk),
        .CE(1'b1),
        .D(sig000003c1),
        .Q(sig000005d7),
        .R(sig00000695));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000549
       (.C(clk),
        .CE(1'b1),
        .D(sig00000482),
        .Q(sig000005d6),
        .R(sig00000692));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000054a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000481),
        .Q(sig000005d5),
        .R(sig00000692));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000054b
       (.C(clk),
        .CE(1'b1),
        .D(sig0000047f),
        .Q(sig000005d4),
        .R(sig00000692));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000054c
       (.C(clk),
        .CE(1'b1),
        .D(sig0000047d),
        .Q(sig000005d3),
        .R(sig00000692));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000054d
       (.C(clk),
        .CE(1'b1),
        .D(sig0000047b),
        .Q(sig000005d2),
        .R(sig00000692));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000054e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000479),
        .Q(sig000005d1),
        .R(sig00000692));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000054f
       (.C(clk),
        .CE(1'b1),
        .D(sig00000477),
        .Q(sig000005d0),
        .R(sig00000692));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000550
       (.C(clk),
        .CE(1'b1),
        .D(sig00000475),
        .Q(sig000005cf),
        .R(sig00000692));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000551
       (.C(clk),
        .CE(1'b1),
        .D(sig00000473),
        .Q(sig000005ce),
        .R(sig00000692));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000552
       (.C(clk),
        .CE(1'b1),
        .D(sig00000471),
        .Q(sig000005cd),
        .R(sig00000692));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000553
       (.C(clk),
        .CE(1'b1),
        .D(sig0000046f),
        .Q(sig000005cc),
        .R(sig00000692));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000554
       (.C(clk),
        .CE(1'b1),
        .D(sig0000046d),
        .Q(sig000005cb),
        .R(sig00000692));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000555
       (.C(clk),
        .CE(1'b1),
        .D(sig0000046b),
        .Q(sig000005ca),
        .R(sig00000692));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000556
       (.C(clk),
        .CE(1'b1),
        .D(sig00000469),
        .Q(sig000005c9),
        .R(sig00000692));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000557
       (.C(clk),
        .CE(1'b1),
        .D(sig00000467),
        .Q(sig000005c8),
        .R(sig00000692));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000558
       (.C(clk),
        .CE(1'b1),
        .D(sig00000465),
        .Q(sig000005c7),
        .R(sig00000692));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000559
       (.C(clk),
        .CE(1'b1),
        .D(sig00000463),
        .Q(sig000005c6),
        .R(sig00000692));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000055a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000461),
        .Q(sig000005c5),
        .R(sig00000692));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000055b
       (.C(clk),
        .CE(1'b1),
        .D(sig0000045f),
        .Q(sig000005c4),
        .R(sig00000692));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000055c
       (.C(clk),
        .CE(1'b1),
        .D(sig0000045d),
        .Q(sig000005c3),
        .R(sig00000692));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000055d
       (.C(clk),
        .CE(1'b1),
        .D(sig0000045b),
        .Q(sig000005c2),
        .R(sig00000692));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000055e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000459),
        .Q(sig000005c1),
        .R(sig00000692));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000055f
       (.C(clk),
        .CE(1'b1),
        .D(sig00000457),
        .Q(sig000005c0),
        .R(sig00000692));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000560
       (.C(clk),
        .CE(1'b1),
        .D(sig00000455),
        .Q(sig000005bf),
        .R(sig00000692));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000561
       (.C(clk),
        .CE(1'b1),
        .D(sig00000421),
        .Q(sig000005be),
        .R(sig00000692));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000562
       (.C(clk),
        .CE(1'b1),
        .D(sig00000423),
        .Q(sig000005bd),
        .R(sig00000692));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000563
       (.C(clk),
        .CE(1'b1),
        .D(sig0000071f),
        .Q(sig000005a5),
        .R(sig0000068f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000564
       (.C(clk),
        .CE(1'b1),
        .D(sig00000721),
        .Q(sig000005a6),
        .R(sig0000068f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000565
       (.C(clk),
        .CE(1'b1),
        .D(sig000006ed),
        .Q(sig000005a7),
        .R(sig0000068f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000566
       (.C(clk),
        .CE(1'b1),
        .D(sig000006eb),
        .Q(sig000005a8),
        .R(sig0000068f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000567
       (.C(clk),
        .CE(1'b1),
        .D(sig000006e9),
        .Q(sig000005a9),
        .R(sig0000068f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000568
       (.C(clk),
        .CE(1'b1),
        .D(sig000006e7),
        .Q(sig000005aa),
        .R(sig0000068f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000569
       (.C(clk),
        .CE(1'b1),
        .D(sig000006e5),
        .Q(sig000005ab),
        .R(sig0000068f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000056a
       (.C(clk),
        .CE(1'b1),
        .D(sig000006e3),
        .Q(sig000005ac),
        .R(sig0000068f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000056b
       (.C(clk),
        .CE(1'b1),
        .D(sig000006e1),
        .Q(sig000005ad),
        .R(sig0000068f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000056c
       (.C(clk),
        .CE(1'b1),
        .D(sig000006df),
        .Q(sig000005ae),
        .R(sig0000068f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000056d
       (.C(clk),
        .CE(1'b1),
        .D(sig000006dd),
        .Q(sig000005af),
        .R(sig0000068f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000056e
       (.C(clk),
        .CE(1'b1),
        .D(sig000006db),
        .Q(sig000005b0),
        .R(sig0000068f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000056f
       (.C(clk),
        .CE(1'b1),
        .D(sig000006d9),
        .Q(sig000005b1),
        .R(sig0000068f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000570
       (.C(clk),
        .CE(1'b1),
        .D(sig000006d7),
        .Q(sig000005b2),
        .R(sig0000068f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000571
       (.C(clk),
        .CE(1'b1),
        .D(sig000006d5),
        .Q(sig000005b3),
        .R(sig0000068f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000572
       (.C(clk),
        .CE(1'b1),
        .D(sig000006d3),
        .Q(sig000005b4),
        .R(sig0000068f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000573
       (.C(clk),
        .CE(1'b1),
        .D(sig000006d1),
        .Q(sig000005b5),
        .R(sig0000068f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000574
       (.C(clk),
        .CE(1'b1),
        .D(sig000006cf),
        .Q(sig000005b6),
        .R(sig0000068f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000575
       (.C(clk),
        .CE(1'b1),
        .D(sig000006cd),
        .Q(sig000005b7),
        .R(sig0000068f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000576
       (.C(clk),
        .CE(1'b1),
        .D(sig000006cb),
        .Q(sig000005b8),
        .R(sig0000068f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000577
       (.C(clk),
        .CE(1'b1),
        .D(sig000006c9),
        .Q(sig000005b9),
        .R(sig0000068f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000578
       (.C(clk),
        .CE(1'b1),
        .D(sig000006c7),
        .Q(sig000005ba),
        .R(sig0000068f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000579
       (.C(clk),
        .CE(1'b1),
        .D(sig000006c5),
        .Q(sig000005bb),
        .R(sig0000068f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000057a
       (.C(clk),
        .CE(1'b1),
        .D(sig000006c3),
        .Q(sig000005bc),
        .R(sig0000068f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000057b
       (.C(clk),
        .CE(1'b1),
        .D(sig000006c1),
        .Q(NLW_blk0000057b_Q_UNCONNECTED),
        .R(sig0000068f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000057c
       (.C(clk),
        .CE(1'b1),
        .D(sig000006c0),
        .Q(NLW_blk0000057c_Q_UNCONNECTED),
        .R(sig0000068f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000057d_CARRY4
       (.CI(sig000006c2),
        .CO(NLW_blk0000057d_CARRY4_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI(NLW_blk0000057d_CARRY4_DI_UNCONNECTED[3:0]),
        .O({NLW_blk0000057d_CARRY4_O_UNCONNECTED[3:1],sig000006c0}),
        .S({NLW_blk0000057d_CARRY4_S_UNCONNECTED[3:1],sig000006f0}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000585_CARRY4
       (.CI(sig000006ca),
        .CO({sig000006c2,sig000006c4,sig000006c6,sig000006c8}),
        .CYINIT(1'b0),
        .DI({sig000006f1,sig000006f3,sig000006f5,sig000006f7}),
        .O({sig000006c1,sig000006c3,sig000006c5,sig000006c7}),
        .S({sig000006f2,sig000006f4,sig000006f6,sig000006f8}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000058d_CARRY4
       (.CI(sig000006d2),
        .CO({sig000006ca,sig000006cc,sig000006ce,sig000006d0}),
        .CYINIT(1'b0),
        .DI({sig000006f9,sig000006fb,sig000006fd,sig000006ff}),
        .O({sig000006c9,sig000006cb,sig000006cd,sig000006cf}),
        .S({sig000006fa,sig000006fc,sig000006fe,sig00000700}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000595_CARRY4
       (.CI(sig000006da),
        .CO({sig000006d2,sig000006d4,sig000006d6,sig000006d8}),
        .CYINIT(1'b0),
        .DI({sig00000701,sig00000703,sig00000705,sig00000707}),
        .O({sig000006d1,sig000006d3,sig000006d5,sig000006d7}),
        .S({sig00000702,sig00000704,sig00000706,sig00000708}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000059d_CARRY4
       (.CI(sig000006e2),
        .CO({sig000006da,sig000006dc,sig000006de,sig000006e0}),
        .CYINIT(1'b0),
        .DI({sig00000709,sig0000070b,sig0000070d,sig0000070f}),
        .O({sig000006d9,sig000006db,sig000006dd,sig000006df}),
        .S({sig0000070a,sig0000070c,sig0000070e,sig00000710}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000005a5_CARRY4
       (.CI(sig000006ea),
        .CO({sig000006e2,sig000006e4,sig000006e6,sig000006e8}),
        .CYINIT(1'b0),
        .DI({sig00000711,sig00000713,sig00000715,sig00000717}),
        .O({sig000006e1,sig000006e3,sig000006e5,sig000006e7}),
        .S({sig00000712,sig00000714,sig00000716,sig00000718}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000005ac_CARRY4
       (.CI(1'b0),
        .CO({sig000006ea,sig000006ec,sig000006ee,sig000006ef}),
        .CYINIT(1'b0),
        .DI({sig00000719,sig0000071b,sig0000071d,sig00000720}),
        .O({sig000006e9,sig000006eb,sig000006ed,NLW_blk000005ac_CARRY4_O_UNCONNECTED[0]}),
        .S({sig0000071a,sig0000071c,sig0000071e,sig00000721}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000005ad
       (.I0(sig0000068d),
        .I1(1'b0),
        .O(NLW_blk000005ad_O_UNCONNECTED));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000005ae
       (.I0(sig0000068d),
        .I1(1'b0),
        .I2(1'b0),
        .I3(sig0000068e),
        .O(sig000006f0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000005af
       (.I0(sig0000068d),
        .I1(sig000006bf),
        .O(sig000006f1));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000005b0
       (.I0(sig0000068d),
        .I1(sig000006bf),
        .I2(1'b0),
        .I3(sig0000068e),
        .O(sig000006f2));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000005b1
       (.I0(sig0000068d),
        .I1(sig000006be),
        .O(sig000006f3));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000005b2
       (.I0(sig0000068d),
        .I1(sig000006be),
        .I2(sig000006bf),
        .I3(sig0000068e),
        .O(sig000006f4));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000005b3
       (.I0(sig0000068d),
        .I1(sig000006bd),
        .O(sig000006f5));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000005b4
       (.I0(sig0000068d),
        .I1(sig000006bd),
        .I2(sig000006be),
        .I3(sig0000068e),
        .O(sig000006f6));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000005b5
       (.I0(sig0000068d),
        .I1(sig000006bc),
        .O(sig000006f7));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000005b6
       (.I0(sig0000068d),
        .I1(sig000006bc),
        .I2(sig000006bd),
        .I3(sig0000068e),
        .O(sig000006f8));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000005b7
       (.I0(sig0000068d),
        .I1(sig000006bb),
        .O(sig000006f9));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000005b8
       (.I0(sig0000068d),
        .I1(sig000006bb),
        .I2(sig000006bc),
        .I3(sig0000068e),
        .O(sig000006fa));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000005b9
       (.I0(sig0000068d),
        .I1(sig000006ba),
        .O(sig000006fb));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000005ba
       (.I0(sig0000068d),
        .I1(sig000006ba),
        .I2(sig000006bb),
        .I3(sig0000068e),
        .O(sig000006fc));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000005bb
       (.I0(sig0000068d),
        .I1(sig000006b9),
        .O(sig000006fd));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000005bc
       (.I0(sig0000068d),
        .I1(sig000006b9),
        .I2(sig000006ba),
        .I3(sig0000068e),
        .O(sig000006fe));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000005bd
       (.I0(sig0000068d),
        .I1(sig000006b8),
        .O(sig000006ff));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000005be
       (.I0(sig0000068d),
        .I1(sig000006b8),
        .I2(sig000006b9),
        .I3(sig0000068e),
        .O(sig00000700));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000005bf
       (.I0(sig0000068d),
        .I1(sig000006b7),
        .O(sig00000701));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000005c0
       (.I0(sig0000068d),
        .I1(sig000006b7),
        .I2(sig000006b8),
        .I3(sig0000068e),
        .O(sig00000702));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000005c1
       (.I0(sig0000068d),
        .I1(sig000006b6),
        .O(sig00000703));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000005c2
       (.I0(sig0000068d),
        .I1(sig000006b6),
        .I2(sig000006b7),
        .I3(sig0000068e),
        .O(sig00000704));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000005c3
       (.I0(sig0000068d),
        .I1(sig000006b5),
        .O(sig00000705));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000005c4
       (.I0(sig0000068d),
        .I1(sig000006b5),
        .I2(sig000006b6),
        .I3(sig0000068e),
        .O(sig00000706));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000005c5
       (.I0(sig0000068d),
        .I1(sig000006b4),
        .O(sig00000707));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000005c6
       (.I0(sig0000068d),
        .I1(sig000006b4),
        .I2(sig000006b5),
        .I3(sig0000068e),
        .O(sig00000708));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000005c7
       (.I0(sig0000068d),
        .I1(sig000006b3),
        .O(sig00000709));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000005c8
       (.I0(sig0000068d),
        .I1(sig000006b3),
        .I2(sig000006b4),
        .I3(sig0000068e),
        .O(sig0000070a));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000005c9
       (.I0(sig0000068d),
        .I1(sig000006b2),
        .O(sig0000070b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000005ca
       (.I0(sig0000068d),
        .I1(sig000006b2),
        .I2(sig000006b3),
        .I3(sig0000068e),
        .O(sig0000070c));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000005cb
       (.I0(sig0000068d),
        .I1(sig000006b1),
        .O(sig0000070d));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000005cc
       (.I0(sig0000068d),
        .I1(sig000006b1),
        .I2(sig000006b2),
        .I3(sig0000068e),
        .O(sig0000070e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000005cd
       (.I0(sig0000068d),
        .I1(sig000006b0),
        .O(sig0000070f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000005ce
       (.I0(sig0000068d),
        .I1(sig000006b0),
        .I2(sig000006b1),
        .I3(sig0000068e),
        .O(sig00000710));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000005cf
       (.I0(sig0000068d),
        .I1(sig000006af),
        .O(sig00000711));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000005d0
       (.I0(sig0000068d),
        .I1(sig000006af),
        .I2(sig000006b0),
        .I3(sig0000068e),
        .O(sig00000712));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000005d1
       (.I0(sig0000068d),
        .I1(sig000006ae),
        .O(sig00000713));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000005d2
       (.I0(sig0000068d),
        .I1(sig000006ae),
        .I2(sig000006af),
        .I3(sig0000068e),
        .O(sig00000714));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000005d3
       (.I0(sig0000068d),
        .I1(sig000006ad),
        .O(sig00000715));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000005d4
       (.I0(sig0000068d),
        .I1(sig000006ad),
        .I2(sig000006ae),
        .I3(sig0000068e),
        .O(sig00000716));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000005d5
       (.I0(sig0000068d),
        .I1(sig000006ac),
        .O(sig00000717));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000005d6
       (.I0(sig0000068d),
        .I1(sig000006ac),
        .I2(sig000006ad),
        .I3(sig0000068e),
        .O(sig00000718));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000005d7
       (.I0(sig0000068d),
        .I1(sig000006ab),
        .O(sig00000719));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000005d8
       (.I0(sig0000068d),
        .I1(sig000006ab),
        .I2(sig000006ac),
        .I3(sig0000068e),
        .O(sig0000071a));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000005d9
       (.I0(sig0000068d),
        .I1(sig000006aa),
        .O(sig0000071b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000005da
       (.I0(sig0000068d),
        .I1(sig000006aa),
        .I2(sig000006ab),
        .I3(sig0000068e),
        .O(sig0000071c));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000005db
       (.I0(sig0000068d),
        .I1(sig000006a9),
        .O(sig0000071d));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000005dc
       (.I0(sig0000068d),
        .I1(sig000006a9),
        .I2(sig000006aa),
        .I3(sig0000068e),
        .O(sig0000071e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000005dd
       (.I0(sig0000068d),
        .I1(1'b0),
        .I2(sig000006a8),
        .I3(sig0000068e),
        .O(sig0000071f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h8)) 
    blk000005de
       (.I0(sig0000068d),
        .I1(sig000006a8),
        .O(sig00000720));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h4478)) 
    blk000005df
       (.I0(sig0000068d),
        .I1(sig000006a8),
        .I2(sig000006a9),
        .I3(sig0000068e),
        .O(sig00000721));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000005fb_CARRY4
       (.CI(sig00000724),
        .CO({NLW_blk000005fb_CARRY4_CO_UNCONNECTED[3:2],sig00000722,sig00000723}),
        .CYINIT(1'b0),
        .DI({NLW_blk000005fb_CARRY4_DI_UNCONNECTED[3:2],1'b0,1'b0}),
        .O({NLW_blk000005fb_CARRY4_O_UNCONNECTED[3],sig00000755,sig00000754,sig00000753}),
        .S({NLW_blk000005fb_CARRY4_S_UNCONNECTED[3],sig00000757,sig00000758,sig00000759}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000005ff_CARRY4
       (.CI(sig00000728),
        .CO({sig00000724,sig00000725,sig00000726,sig00000727}),
        .CYINIT(1'b0),
        .DI({1'b0,sig00000658,sig00000657,sig00000656}),
        .O({sig00000752,sig00000751,sig00000750,sig0000074f}),
        .S({sig0000075a,sig0000075b,sig0000075c,sig0000075d}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000603_CARRY4
       (.CI(sig0000072c),
        .CO({sig00000728,sig00000729,sig0000072a,sig0000072b}),
        .CYINIT(1'b0),
        .DI({sig00000655,sig00000654,sig00000653,sig00000652}),
        .O({sig0000074e,sig0000074d,sig0000074c,sig0000074b}),
        .S({sig0000075e,sig0000075f,sig00000760,sig00000761}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000607_CARRY4
       (.CI(sig00000730),
        .CO({sig0000072c,sig0000072d,sig0000072e,sig0000072f}),
        .CYINIT(1'b0),
        .DI({sig00000651,sig00000650,sig0000064f,sig0000064e}),
        .O({sig0000074a,sig00000749,sig00000748,sig00000747}),
        .S({sig00000762,sig00000763,sig00000764,sig00000765}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000060b_CARRY4
       (.CI(sig00000734),
        .CO({sig00000730,sig00000731,sig00000732,sig00000733}),
        .CYINIT(1'b0),
        .DI({sig0000064d,sig0000064c,sig0000064b,sig0000064a}),
        .O({sig00000746,sig00000745,sig00000744,sig00000743}),
        .S({sig00000766,sig00000767,sig00000768,sig00000769}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000060f_CARRY4
       (.CI(sig00000738),
        .CO({sig00000734,sig00000735,sig00000736,sig00000737}),
        .CYINIT(1'b0),
        .DI({sig00000649,sig00000648,sig00000647,sig00000646}),
        .O({sig00000742,sig00000741,sig00000740,sig0000073f}),
        .S({sig0000076a,sig0000076b,sig0000076c,sig0000076d}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000614_CARRY4
       (.CI(1'b0),
        .CO({sig00000738,sig00000739,sig0000073a,sig00000756}),
        .CYINIT(sig00000585),
        .DI({sig00000645,sig00000644,sig00000643,sig00000642}),
        .O({sig0000073e,sig0000073d,sig0000073c,sig0000073b}),
        .S({sig0000076e,sig0000076f,sig00000770,sig00000771}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000615
       (.I0(1'b0),
        .I1(1'b0),
        .I2(sig00000585),
        .O(sig00000757));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000616
       (.I0(1'b0),
        .I1(sig0000063e),
        .I2(sig00000585),
        .O(sig00000758));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000617
       (.I0(1'b0),
        .I1(sig0000063d),
        .I2(sig00000585),
        .O(sig00000759));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000618
       (.I0(1'b0),
        .I1(sig0000063c),
        .I2(sig00000585),
        .O(sig0000075a));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000619
       (.I0(sig00000658),
        .I1(sig0000063b),
        .I2(sig00000585),
        .O(sig0000075b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000061a
       (.I0(sig00000657),
        .I1(sig0000063a),
        .I2(sig00000585),
        .O(sig0000075c));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000061b
       (.I0(sig00000656),
        .I1(sig00000639),
        .I2(sig00000585),
        .O(sig0000075d));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000061c
       (.I0(sig00000655),
        .I1(sig00000638),
        .I2(sig00000585),
        .O(sig0000075e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000061d
       (.I0(sig00000654),
        .I1(sig00000637),
        .I2(sig00000585),
        .O(sig0000075f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000061e
       (.I0(sig00000653),
        .I1(sig00000636),
        .I2(sig00000585),
        .O(sig00000760));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000061f
       (.I0(sig00000652),
        .I1(sig00000635),
        .I2(sig00000585),
        .O(sig00000761));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000620
       (.I0(sig00000651),
        .I1(sig00000634),
        .I2(sig00000585),
        .O(sig00000762));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000621
       (.I0(sig00000650),
        .I1(sig00000633),
        .I2(sig00000585),
        .O(sig00000763));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000622
       (.I0(sig0000064f),
        .I1(sig00000632),
        .I2(sig00000585),
        .O(sig00000764));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000623
       (.I0(sig0000064e),
        .I1(sig00000631),
        .I2(sig00000585),
        .O(sig00000765));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000624
       (.I0(sig0000064d),
        .I1(sig00000630),
        .I2(sig00000585),
        .O(sig00000766));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000625
       (.I0(sig0000064c),
        .I1(sig0000062f),
        .I2(sig00000585),
        .O(sig00000767));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000626
       (.I0(sig0000064b),
        .I1(sig0000062e),
        .I2(sig00000585),
        .O(sig00000768));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000627
       (.I0(sig0000064a),
        .I1(sig0000062d),
        .I2(sig00000585),
        .O(sig00000769));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000628
       (.I0(sig00000649),
        .I1(sig0000062c),
        .I2(sig00000585),
        .O(sig0000076a));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000629
       (.I0(sig00000648),
        .I1(sig0000062b),
        .I2(sig00000585),
        .O(sig0000076b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000062a
       (.I0(sig00000647),
        .I1(sig0000062a),
        .I2(sig00000585),
        .O(sig0000076c));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000062b
       (.I0(sig00000646),
        .I1(sig00000629),
        .I2(sig00000585),
        .O(sig0000076d));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000062c
       (.I0(sig00000645),
        .I1(sig00000628),
        .I2(sig00000585),
        .O(sig0000076e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000062d
       (.I0(sig00000644),
        .I1(sig00000627),
        .I2(sig00000585),
        .O(sig0000076f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000062e
       (.I0(sig00000643),
        .I1(sig00000626),
        .I2(sig00000585),
        .O(sig00000770));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000062f
       (.I0(sig00000642),
        .I1(sig00000625),
        .I2(sig00000585),
        .O(sig00000771));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000064b_CARRY4
       (.CI(sig00000774),
        .CO({NLW_blk0000064b_CARRY4_CO_UNCONNECTED[3:2],sig00000772,sig00000773}),
        .CYINIT(1'b0),
        .DI({NLW_blk0000064b_CARRY4_DI_UNCONNECTED[3:2],1'b0,1'b0}),
        .O({NLW_blk0000064b_CARRY4_O_UNCONNECTED[3],sig000007a5,sig000007a4,sig000007a3}),
        .S({NLW_blk0000064b_CARRY4_S_UNCONNECTED[3],sig000007a7,sig000007a8,sig000007a9}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000064f_CARRY4
       (.CI(sig00000778),
        .CO({sig00000774,sig00000775,sig00000776,sig00000777}),
        .CYINIT(1'b0),
        .DI({1'b0,sig00000624,sig00000623,sig00000622}),
        .O({sig000007a2,sig000007a1,sig000007a0,sig0000079f}),
        .S({sig000007aa,sig000007ab,sig000007ac,sig000007ad}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000653_CARRY4
       (.CI(sig0000077c),
        .CO({sig00000778,sig00000779,sig0000077a,sig0000077b}),
        .CYINIT(1'b0),
        .DI({sig00000621,sig00000620,sig0000061f,sig0000061e}),
        .O({sig0000079e,sig0000079d,sig0000079c,sig0000079b}),
        .S({sig000007ae,sig000007af,sig000007b0,sig000007b1}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000657_CARRY4
       (.CI(sig00000780),
        .CO({sig0000077c,sig0000077d,sig0000077e,sig0000077f}),
        .CYINIT(1'b0),
        .DI({sig0000061d,sig0000061c,sig0000061b,sig0000061a}),
        .O({sig0000079a,sig00000799,sig00000798,sig00000797}),
        .S({sig000007b2,sig000007b3,sig000007b4,sig000007b5}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000065b_CARRY4
       (.CI(sig00000784),
        .CO({sig00000780,sig00000781,sig00000782,sig00000783}),
        .CYINIT(1'b0),
        .DI({sig00000619,sig00000618,sig00000617,sig00000616}),
        .O({sig00000796,sig00000795,sig00000794,sig00000793}),
        .S({sig000007b6,sig000007b7,sig000007b8,sig000007b9}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000065f_CARRY4
       (.CI(sig00000788),
        .CO({sig00000784,sig00000785,sig00000786,sig00000787}),
        .CYINIT(1'b0),
        .DI({sig00000615,sig00000614,sig00000613,sig00000612}),
        .O({sig00000792,sig00000791,sig00000790,sig0000078f}),
        .S({sig000007ba,sig000007bb,sig000007bc,sig000007bd}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000664_CARRY4
       (.CI(1'b0),
        .CO({sig00000788,sig00000789,sig0000078a,sig000007a6}),
        .CYINIT(sig00000565),
        .DI({sig00000611,sig00000610,sig0000060f,sig0000060e}),
        .O({sig0000078e,sig0000078d,sig0000078c,sig0000078b}),
        .S({sig000007be,sig000007bf,sig000007c0,sig000007c1}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000665
       (.I0(1'b0),
        .I1(1'b0),
        .I2(sig00000565),
        .O(sig000007a7));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000666
       (.I0(1'b0),
        .I1(sig0000060a),
        .I2(sig00000565),
        .O(sig000007a8));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000667
       (.I0(1'b0),
        .I1(sig00000609),
        .I2(sig00000565),
        .O(sig000007a9));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000668
       (.I0(1'b0),
        .I1(sig00000608),
        .I2(sig00000565),
        .O(sig000007aa));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000669
       (.I0(sig00000624),
        .I1(sig00000607),
        .I2(sig00000565),
        .O(sig000007ab));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000066a
       (.I0(sig00000623),
        .I1(sig00000606),
        .I2(sig00000565),
        .O(sig000007ac));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000066b
       (.I0(sig00000622),
        .I1(sig00000605),
        .I2(sig00000565),
        .O(sig000007ad));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000066c
       (.I0(sig00000621),
        .I1(sig00000604),
        .I2(sig00000565),
        .O(sig000007ae));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000066d
       (.I0(sig00000620),
        .I1(sig00000603),
        .I2(sig00000565),
        .O(sig000007af));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000066e
       (.I0(sig0000061f),
        .I1(sig00000602),
        .I2(sig00000565),
        .O(sig000007b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000066f
       (.I0(sig0000061e),
        .I1(sig00000601),
        .I2(sig00000565),
        .O(sig000007b1));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000670
       (.I0(sig0000061d),
        .I1(sig00000600),
        .I2(sig00000565),
        .O(sig000007b2));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000671
       (.I0(sig0000061c),
        .I1(sig000005ff),
        .I2(sig00000565),
        .O(sig000007b3));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000672
       (.I0(sig0000061b),
        .I1(sig000005fe),
        .I2(sig00000565),
        .O(sig000007b4));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000673
       (.I0(sig0000061a),
        .I1(sig000005fd),
        .I2(sig00000565),
        .O(sig000007b5));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000674
       (.I0(sig00000619),
        .I1(sig000005fc),
        .I2(sig00000565),
        .O(sig000007b6));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000675
       (.I0(sig00000618),
        .I1(sig000005fb),
        .I2(sig00000565),
        .O(sig000007b7));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000676
       (.I0(sig00000617),
        .I1(sig000005fa),
        .I2(sig00000565),
        .O(sig000007b8));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000677
       (.I0(sig00000616),
        .I1(sig000005f9),
        .I2(sig00000565),
        .O(sig000007b9));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000678
       (.I0(sig00000615),
        .I1(sig000005f8),
        .I2(sig00000565),
        .O(sig000007ba));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000679
       (.I0(sig00000614),
        .I1(sig000005f7),
        .I2(sig00000565),
        .O(sig000007bb));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000067a
       (.I0(sig00000613),
        .I1(sig000005f6),
        .I2(sig00000565),
        .O(sig000007bc));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000067b
       (.I0(sig00000612),
        .I1(sig000005f5),
        .I2(sig00000565),
        .O(sig000007bd));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000067c
       (.I0(sig00000611),
        .I1(sig000005f4),
        .I2(sig00000565),
        .O(sig000007be));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000067d
       (.I0(sig00000610),
        .I1(sig000005f3),
        .I2(sig00000565),
        .O(sig000007bf));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000067e
       (.I0(sig0000060f),
        .I1(sig000005f2),
        .I2(sig00000565),
        .O(sig000007c0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000067f
       (.I0(sig0000060e),
        .I1(sig000005f1),
        .I2(sig00000565),
        .O(sig000007c1));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000069b_CARRY4
       (.CI(sig000007c4),
        .CO({NLW_blk0000069b_CARRY4_CO_UNCONNECTED[3:2],sig000007c2,sig000007c3}),
        .CYINIT(1'b0),
        .DI({NLW_blk0000069b_CARRY4_DI_UNCONNECTED[3:2],1'b0,1'b0}),
        .O({NLW_blk0000069b_CARRY4_O_UNCONNECTED[3],sig000007f5,sig000007f4,sig000007f3}),
        .S({NLW_blk0000069b_CARRY4_S_UNCONNECTED[3],sig000007f7,sig000007f8,sig000007f9}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000069f_CARRY4
       (.CI(sig000007c8),
        .CO({sig000007c4,sig000007c5,sig000007c6,sig000007c7}),
        .CYINIT(1'b0),
        .DI({1'b0,sig000005f0,sig000005ef,sig000005ee}),
        .O({sig000007f2,sig000007f1,sig000007f0,sig000007ef}),
        .S({sig000007fa,sig000007fb,sig000007fc,sig000007fd}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000006a3_CARRY4
       (.CI(sig000007cc),
        .CO({sig000007c8,sig000007c9,sig000007ca,sig000007cb}),
        .CYINIT(1'b0),
        .DI({sig000005ed,sig000005ec,sig000005eb,sig000005ea}),
        .O({sig000007ee,sig000007ed,sig000007ec,sig000007eb}),
        .S({sig000007fe,sig000007ff,sig00000800,sig00000801}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000006a7_CARRY4
       (.CI(sig000007d0),
        .CO({sig000007cc,sig000007cd,sig000007ce,sig000007cf}),
        .CYINIT(1'b0),
        .DI({sig000005e9,sig000005e8,sig000005e7,sig000005e6}),
        .O({sig000007ea,sig000007e9,sig000007e8,sig000007e7}),
        .S({sig00000802,sig00000803,sig00000804,sig00000805}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000006ab_CARRY4
       (.CI(sig000007d4),
        .CO({sig000007d0,sig000007d1,sig000007d2,sig000007d3}),
        .CYINIT(1'b0),
        .DI({sig000005e5,sig000005e4,sig000005e3,sig000005e2}),
        .O({sig000007e6,sig000007e5,sig000007e4,sig000007e3}),
        .S({sig00000806,sig00000807,sig00000808,sig00000809}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000006af_CARRY4
       (.CI(sig000007d8),
        .CO({sig000007d4,sig000007d5,sig000007d6,sig000007d7}),
        .CYINIT(1'b0),
        .DI({sig000005e1,sig000005e0,sig000005df,sig000005de}),
        .O({sig000007e2,sig000007e1,sig000007e0,sig000007df}),
        .S({sig0000080a,sig0000080b,sig0000080c,sig0000080d}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000006b4_CARRY4
       (.CI(1'b0),
        .CO({sig000007d8,sig000007d9,sig000007da,sig000007f6}),
        .CYINIT(sig00000545),
        .DI({sig000005dd,sig000005dc,sig000005db,sig000005da}),
        .O({sig000007de,sig000007dd,sig000007dc,sig000007db}),
        .S({sig0000080e,sig0000080f,sig00000810,sig00000811}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000006b5
       (.I0(1'b0),
        .I1(1'b0),
        .I2(sig00000545),
        .O(sig000007f7));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000006b6
       (.I0(1'b0),
        .I1(sig000005d6),
        .I2(sig00000545),
        .O(sig000007f8));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000006b7
       (.I0(1'b0),
        .I1(sig000005d5),
        .I2(sig00000545),
        .O(sig000007f9));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000006b8
       (.I0(1'b0),
        .I1(sig000005d4),
        .I2(sig00000545),
        .O(sig000007fa));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000006b9
       (.I0(sig000005f0),
        .I1(sig000005d3),
        .I2(sig00000545),
        .O(sig000007fb));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000006ba
       (.I0(sig000005ef),
        .I1(sig000005d2),
        .I2(sig00000545),
        .O(sig000007fc));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000006bb
       (.I0(sig000005ee),
        .I1(sig000005d1),
        .I2(sig00000545),
        .O(sig000007fd));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000006bc
       (.I0(sig000005ed),
        .I1(sig000005d0),
        .I2(sig00000545),
        .O(sig000007fe));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000006bd
       (.I0(sig000005ec),
        .I1(sig000005cf),
        .I2(sig00000545),
        .O(sig000007ff));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000006be
       (.I0(sig000005eb),
        .I1(sig000005ce),
        .I2(sig00000545),
        .O(sig00000800));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000006bf
       (.I0(sig000005ea),
        .I1(sig000005cd),
        .I2(sig00000545),
        .O(sig00000801));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000006c0
       (.I0(sig000005e9),
        .I1(sig000005cc),
        .I2(sig00000545),
        .O(sig00000802));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000006c1
       (.I0(sig000005e8),
        .I1(sig000005cb),
        .I2(sig00000545),
        .O(sig00000803));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000006c2
       (.I0(sig000005e7),
        .I1(sig000005ca),
        .I2(sig00000545),
        .O(sig00000804));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000006c3
       (.I0(sig000005e6),
        .I1(sig000005c9),
        .I2(sig00000545),
        .O(sig00000805));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000006c4
       (.I0(sig000005e5),
        .I1(sig000005c8),
        .I2(sig00000545),
        .O(sig00000806));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000006c5
       (.I0(sig000005e4),
        .I1(sig000005c7),
        .I2(sig00000545),
        .O(sig00000807));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000006c6
       (.I0(sig000005e3),
        .I1(sig000005c6),
        .I2(sig00000545),
        .O(sig00000808));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000006c7
       (.I0(sig000005e2),
        .I1(sig000005c5),
        .I2(sig00000545),
        .O(sig00000809));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000006c8
       (.I0(sig000005e1),
        .I1(sig000005c4),
        .I2(sig00000545),
        .O(sig0000080a));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000006c9
       (.I0(sig000005e0),
        .I1(sig000005c3),
        .I2(sig00000545),
        .O(sig0000080b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000006ca
       (.I0(sig000005df),
        .I1(sig000005c2),
        .I2(sig00000545),
        .O(sig0000080c));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000006cb
       (.I0(sig000005de),
        .I1(sig000005c1),
        .I2(sig00000545),
        .O(sig0000080d));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000006cc
       (.I0(sig000005dd),
        .I1(sig000005c0),
        .I2(sig00000545),
        .O(sig0000080e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000006cd
       (.I0(sig000005dc),
        .I1(sig000005bf),
        .I2(sig00000545),
        .O(sig0000080f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000006ce
       (.I0(sig000005db),
        .I1(sig000005be),
        .I2(sig00000545),
        .O(sig00000810));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000006cf
       (.I0(sig000005da),
        .I1(sig000005bd),
        .I2(sig00000545),
        .O(sig00000811));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000006eb_CARRY4
       (.CI(sig00000814),
        .CO({NLW_blk000006eb_CARRY4_CO_UNCONNECTED[3:2],sig00000812,sig00000813}),
        .CYINIT(1'b0),
        .DI({NLW_blk000006eb_CARRY4_DI_UNCONNECTED[3:2],1'b0,1'b0}),
        .O({NLW_blk000006eb_CARRY4_O_UNCONNECTED[3],sig00000845,sig00000844,sig00000843}),
        .S({NLW_blk000006eb_CARRY4_S_UNCONNECTED[3],sig00000847,sig00000848,sig00000849}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000006ef_CARRY4
       (.CI(sig00000818),
        .CO({sig00000814,sig00000815,sig00000816,sig00000817}),
        .CYINIT(1'b0),
        .DI({1'b0,sig0000068c,sig0000068b,sig0000068a}),
        .O({sig00000842,sig00000841,sig00000840,sig0000083f}),
        .S({sig0000084a,sig0000084b,sig0000084c,sig0000084d}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000006f3_CARRY4
       (.CI(sig0000081c),
        .CO({sig00000818,sig00000819,sig0000081a,sig0000081b}),
        .CYINIT(1'b0),
        .DI({sig00000689,sig00000688,sig00000687,sig00000686}),
        .O({sig0000083e,sig0000083d,sig0000083c,sig0000083b}),
        .S({sig0000084e,sig0000084f,sig00000850,sig00000851}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000006f7_CARRY4
       (.CI(sig00000820),
        .CO({sig0000081c,sig0000081d,sig0000081e,sig0000081f}),
        .CYINIT(1'b0),
        .DI({sig00000685,sig00000684,sig00000683,sig00000682}),
        .O({sig0000083a,sig00000839,sig00000838,sig00000837}),
        .S({sig00000852,sig00000853,sig00000854,sig00000855}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000006fb_CARRY4
       (.CI(sig00000824),
        .CO({sig00000820,sig00000821,sig00000822,sig00000823}),
        .CYINIT(1'b0),
        .DI({sig00000681,sig00000680,sig0000067f,sig0000067e}),
        .O({sig00000836,sig00000835,sig00000834,sig00000833}),
        .S({sig00000856,sig00000857,sig00000858,sig00000859}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000006ff_CARRY4
       (.CI(sig00000828),
        .CO({sig00000824,sig00000825,sig00000826,sig00000827}),
        .CYINIT(1'b0),
        .DI({sig0000067d,sig0000067c,sig0000067b,sig0000067a}),
        .O({sig00000832,sig00000831,sig00000830,sig0000082f}),
        .S({sig0000085a,sig0000085b,sig0000085c,sig0000085d}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000704_CARRY4
       (.CI(1'b0),
        .CO({sig00000828,sig00000829,sig0000082a,sig00000846}),
        .CYINIT(sig000005a3),
        .DI({sig00000679,sig00000678,sig00000677,sig00000676}),
        .O({sig0000082e,sig0000082d,sig0000082c,sig0000082b}),
        .S({sig0000085e,sig0000085f,sig00000860,sig00000861}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000705
       (.I0(1'b0),
        .I1(1'b0),
        .I2(sig000005a3),
        .O(sig00000847));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000706
       (.I0(1'b0),
        .I1(sig00000672),
        .I2(sig000005a3),
        .O(sig00000848));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000707
       (.I0(1'b0),
        .I1(sig00000671),
        .I2(sig000005a3),
        .O(sig00000849));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000708
       (.I0(1'b0),
        .I1(sig00000670),
        .I2(sig000005a3),
        .O(sig0000084a));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000709
       (.I0(sig0000068c),
        .I1(sig0000066f),
        .I2(sig000005a3),
        .O(sig0000084b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000070a
       (.I0(sig0000068b),
        .I1(sig0000066e),
        .I2(sig000005a3),
        .O(sig0000084c));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000070b
       (.I0(sig0000068a),
        .I1(sig0000066d),
        .I2(sig000005a3),
        .O(sig0000084d));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000070c
       (.I0(sig00000689),
        .I1(sig0000066c),
        .I2(sig000005a3),
        .O(sig0000084e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000070d
       (.I0(sig00000688),
        .I1(sig0000066b),
        .I2(sig000005a3),
        .O(sig0000084f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000070e
       (.I0(sig00000687),
        .I1(sig0000066a),
        .I2(sig000005a3),
        .O(sig00000850));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000070f
       (.I0(sig00000686),
        .I1(sig00000669),
        .I2(sig000005a3),
        .O(sig00000851));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000710
       (.I0(sig00000685),
        .I1(sig00000668),
        .I2(sig000005a3),
        .O(sig00000852));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000711
       (.I0(sig00000684),
        .I1(sig00000667),
        .I2(sig000005a3),
        .O(sig00000853));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000712
       (.I0(sig00000683),
        .I1(sig00000666),
        .I2(sig000005a3),
        .O(sig00000854));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000713
       (.I0(sig00000682),
        .I1(sig00000665),
        .I2(sig000005a3),
        .O(sig00000855));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000714
       (.I0(sig00000681),
        .I1(sig00000664),
        .I2(sig000005a3),
        .O(sig00000856));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000715
       (.I0(sig00000680),
        .I1(sig00000663),
        .I2(sig000005a3),
        .O(sig00000857));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000716
       (.I0(sig0000067f),
        .I1(sig00000662),
        .I2(sig000005a3),
        .O(sig00000858));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000717
       (.I0(sig0000067e),
        .I1(sig00000661),
        .I2(sig000005a3),
        .O(sig00000859));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000718
       (.I0(sig0000067d),
        .I1(sig00000660),
        .I2(sig000005a3),
        .O(sig0000085a));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000719
       (.I0(sig0000067c),
        .I1(sig0000065f),
        .I2(sig000005a3),
        .O(sig0000085b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000071a
       (.I0(sig0000067b),
        .I1(sig0000065e),
        .I2(sig000005a3),
        .O(sig0000085c));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000071b
       (.I0(sig0000067a),
        .I1(sig0000065d),
        .I2(sig000005a3),
        .O(sig0000085d));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000071c
       (.I0(sig00000679),
        .I1(sig0000065c),
        .I2(sig000005a3),
        .O(sig0000085e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000071d
       (.I0(sig00000678),
        .I1(sig0000065b),
        .I2(sig000005a3),
        .O(sig0000085f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000071e
       (.I0(sig00000677),
        .I1(sig0000065a),
        .I2(sig000005a3),
        .O(sig00000860));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000071f
       (.I0(sig00000676),
        .I1(sig00000659),
        .I2(sig000005a3),
        .O(sig00000861));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000720
       (.C(clk),
        .CE(1'b1),
        .D(sig00000845),
        .Q(sig000005a2),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000721
       (.C(clk),
        .CE(1'b1),
        .D(sig00000844),
        .Q(sig000005a1),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000722
       (.C(clk),
        .CE(1'b1),
        .D(sig00000843),
        .Q(sig000005a0),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000723
       (.C(clk),
        .CE(1'b1),
        .D(sig00000842),
        .Q(sig0000059f),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000724
       (.C(clk),
        .CE(1'b1),
        .D(sig00000841),
        .Q(sig0000059e),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000725
       (.C(clk),
        .CE(1'b1),
        .D(sig00000840),
        .Q(sig0000059d),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000726
       (.C(clk),
        .CE(1'b1),
        .D(sig0000083f),
        .Q(sig0000059c),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000727
       (.C(clk),
        .CE(1'b1),
        .D(sig0000083e),
        .Q(sig0000059b),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000728
       (.C(clk),
        .CE(1'b1),
        .D(sig0000083d),
        .Q(sig0000059a),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000729
       (.C(clk),
        .CE(1'b1),
        .D(sig0000083c),
        .Q(sig00000599),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000072a
       (.C(clk),
        .CE(1'b1),
        .D(sig0000083b),
        .Q(sig00000598),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000072b
       (.C(clk),
        .CE(1'b1),
        .D(sig0000083a),
        .Q(sig00000597),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000072c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000839),
        .Q(sig00000596),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000072d
       (.C(clk),
        .CE(1'b1),
        .D(sig00000838),
        .Q(sig00000595),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000072e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000837),
        .Q(sig00000594),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000072f
       (.C(clk),
        .CE(1'b1),
        .D(sig00000836),
        .Q(sig00000593),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000730
       (.C(clk),
        .CE(1'b1),
        .D(sig00000835),
        .Q(sig00000592),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000731
       (.C(clk),
        .CE(1'b1),
        .D(sig00000834),
        .Q(sig00000591),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000732
       (.C(clk),
        .CE(1'b1),
        .D(sig00000833),
        .Q(sig00000590),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000733
       (.C(clk),
        .CE(1'b1),
        .D(sig00000832),
        .Q(sig0000058f),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000734
       (.C(clk),
        .CE(1'b1),
        .D(sig00000831),
        .Q(sig0000058e),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000735
       (.C(clk),
        .CE(1'b1),
        .D(sig00000830),
        .Q(sig0000058d),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000736
       (.C(clk),
        .CE(1'b1),
        .D(sig0000082f),
        .Q(sig0000058c),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000737
       (.C(clk),
        .CE(1'b1),
        .D(sig0000082e),
        .Q(sig0000058b),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000738
       (.C(clk),
        .CE(1'b1),
        .D(sig0000082d),
        .Q(sig0000058a),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000739
       (.C(clk),
        .CE(1'b1),
        .D(sig0000082c),
        .Q(sig00000589),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000073a
       (.C(clk),
        .CE(1'b1),
        .D(sig0000082b),
        .Q(sig00000588),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000073b
       (.C(clk),
        .CE(1'b1),
        .D(sig000007f5),
        .Q(sig00000544),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000073c
       (.C(clk),
        .CE(1'b1),
        .D(sig000007f4),
        .Q(sig00000543),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000073d
       (.C(clk),
        .CE(1'b1),
        .D(sig000007f3),
        .Q(sig00000542),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000073e
       (.C(clk),
        .CE(1'b1),
        .D(sig000007f2),
        .Q(sig00000541),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000073f
       (.C(clk),
        .CE(1'b1),
        .D(sig000007f1),
        .Q(sig00000540),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000740
       (.C(clk),
        .CE(1'b1),
        .D(sig000007f0),
        .Q(sig0000053f),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000741
       (.C(clk),
        .CE(1'b1),
        .D(sig000007ef),
        .Q(sig0000053e),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000742
       (.C(clk),
        .CE(1'b1),
        .D(sig000007ee),
        .Q(sig0000053d),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000743
       (.C(clk),
        .CE(1'b1),
        .D(sig000007ed),
        .Q(sig0000053c),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000744
       (.C(clk),
        .CE(1'b1),
        .D(sig000007ec),
        .Q(sig0000053b),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000745
       (.C(clk),
        .CE(1'b1),
        .D(sig000007eb),
        .Q(sig0000053a),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000746
       (.C(clk),
        .CE(1'b1),
        .D(sig000007ea),
        .Q(sig00000539),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000747
       (.C(clk),
        .CE(1'b1),
        .D(sig000007e9),
        .Q(sig00000538),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000748
       (.C(clk),
        .CE(1'b1),
        .D(sig000007e8),
        .Q(sig00000537),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000749
       (.C(clk),
        .CE(1'b1),
        .D(sig000007e7),
        .Q(sig00000536),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000074a
       (.C(clk),
        .CE(1'b1),
        .D(sig000007e6),
        .Q(sig00000535),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000074b
       (.C(clk),
        .CE(1'b1),
        .D(sig000007e5),
        .Q(sig00000534),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000074c
       (.C(clk),
        .CE(1'b1),
        .D(sig000007e4),
        .Q(sig00000533),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000074d
       (.C(clk),
        .CE(1'b1),
        .D(sig000007e3),
        .Q(sig00000532),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000074e
       (.C(clk),
        .CE(1'b1),
        .D(sig000007e2),
        .Q(sig00000531),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000074f
       (.C(clk),
        .CE(1'b1),
        .D(sig000007e1),
        .Q(sig00000530),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000750
       (.C(clk),
        .CE(1'b1),
        .D(sig000007e0),
        .Q(sig0000052f),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000751
       (.C(clk),
        .CE(1'b1),
        .D(sig000007df),
        .Q(sig0000052e),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000752
       (.C(clk),
        .CE(1'b1),
        .D(sig000007de),
        .Q(sig0000052d),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000753
       (.C(clk),
        .CE(1'b1),
        .D(sig000007dd),
        .Q(sig0000052c),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000754
       (.C(clk),
        .CE(1'b1),
        .D(sig000007dc),
        .Q(sig0000052b),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000755
       (.C(clk),
        .CE(1'b1),
        .D(sig000007db),
        .Q(sig0000052a),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000756
       (.C(clk),
        .CE(1'b1),
        .D(sig000007a5),
        .Q(sig00000564),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000757
       (.C(clk),
        .CE(1'b1),
        .D(sig000007a4),
        .Q(sig00000563),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000758
       (.C(clk),
        .CE(1'b1),
        .D(sig000007a3),
        .Q(sig00000562),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000759
       (.C(clk),
        .CE(1'b1),
        .D(sig000007a2),
        .Q(sig00000561),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000075a
       (.C(clk),
        .CE(1'b1),
        .D(sig000007a1),
        .Q(sig00000560),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000075b
       (.C(clk),
        .CE(1'b1),
        .D(sig000007a0),
        .Q(sig0000055f),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000075c
       (.C(clk),
        .CE(1'b1),
        .D(sig0000079f),
        .Q(sig0000055e),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000075d
       (.C(clk),
        .CE(1'b1),
        .D(sig0000079e),
        .Q(sig0000055d),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000075e
       (.C(clk),
        .CE(1'b1),
        .D(sig0000079d),
        .Q(sig0000055c),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000075f
       (.C(clk),
        .CE(1'b1),
        .D(sig0000079c),
        .Q(sig0000055b),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000760
       (.C(clk),
        .CE(1'b1),
        .D(sig0000079b),
        .Q(sig0000055a),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000761
       (.C(clk),
        .CE(1'b1),
        .D(sig0000079a),
        .Q(sig00000559),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000762
       (.C(clk),
        .CE(1'b1),
        .D(sig00000799),
        .Q(sig00000558),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000763
       (.C(clk),
        .CE(1'b1),
        .D(sig00000798),
        .Q(sig00000557),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000764
       (.C(clk),
        .CE(1'b1),
        .D(sig00000797),
        .Q(sig00000556),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000765
       (.C(clk),
        .CE(1'b1),
        .D(sig00000796),
        .Q(sig00000555),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000766
       (.C(clk),
        .CE(1'b1),
        .D(sig00000795),
        .Q(sig00000554),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000767
       (.C(clk),
        .CE(1'b1),
        .D(sig00000794),
        .Q(sig00000553),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000768
       (.C(clk),
        .CE(1'b1),
        .D(sig00000793),
        .Q(sig00000552),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000769
       (.C(clk),
        .CE(1'b1),
        .D(sig00000792),
        .Q(sig00000551),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000076a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000791),
        .Q(sig00000550),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000076b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000790),
        .Q(sig0000054f),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000076c
       (.C(clk),
        .CE(1'b1),
        .D(sig0000078f),
        .Q(sig0000054e),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000076d
       (.C(clk),
        .CE(1'b1),
        .D(sig0000078e),
        .Q(sig0000054d),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000076e
       (.C(clk),
        .CE(1'b1),
        .D(sig0000078d),
        .Q(sig0000054c),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000076f
       (.C(clk),
        .CE(1'b1),
        .D(sig0000078c),
        .Q(sig0000054b),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000770
       (.C(clk),
        .CE(1'b1),
        .D(sig0000078b),
        .Q(sig0000054a),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000771
       (.C(clk),
        .CE(1'b1),
        .D(sig00000755),
        .Q(sig00000584),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000772
       (.C(clk),
        .CE(1'b1),
        .D(sig00000754),
        .Q(sig00000583),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000773
       (.C(clk),
        .CE(1'b1),
        .D(sig00000753),
        .Q(sig00000582),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000774
       (.C(clk),
        .CE(1'b1),
        .D(sig00000752),
        .Q(sig00000581),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000775
       (.C(clk),
        .CE(1'b1),
        .D(sig00000751),
        .Q(sig00000580),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000776
       (.C(clk),
        .CE(1'b1),
        .D(sig00000750),
        .Q(sig0000057f),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000777
       (.C(clk),
        .CE(1'b1),
        .D(sig0000074f),
        .Q(sig0000057e),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000778
       (.C(clk),
        .CE(1'b1),
        .D(sig0000074e),
        .Q(sig0000057d),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000779
       (.C(clk),
        .CE(1'b1),
        .D(sig0000074d),
        .Q(sig0000057c),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000077a
       (.C(clk),
        .CE(1'b1),
        .D(sig0000074c),
        .Q(sig0000057b),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000077b
       (.C(clk),
        .CE(1'b1),
        .D(sig0000074b),
        .Q(sig0000057a),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000077c
       (.C(clk),
        .CE(1'b1),
        .D(sig0000074a),
        .Q(sig00000579),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000077d
       (.C(clk),
        .CE(1'b1),
        .D(sig00000749),
        .Q(sig00000578),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000077e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000748),
        .Q(sig00000577),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000077f
       (.C(clk),
        .CE(1'b1),
        .D(sig00000747),
        .Q(sig00000576),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000780
       (.C(clk),
        .CE(1'b1),
        .D(sig00000746),
        .Q(sig00000575),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000781
       (.C(clk),
        .CE(1'b1),
        .D(sig00000745),
        .Q(sig00000574),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000782
       (.C(clk),
        .CE(1'b1),
        .D(sig00000744),
        .Q(sig00000573),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000783
       (.C(clk),
        .CE(1'b1),
        .D(sig00000743),
        .Q(sig00000572),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000784
       (.C(clk),
        .CE(1'b1),
        .D(sig00000742),
        .Q(sig00000571),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000785
       (.C(clk),
        .CE(1'b1),
        .D(sig00000741),
        .Q(sig00000570),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000786
       (.C(clk),
        .CE(1'b1),
        .D(sig00000740),
        .Q(sig0000056f),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000787
       (.C(clk),
        .CE(1'b1),
        .D(sig0000073f),
        .Q(sig0000056e),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000788
       (.C(clk),
        .CE(1'b1),
        .D(sig0000073e),
        .Q(sig0000056d),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000789
       (.C(clk),
        .CE(1'b1),
        .D(sig0000073d),
        .Q(sig0000056c),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000078a
       (.C(clk),
        .CE(1'b1),
        .D(sig0000073c),
        .Q(sig0000056b),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000078b
       (.C(clk),
        .CE(1'b1),
        .D(sig0000073b),
        .Q(sig0000056a),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk0000078c
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(1'b0),
        .Q(sig0000087a));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk0000078d
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig000005bc),
        .Q(sig00000879));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk0000078e
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig000005bb),
        .Q(sig00000878));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk0000078f
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig000005ba),
        .Q(sig00000877));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk00000790
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig000005b9),
        .Q(sig00000876));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk00000791
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig000005b8),
        .Q(sig00000875));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk00000792
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig000005b7),
        .Q(sig00000874));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk00000793
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig000005b6),
        .Q(sig00000873));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk00000794
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig000005b5),
        .Q(sig00000872));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk00000795
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig000005b4),
        .Q(sig00000871));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk00000796
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig000005b3),
        .Q(sig00000870));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk00000797
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig000005b2),
        .Q(sig0000086f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk00000798
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig000005b1),
        .Q(sig0000086e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk00000799
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig000005b0),
        .Q(sig0000086d));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk0000079a
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig000005af),
        .Q(sig0000086c));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk0000079b
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig000005ae),
        .Q(sig0000086b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk0000079c
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig000005ad),
        .Q(sig0000086a));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk0000079d
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig000005ac),
        .Q(sig00000869));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk0000079e
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig000005ab),
        .Q(sig00000868));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk0000079f
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig000005aa),
        .Q(sig00000867));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000007a0
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig000005a9),
        .Q(sig00000866));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000007a1
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig000005a8),
        .Q(sig00000865));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000007a2
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig000005a7),
        .Q(sig00000864));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000007a3
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig000005a6),
        .Q(sig00000863));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000007a4
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig000005a5),
        .Q(sig00000862));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007a5
       (.C(clk),
        .CE(1'b1),
        .D(sig0000087a),
        .Q(sig00000526),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007a6
       (.C(clk),
        .CE(1'b1),
        .D(sig00000879),
        .Q(sig00000525),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007a7
       (.C(clk),
        .CE(1'b1),
        .D(sig00000878),
        .Q(sig00000524),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007a8
       (.C(clk),
        .CE(1'b1),
        .D(sig00000877),
        .Q(sig00000523),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007a9
       (.C(clk),
        .CE(1'b1),
        .D(sig00000876),
        .Q(sig00000522),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007aa
       (.C(clk),
        .CE(1'b1),
        .D(sig00000875),
        .Q(sig00000521),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007ab
       (.C(clk),
        .CE(1'b1),
        .D(sig00000874),
        .Q(sig00000520),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007ac
       (.C(clk),
        .CE(1'b1),
        .D(sig00000873),
        .Q(sig0000051f),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007ad
       (.C(clk),
        .CE(1'b1),
        .D(sig00000872),
        .Q(sig0000051e),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007ae
       (.C(clk),
        .CE(1'b1),
        .D(sig00000871),
        .Q(sig0000051d),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007af
       (.C(clk),
        .CE(1'b1),
        .D(sig00000870),
        .Q(sig0000051c),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007b0
       (.C(clk),
        .CE(1'b1),
        .D(sig0000086f),
        .Q(sig0000051b),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007b1
       (.C(clk),
        .CE(1'b1),
        .D(sig0000086e),
        .Q(sig0000051a),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007b2
       (.C(clk),
        .CE(1'b1),
        .D(sig0000086d),
        .Q(sig00000519),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007b3
       (.C(clk),
        .CE(1'b1),
        .D(sig0000086c),
        .Q(sig00000518),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007b4
       (.C(clk),
        .CE(1'b1),
        .D(sig0000086b),
        .Q(sig00000517),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007b5
       (.C(clk),
        .CE(1'b1),
        .D(sig0000086a),
        .Q(sig00000516),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007b6
       (.C(clk),
        .CE(1'b1),
        .D(sig00000869),
        .Q(sig00000515),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007b7
       (.C(clk),
        .CE(1'b1),
        .D(sig00000868),
        .Q(sig00000514),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007b8
       (.C(clk),
        .CE(1'b1),
        .D(sig00000867),
        .Q(sig00000513),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007b9
       (.C(clk),
        .CE(1'b1),
        .D(sig00000866),
        .Q(sig00000512),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007ba
       (.C(clk),
        .CE(1'b1),
        .D(sig00000865),
        .Q(sig00000511),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007bb
       (.C(clk),
        .CE(1'b1),
        .D(sig00000864),
        .Q(sig00000510),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007bc
       (.C(clk),
        .CE(1'b1),
        .D(sig00000863),
        .Q(sig0000050f),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007bd
       (.C(clk),
        .CE(1'b1),
        .D(sig00000862),
        .Q(sig0000050e),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007be
       (.C(clk),
        .CE(1'b1),
        .D(sig000000b4),
        .Q(sig000004ea),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007bf
       (.C(clk),
        .CE(1'b1),
        .D(sig000000b5),
        .Q(sig000004e9),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007c0
       (.C(clk),
        .CE(1'b1),
        .D(sig000000b6),
        .Q(sig000004e8),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007c1
       (.C(clk),
        .CE(1'b1),
        .D(sig000000b7),
        .Q(sig000004e7),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007c2
       (.C(clk),
        .CE(1'b1),
        .D(sig000000b8),
        .Q(sig000004e6),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007c3
       (.C(clk),
        .CE(1'b1),
        .D(sig000000b9),
        .Q(sig000004e5),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007c4
       (.C(clk),
        .CE(1'b1),
        .D(sig000000ba),
        .Q(sig000004e4),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007c5
       (.C(clk),
        .CE(1'b1),
        .D(sig000000bb),
        .Q(sig000004e3),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007c6
       (.C(clk),
        .CE(1'b1),
        .D(sig000000bc),
        .Q(sig000004e2),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007c7
       (.C(clk),
        .CE(1'b1),
        .D(sig000000bd),
        .Q(sig000004e1),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007c8
       (.C(clk),
        .CE(1'b1),
        .D(sig000000be),
        .Q(sig000004e0),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007c9
       (.C(clk),
        .CE(1'b1),
        .D(sig000000bf),
        .Q(sig000004df),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007ca
       (.C(clk),
        .CE(1'b1),
        .D(sig000000c0),
        .Q(sig000004de),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007cb
       (.C(clk),
        .CE(1'b1),
        .D(sig000000c1),
        .Q(sig000004dd),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007cc
       (.C(clk),
        .CE(1'b1),
        .D(sig000000c2),
        .Q(sig000004dc),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007cd
       (.C(clk),
        .CE(1'b1),
        .D(sig000000c3),
        .Q(sig000004db),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007ce
       (.C(clk),
        .CE(1'b1),
        .D(sig000000c4),
        .Q(sig000004da),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007cf
       (.C(clk),
        .CE(1'b1),
        .D(sig000000c5),
        .Q(sig000004d9),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007d0
       (.C(clk),
        .CE(1'b1),
        .D(sig000000c6),
        .Q(sig000004d8),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007d1
       (.C(clk),
        .CE(1'b1),
        .D(sig000000c7),
        .Q(sig000004d7),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007d2
       (.C(clk),
        .CE(1'b1),
        .D(sig000000c8),
        .Q(sig000004d6),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007d3
       (.C(clk),
        .CE(1'b1),
        .D(sig000000c9),
        .Q(sig000004d5),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007d4
       (.C(clk),
        .CE(1'b1),
        .D(sig000000ca),
        .Q(sig000004d4),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007d5
       (.C(clk),
        .CE(1'b1),
        .D(sig000000cb),
        .Q(sig000004d3),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007d6
       (.C(clk),
        .CE(1'b1),
        .D(sig000000cc),
        .Q(sig000004d2),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007d7
       (.C(clk),
        .CE(1'b1),
        .D(sig000000cd),
        .Q(sig000004d1),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007d8
       (.C(clk),
        .CE(1'b1),
        .D(sig000000ce),
        .Q(sig000004d0),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007d9
       (.C(clk),
        .CE(1'b1),
        .D(sig000000cf),
        .Q(sig000004cf),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007da
       (.C(clk),
        .CE(1'b1),
        .D(sig000000d0),
        .Q(sig000004ce),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007db
       (.C(clk),
        .CE(1'b1),
        .D(sig000000ed),
        .Q(sig000004cd),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007dc
       (.C(clk),
        .CE(1'b1),
        .D(sig00000165),
        .Q(sig0000050b),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007dd
       (.C(clk),
        .CE(1'b1),
        .D(sig00000164),
        .Q(sig0000050a),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007de
       (.C(clk),
        .CE(1'b1),
        .D(sig00000163),
        .Q(sig00000509),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007df
       (.C(clk),
        .CE(1'b1),
        .D(sig00000162),
        .Q(sig00000508),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007e0
       (.C(clk),
        .CE(1'b1),
        .D(sig00000161),
        .Q(sig00000507),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007e1
       (.C(clk),
        .CE(1'b1),
        .D(sig00000160),
        .Q(sig00000506),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007e2
       (.C(clk),
        .CE(1'b1),
        .D(sig0000015f),
        .Q(sig00000505),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007e3
       (.C(clk),
        .CE(1'b1),
        .D(sig0000015e),
        .Q(sig00000504),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007e4
       (.C(clk),
        .CE(1'b1),
        .D(sig0000015d),
        .Q(sig00000503),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007e5
       (.C(clk),
        .CE(1'b1),
        .D(sig0000015c),
        .Q(sig00000502),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007e6
       (.C(clk),
        .CE(1'b1),
        .D(sig0000015b),
        .Q(sig00000501),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007e7
       (.C(clk),
        .CE(1'b1),
        .D(sig0000015a),
        .Q(sig00000500),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007e8
       (.C(clk),
        .CE(1'b1),
        .D(sig00000159),
        .Q(sig000004ff),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007e9
       (.C(clk),
        .CE(1'b1),
        .D(sig00000158),
        .Q(sig000004fe),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007ea
       (.C(clk),
        .CE(1'b1),
        .D(sig00000157),
        .Q(sig000004fd),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007eb
       (.C(clk),
        .CE(1'b1),
        .D(sig00000156),
        .Q(sig000004fc),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007ec
       (.C(clk),
        .CE(1'b1),
        .D(sig00000155),
        .Q(sig000004fb),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007ed
       (.C(clk),
        .CE(1'b1),
        .D(sig00000154),
        .Q(sig000004fa),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007ee
       (.C(clk),
        .CE(1'b1),
        .D(sig00000153),
        .Q(sig000004f9),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007ef
       (.C(clk),
        .CE(1'b1),
        .D(sig00000152),
        .Q(sig000004f8),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007f0
       (.C(clk),
        .CE(1'b1),
        .D(sig00000151),
        .Q(sig000004f7),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007f1
       (.C(clk),
        .CE(1'b1),
        .D(sig00000150),
        .Q(sig000004f6),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007f2
       (.C(clk),
        .CE(1'b1),
        .D(sig0000014f),
        .Q(sig000004f5),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007f3
       (.C(clk),
        .CE(1'b1),
        .D(sig0000014e),
        .Q(sig000004f4),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007f4
       (.C(clk),
        .CE(1'b1),
        .D(sig0000014d),
        .Q(sig000004f3),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007f5
       (.C(clk),
        .CE(1'b1),
        .D(sig0000014c),
        .Q(sig000004f2),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007f6
       (.C(clk),
        .CE(1'b1),
        .D(sig0000014b),
        .Q(sig000004f1),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007f7
       (.C(clk),
        .CE(1'b1),
        .D(sig0000014a),
        .Q(sig000004f0),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007f8
       (.C(clk),
        .CE(1'b1),
        .D(sig00000149),
        .Q(sig000004ef),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000007f9
       (.C(clk),
        .CE(1'b1),
        .D(sig0000012c),
        .Q(sig000004ee),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000081f_CARRY4
       (.CI(sig0000087e),
        .CO({NLW_blk0000081f_CARRY4_CO_UNCONNECTED[3],sig0000087b,sig0000087c,sig0000087d}),
        .CYINIT(1'b0),
        .DI({NLW_blk0000081f_CARRY4_DI_UNCONNECTED[3],sig0000050b,sig0000050b,sig0000050b}),
        .O({sig000008c0,sig000008bf,sig000008be,sig000008bd}),
        .S({sig000008c2,sig000008c3,sig000008c4,sig000008c5}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000823_CARRY4
       (.CI(sig00000882),
        .CO({sig0000087e,sig0000087f,sig00000880,sig00000881}),
        .CYINIT(1'b0),
        .DI({sig0000050b,sig0000050b,sig0000050b,sig0000050b}),
        .O({sig000008bc,sig000008bb,sig000008ba,sig000008b9}),
        .S({sig000008c6,sig000008c7,sig000008c8,sig000008c9}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000827_CARRY4
       (.CI(sig00000886),
        .CO({sig00000882,sig00000883,sig00000884,sig00000885}),
        .CYINIT(1'b0),
        .DI({sig0000050b,sig0000050b,sig0000050b,sig0000050b}),
        .O({sig000008b8,sig000008b7,sig000008b6,sig000008b5}),
        .S({sig000008ca,sig000008cb,sig000008cc,sig000008cd}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000082b_CARRY4
       (.CI(sig0000088a),
        .CO({sig00000886,sig00000887,sig00000888,sig00000889}),
        .CYINIT(1'b0),
        .DI({sig0000050b,sig0000050a,sig00000509,sig00000508}),
        .O({sig000008b4,sig000008b3,sig000008b2,sig000008b1}),
        .S({sig000008ce,sig000008cf,sig000008d0,sig000008d1}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000082f_CARRY4
       (.CI(sig0000088e),
        .CO({sig0000088a,sig0000088b,sig0000088c,sig0000088d}),
        .CYINIT(1'b0),
        .DI({sig00000507,sig00000506,sig00000505,sig00000504}),
        .O({sig000008b0,sig000008af,sig000008ae,sig000008ad}),
        .S({sig000008d2,sig000008d3,sig000008d4,sig000008d5}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000833_CARRY4
       (.CI(sig00000892),
        .CO({sig0000088e,sig0000088f,sig00000890,sig00000891}),
        .CYINIT(1'b0),
        .DI({sig00000503,sig00000502,sig00000501,sig00000500}),
        .O({sig000008ac,sig000008ab,sig000008aa,sig000008a9}),
        .S({sig000008d6,sig000008d7,sig000008d8,sig000008d9}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000837_CARRY4
       (.CI(sig00000896),
        .CO({sig00000892,sig00000893,sig00000894,sig00000895}),
        .CYINIT(1'b0),
        .DI({sig000004ff,sig000004fe,sig000004fd,sig000004fc}),
        .O({sig000008a8,sig000008a7,sig000008a6,sig000008a5}),
        .S({sig000008da,sig000008db,sig000008dc,sig000008dd}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000083b_CARRY4
       (.CI(sig0000089a),
        .CO({sig00000896,sig00000897,sig00000898,sig00000899}),
        .CYINIT(1'b0),
        .DI({sig000004fb,sig000004fa,sig000004f9,sig000004f8}),
        .O({sig000008a4,sig000008a3,sig000008a2,sig000008a1}),
        .S({sig000008de,sig000008df,sig000008e0,sig000008e1}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000840_CARRY4
       (.CI(1'b0),
        .CO({sig0000089a,sig0000089b,sig0000089c,sig000008c1}),
        .CYINIT(sig000004c5),
        .DI({sig000004f7,sig000004f6,sig000004f5,sig000004f4}),
        .O({sig000008a0,sig0000089f,sig0000089e,sig0000089d}),
        .S({sig000008e2,sig000008e3,sig000008e4,sig000008e5}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000841
       (.I0(sig0000050b),
        .I1(sig000004ea),
        .I2(sig000004c5),
        .O(sig000008c2));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000842
       (.I0(sig0000050b),
        .I1(sig000004e9),
        .I2(sig000004c5),
        .O(sig000008c3));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000843
       (.I0(sig0000050b),
        .I1(sig000004e8),
        .I2(sig000004c5),
        .O(sig000008c4));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000844
       (.I0(sig0000050b),
        .I1(sig000004e7),
        .I2(sig000004c5),
        .O(sig000008c5));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000845
       (.I0(sig0000050b),
        .I1(sig000004e6),
        .I2(sig000004c5),
        .O(sig000008c6));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000846
       (.I0(sig0000050b),
        .I1(sig000004e5),
        .I2(sig000004c5),
        .O(sig000008c7));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000847
       (.I0(sig0000050b),
        .I1(sig000004e4),
        .I2(sig000004c5),
        .O(sig000008c8));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000848
       (.I0(sig0000050b),
        .I1(sig000004e3),
        .I2(sig000004c5),
        .O(sig000008c9));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000849
       (.I0(sig0000050b),
        .I1(sig000004e2),
        .I2(sig000004c5),
        .O(sig000008ca));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000084a
       (.I0(sig0000050b),
        .I1(sig000004e1),
        .I2(sig000004c5),
        .O(sig000008cb));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000084b
       (.I0(sig0000050b),
        .I1(sig000004e0),
        .I2(sig000004c5),
        .O(sig000008cc));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000084c
       (.I0(sig0000050b),
        .I1(sig000004df),
        .I2(sig000004c5),
        .O(sig000008cd));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000084d
       (.I0(sig0000050b),
        .I1(sig000004de),
        .I2(sig000004c5),
        .O(sig000008ce));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000084e
       (.I0(sig0000050a),
        .I1(sig000004dd),
        .I2(sig000004c5),
        .O(sig000008cf));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000084f
       (.I0(sig00000509),
        .I1(sig000004dc),
        .I2(sig000004c5),
        .O(sig000008d0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000850
       (.I0(sig00000508),
        .I1(sig000004db),
        .I2(sig000004c5),
        .O(sig000008d1));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000851
       (.I0(sig00000507),
        .I1(sig000004da),
        .I2(sig000004c5),
        .O(sig000008d2));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000852
       (.I0(sig00000506),
        .I1(sig000004d9),
        .I2(sig000004c5),
        .O(sig000008d3));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000853
       (.I0(sig00000505),
        .I1(sig000004d8),
        .I2(sig000004c5),
        .O(sig000008d4));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000854
       (.I0(sig00000504),
        .I1(sig000004d7),
        .I2(sig000004c5),
        .O(sig000008d5));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000855
       (.I0(sig00000503),
        .I1(sig000004d6),
        .I2(sig000004c5),
        .O(sig000008d6));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000856
       (.I0(sig00000502),
        .I1(sig000004d5),
        .I2(sig000004c5),
        .O(sig000008d7));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000857
       (.I0(sig00000501),
        .I1(sig000004d4),
        .I2(sig000004c5),
        .O(sig000008d8));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000858
       (.I0(sig00000500),
        .I1(sig000004d3),
        .I2(sig000004c5),
        .O(sig000008d9));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000859
       (.I0(sig000004ff),
        .I1(sig000004d2),
        .I2(sig000004c5),
        .O(sig000008da));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000085a
       (.I0(sig000004fe),
        .I1(sig000004d1),
        .I2(sig000004c5),
        .O(sig000008db));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000085b
       (.I0(sig000004fd),
        .I1(sig000004d0),
        .I2(sig000004c5),
        .O(sig000008dc));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000085c
       (.I0(sig000004fc),
        .I1(sig000004cf),
        .I2(sig000004c5),
        .O(sig000008dd));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000085d
       (.I0(sig000004fb),
        .I1(sig000004ce),
        .I2(sig000004c5),
        .O(sig000008de));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000085e
       (.I0(sig000004fa),
        .I1(sig000004cd),
        .I2(sig000004c5),
        .O(sig000008df));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk0000085f
       (.I0(sig000004f9),
        .I1(sig000004cc),
        .I2(sig000004c5),
        .O(sig000008e0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000860
       (.I0(sig000004f8),
        .I1(sig000004cb),
        .I2(sig000004c5),
        .O(sig000008e1));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000861
       (.I0(sig000004f7),
        .I1(sig000004ca),
        .I2(sig000004c5),
        .O(sig000008e2));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000862
       (.I0(sig000004f6),
        .I1(sig000004c9),
        .I2(sig000004c5),
        .O(sig000008e3));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000863
       (.I0(sig000004f5),
        .I1(sig000004c8),
        .I2(sig000004c5),
        .O(sig000008e4));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk00000864
       (.I0(sig000004f4),
        .I1(sig000004c7),
        .I2(sig000004c5),
        .O(sig000008e5));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000865
       (.C(clk),
        .CE(1'b1),
        .D(sig000008c0),
        .Q(sig000004c4),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000866
       (.C(clk),
        .CE(1'b1),
        .D(sig000008bf),
        .Q(sig000004c3),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000867
       (.C(clk),
        .CE(1'b1),
        .D(sig000008be),
        .Q(sig000004c2),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000868
       (.C(clk),
        .CE(1'b1),
        .D(sig000008bd),
        .Q(sig000004c1),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000869
       (.C(clk),
        .CE(1'b1),
        .D(sig000008bc),
        .Q(sig000004c0),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000086a
       (.C(clk),
        .CE(1'b1),
        .D(sig000008bb),
        .Q(sig000004bf),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000086b
       (.C(clk),
        .CE(1'b1),
        .D(sig000008ba),
        .Q(sig000004be),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000086c
       (.C(clk),
        .CE(1'b1),
        .D(sig000008b9),
        .Q(sig000004bd),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000086d
       (.C(clk),
        .CE(1'b1),
        .D(sig000008b8),
        .Q(sig000004bc),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000086e
       (.C(clk),
        .CE(1'b1),
        .D(sig000008b7),
        .Q(sig000004bb),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000086f
       (.C(clk),
        .CE(1'b1),
        .D(sig000008b6),
        .Q(sig000004ba),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000870
       (.C(clk),
        .CE(1'b1),
        .D(sig000008b5),
        .Q(sig000004b9),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000871
       (.C(clk),
        .CE(1'b1),
        .D(sig000008b4),
        .Q(sig000004b8),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000872
       (.C(clk),
        .CE(1'b1),
        .D(sig000008b3),
        .Q(sig000004b7),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000873
       (.C(clk),
        .CE(1'b1),
        .D(sig000008b2),
        .Q(sig000004b6),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000874
       (.C(clk),
        .CE(1'b1),
        .D(sig000008b1),
        .Q(sig000004b5),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000875
       (.C(clk),
        .CE(1'b1),
        .D(sig000008b0),
        .Q(sig000004b4),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000876
       (.C(clk),
        .CE(1'b1),
        .D(sig000008af),
        .Q(sig000004b3),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000877
       (.C(clk),
        .CE(1'b1),
        .D(sig000008ae),
        .Q(sig000004b2),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000878
       (.C(clk),
        .CE(1'b1),
        .D(sig000008ad),
        .Q(sig000004b1),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000879
       (.C(clk),
        .CE(1'b1),
        .D(sig000008ac),
        .Q(sig000004b0),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000087a
       (.C(clk),
        .CE(1'b1),
        .D(sig000008ab),
        .Q(sig000004af),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000087b
       (.C(clk),
        .CE(1'b1),
        .D(sig000008aa),
        .Q(sig000004ae),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000087c
       (.C(clk),
        .CE(1'b1),
        .D(sig000008a9),
        .Q(sig000004ad),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000087d
       (.C(clk),
        .CE(1'b1),
        .D(sig000008a8),
        .Q(sig000004ac),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000087e
       (.C(clk),
        .CE(1'b1),
        .D(sig000008a7),
        .Q(sig000004ab),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000087f
       (.C(clk),
        .CE(1'b1),
        .D(sig000008a6),
        .Q(sig000004aa),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000880
       (.C(clk),
        .CE(1'b1),
        .D(sig000008a5),
        .Q(sig000004a9),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000881
       (.C(clk),
        .CE(1'b1),
        .D(sig000008a4),
        .Q(sig000004a8),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000882
       (.C(clk),
        .CE(1'b1),
        .D(sig000008a3),
        .Q(sig000004a7),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000883
       (.C(clk),
        .CE(1'b1),
        .D(sig000008a2),
        .Q(sig000004a6),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000884
       (.C(clk),
        .CE(1'b1),
        .D(sig000008a1),
        .Q(sig000004a5),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000885
       (.C(clk),
        .CE(1'b1),
        .D(sig000008a0),
        .Q(sig000004a4),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000886
       (.C(clk),
        .CE(1'b1),
        .D(sig0000089f),
        .Q(sig000004a3),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000887
       (.C(clk),
        .CE(1'b1),
        .D(sig0000089e),
        .Q(sig000004a2),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000888
       (.C(clk),
        .CE(1'b1),
        .D(sig0000089d),
        .Q(sig000004a1),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000889
       (.C(clk),
        .CE(1'b1),
        .D(sig00000900),
        .Q(sig00000029),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000088a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000901),
        .Q(sig00000028),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000088b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000902),
        .Q(sig00000027),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000088c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000903),
        .Q(sig00000026),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000088d
       (.C(clk),
        .CE(1'b1),
        .D(sig00000904),
        .Q(sig00000025),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000088e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000905),
        .Q(sig00000024),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000088f
       (.C(clk),
        .CE(1'b1),
        .D(sig00000906),
        .Q(sig00000023),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000890
       (.C(clk),
        .CE(1'b1),
        .D(sig00000907),
        .Q(sig00000022),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000891
       (.C(clk),
        .CE(1'b1),
        .D(sig00000908),
        .Q(sig00000021),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000892
       (.C(clk),
        .CE(1'b1),
        .D(sig00000909),
        .Q(sig00000020),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000893
       (.C(clk),
        .CE(1'b1),
        .D(sig0000090a),
        .Q(sig0000001f),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000894
       (.C(clk),
        .CE(1'b1),
        .D(sig0000090b),
        .Q(sig0000001e),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000895
       (.C(clk),
        .CE(1'b1),
        .D(sig0000090c),
        .Q(sig0000001d),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000896
       (.C(clk),
        .CE(1'b1),
        .D(sig0000090d),
        .Q(sig0000001c),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000897
       (.C(clk),
        .CE(1'b1),
        .D(sig0000090e),
        .Q(sig0000001b),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000898
       (.C(clk),
        .CE(1'b1),
        .D(sig0000090f),
        .Q(sig0000001a),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000899
       (.C(clk),
        .CE(1'b1),
        .D(sig00000910),
        .Q(sig00000019),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000089a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000911),
        .Q(sig00000018),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000089b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000912),
        .Q(sig00000017),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000089c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000913),
        .Q(sig00000016),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000089d
       (.C(clk),
        .CE(1'b1),
        .D(sig00000914),
        .Q(sig00000015),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000089e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000915),
        .Q(sig00000014),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000089f
       (.C(clk),
        .CE(1'b1),
        .D(sig00000916),
        .Q(sig00000013),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008a0
       (.C(clk),
        .CE(1'b1),
        .D(sig00000917),
        .Q(sig00000012),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008a1
       (.C(clk),
        .CE(1'b1),
        .D(sig00000918),
        .Q(sig00000011),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008a2
       (.C(clk),
        .CE(1'b1),
        .D(sig00000919),
        .Q(sig00000010),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008a3
       (.C(clk),
        .CE(1'b1),
        .D(sig0000091a),
        .Q(NLW_blk000008a3_Q_UNCONNECTED),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000008c0_CARRY4
       (.CI(sig000008e8),
        .CO({NLW_blk000008c0_CARRY4_CO_UNCONNECTED[3:2],sig000008e6,sig000008e7}),
        .CYINIT(1'b0),
        .DI({NLW_blk000008c0_CARRY4_DI_UNCONNECTED[3:2],sig00000525,sig00000524}),
        .O({NLW_blk000008c0_CARRY4_O_UNCONNECTED[3],sig0000091a,sig00000919,sig00000918}),
        .S({NLW_blk000008c0_CARRY4_S_UNCONNECTED[3],sig0000091b,sig0000091c,sig0000091d}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000008c4_CARRY4
       (.CI(sig000008ec),
        .CO({sig000008e8,sig000008e9,sig000008ea,sig000008eb}),
        .CYINIT(1'b0),
        .DI({sig00000523,sig00000522,sig00000521,sig00000520}),
        .O({sig00000917,sig00000916,sig00000915,sig00000914}),
        .S({sig0000091e,sig0000091f,sig00000920,sig00000921}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000008c8_CARRY4
       (.CI(sig000008f0),
        .CO({sig000008ec,sig000008ed,sig000008ee,sig000008ef}),
        .CYINIT(1'b0),
        .DI({sig0000051f,sig0000051e,sig0000051d,sig0000051c}),
        .O({sig00000913,sig00000912,sig00000911,sig00000910}),
        .S({sig00000922,sig00000923,sig00000924,sig00000925}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000008cc_CARRY4
       (.CI(sig000008f4),
        .CO({sig000008f0,sig000008f1,sig000008f2,sig000008f3}),
        .CYINIT(1'b0),
        .DI({sig0000051b,sig0000051a,sig00000519,sig00000518}),
        .O({sig0000090f,sig0000090e,sig0000090d,sig0000090c}),
        .S({sig00000926,sig00000927,sig00000928,sig00000929}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000008d0_CARRY4
       (.CI(sig000008f8),
        .CO({sig000008f4,sig000008f5,sig000008f6,sig000008f7}),
        .CYINIT(1'b0),
        .DI({sig00000517,sig00000516,sig00000515,sig00000514}),
        .O({sig0000090b,sig0000090a,sig00000909,sig00000908}),
        .S({sig0000092a,sig0000092b,sig0000092c,sig0000092d}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000008d4_CARRY4
       (.CI(sig000008fc),
        .CO({sig000008f8,sig000008f9,sig000008fa,sig000008fb}),
        .CYINIT(1'b0),
        .DI({sig00000513,sig00000512,sig00000511,sig00000510}),
        .O({sig00000907,sig00000906,sig00000905,sig00000904}),
        .S({sig0000092e,sig0000092f,sig00000930,sig00000931}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000008d8_CARRY4
       (.CI(sig000000ad),
        .CO({sig000008fc,sig000008fd,sig000008fe,sig000008ff}),
        .CYINIT(1'b0),
        .DI({sig0000050f,sig0000050e,1'b0,1'b0}),
        .O({sig00000903,sig00000902,sig00000901,sig00000900}),
        .S({sig00000932,sig00000933,sig00000934,sig00000935}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000008d9
       (.I0(sig00000526),
        .I1(sig000004c4),
        .I2(sig0000049e),
        .O(sig0000091b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000008da
       (.I0(sig00000525),
        .I1(sig000004c4),
        .I2(sig0000049e),
        .O(sig0000091c));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000008db
       (.I0(sig00000524),
        .I1(sig000004c3),
        .I2(sig0000049e),
        .O(sig0000091d));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000008dc
       (.I0(sig00000523),
        .I1(sig000004c2),
        .I2(sig0000049e),
        .O(sig0000091e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000008dd
       (.I0(sig00000522),
        .I1(sig000004c1),
        .I2(sig0000049e),
        .O(sig0000091f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000008de
       (.I0(sig00000521),
        .I1(sig000004c0),
        .I2(sig0000049e),
        .O(sig00000920));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000008df
       (.I0(sig00000520),
        .I1(sig000004bf),
        .I2(sig0000049e),
        .O(sig00000921));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000008e0
       (.I0(sig0000051f),
        .I1(sig000004be),
        .I2(sig0000049e),
        .O(sig00000922));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000008e1
       (.I0(sig0000051e),
        .I1(sig000004bd),
        .I2(sig0000049e),
        .O(sig00000923));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000008e2
       (.I0(sig0000051d),
        .I1(sig000004bc),
        .I2(sig0000049e),
        .O(sig00000924));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000008e3
       (.I0(sig0000051c),
        .I1(sig000004bb),
        .I2(sig0000049e),
        .O(sig00000925));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000008e4
       (.I0(sig0000051b),
        .I1(sig000004ba),
        .I2(sig0000049e),
        .O(sig00000926));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000008e5
       (.I0(sig0000051a),
        .I1(sig000004b9),
        .I2(sig0000049e),
        .O(sig00000927));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000008e6
       (.I0(sig00000519),
        .I1(sig000004b8),
        .I2(sig0000049e),
        .O(sig00000928));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000008e7
       (.I0(sig00000518),
        .I1(sig000004b7),
        .I2(sig0000049e),
        .O(sig00000929));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000008e8
       (.I0(sig00000517),
        .I1(sig000004b6),
        .I2(sig0000049e),
        .O(sig0000092a));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000008e9
       (.I0(sig00000516),
        .I1(sig000004b5),
        .I2(sig0000049e),
        .O(sig0000092b));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000008ea
       (.I0(sig00000515),
        .I1(sig000004b4),
        .I2(sig0000049e),
        .O(sig0000092c));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000008eb
       (.I0(sig00000514),
        .I1(sig000004b3),
        .I2(sig0000049e),
        .O(sig0000092d));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000008ec
       (.I0(sig00000513),
        .I1(sig000004b2),
        .I2(sig0000049e),
        .O(sig0000092e));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000008ed
       (.I0(sig00000512),
        .I1(sig000004b1),
        .I2(sig0000049e),
        .O(sig0000092f));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000008ee
       (.I0(sig00000511),
        .I1(sig000004b0),
        .I2(sig0000049e),
        .O(sig00000930));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000008ef
       (.I0(sig00000510),
        .I1(sig000004af),
        .I2(sig0000049e),
        .O(sig00000931));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000008f0
       (.I0(sig0000050f),
        .I1(sig000004ae),
        .I2(sig0000049e),
        .O(sig00000932));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000008f1
       (.I0(sig0000050e),
        .I1(sig000004ad),
        .I2(sig0000049e),
        .O(sig00000933));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000008f2
       (.I0(1'b0),
        .I1(sig000004ac),
        .I2(sig0000049e),
        .O(sig00000934));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h96)) 
    blk000008f3
       (.I0(1'b0),
        .I1(sig000004ab),
        .I2(sig0000049e),
        .O(sig00000935));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008f4
       (.C(clk),
        .CE(1'b1),
        .D(sig00000002),
        .Q(sig0000095a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008f5
       (.C(clk),
        .CE(1'b1),
        .D(sig00000003),
        .Q(sig00000954),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008f6
       (.C(clk),
        .CE(1'b1),
        .D(sig00000004),
        .Q(sig00000953),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008f7
       (.C(clk),
        .CE(1'b1),
        .D(sig00000005),
        .Q(sig00000952),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008f8
       (.C(clk),
        .CE(1'b1),
        .D(sig00000006),
        .Q(sig00000951),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008f9
       (.C(clk),
        .CE(1'b1),
        .D(sig00000007),
        .Q(sig00000950),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008fa
       (.C(clk),
        .CE(1'b1),
        .D(sig00000008),
        .Q(sig0000094f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000008fb
       (.C(clk),
        .CE(1'b1),
        .D(sig00000009),
        .Q(sig0000094e),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk000008fc_CARRY4
       (.CI(1'b0),
        .CO({sig00000975,sig00000958,sig0000095c,sig0000095b}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b1,1'b0,1'b0}),
        .O({sig00000974,NLW_blk000008fc_CARRY4_O_UNCONNECTED[2:0]}),
        .S({sig00000942,sig0000095d,1'b0,sig0000095e}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000904_CARRY4
       (.CI(sig00000965),
        .CO({sig0000098d,sig00000957,sig00000961,sig00000963}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({sig0000098c,sig0000095f,sig00000960,sig00000962}),
        .S({sig00000937,sig0000094d,sig0000094c,sig0000094b}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000090c_CARRY4
       (.CI(sig0000096d),
        .CO({sig00000965,sig00000967,sig00000969,sig0000096b}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({sig00000964,sig00000966,sig00000968,sig0000096a}),
        .S({sig0000094a,sig00000949,sig00000948,sig00000947}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000914_CARRY4
       (.CI(sig00000975),
        .CO({sig0000096d,sig0000096f,sig00000971,sig00000973}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({sig0000096c,sig0000096e,sig00000970,sig00000972}),
        .S({sig00000946,sig00000945,sig00000944,sig00000943}));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000917
       (.C(clk),
        .CE(1'b1),
        .D(sig00000974),
        .Q(sig00000041),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000918
       (.C(clk),
        .CE(1'b1),
        .D(sig00000972),
        .Q(sig00000040),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000919
       (.C(clk),
        .CE(1'b1),
        .D(sig00000970),
        .Q(sig0000003f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000091a
       (.C(clk),
        .CE(1'b1),
        .D(sig0000096e),
        .Q(sig0000003e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000091b
       (.C(clk),
        .CE(1'b1),
        .D(sig0000096c),
        .Q(sig0000003d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000091c
       (.C(clk),
        .CE(1'b1),
        .D(sig0000096a),
        .Q(sig0000003c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000091d
       (.C(clk),
        .CE(1'b1),
        .D(sig00000968),
        .Q(sig0000003b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000091e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000966),
        .Q(sig0000003a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000091f
       (.C(clk),
        .CE(1'b1),
        .D(sig00000964),
        .Q(sig00000039),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000920
       (.C(clk),
        .CE(1'b1),
        .D(sig00000962),
        .Q(sig00000038),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000921
       (.C(clk),
        .CE(1'b1),
        .D(sig00000960),
        .Q(sig00000037),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000922
       (.C(clk),
        .CE(1'b1),
        .D(sig0000095f),
        .Q(sig00000036),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000929_CARRY4
       (.CI(sig0000097d),
        .CO({NLW_blk00000929_CARRY4_CO_UNCONNECTED[3],sig00000977,sig00000979,sig0000097b}),
        .CYINIT(1'b0),
        .DI({NLW_blk00000929_CARRY4_DI_UNCONNECTED[3],1'b1,1'b0,1'b0}),
        .O({sig00000976,NLW_blk00000929_CARRY4_O_UNCONNECTED[2],sig00000978,sig0000097a}),
        .S({1'b0,sig00000936,sig00000941,sig00000940}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000931_CARRY4
       (.CI(sig00000985),
        .CO({sig0000097d,sig0000097f,sig00000981,sig00000983}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({sig0000097c,sig0000097e,sig00000980,sig00000982}),
        .S({sig0000093f,sig0000093e,sig0000093d,sig0000093c}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000939_CARRY4
       (.CI(sig0000098d),
        .CO({sig00000985,sig00000987,sig00000989,sig0000098b}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({sig00000984,sig00000986,sig00000988,sig0000098a}),
        .S({sig0000093b,sig0000093a,sig00000939,sig00000938}));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000093c
       (.C(clk),
        .CE(1'b1),
        .D(sig0000098c),
        .Q(sig00000035),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000093d
       (.C(clk),
        .CE(1'b1),
        .D(sig0000098a),
        .Q(sig00000034),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000093e
       (.C(clk),
        .CE(1'b1),
        .D(sig00000988),
        .Q(sig00000033),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000093f
       (.C(clk),
        .CE(1'b1),
        .D(sig00000986),
        .Q(sig00000032),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000940
       (.C(clk),
        .CE(1'b1),
        .D(sig00000984),
        .Q(sig00000031),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000941
       (.C(clk),
        .CE(1'b1),
        .D(sig00000982),
        .Q(sig00000030),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000942
       (.C(clk),
        .CE(1'b1),
        .D(sig00000980),
        .Q(sig0000002f),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000943
       (.C(clk),
        .CE(1'b1),
        .D(sig0000097e),
        .Q(sig0000002e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000944
       (.C(clk),
        .CE(1'b1),
        .D(sig0000097c),
        .Q(sig0000002d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000945
       (.C(clk),
        .CE(1'b1),
        .D(sig0000097a),
        .Q(sig0000002c),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000946
       (.C(clk),
        .CE(1'b1),
        .D(sig00000978),
        .Q(sig0000002b),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000947
       (.C(clk),
        .CE(1'b1),
        .D(sig00000976),
        .Q(sig00000956),
        .R(1'b0));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk0000094e_CARRY4
       (.CI(sig00000991),
        .CO({NLW_blk0000094e_CARRY4_CO_UNCONNECTED[3],sig0000098e,sig0000098f,sig00000990}),
        .CYINIT(1'b0),
        .DI({NLW_blk0000094e_CARRY4_DI_UNCONNECTED[3],1'b0,1'b0,1'b0}),
        .O({sig00000042,sig00000043,sig00000044,sig00000045}),
        .S({sig00000955,sig000009bd,sig000009be,sig000009bf}));
  (* OPTIMIZE_PRIMITIVES_NGC = "no" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XSTLIB *) 
  CARRY4 blk00000956_CARRY4
       (.CI(1'b0),
        .CO({sig00000991,sig00000992,sig00000993,sig00000994}),
        .CYINIT(sig00000956),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({sig00000046,sig00000047,sig00000048,sig00000049}),
        .S({sig000009c0,sig000009c1,sig000009c2,sig000009c3}));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000957
       (.C(clk),
        .CE(1'b1),
        .D(sig000009ab),
        .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [22]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000958
       (.C(clk),
        .CE(1'b1),
        .D(sig000009aa),
        .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [21]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000959
       (.C(clk),
        .CE(1'b1),
        .D(sig000009a9),
        .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [20]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000095a
       (.C(clk),
        .CE(1'b1),
        .D(sig000009a8),
        .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [19]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000095b
       (.C(clk),
        .CE(1'b1),
        .D(sig000009a7),
        .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [18]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000095c
       (.C(clk),
        .CE(1'b1),
        .D(sig000009a6),
        .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [17]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000095d
       (.C(clk),
        .CE(1'b1),
        .D(sig000009a5),
        .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [16]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000095e
       (.C(clk),
        .CE(1'b1),
        .D(sig000009a4),
        .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [15]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000095f
       (.C(clk),
        .CE(1'b1),
        .D(sig000009a3),
        .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [14]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000960
       (.C(clk),
        .CE(1'b1),
        .D(sig000009a2),
        .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [13]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000961
       (.C(clk),
        .CE(1'b1),
        .D(sig000009a1),
        .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [12]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000962
       (.C(clk),
        .CE(1'b1),
        .D(sig000009a0),
        .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [11]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000963
       (.C(clk),
        .CE(1'b1),
        .D(sig0000099f),
        .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [10]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000964
       (.C(clk),
        .CE(1'b1),
        .D(sig0000099e),
        .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [9]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000965
       (.C(clk),
        .CE(1'b1),
        .D(sig0000099d),
        .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [8]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000966
       (.C(clk),
        .CE(1'b1),
        .D(sig0000099c),
        .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [7]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000967
       (.C(clk),
        .CE(1'b1),
        .D(sig0000099b),
        .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [6]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000968
       (.C(clk),
        .CE(1'b1),
        .D(sig0000099a),
        .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [5]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000969
       (.C(clk),
        .CE(1'b1),
        .D(sig00000999),
        .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [4]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000096a
       (.C(clk),
        .CE(1'b1),
        .D(sig00000998),
        .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [3]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000096b
       (.C(clk),
        .CE(1'b1),
        .D(sig00000997),
        .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [2]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000096c
       (.C(clk),
        .CE(1'b1),
        .D(sig00000996),
        .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [1]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000096d
       (.C(clk),
        .CE(1'b1),
        .D(sig00000995),
        .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [0]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000096e
       (.C(clk),
        .CE(1'b1),
        .D(sig000009b3),
        .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/exp_op [7]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk0000096f
       (.C(clk),
        .CE(1'b1),
        .D(sig000009b2),
        .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/exp_op [6]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000970
       (.C(clk),
        .CE(1'b1),
        .D(sig000009b1),
        .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/exp_op [5]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000971
       (.C(clk),
        .CE(1'b1),
        .D(sig000009b0),
        .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/exp_op [4]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000972
       (.C(clk),
        .CE(1'b1),
        .D(sig000009af),
        .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/exp_op [3]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000973
       (.C(clk),
        .CE(1'b1),
        .D(sig000009ae),
        .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/exp_op [2]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000974
       (.C(clk),
        .CE(1'b1),
        .D(sig000009ad),
        .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/exp_op [1]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk00000975
       (.C(clk),
        .CE(1'b1),
        .D(sig000009ac),
        .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/exp_op [0]),
        .R(1'b0));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h153E113215141110)) 
    blk00000976
       (.I0(sig00000071),
        .I1(sig00000074),
        .I2(sig00000070),
        .I3(sig00000073),
        .I4(sig00000075),
        .I5(sig00000072),
        .O(sig00000065));
  (* PK_HLUTNM = "___XLNM___10___U0/op_inst/FLT_PT_OP/MULT.OP/EXP/Mmux_state_int_up111" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hF8)) 
    blk00000977
       (.I0(sig0000006b),
        .I1(sig00000010),
        .I2(sig00000069),
        .O(sig0000004a));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hF0FFF0FFF0FCF0FE)) 
    blk00000978
       (.I0(sig0000006a),
        .I1(sig00000068),
        .I2(sig0000006e),
        .I3(sig0000006d),
        .I4(sig00000010),
        .I5(sig0000004a),
        .O(sig0000004e));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'hE)) 
    blk00000979
       (.I0(sig00000071),
        .I1(sig00000074),
        .O(sig00000064));
  (* PK_HLUTNM = "___XLNM___35___U0/op_inst/FLT_PT_OP/MULT.OP/EXP/Mram__n0131111" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk0000097a
       (.I0(a[31]),
        .I1(b[31]),
        .O(sig0000005f));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk0000097b
       (.I0(a[23]),
        .I1(b[23]),
        .O(sig00000057));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk0000097c
       (.I0(a[24]),
        .I1(b[24]),
        .O(sig00000058));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk0000097d
       (.I0(a[25]),
        .I1(b[25]),
        .O(sig00000059));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk0000097e
       (.I0(a[26]),
        .I1(b[26]),
        .O(sig0000005a));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk0000097f
       (.I0(a[27]),
        .I1(b[27]),
        .O(sig0000005b));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk00000980
       (.I0(a[28]),
        .I1(b[28]),
        .O(sig0000005c));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk00000981
       (.I0(a[29]),
        .I1(b[29]),
        .O(sig0000005d));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk00000982
       (.I0(a[30]),
        .I1(b[30]),
        .O(sig0000005e));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h1)) 
    blk00000983
       (.I0(sig00000076),
        .I1(sig0000007e),
        .O(sig00000061));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    blk00000984
       (.I0(a[12]),
        .I1(a[13]),
        .I2(a[14]),
        .I3(a[15]),
        .I4(a[16]),
        .I5(a[17]),
        .O(sig00000094));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    blk00000985
       (.I0(a[6]),
        .I1(a[7]),
        .I2(a[8]),
        .I3(a[9]),
        .I4(a[10]),
        .I5(a[11]),
        .O(sig00000095));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    blk00000986
       (.I0(a[0]),
        .I1(a[1]),
        .I2(a[2]),
        .I3(a[3]),
        .I4(a[4]),
        .I5(a[5]),
        .O(sig00000096));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h00000001)) 
    blk00000987
       (.I0(a[18]),
        .I1(a[19]),
        .I2(a[20]),
        .I3(a[21]),
        .I4(a[22]),
        .O(sig00000097));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    blk00000988
       (.I0(b[12]),
        .I1(b[13]),
        .I2(b[14]),
        .I3(b[15]),
        .I4(b[16]),
        .I5(b[17]),
        .O(sig0000009c));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    blk00000989
       (.I0(b[6]),
        .I1(b[7]),
        .I2(b[8]),
        .I3(b[9]),
        .I4(b[10]),
        .I5(b[11]),
        .O(sig0000009d));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    blk0000098a
       (.I0(b[0]),
        .I1(b[1]),
        .I2(b[2]),
        .I3(b[3]),
        .I4(b[4]),
        .I5(b[5]),
        .O(sig0000009e));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h00000001)) 
    blk0000098b
       (.I0(b[18]),
        .I1(b[19]),
        .I2(b[20]),
        .I3(b[21]),
        .I4(b[22]),
        .O(sig0000009f));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h6)) 
    blk0000098c
       (.I0(sig000006bf),
        .I1(sig0000095a),
        .O(sig00000955));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk0000098d
       (.I0(sig00000010),
        .I1(sig0000001c),
        .I2(sig0000001b),
        .O(sig00000937));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk0000098e
       (.I0(sig00000010),
        .I1(sig00000012),
        .I2(sig00000011),
        .O(sig00000941));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk0000098f
       (.I0(sig00000010),
        .I1(sig0000001b),
        .I2(sig0000001a),
        .O(sig00000938));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk00000990
       (.I0(sig00000010),
        .I1(sig0000001a),
        .I2(sig00000019),
        .O(sig00000939));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk00000991
       (.I0(sig00000010),
        .I1(sig00000019),
        .I2(sig00000018),
        .O(sig0000093a));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk00000992
       (.I0(sig00000010),
        .I1(sig00000018),
        .I2(sig00000017),
        .O(sig0000093b));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk00000993
       (.I0(sig00000010),
        .I1(sig00000017),
        .I2(sig00000016),
        .O(sig0000093c));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk00000994
       (.I0(sig00000010),
        .I1(sig00000016),
        .I2(sig00000015),
        .O(sig0000093d));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk00000995
       (.I0(sig00000010),
        .I1(sig00000015),
        .I2(sig00000014),
        .O(sig0000093e));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk00000996
       (.I0(sig00000010),
        .I1(sig00000014),
        .I2(sig00000013),
        .O(sig0000093f));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk00000997
       (.I0(sig00000010),
        .I1(sig00000013),
        .I2(sig00000012),
        .O(sig00000940));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hAC)) 
    blk00000998
       (.I0(sig00000027),
        .I1(sig00000028),
        .I2(sig00000010),
        .O(sig00000942));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk00000999
       (.I0(sig00000010),
        .I1(sig0000001e),
        .I2(sig0000001d),
        .O(sig0000094c));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk0000099a
       (.I0(sig00000010),
        .I1(sig0000001d),
        .I2(sig0000001c),
        .O(sig0000094d));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hAC)) 
    blk0000099b
       (.I0(sig00000026),
        .I1(sig00000027),
        .I2(sig00000010),
        .O(sig00000943));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hAC)) 
    blk0000099c
       (.I0(sig00000025),
        .I1(sig00000026),
        .I2(sig00000010),
        .O(sig00000944));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hAC)) 
    blk0000099d
       (.I0(sig00000024),
        .I1(sig00000025),
        .I2(sig00000010),
        .O(sig00000945));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hAC)) 
    blk0000099e
       (.I0(sig00000023),
        .I1(sig00000024),
        .I2(sig00000010),
        .O(sig00000946));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hAC)) 
    blk0000099f
       (.I0(sig00000022),
        .I1(sig00000023),
        .I2(sig00000010),
        .O(sig00000947));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hAC)) 
    blk000009a0
       (.I0(sig00000021),
        .I1(sig00000022),
        .I2(sig00000010),
        .O(sig00000948));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000009a1
       (.I0(sig00000010),
        .I1(sig00000021),
        .I2(sig00000020),
        .O(sig00000949));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000009a2
       (.I0(sig00000010),
        .I1(sig00000020),
        .I2(sig0000001f),
        .O(sig0000094a));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hE4)) 
    blk000009a3
       (.I0(sig00000010),
        .I1(sig0000001f),
        .I2(sig0000001e),
        .O(sig0000094b));
  (* XSTLIB *) 
  LUT5 #(
    .INIT(32'h0455FFDD)) 
    blk000009a4
       (.I0(sig00000029),
        .I1(sig0000002a),
        .I2(sig00000027),
        .I3(sig00000010),
        .I4(sig00000028),
        .O(sig0000095d));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hEF)) 
    blk000009a5
       (.I0(sig00000028),
        .I1(sig00000029),
        .I2(sig0000002a),
        .O(sig0000095e));
  (* PK_HLUTNM = "___XLNM___34___U0/op_inst/FLT_PT_OP/MULT.OP/OP/Mmux_mant_op[1]_GND_313_o_MUX_201_o11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk000009a6
       (.I0(sig0000000b),
        .I1(sig00000040),
        .O(sig00000996));
  (* PK_HLUTNM = "___XLNM___34___U0/op_inst/FLT_PT_OP/MULT.OP/OP/Mmux_mant_op[1]_GND_313_o_MUX_201_o11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk000009a7
       (.I0(sig0000000b),
        .I1(sig0000003f),
        .O(sig00000997));
  (* PK_HLUTNM = "___XLNM___33___U0/op_inst/FLT_PT_OP/MULT.OP/OP/Mmux_mant_op[0]_GND_313_o_MUX_202_o11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk000009a8
       (.I0(sig0000000b),
        .I1(sig00000041),
        .O(sig00000995));
  (* PK_HLUTNM = "___XLNM___33___U0/op_inst/FLT_PT_OP/MULT.OP/OP/Mmux_mant_op[0]_GND_313_o_MUX_202_o11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk000009a9
       (.I0(sig0000000b),
        .I1(sig0000003e),
        .O(sig00000998));
  (* PK_HLUTNM = "___XLNM___32___U0/op_inst/FLT_PT_OP/MULT.OP/OP/Mmux_mant_op[4]_GND_313_o_MUX_198_o11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk000009aa
       (.I0(sig0000000b),
        .I1(sig0000003d),
        .O(sig00000999));
  (* PK_HLUTNM = "___XLNM___32___U0/op_inst/FLT_PT_OP/MULT.OP/OP/Mmux_mant_op[4]_GND_313_o_MUX_198_o11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk000009ab
       (.I0(sig0000000b),
        .I1(sig0000003c),
        .O(sig0000099a));
  (* PK_HLUTNM = "___XLNM___31___U0/op_inst/FLT_PT_OP/MULT.OP/OP/Mmux_mant_op[6]_GND_313_o_MUX_196_o11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk000009ac
       (.I0(sig0000000b),
        .I1(sig0000003b),
        .O(sig0000099b));
  (* PK_HLUTNM = "___XLNM___31___U0/op_inst/FLT_PT_OP/MULT.OP/OP/Mmux_mant_op[6]_GND_313_o_MUX_196_o11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk000009ad
       (.I0(sig0000000b),
        .I1(sig0000003a),
        .O(sig0000099c));
  (* PK_HLUTNM = "___XLNM___30___U0/op_inst/FLT_PT_OP/MULT.OP/OP/Mmux_mant_op[8]_GND_313_o_MUX_194_o11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk000009ae
       (.I0(sig0000000b),
        .I1(sig00000039),
        .O(sig0000099d));
  (* PK_HLUTNM = "___XLNM___30___U0/op_inst/FLT_PT_OP/MULT.OP/OP/Mmux_mant_op[8]_GND_313_o_MUX_194_o11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk000009af
       (.I0(sig0000000b),
        .I1(sig00000038),
        .O(sig0000099e));
  (* PK_HLUTNM = "___XLNM___29___U0/op_inst/FLT_PT_OP/MULT.OP/OP/Mmux_mant_op[10]_GND_313_o_MUX_192_o11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk000009b0
       (.I0(sig0000000b),
        .I1(sig00000037),
        .O(sig0000099f));
  (* PK_HLUTNM = "___XLNM___29___U0/op_inst/FLT_PT_OP/MULT.OP/OP/Mmux_mant_op[10]_GND_313_o_MUX_192_o11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk000009b1
       (.I0(sig0000000b),
        .I1(sig00000036),
        .O(sig000009a0));
  (* PK_HLUTNM = "___XLNM___28___U0/op_inst/FLT_PT_OP/MULT.OP/OP/Mmux_mant_op[12]_GND_313_o_MUX_190_o11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk000009b2
       (.I0(sig0000000b),
        .I1(sig00000035),
        .O(sig000009a1));
  (* PK_HLUTNM = "___XLNM___28___U0/op_inst/FLT_PT_OP/MULT.OP/OP/Mmux_mant_op[12]_GND_313_o_MUX_190_o11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk000009b3
       (.I0(sig0000000b),
        .I1(sig00000034),
        .O(sig000009a2));
  (* PK_HLUTNM = "___XLNM___27___U0/op_inst/FLT_PT_OP/MULT.OP/OP/Mmux_mant_op[14]_GND_313_o_MUX_188_o11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk000009b4
       (.I0(sig0000000b),
        .I1(sig00000033),
        .O(sig000009a3));
  (* PK_HLUTNM = "___XLNM___27___U0/op_inst/FLT_PT_OP/MULT.OP/OP/Mmux_mant_op[14]_GND_313_o_MUX_188_o11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk000009b5
       (.I0(sig0000000b),
        .I1(sig00000032),
        .O(sig000009a4));
  (* PK_HLUTNM = "___XLNM___26___U0/op_inst/FLT_PT_OP/MULT.OP/OP/Mmux_mant_op[16]_GND_313_o_MUX_186_o11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk000009b6
       (.I0(sig0000000b),
        .I1(sig00000031),
        .O(sig000009a5));
  (* PK_HLUTNM = "___XLNM___26___U0/op_inst/FLT_PT_OP/MULT.OP/OP/Mmux_mant_op[16]_GND_313_o_MUX_186_o11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk000009b7
       (.I0(sig0000000b),
        .I1(sig00000030),
        .O(sig000009a6));
  (* PK_HLUTNM = "___XLNM___25___U0/op_inst/FLT_PT_OP/MULT.OP/OP/Mmux_mant_op[18]_GND_313_o_MUX_184_o11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk000009b8
       (.I0(sig0000000b),
        .I1(sig0000002f),
        .O(sig000009a7));
  (* PK_HLUTNM = "___XLNM___25___U0/op_inst/FLT_PT_OP/MULT.OP/OP/Mmux_mant_op[18]_GND_313_o_MUX_184_o11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk000009b9
       (.I0(sig0000000b),
        .I1(sig0000002e),
        .O(sig000009a8));
  (* PK_HLUTNM = "___XLNM___24___U0/op_inst/FLT_PT_OP/MULT.OP/OP/Mmux_mant_op[20]_GND_313_o_MUX_182_o11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk000009ba
       (.I0(sig0000000b),
        .I1(sig0000002d),
        .O(sig000009a9));
  (* PK_HLUTNM = "___XLNM___24___U0/op_inst/FLT_PT_OP/MULT.OP/OP/Mmux_mant_op[20]_GND_313_o_MUX_182_o11" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk000009bb
       (.I0(sig0000000b),
        .I1(sig0000002c),
        .O(sig000009aa));
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h54)) 
    blk000009bc
       (.I0(sig0000000c),
        .I1(sig0000000d),
        .I2(sig0000002b),
        .O(sig000009ab));
  (* PK_HLUTNM = "___XLNM___20___U0/op_inst/FLT_PT_OP/MULT.OP/OP/Mmux_exp_op[0]_GND_313_o_MUX_133_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h54)) 
    blk000009bd
       (.I0(sig0000000a),
        .I1(sig0000000e),
        .I2(sig00000049),
        .O(sig000009ac));
  (* PK_HLUTNM = "___XLNM___20___U0/op_inst/FLT_PT_OP/MULT.OP/OP/Mmux_exp_op[0]_GND_313_o_MUX_133_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h54)) 
    blk000009be
       (.I0(sig0000000a),
        .I1(sig0000000e),
        .I2(sig00000048),
        .O(sig000009ad));
  (* PK_HLUTNM = "___XLNM___19___U0/op_inst/FLT_PT_OP/MULT.OP/OP/Mmux_exp_op[2]_GND_313_o_MUX_129_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h54)) 
    blk000009bf
       (.I0(sig0000000a),
        .I1(sig0000000e),
        .I2(sig00000047),
        .O(sig000009ae));
  (* PK_HLUTNM = "___XLNM___19___U0/op_inst/FLT_PT_OP/MULT.OP/OP/Mmux_exp_op[2]_GND_313_o_MUX_129_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h54)) 
    blk000009c0
       (.I0(sig0000000a),
        .I1(sig0000000e),
        .I2(sig00000046),
        .O(sig000009af));
  (* PK_HLUTNM = "___XLNM___18___U0/op_inst/FLT_PT_OP/MULT.OP/OP/Mmux_exp_op[4]_GND_313_o_MUX_127_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h54)) 
    blk000009c1
       (.I0(sig0000000a),
        .I1(sig0000000e),
        .I2(sig00000045),
        .O(sig000009b0));
  (* PK_HLUTNM = "___XLNM___18___U0/op_inst/FLT_PT_OP/MULT.OP/OP/Mmux_exp_op[4]_GND_313_o_MUX_127_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h54)) 
    blk000009c2
       (.I0(sig0000000a),
        .I1(sig0000000e),
        .I2(sig00000044),
        .O(sig000009b1));
  (* PK_HLUTNM = "___XLNM___17___U0/op_inst/FLT_PT_OP/MULT.OP/OP/Mmux_exp_op[6]_GND_313_o_MUX_125_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h54)) 
    blk000009c3
       (.I0(sig0000000a),
        .I1(sig0000000e),
        .I2(sig00000043),
        .O(sig000009b2));
  (* PK_HLUTNM = "___XLNM___17___U0/op_inst/FLT_PT_OP/MULT.OP/OP/Mmux_exp_op[6]_GND_313_o_MUX_125_o11" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h54)) 
    blk000009c4
       (.I0(sig0000000a),
        .I1(sig0000000e),
        .I2(sig00000042),
        .O(sig000009b3));
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h8000)) 
    blk000009c5
       (.I0(sig0000007c),
        .I1(sig0000007b),
        .I2(sig0000007a),
        .I3(sig0000007d),
        .O(sig000009b4));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hAAAAAAAA80000000)) 
    blk000009c6
       (.I0(sig00000076),
        .I1(sig00000079),
        .I2(sig00000078),
        .I3(sig00000077),
        .I4(sig000009b4),
        .I5(sig0000007e),
        .O(sig00000062));
  (* PK_HLUTNM = "___XLNM___6___U0/op_inst/FLT_PT_OP/MULT.OP/EXP/flow_sig<2><8>_SW0" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h8000)) 
    blk000009c7
       (.I0(sig0000007b),
        .I1(sig0000007a),
        .I2(sig0000007d),
        .I3(sig00000076),
        .O(sig000009b5));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h0040000000000000)) 
    blk000009c8
       (.I0(sig0000007e),
        .I1(sig00000079),
        .I2(sig00000078),
        .I3(sig00000077),
        .I4(sig0000007c),
        .I5(sig000009b5),
        .O(sig00000067));
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'hB)) 
    blk000009c9
       (.I0(sig00000073),
        .I1(sig00000072),
        .O(sig000009b6));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h0020202000AAAAAA)) 
    blk000009ca
       (.I0(sig0000006f),
        .I1(sig00000070),
        .I2(sig00000075),
        .I3(sig000009b6),
        .I4(sig00000071),
        .I5(sig00000074),
        .O(sig00000066));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h00F700F400000000)) 
    blk000009cb
       (.I0(sig0000006a),
        .I1(sig00000068),
        .I2(sig0000006e),
        .I3(sig0000006d),
        .I4(sig000009b7),
        .I5(sig0000004e),
        .O(sig00000060));
  (* PK_HLUTNM = "___XLNM___12___U0/op_inst/FLT_PT_OP/MULT.OP/EXP/COND_DET_A/EXP_DET_LUT.exp_all_one_ip<30>_SW0" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h80)) 
    blk000009cc
       (.I0(a[25]),
        .I1(a[24]),
        .I2(a[23]),
        .O(sig000009b8));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    blk000009cd
       (.I0(a[30]),
        .I1(a[29]),
        .I2(a[28]),
        .I3(a[27]),
        .I4(a[26]),
        .I5(sig000009b8),
        .O(sig00000053));
  (* PK_HLUTNM = "___XLNM___12___U0/op_inst/FLT_PT_OP/MULT.OP/EXP/COND_DET_A/EXP_DET_LUT.exp_all_one_ip<30>_SW0" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hFE)) 
    blk000009ce
       (.I0(a[25]),
        .I1(a[24]),
        .I2(a[23]),
        .O(sig000009b9));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    blk000009cf
       (.I0(a[30]),
        .I1(a[29]),
        .I2(a[28]),
        .I3(a[27]),
        .I4(a[26]),
        .I5(sig000009b9),
        .O(sig00000054));
  (* PK_HLUTNM = "___XLNM___11___U0/op_inst/FLT_PT_OP/MULT.OP/EXP/COND_DET_B/EXP_DET_LUT.exp_all_one_ip<30>_SW0" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'h80)) 
    blk000009d0
       (.I0(b[25]),
        .I1(b[24]),
        .I2(b[23]),
        .O(sig000009ba));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    blk000009d1
       (.I0(b[30]),
        .I1(b[29]),
        .I2(b[28]),
        .I3(b[27]),
        .I4(b[26]),
        .I5(sig000009ba),
        .O(sig00000055));
  (* PK_HLUTNM = "___XLNM___11___U0/op_inst/FLT_PT_OP/MULT.OP/EXP/COND_DET_B/EXP_DET_LUT.exp_all_one_ip<30>_SW0" *) 
  (* XSTLIB *) 
  LUT3 #(
    .INIT(8'hFE)) 
    blk000009d2
       (.I0(b[25]),
        .I1(b[24]),
        .I2(b[23]),
        .O(sig000009bb));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    blk000009d3
       (.I0(b[30]),
        .I1(b[29]),
        .I2(b[28]),
        .I3(b[27]),
        .I4(b[26]),
        .I5(sig000009bb),
        .O(sig00000056));
  (* PK_HLUTNM = "___XLNM___6___U0/op_inst/FLT_PT_OP/MULT.OP/EXP/flow_sig<2><8>_SW0" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    blk000009d4
       (.I0(sig0000007b),
        .I1(sig0000007a),
        .I2(sig0000007d),
        .I3(sig00000076),
        .O(sig000009bc));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    blk000009d5
       (.I0(sig0000007e),
        .I1(sig00000079),
        .I2(sig00000078),
        .I3(sig00000077),
        .I4(sig0000007c),
        .I5(sig000009bc),
        .O(sig00000063));
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009d6
       (.C(clk),
        .CE(1'b1),
        .D(sig0000000f),
        .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/sign_op ),
        .R(1'b0));
  (* XSTLIB *) 
  LUT1 #(
    .INIT(2'h2)) 
    blk000009d7
       (.I0(sig00000954),
        .O(sig000009bd));
  (* XSTLIB *) 
  LUT1 #(
    .INIT(2'h2)) 
    blk000009d8
       (.I0(sig00000953),
        .O(sig000009be));
  (* XSTLIB *) 
  LUT1 #(
    .INIT(2'h2)) 
    blk000009d9
       (.I0(sig00000952),
        .O(sig000009bf));
  (* XSTLIB *) 
  LUT1 #(
    .INIT(2'h2)) 
    blk000009da
       (.I0(sig00000951),
        .O(sig000009c0));
  (* XSTLIB *) 
  LUT1 #(
    .INIT(2'h2)) 
    blk000009db
       (.I0(sig00000950),
        .O(sig000009c1));
  (* XSTLIB *) 
  LUT1 #(
    .INIT(2'h2)) 
    blk000009dc
       (.I0(sig0000094f),
        .O(sig000009c2));
  (* XSTLIB *) 
  LUT1 #(
    .INIT(2'h2)) 
    blk000009dd
       (.I0(sig0000094e),
        .O(sig000009c3));
  (* PK_HLUTNM = "___XLNM___35___U0/op_inst/FLT_PT_OP/MULT.OP/EXP/Mram__n0131111" *) 
  (* XSTLIB *) 
  LUT2 #(
    .INIT(4'h4)) 
    blk000009de
       (.I0(sig0000006e),
        .I1(sig0000006d),
        .O(sig0000004c));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFEEFE)) 
    blk000009df
       (.I0(sig0000004a),
        .I1(sig0000006d),
        .I2(sig0000006a),
        .I3(sig00000010),
        .I4(sig00000068),
        .I5(sig0000006e),
        .O(sig0000004b));
  (* PK_HLUTNM = "___XLNM___10___U0/op_inst/FLT_PT_OP/MULT.OP/EXP/Mmux_state_int_up111" *) 
  (* XSTLIB *) 
  LUT4 #(
    .INIT(16'h0145)) 
    blk000009e0
       (.I0(sig00000069),
        .I1(sig00000010),
        .I2(sig0000006a),
        .I3(sig0000006b),
        .O(sig000009b7));
  (* XSTLIB *) 
  LUT6 #(
    .INIT(64'hFFFFFFFF11101010)) 
    blk000009e1
       (.I0(sig00000068),
        .I1(sig0000006e),
        .I2(sig00000069),
        .I3(sig0000006b),
        .I4(sig00000010),
        .I5(sig0000006d),
        .O(sig0000004d));
  (* XILINX_LEGACY_PRIM = "INV" *) 
  (* XILINX_TRANSFORM_PINMAP = "I:I0" *) 
  (* XSTLIB *) 
  LUT1 #(
    .INIT(2'h1)) 
    blk000009e2
       (.I0(sig00000010),
        .O(sig00000936));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000009e3
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig000000a1),
        .Q(sig000009c4));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009e4
       (.C(clk),
        .CE(1'b1),
        .D(sig000009c4),
        .Q(sig0000006e),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000009e5
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig000000a0),
        .Q(sig000009c5));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009e6
       (.C(clk),
        .CE(1'b1),
        .D(sig000009c5),
        .Q(sig0000006d),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000009e7
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig000000a5),
        .Q(sig000009c6));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009e8
       (.C(clk),
        .CE(1'b1),
        .D(sig000009c6),
        .Q(sig0000006a),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000009e9
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig000000a4),
        .Q(sig000009c7));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009ea
       (.C(clk),
        .CE(1'b1),
        .D(sig000009c7),
        .Q(sig0000006b),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000009eb
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b1),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig0000007e),
        .Q(sig00000002));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000009ec
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig000000a3),
        .Q(sig000009c8));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009ed
       (.C(clk),
        .CE(1'b1),
        .D(sig000009c8),
        .Q(sig00000068),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000009ee
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig000000a2),
        .Q(sig000009c9));
  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* XSTLIB *) 
  FDRE #(
    .INIT(1'b0)) 
    blk000009ef
       (.C(clk),
        .CE(1'b1),
        .D(sig000009c9),
        .Q(sig00000069),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000009f0
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b1),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig0000007d),
        .Q(sig00000003));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000009f1
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b1),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig0000007c),
        .Q(sig00000004));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000009f2
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b1),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig0000007b),
        .Q(sig00000005));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000009f3
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b1),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig0000007a),
        .Q(sig00000006));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000009f4
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b1),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig00000077),
        .Q(sig00000009));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000009f5
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b1),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig00000079),
        .Q(sig00000007));
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* XSTLIB *) 
  SRL16E #(
    .INIT(16'h0000)) 
    blk000009f6
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b1),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(sig00000078),
        .Q(sig00000008));
endmodule

(* ORIG_REF_NAME = "softmax_unit" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_softmax_unit
   (ila_smax_inbuff_dout,
    full,
    ila_smax_inbuff_almost_full,
    empty,
    ila_smax_inbuff_almost_empty,
    ila_smax_inbuff_valid,
    \step_counter_reg[3] ,
    ila_smax_inbuff_rd_en,
    dout,
    ila_smax_exp_fifo_full,
    almost_full,
    ila_smax_exp_fifo_empty,
    ila_smax_exp_fifo_almost_empty,
    ila_smax_exp_fifo_valid,
    ila_smax_exp_mux_data,
    ila_smax_exp_mux_wr_en,
    ila_smax_exp_fifo_rd_en,
    ila_smax_aw_sum,
    ila_smax_aw_addend,
    ila_smax_aw_augend,
    ila_smax_dw_quotient,
    ila_smax_dw_dividend,
    ila_smax_dw_divisor,
    ila_smax_outbuff_dout,
    ila_smax_outbuff_full,
    ila_smax_outbuff_almost_full,
    ila_smax_outbuff_empty,
    ila_smax_outbuff_almost_empty,
    ila_smax_outbuff_valid,
    ila_smax_outbuff_din,
    ila_smax_outbuff_wr_en,
    \sum_counter_reg[0]_rep ,
    CO,
    ila_smax_aw_summing_complete,
    ila_smax_ctrlr_exp_input_valid,
    ila_smax_dw_division_complete,
    ila_smax_dw_quotient_result_valid,
    ila_smax_exp_function_ready,
    \epoch_reg[63] ,
    Q,
    \ila_smax_exp_data_reg[31] ,
    ila_smax_exp_mult_reg,
    ila_smax_exp_product,
    \ila_smax_exp_hold_counter[3] ,
    \ila_smax_exp_sum_counter[4] ,
    ila_smax_dw_rd_en,
    \ila_smax_dw_fsm_state[1] ,
    ila_smax_ctrlr_fsm_state,
    \input_data_addr_reg_reg[0] ,
    \ila_smax_aw_hold_counter[3] ,
    \ila_smax_aw_fsm_state[1] ,
    \ila_smax_ctrlr_element_counter[15] ,
    \ila_smax_aw_sum_counter[15] ,
    \ila_smax_dw_quotient_counter[15] ,
    \element_counter_reg[15] ,
    \addend_reg[0] ,
    \data_reg_reg[28] ,
    outbuff_rd_en,
    ila_smax_exp_fifo_data,
    ila_smax_ctrlr_exp_fifo_select,
    ila_smax_exp_fifo_wr_en,
    ila_smax_ctrlr_clear_all,
    \ila_smax_dw_hold_counter[4] ,
    ila_smax_aw_rd_en,
    ila_smax_dw_division_reg,
    ila_smax_aw_sum_reg,
    start_reg,
    ila_smax_ctrlr_exp_input,
    ila_smax_ctrlr_controller_ready,
    ila_smax_ctrlr_busy,
    ila_smax_exp_exp_done,
    ila_smax_exp_multiplicand_a,
    ila_smax_exp_multiplicand_b,
    ila_smax_exp_sum,
    ila_smax_exp_augend,
    ila_smax_exp_addend,
    \ila_smax_exp_fsm_state[2] ,
    ila_smax_exp_valid_result,
    m00_axi_aclk,
    ila_smax_inbuff_din,
    ila_smax_inbuff_wr_en,
    m00_axi_aresetn_0,
    ila_smax_outbuff_rd_en,
    DI,
    \num_elements_reg[15] ,
    \num_elements_reg[7] ,
    \num_elements_reg[15]_0 ,
    \num_elements_reg[7]_0 ,
    \num_elements_reg[15]_1 ,
    \FSM_sequential_current_state_reg[1] ,
    out,
    \cycle_reg[62] ,
    m00_axi_rvalid,
    m00_axi_aresetn,
    m00_axi_wready,
    \current_state_reg[0] ,
    \num_elements_reg[15]_2 ,
    next_state1,
    \start_reg_reg[1] ,
    start,
    m00_axi_aresetn_1,
    ila_smax_data_loaded);
  output [31:0]ila_smax_inbuff_dout;
  output full;
  output ila_smax_inbuff_almost_full;
  output empty;
  output ila_smax_inbuff_almost_empty;
  output ila_smax_inbuff_valid;
  output \step_counter_reg[3] ;
  output ila_smax_inbuff_rd_en;
  output [31:0]dout;
  output ila_smax_exp_fifo_full;
  output almost_full;
  output ila_smax_exp_fifo_empty;
  output ila_smax_exp_fifo_almost_empty;
  output ila_smax_exp_fifo_valid;
  output [31:0]ila_smax_exp_mux_data;
  output ila_smax_exp_mux_wr_en;
  output ila_smax_exp_fifo_rd_en;
  output [31:0]ila_smax_aw_sum;
  output [31:0]ila_smax_aw_addend;
  output [31:0]ila_smax_aw_augend;
  output [31:0]ila_smax_dw_quotient;
  output [31:0]ila_smax_dw_dividend;
  output [31:0]ila_smax_dw_divisor;
  output [31:0]ila_smax_outbuff_dout;
  output ila_smax_outbuff_full;
  output ila_smax_outbuff_almost_full;
  output ila_smax_outbuff_empty;
  output ila_smax_outbuff_almost_empty;
  output ila_smax_outbuff_valid;
  output [31:0]ila_smax_outbuff_din;
  output ila_smax_outbuff_wr_en;
  output \sum_counter_reg[0]_rep ;
  output [0:0]CO;
  output ila_smax_aw_summing_complete;
  output ila_smax_ctrlr_exp_input_valid;
  output ila_smax_dw_division_complete;
  output ila_smax_dw_quotient_result_valid;
  output ila_smax_exp_function_ready;
  output \epoch_reg[63] ;
  output [7:0]Q;
  output [31:0]\ila_smax_exp_data_reg[31] ;
  output [31:0]ila_smax_exp_mult_reg;
  output [31:0]ila_smax_exp_product;
  output [3:0]\ila_smax_exp_hold_counter[3] ;
  output [4:0]\ila_smax_exp_sum_counter[4] ;
  output ila_smax_dw_rd_en;
  output [1:0]\ila_smax_dw_fsm_state[1] ;
  output [2:0]ila_smax_ctrlr_fsm_state;
  output \input_data_addr_reg_reg[0] ;
  output [3:0]\ila_smax_aw_hold_counter[3] ;
  output [1:0]\ila_smax_aw_fsm_state[1] ;
  output [15:0]\ila_smax_ctrlr_element_counter[15] ;
  output [15:0]\ila_smax_aw_sum_counter[15] ;
  output [15:0]\ila_smax_dw_quotient_counter[15] ;
  output \element_counter_reg[15] ;
  output \addend_reg[0] ;
  output \data_reg_reg[28] ;
  output outbuff_rd_en;
  output [31:0]ila_smax_exp_fifo_data;
  output ila_smax_ctrlr_exp_fifo_select;
  output ila_smax_exp_fifo_wr_en;
  output ila_smax_ctrlr_clear_all;
  output [4:0]\ila_smax_dw_hold_counter[4] ;
  output ila_smax_aw_rd_en;
  output [31:0]ila_smax_dw_division_reg;
  output [31:0]ila_smax_aw_sum_reg;
  output start_reg;
  output [31:0]ila_smax_ctrlr_exp_input;
  output ila_smax_ctrlr_controller_ready;
  output ila_smax_ctrlr_busy;
  output ila_smax_exp_exp_done;
  output [31:0]ila_smax_exp_multiplicand_a;
  output [31:0]ila_smax_exp_multiplicand_b;
  output [31:0]ila_smax_exp_sum;
  output [31:0]ila_smax_exp_augend;
  output [31:0]ila_smax_exp_addend;
  output [2:0]\ila_smax_exp_fsm_state[2] ;
  output ila_smax_exp_valid_result;
  input m00_axi_aclk;
  input [31:0]ila_smax_inbuff_din;
  input ila_smax_inbuff_wr_en;
  input m00_axi_aresetn_0;
  input ila_smax_outbuff_rd_en;
  input [3:0]DI;
  input [3:0]\num_elements_reg[15] ;
  input [3:0]\num_elements_reg[7] ;
  input [3:0]\num_elements_reg[15]_0 ;
  input [3:0]\num_elements_reg[7]_0 ;
  input [3:0]\num_elements_reg[15]_1 ;
  input \FSM_sequential_current_state_reg[1] ;
  input [1:0]out;
  input [0:0]\cycle_reg[62] ;
  input m00_axi_rvalid;
  input m00_axi_aresetn;
  input m00_axi_wready;
  input \current_state_reg[0] ;
  input [15:0]\num_elements_reg[15]_2 ;
  input next_state1;
  input [1:0]\start_reg_reg[1] ;
  input start;
  input m00_axi_aresetn_1;
  input ila_smax_data_loaded;

  wire [0:0]CO;
  wire [3:0]DI;
  wire \FSM_sequential_current_state_reg[1] ;
  wire [7:0]Q;
  wire \addend_reg[0] ;
  wire adder_n_153;
  wire adder_n_154;
  wire adder_n_155;
  wire adder_n_156;
  wire adder_n_157;
  wire adder_n_158;
  wire adder_n_159;
  wire adder_n_160;
  wire adder_n_161;
  wire adder_n_162;
  wire adder_n_163;
  wire adder_n_164;
  wire adder_n_165;
  wire adder_n_166;
  wire adder_n_167;
  wire adder_n_168;
  wire adder_n_169;
  wire adder_n_170;
  wire adder_n_171;
  wire adder_n_172;
  wire adder_n_173;
  wire adder_n_174;
  wire adder_n_175;
  wire adder_n_176;
  wire adder_n_177;
  wire adder_n_178;
  wire adder_n_179;
  wire adder_n_180;
  wire adder_n_181;
  wire adder_n_182;
  wire adder_n_183;
  wire adder_n_184;
  wire almost_full;
  wire controller_n_129;
  wire controller_n_2;
  wire controller_n_3;
  wire controller_n_57;
  wire \current_state_reg[0] ;
  wire [0:0]\cycle_reg[62] ;
  wire [31:0]data_reg;
  wire \data_reg_reg[28] ;
  wire divider_n_124;
  wire divider_n_125;
  wire divider_n_126;
  wire divider_n_127;
  wire divider_n_128;
  wire divider_n_129;
  wire divider_n_130;
  wire divider_n_131;
  wire divider_n_132;
  wire divider_n_133;
  wire divider_n_134;
  wire divider_n_135;
  wire divider_n_136;
  wire divider_n_137;
  wire divider_n_138;
  wire divider_n_139;
  wire divider_n_140;
  wire divider_n_141;
  wire divider_n_142;
  wire divider_n_143;
  wire divider_n_144;
  wire divider_n_145;
  wire divider_n_146;
  wire divider_n_147;
  wire divider_n_148;
  wire divider_n_149;
  wire divider_n_150;
  wire divider_n_151;
  wire divider_n_152;
  wire divider_n_153;
  wire divider_n_154;
  wire divider_n_155;
  wire [31:0]dout;
  wire \element_counter_reg[15] ;
  wire empty;
  wire \epoch_reg[63] ;
  wire exp_func_n_192;
  wire exp_func_n_197;
  wire exp_func_n_282;
  wire full;
  wire [31:0]ila_smax_aw_addend;
  wire [31:0]ila_smax_aw_augend;
  wire [1:0]\ila_smax_aw_fsm_state[1] ;
  wire [3:0]\ila_smax_aw_hold_counter[3] ;
  wire ila_smax_aw_rd_en;
  wire [31:0]ila_smax_aw_sum;
  wire [15:0]\ila_smax_aw_sum_counter[15] ;
  wire [31:0]ila_smax_aw_sum_reg;
  wire ila_smax_aw_summing_complete;
  wire ila_smax_ctrlr_busy;
  wire ila_smax_ctrlr_clear_all;
  wire ila_smax_ctrlr_controller_ready;
  wire [15:0]\ila_smax_ctrlr_element_counter[15] ;
  wire ila_smax_ctrlr_exp_fifo_select;
  wire [31:0]ila_smax_ctrlr_exp_input;
  wire ila_smax_ctrlr_exp_input_valid;
  wire [2:0]ila_smax_ctrlr_fsm_state;
  wire ila_smax_data_loaded;
  wire [31:0]ila_smax_dw_dividend;
  wire ila_smax_dw_division_complete;
  wire [31:0]ila_smax_dw_division_reg;
  wire [31:0]ila_smax_dw_divisor;
  wire [1:0]\ila_smax_dw_fsm_state[1] ;
  wire [4:0]\ila_smax_dw_hold_counter[4] ;
  wire [31:0]ila_smax_dw_quotient;
  wire [15:0]\ila_smax_dw_quotient_counter[15] ;
  wire ila_smax_dw_quotient_result_valid;
  wire ila_smax_dw_rd_en;
  wire [31:0]ila_smax_exp_addend;
  wire [31:0]ila_smax_exp_augend;
  wire [31:0]\ila_smax_exp_data_reg[31] ;
  wire ila_smax_exp_exp_done;
  wire ila_smax_exp_fifo_almost_empty;
  wire [31:0]ila_smax_exp_fifo_data;
  wire ila_smax_exp_fifo_empty;
  wire ila_smax_exp_fifo_full;
  wire ila_smax_exp_fifo_rd_en;
  wire ila_smax_exp_fifo_valid;
  wire ila_smax_exp_fifo_wr_en;
  wire [2:0]\ila_smax_exp_fsm_state[2] ;
  wire ila_smax_exp_function_ready;
  wire [3:0]\ila_smax_exp_hold_counter[3] ;
  wire [31:0]ila_smax_exp_mult_reg;
  wire [31:0]ila_smax_exp_multiplicand_a;
  wire [31:0]ila_smax_exp_multiplicand_b;
  wire [31:0]ila_smax_exp_mux_data;
  wire ila_smax_exp_mux_wr_en;
  wire [31:0]ila_smax_exp_product;
  wire [31:0]ila_smax_exp_sum;
  wire [4:0]\ila_smax_exp_sum_counter[4] ;
  wire ila_smax_exp_valid_result;
  wire ila_smax_inbuff_almost_empty;
  wire ila_smax_inbuff_almost_full;
  wire [31:0]ila_smax_inbuff_din;
  wire [31:0]ila_smax_inbuff_dout;
  wire ila_smax_inbuff_rd_en;
  wire ila_smax_inbuff_valid;
  wire ila_smax_inbuff_wr_en;
  wire ila_smax_outbuff_almost_empty;
  wire ila_smax_outbuff_almost_full;
  wire [31:0]ila_smax_outbuff_din;
  wire [31:0]ila_smax_outbuff_dout;
  wire ila_smax_outbuff_empty;
  wire ila_smax_outbuff_full;
  wire ila_smax_outbuff_rd_en;
  wire ila_smax_outbuff_valid;
  wire ila_smax_outbuff_wr_en;
  wire \input_data_addr_reg_reg[0] ;
  wire m00_axi_aclk;
  wire m00_axi_aresetn;
  wire m00_axi_aresetn_0;
  wire m00_axi_aresetn_1;
  wire m00_axi_rvalid;
  wire m00_axi_wready;
  wire next_state0;
  wire next_state1;
  wire [3:0]\num_elements_reg[15] ;
  wire [3:0]\num_elements_reg[15]_0 ;
  wire [3:0]\num_elements_reg[15]_1 ;
  wire [15:0]\num_elements_reg[15]_2 ;
  wire [3:0]\num_elements_reg[7] ;
  wire [3:0]\num_elements_reg[7]_0 ;
  wire [1:0]out;
  wire outbuff_din1;
  wire outbuff_rd_en;
  wire start;
  wire start_reg;
  wire [1:0]\start_reg_reg[1] ;
  wire \step_counter_reg[3] ;
  wire \sum_counter_reg[0]_rep ;

  final_accelerator_Softmax_Layer_32bit_0_0_softmax_adder_wrapper adder
       (.D({adder_n_153,adder_n_154,adder_n_155,adder_n_156,adder_n_157,adder_n_158,adder_n_159,adder_n_160,adder_n_161,adder_n_162,adder_n_163,adder_n_164,adder_n_165,adder_n_166,adder_n_167,adder_n_168,adder_n_169,adder_n_170,adder_n_171,adder_n_172,adder_n_173,adder_n_174,adder_n_175,adder_n_176,adder_n_177,adder_n_178,adder_n_179,adder_n_180,adder_n_181,adder_n_182,adder_n_183,adder_n_184}),
        .\FSM_sequential_current_state_reg[1] (ila_smax_ctrlr_clear_all),
        .\FSM_sequential_current_state_reg[2] (controller_n_57),
        .Q(\ila_smax_aw_hold_counter[3] ),
        .\current_state_reg[0]_0 (\current_state_reg[0] ),
        .\current_state_reg[1]_0 (\ila_smax_dw_fsm_state[1] ),
        .division_complete_reg(ila_smax_dw_division_complete),
        .dout(dout),
        .empty_fwft_i_reg(ila_smax_exp_fifo_empty),
        .ila_smax_aw_addend(ila_smax_aw_addend),
        .ila_smax_aw_augend(ila_smax_aw_augend),
        .\ila_smax_aw_fsm_state[1] (\ila_smax_aw_fsm_state[1] ),
        .ila_smax_aw_rd_en(ila_smax_aw_rd_en),
        .ila_smax_aw_sum(ila_smax_aw_sum),
        .\ila_smax_aw_sum_counter[15] (\ila_smax_aw_sum_counter[15] ),
        .ila_smax_aw_sum_reg(ila_smax_aw_sum_reg),
        .ila_smax_aw_summing_complete(ila_smax_aw_summing_complete),
        .ila_smax_ctrlr_exp_fifo_select(ila_smax_ctrlr_exp_fifo_select),
        .ila_smax_exp_fifo_wr_en(ila_smax_exp_fifo_wr_en),
        .ila_smax_exp_mux_wr_en(ila_smax_exp_mux_wr_en),
        .m00_axi_aclk(m00_axi_aclk),
        .m00_axi_aresetn(\sum_counter_reg[0]_rep ),
        .m00_axi_aresetn_0(\step_counter_reg[3] ),
        .m00_axi_aresetn_1(m00_axi_aresetn_1),
        .m00_axi_aresetn_2(\data_reg_reg[28] ),
        .m00_axi_aresetn_3(m00_axi_aresetn_0),
        .m00_axi_aresetn_4(\addend_reg[0] ),
        .\num_elements_reg[15] (\num_elements_reg[15]_0 ),
        .\num_elements_reg[15]_0 (\num_elements_reg[15]_2 ),
        .\num_elements_reg[7] (\num_elements_reg[7] ));
  final_accelerator_Softmax_Layer_32bit_0_0_softmax_controller controller
       (.D(data_reg),
        .DI(DI),
        .\FSM_sequential_current_state_reg[0]_0 (exp_func_n_192),
        .\FSM_sequential_current_state_reg[1]_0 (\FSM_sequential_current_state_reg[1] ),
        .\FSM_sequential_current_state_reg[2]_0 (ila_smax_exp_function_ready),
        .\FSM_sequential_current_state_reg[2]_1 (out),
        .Q(\ila_smax_exp_fsm_state[2] [0]),
        .\current_state_reg[0] (controller_n_57),
        .\current_state_reg[0]_0 (controller_n_129),
        .\cycle_reg[62] (\cycle_reg[62] ),
        .division_complete_reg(ila_smax_dw_division_complete),
        .\division_reg_reg[31] ({divider_n_124,divider_n_125,divider_n_126,divider_n_127,divider_n_128,divider_n_129,divider_n_130,divider_n_131,divider_n_132,divider_n_133,divider_n_134,divider_n_135,divider_n_136,divider_n_137,divider_n_138,divider_n_139,divider_n_140,divider_n_141,divider_n_142,divider_n_143,divider_n_144,divider_n_145,divider_n_146,divider_n_147,divider_n_148,divider_n_149,divider_n_150,divider_n_151,divider_n_152,divider_n_153,divider_n_154,divider_n_155}),
        .dout(dout),
        .\element_counter_reg[15]_0 (\element_counter_reg[15] ),
        .empty(empty),
        .\epoch_reg[63] (\epoch_reg[63] ),
        .ila_smax_ctrlr_busy(ila_smax_ctrlr_busy),
        .ila_smax_ctrlr_clear_all(ila_smax_ctrlr_clear_all),
        .ila_smax_ctrlr_controller_ready(ila_smax_ctrlr_controller_ready),
        .\ila_smax_ctrlr_element_counter[15] (\ila_smax_ctrlr_element_counter[15] ),
        .ila_smax_ctrlr_exp_fifo_select(ila_smax_ctrlr_exp_fifo_select),
        .ila_smax_ctrlr_exp_input(ila_smax_ctrlr_exp_input),
        .ila_smax_ctrlr_exp_input_valid(ila_smax_ctrlr_exp_input_valid),
        .ila_smax_ctrlr_fsm_state(ila_smax_ctrlr_fsm_state),
        .ila_smax_data_loaded(ila_smax_data_loaded),
        .ila_smax_exp_exp_done(ila_smax_exp_exp_done),
        .ila_smax_exp_fifo_data(ila_smax_exp_fifo_data),
        .ila_smax_exp_mux_data(ila_smax_exp_mux_data),
        .ila_smax_inbuff_dout(ila_smax_inbuff_dout),
        .ila_smax_inbuff_rd_en(ila_smax_inbuff_rd_en),
        .ila_smax_outbuff_din(ila_smax_outbuff_din),
        .ila_smax_outbuff_wr_en(ila_smax_outbuff_wr_en),
        .m00_axi_aclk(m00_axi_aclk),
        .m00_axi_aresetn(m00_axi_aresetn),
        .m00_axi_aresetn_0(\sum_counter_reg[0]_rep ),
        .m00_axi_aresetn_1(m00_axi_aresetn_0),
        .m00_axi_aresetn_2(m00_axi_aresetn_1),
        .next_state0(next_state0),
        .next_state1(next_state1),
        .\num_elements_reg[15] (\num_elements_reg[15] ),
        .\num_elements_reg[15]_0 (\num_elements_reg[15]_2 ),
        .out({controller_n_2,controller_n_3}),
        .outbuff_din1(outbuff_din1),
        .start(start),
        .start_reg(start_reg),
        .start_reg_0(exp_func_n_282),
        .\start_reg_reg[1] (\start_reg_reg[1] ),
        .\step_counter_reg[4] (exp_func_n_197),
        .summing_complete_reg(ila_smax_aw_summing_complete));
  final_accelerator_Softmax_Layer_32bit_0_0_softmax_divider_wrapper divider
       (.CO(CO),
        .D({adder_n_153,adder_n_154,adder_n_155,adder_n_156,adder_n_157,adder_n_158,adder_n_159,adder_n_160,adder_n_161,adder_n_162,adder_n_163,adder_n_164,adder_n_165,adder_n_166,adder_n_167,adder_n_168,adder_n_169,adder_n_170,adder_n_171,adder_n_172,adder_n_173,adder_n_174,adder_n_175,adder_n_176,adder_n_177,adder_n_178,adder_n_179,adder_n_180,adder_n_181,adder_n_182,adder_n_183,adder_n_184}),
        .\FSM_sequential_current_state_reg[1] (ila_smax_ctrlr_clear_all),
        .Q(\ila_smax_dw_fsm_state[1] ),
        .\current_state_reg[1]_0 (\ila_smax_aw_fsm_state[1] ),
        .dout(dout),
        .empty_fwft_i_reg(ila_smax_exp_fifo_empty),
        .full(ila_smax_outbuff_full),
        .ila_smax_dw_dividend(ila_smax_dw_dividend),
        .ila_smax_dw_division_complete(ila_smax_dw_division_complete),
        .ila_smax_dw_division_reg(ila_smax_dw_division_reg),
        .ila_smax_dw_divisor(ila_smax_dw_divisor),
        .\ila_smax_dw_hold_counter[4] (\ila_smax_dw_hold_counter[4] ),
        .ila_smax_dw_quotient(ila_smax_dw_quotient),
        .\ila_smax_dw_quotient_counter[15] (\ila_smax_dw_quotient_counter[15] ),
        .ila_smax_dw_quotient_result_valid(ila_smax_dw_quotient_result_valid),
        .ila_smax_dw_rd_en(ila_smax_dw_rd_en),
        .ila_smax_exp_fifo_rd_en(ila_smax_exp_fifo_rd_en),
        .ila_smax_exp_fifo_valid(ila_smax_exp_fifo_valid),
        .m00_axi_aclk(m00_axi_aclk),
        .m00_axi_aresetn(\sum_counter_reg[0]_rep ),
        .m00_axi_aresetn_0(m00_axi_aresetn_0),
        .m00_axi_aresetn_1(\step_counter_reg[3] ),
        .m00_axi_aresetn_2(\data_reg_reg[28] ),
        .m00_axi_aresetn_3(\addend_reg[0] ),
        .\num_elements_reg[15] (\num_elements_reg[15]_1 ),
        .\num_elements_reg[15]_0 (\num_elements_reg[15]_2 ),
        .\num_elements_reg[7] (\num_elements_reg[7]_0 ),
        .outbuff_din1(outbuff_din1),
        .\outbuff_din_reg[31] ({divider_n_124,divider_n_125,divider_n_126,divider_n_127,divider_n_128,divider_n_129,divider_n_130,divider_n_131,divider_n_132,divider_n_133,divider_n_134,divider_n_135,divider_n_136,divider_n_137,divider_n_138,divider_n_139,divider_n_140,divider_n_141,divider_n_142,divider_n_143,divider_n_144,divider_n_145,divider_n_146,divider_n_147,divider_n_148,divider_n_149,divider_n_150,divider_n_151,divider_n_152,divider_n_153,divider_n_154,divider_n_155}),
        .summing_complete_reg(ila_smax_aw_summing_complete));
  (* CHECK_LICENSE_TYPE = "softmax_fifo_buffer,fifo_generator_v13_1_3,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "fifo_generator_v13_1_3,Vivado 2016.4" *) 
  final_accelerator_Softmax_Layer_32bit_0_0_softmax_fifo_buffer__xdcDup__1 exp_buffer
       (.almost_empty(ila_smax_exp_fifo_almost_empty),
        .almost_full(almost_full),
        .din(ila_smax_exp_mux_data),
        .dout(dout),
        .empty(ila_smax_exp_fifo_empty),
        .full(ila_smax_exp_fifo_full),
        .rd_clk(m00_axi_aclk),
        .rd_en(ila_smax_exp_fifo_rd_en),
        .rst(\step_counter_reg[3] ),
        .valid(ila_smax_exp_fifo_valid),
        .wr_clk(m00_axi_aclk),
        .wr_en(ila_smax_exp_mux_wr_en));
  final_accelerator_Softmax_Layer_32bit_0_0_exponential_function exp_func
       (.D(data_reg),
        .\FSM_sequential_current_state_reg[0]_0 (exp_func_n_282),
        .\FSM_sequential_current_state_reg[1]_0 ({controller_n_2,controller_n_3}),
        .Q(Q),
        .\addend_reg[0]_0 (\addend_reg[0] ),
        .almost_full(almost_full),
        .\current_state_reg[0]_0 (controller_n_129),
        .\data_reg_reg[28]_0 (\data_reg_reg[28] ),
        .empty(empty),
        .full(ila_smax_exp_fifo_full),
        .ila_smax_exp_addend(ila_smax_exp_addend),
        .ila_smax_exp_augend(ila_smax_exp_augend),
        .\ila_smax_exp_data_reg[31] (\ila_smax_exp_data_reg[31] ),
        .ila_smax_exp_exp_done(ila_smax_exp_exp_done),
        .ila_smax_exp_fifo_data(ila_smax_exp_fifo_data),
        .ila_smax_exp_fifo_wr_en(ila_smax_exp_fifo_wr_en),
        .\ila_smax_exp_fsm_state[2] (\ila_smax_exp_fsm_state[2] ),
        .ila_smax_exp_function_ready(ila_smax_exp_function_ready),
        .\ila_smax_exp_hold_counter[3] (\ila_smax_exp_hold_counter[3] ),
        .ila_smax_exp_mult_reg(ila_smax_exp_mult_reg),
        .ila_smax_exp_multiplicand_a(ila_smax_exp_multiplicand_a),
        .ila_smax_exp_multiplicand_b(ila_smax_exp_multiplicand_b),
        .ila_smax_exp_sum(ila_smax_exp_sum),
        .\ila_smax_exp_sum_counter[4] (\ila_smax_exp_sum_counter[4] ),
        .ila_smax_exp_valid_result(ila_smax_exp_valid_result),
        .m00_axi_aclk(m00_axi_aclk),
        .m00_axi_aresetn(m00_axi_aresetn),
        .m00_axi_aresetn_0(m00_axi_aresetn_0),
        .next_state0(next_state0),
        .out(exp_func_n_192),
        .result(ila_smax_exp_product),
        .start(start),
        .\step_counter_reg[0]_0 (exp_func_n_197),
        .\step_counter_reg[3]_0 (\step_counter_reg[3] ),
        .\sum_counter_reg[0]_rep_0 (\sum_counter_reg[0]_rep ),
        .summing_complete_reg(ila_smax_aw_summing_complete));
  (* CHECK_LICENSE_TYPE = "softmax_fifo_buffer,fifo_generator_v13_1_3,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "fifo_generator_v13_1_3,Vivado 2016.4" *) 
  final_accelerator_Softmax_Layer_32bit_0_0_softmax_fifo_buffer__xdcDup__2 input_buffer
       (.almost_empty(ila_smax_inbuff_almost_empty),
        .almost_full(ila_smax_inbuff_almost_full),
        .din(ila_smax_inbuff_din),
        .dout(ila_smax_inbuff_dout),
        .empty(empty),
        .full(full),
        .rd_clk(m00_axi_aclk),
        .rd_en(ila_smax_inbuff_rd_en),
        .rst(\step_counter_reg[3] ),
        .valid(ila_smax_inbuff_valid),
        .wr_clk(m00_axi_aclk),
        .wr_en(ila_smax_inbuff_wr_en));
  LUT2 #(
    .INIT(4'h2)) 
    \input_data_addr_reg[31]_i_3 
       (.I0(m00_axi_rvalid),
        .I1(full),
        .O(\input_data_addr_reg_reg[0] ));
  LUT3 #(
    .INIT(8'h40)) 
    \m00_axi_wdata[31]_INST_0_i_1 
       (.I0(ila_smax_outbuff_empty),
        .I1(ila_smax_outbuff_valid),
        .I2(m00_axi_wready),
        .O(outbuff_rd_en));
  (* CHECK_LICENSE_TYPE = "softmax_fifo_buffer,fifo_generator_v13_1_3,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "fifo_generator_v13_1_3,Vivado 2016.4" *) 
  final_accelerator_Softmax_Layer_32bit_0_0_softmax_fifo_buffer output_buffer
       (.almost_empty(ila_smax_outbuff_almost_empty),
        .almost_full(ila_smax_outbuff_almost_full),
        .din(ila_smax_outbuff_din),
        .dout(ila_smax_outbuff_dout),
        .empty(ila_smax_outbuff_empty),
        .full(ila_smax_outbuff_full),
        .rd_clk(m00_axi_aclk),
        .rd_en(ila_smax_outbuff_rd_en),
        .rst(m00_axi_aresetn_0),
        .valid(ila_smax_outbuff_valid),
        .wr_clk(m00_axi_aclk),
        .wr_en(ila_smax_outbuff_wr_en));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_blk_mem_gen_generic_cstr
   (D,
    wr_clk,
    rd_clk,
    WEA,
    tmp_ram_rd_en,
    SR,
    Q,
    \gc1.count_d2_reg[9] ,
    din);
  output [31:0]D;
  input wr_clk;
  input rd_clk;
  input [0:0]WEA;
  input tmp_ram_rd_en;
  input [0:0]SR;
  input [9:0]Q;
  input [9:0]\gc1.count_d2_reg[9] ;
  input [31:0]din;

  wire [31:0]D;
  wire [9:0]Q;
  wire [0:0]SR;
  wire [0:0]WEA;
  wire [31:0]din;
  wire [9:0]\gc1.count_d2_reg[9] ;
  wire rd_clk;
  wire tmp_ram_rd_en;
  wire wr_clk;

  final_accelerator_Softmax_Layer_32bit_0_0_blk_mem_gen_prim_width \ramloop[0].ram.r 
       (.D(D),
        .Q(Q),
        .SR(SR),
        .WEA(WEA),
        .din(din),
        .\gc1.count_d2_reg[9] (\gc1.count_d2_reg[9] ),
        .rd_clk(rd_clk),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .wr_clk(wr_clk));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_blk_mem_gen_generic_cstr_22
   (D,
    wr_clk,
    rd_clk,
    WEA,
    tmp_ram_rd_en,
    SR,
    Q,
    \gc1.count_d2_reg[9] ,
    din);
  output [31:0]D;
  input wr_clk;
  input rd_clk;
  input [0:0]WEA;
  input tmp_ram_rd_en;
  input [0:0]SR;
  input [9:0]Q;
  input [9:0]\gc1.count_d2_reg[9] ;
  input [31:0]din;

  wire [31:0]D;
  wire [9:0]Q;
  wire [0:0]SR;
  wire [0:0]WEA;
  wire [31:0]din;
  wire [9:0]\gc1.count_d2_reg[9] ;
  wire rd_clk;
  wire tmp_ram_rd_en;
  wire wr_clk;

  final_accelerator_Softmax_Layer_32bit_0_0_blk_mem_gen_prim_width_23 \ramloop[0].ram.r 
       (.D(D),
        .Q(Q),
        .SR(SR),
        .WEA(WEA),
        .din(din),
        .\gc1.count_d2_reg[9] (\gc1.count_d2_reg[9] ),
        .rd_clk(rd_clk),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .wr_clk(wr_clk));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_blk_mem_gen_generic_cstr_54
   (D,
    wr_clk,
    rd_clk,
    WEA,
    tmp_ram_rd_en,
    SR,
    Q,
    \gc1.count_d2_reg[9] ,
    din);
  output [31:0]D;
  input wr_clk;
  input rd_clk;
  input [0:0]WEA;
  input tmp_ram_rd_en;
  input [0:0]SR;
  input [9:0]Q;
  input [9:0]\gc1.count_d2_reg[9] ;
  input [31:0]din;

  wire [31:0]D;
  wire [9:0]Q;
  wire [0:0]SR;
  wire [0:0]WEA;
  wire [31:0]din;
  wire [9:0]\gc1.count_d2_reg[9] ;
  wire rd_clk;
  wire tmp_ram_rd_en;
  wire wr_clk;

  final_accelerator_Softmax_Layer_32bit_0_0_blk_mem_gen_prim_width_55 \ramloop[0].ram.r 
       (.D(D),
        .Q(Q),
        .SR(SR),
        .WEA(WEA),
        .din(din),
        .\gc1.count_d2_reg[9] (\gc1.count_d2_reg[9] ),
        .rd_clk(rd_clk),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .wr_clk(wr_clk));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_blk_mem_gen_prim_width
   (D,
    wr_clk,
    rd_clk,
    WEA,
    tmp_ram_rd_en,
    SR,
    Q,
    \gc1.count_d2_reg[9] ,
    din);
  output [31:0]D;
  input wr_clk;
  input rd_clk;
  input [0:0]WEA;
  input tmp_ram_rd_en;
  input [0:0]SR;
  input [9:0]Q;
  input [9:0]\gc1.count_d2_reg[9] ;
  input [31:0]din;

  wire [31:0]D;
  wire [9:0]Q;
  wire [0:0]SR;
  wire [0:0]WEA;
  wire [31:0]din;
  wire [9:0]\gc1.count_d2_reg[9] ;
  wire rd_clk;
  wire tmp_ram_rd_en;
  wire wr_clk;

  final_accelerator_Softmax_Layer_32bit_0_0_blk_mem_gen_prim_wrapper \prim_noinit.ram 
       (.D(D),
        .Q(Q),
        .SR(SR),
        .WEA(WEA),
        .din(din),
        .\gc1.count_d2_reg[9] (\gc1.count_d2_reg[9] ),
        .rd_clk(rd_clk),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .wr_clk(wr_clk));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_blk_mem_gen_prim_width_23
   (D,
    wr_clk,
    rd_clk,
    WEA,
    tmp_ram_rd_en,
    SR,
    Q,
    \gc1.count_d2_reg[9] ,
    din);
  output [31:0]D;
  input wr_clk;
  input rd_clk;
  input [0:0]WEA;
  input tmp_ram_rd_en;
  input [0:0]SR;
  input [9:0]Q;
  input [9:0]\gc1.count_d2_reg[9] ;
  input [31:0]din;

  wire [31:0]D;
  wire [9:0]Q;
  wire [0:0]SR;
  wire [0:0]WEA;
  wire [31:0]din;
  wire [9:0]\gc1.count_d2_reg[9] ;
  wire rd_clk;
  wire tmp_ram_rd_en;
  wire wr_clk;

  final_accelerator_Softmax_Layer_32bit_0_0_blk_mem_gen_prim_wrapper_24 \prim_noinit.ram 
       (.D(D),
        .Q(Q),
        .SR(SR),
        .WEA(WEA),
        .din(din),
        .\gc1.count_d2_reg[9] (\gc1.count_d2_reg[9] ),
        .rd_clk(rd_clk),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .wr_clk(wr_clk));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_blk_mem_gen_prim_width_55
   (D,
    wr_clk,
    rd_clk,
    WEA,
    tmp_ram_rd_en,
    SR,
    Q,
    \gc1.count_d2_reg[9] ,
    din);
  output [31:0]D;
  input wr_clk;
  input rd_clk;
  input [0:0]WEA;
  input tmp_ram_rd_en;
  input [0:0]SR;
  input [9:0]Q;
  input [9:0]\gc1.count_d2_reg[9] ;
  input [31:0]din;

  wire [31:0]D;
  wire [9:0]Q;
  wire [0:0]SR;
  wire [0:0]WEA;
  wire [31:0]din;
  wire [9:0]\gc1.count_d2_reg[9] ;
  wire rd_clk;
  wire tmp_ram_rd_en;
  wire wr_clk;

  final_accelerator_Softmax_Layer_32bit_0_0_blk_mem_gen_prim_wrapper_56 \prim_noinit.ram 
       (.D(D),
        .Q(Q),
        .SR(SR),
        .WEA(WEA),
        .din(din),
        .\gc1.count_d2_reg[9] (\gc1.count_d2_reg[9] ),
        .rd_clk(rd_clk),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .wr_clk(wr_clk));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_blk_mem_gen_prim_wrapper
   (D,
    wr_clk,
    rd_clk,
    WEA,
    tmp_ram_rd_en,
    SR,
    Q,
    \gc1.count_d2_reg[9] ,
    din);
  output [31:0]D;
  input wr_clk;
  input rd_clk;
  input [0:0]WEA;
  input tmp_ram_rd_en;
  input [0:0]SR;
  input [9:0]Q;
  input [9:0]\gc1.count_d2_reg[9] ;
  input [31:0]din;

  wire [31:0]D;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_n_89 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_n_90 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_n_91 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_n_92 ;
  wire [9:0]Q;
  wire [0:0]SR;
  wire [0:0]WEA;
  wire [31:0]din;
  wire [9:0]\gc1.count_d2_reg[9] ;
  wire rd_clk;
  wire tmp_ram_rd_en;
  wire wr_clk;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DBITERR_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOADO_UNCONNECTED ;
  wire [3:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOPADOP_UNCONNECTED ;
  wire [7:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_RDADDRECC_UNCONNECTED ;

  (* CLOCK_DOMAINS = "COMMON" *) 
  (* box_type = "PRIMITIVE" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(36),
    .READ_WIDTH_B(36),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(36),
    .WRITE_WIDTH_B(36)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram 
       (.ADDRARDADDR({1'b1,Q,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,\gc1.count_d2_reg[9] ,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(wr_clk),
        .CLKBWRCLK(rd_clk),
        .DBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DBITERR_UNCONNECTED ),
        .DIADI(din),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOADO_UNCONNECTED [31:0]),
        .DOBDO(D),
        .DOPADOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP({\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_n_89 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_n_90 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_n_91 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_n_92 }),
        .ECCPARITY(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(WEA),
        .ENBWREN(tmp_ram_rd_en),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(SR),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_SBITERR_UNCONNECTED ),
        .WEA({WEA,WEA,WEA,WEA}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_blk_mem_gen_prim_wrapper_24
   (D,
    wr_clk,
    rd_clk,
    WEA,
    tmp_ram_rd_en,
    SR,
    Q,
    \gc1.count_d2_reg[9] ,
    din);
  output [31:0]D;
  input wr_clk;
  input rd_clk;
  input [0:0]WEA;
  input tmp_ram_rd_en;
  input [0:0]SR;
  input [9:0]Q;
  input [9:0]\gc1.count_d2_reg[9] ;
  input [31:0]din;

  wire [31:0]D;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_n_89 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_n_90 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_n_91 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_n_92 ;
  wire [9:0]Q;
  wire [0:0]SR;
  wire [0:0]WEA;
  wire [31:0]din;
  wire [9:0]\gc1.count_d2_reg[9] ;
  wire rd_clk;
  wire tmp_ram_rd_en;
  wire wr_clk;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DBITERR_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOADO_UNCONNECTED ;
  wire [3:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOPADOP_UNCONNECTED ;
  wire [7:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_RDADDRECC_UNCONNECTED ;

  (* CLOCK_DOMAINS = "COMMON" *) 
  (* box_type = "PRIMITIVE" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(36),
    .READ_WIDTH_B(36),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(36),
    .WRITE_WIDTH_B(36)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram 
       (.ADDRARDADDR({1'b1,Q,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,\gc1.count_d2_reg[9] ,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(wr_clk),
        .CLKBWRCLK(rd_clk),
        .DBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DBITERR_UNCONNECTED ),
        .DIADI(din),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOADO_UNCONNECTED [31:0]),
        .DOBDO(D),
        .DOPADOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP({\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_n_89 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_n_90 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_n_91 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_n_92 }),
        .ECCPARITY(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(WEA),
        .ENBWREN(tmp_ram_rd_en),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(SR),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_SBITERR_UNCONNECTED ),
        .WEA({WEA,WEA,WEA,WEA}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_blk_mem_gen_prim_wrapper_56
   (D,
    wr_clk,
    rd_clk,
    WEA,
    tmp_ram_rd_en,
    SR,
    Q,
    \gc1.count_d2_reg[9] ,
    din);
  output [31:0]D;
  input wr_clk;
  input rd_clk;
  input [0:0]WEA;
  input tmp_ram_rd_en;
  input [0:0]SR;
  input [9:0]Q;
  input [9:0]\gc1.count_d2_reg[9] ;
  input [31:0]din;

  wire [31:0]D;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_n_89 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_n_90 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_n_91 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_n_92 ;
  wire [9:0]Q;
  wire [0:0]SR;
  wire [0:0]WEA;
  wire [31:0]din;
  wire [9:0]\gc1.count_d2_reg[9] ;
  wire rd_clk;
  wire tmp_ram_rd_en;
  wire wr_clk;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DBITERR_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOADO_UNCONNECTED ;
  wire [3:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOPADOP_UNCONNECTED ;
  wire [7:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_RDADDRECC_UNCONNECTED ;

  (* CLOCK_DOMAINS = "COMMON" *) 
  (* box_type = "PRIMITIVE" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(36),
    .READ_WIDTH_B(36),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(36),
    .WRITE_WIDTH_B(36)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram 
       (.ADDRARDADDR({1'b1,Q,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,\gc1.count_d2_reg[9] ,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(wr_clk),
        .CLKBWRCLK(rd_clk),
        .DBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DBITERR_UNCONNECTED ),
        .DIADI(din),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOADO_UNCONNECTED [31:0]),
        .DOBDO(D),
        .DOPADOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP({\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_n_89 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_n_90 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_n_91 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_n_92 }),
        .ECCPARITY(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(WEA),
        .ENBWREN(tmp_ram_rd_en),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(SR),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_SBITERR_UNCONNECTED ),
        .WEA({WEA,WEA,WEA,WEA}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_blk_mem_gen_top
   (D,
    wr_clk,
    rd_clk,
    WEA,
    tmp_ram_rd_en,
    SR,
    Q,
    \gc1.count_d2_reg[9] ,
    din);
  output [31:0]D;
  input wr_clk;
  input rd_clk;
  input [0:0]WEA;
  input tmp_ram_rd_en;
  input [0:0]SR;
  input [9:0]Q;
  input [9:0]\gc1.count_d2_reg[9] ;
  input [31:0]din;

  wire [31:0]D;
  wire [9:0]Q;
  wire [0:0]SR;
  wire [0:0]WEA;
  wire [31:0]din;
  wire [9:0]\gc1.count_d2_reg[9] ;
  wire rd_clk;
  wire tmp_ram_rd_en;
  wire wr_clk;

  final_accelerator_Softmax_Layer_32bit_0_0_blk_mem_gen_generic_cstr \valid.cstr 
       (.D(D),
        .Q(Q),
        .SR(SR),
        .WEA(WEA),
        .din(din),
        .\gc1.count_d2_reg[9] (\gc1.count_d2_reg[9] ),
        .rd_clk(rd_clk),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .wr_clk(wr_clk));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_blk_mem_gen_top_21
   (D,
    wr_clk,
    rd_clk,
    WEA,
    tmp_ram_rd_en,
    SR,
    Q,
    \gc1.count_d2_reg[9] ,
    din);
  output [31:0]D;
  input wr_clk;
  input rd_clk;
  input [0:0]WEA;
  input tmp_ram_rd_en;
  input [0:0]SR;
  input [9:0]Q;
  input [9:0]\gc1.count_d2_reg[9] ;
  input [31:0]din;

  wire [31:0]D;
  wire [9:0]Q;
  wire [0:0]SR;
  wire [0:0]WEA;
  wire [31:0]din;
  wire [9:0]\gc1.count_d2_reg[9] ;
  wire rd_clk;
  wire tmp_ram_rd_en;
  wire wr_clk;

  final_accelerator_Softmax_Layer_32bit_0_0_blk_mem_gen_generic_cstr_22 \valid.cstr 
       (.D(D),
        .Q(Q),
        .SR(SR),
        .WEA(WEA),
        .din(din),
        .\gc1.count_d2_reg[9] (\gc1.count_d2_reg[9] ),
        .rd_clk(rd_clk),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .wr_clk(wr_clk));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_blk_mem_gen_top_53
   (D,
    wr_clk,
    rd_clk,
    WEA,
    tmp_ram_rd_en,
    SR,
    Q,
    \gc1.count_d2_reg[9] ,
    din);
  output [31:0]D;
  input wr_clk;
  input rd_clk;
  input [0:0]WEA;
  input tmp_ram_rd_en;
  input [0:0]SR;
  input [9:0]Q;
  input [9:0]\gc1.count_d2_reg[9] ;
  input [31:0]din;

  wire [31:0]D;
  wire [9:0]Q;
  wire [0:0]SR;
  wire [0:0]WEA;
  wire [31:0]din;
  wire [9:0]\gc1.count_d2_reg[9] ;
  wire rd_clk;
  wire tmp_ram_rd_en;
  wire wr_clk;

  final_accelerator_Softmax_Layer_32bit_0_0_blk_mem_gen_generic_cstr_54 \valid.cstr 
       (.D(D),
        .Q(Q),
        .SR(SR),
        .WEA(WEA),
        .din(din),
        .\gc1.count_d2_reg[9] (\gc1.count_d2_reg[9] ),
        .rd_clk(rd_clk),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .wr_clk(wr_clk));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_3_5" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_blk_mem_gen_v8_3_5
   (D,
    wr_clk,
    rd_clk,
    WEA,
    tmp_ram_rd_en,
    SR,
    Q,
    \gc1.count_d2_reg[9] ,
    din);
  output [31:0]D;
  input wr_clk;
  input rd_clk;
  input [0:0]WEA;
  input tmp_ram_rd_en;
  input [0:0]SR;
  input [9:0]Q;
  input [9:0]\gc1.count_d2_reg[9] ;
  input [31:0]din;

  wire [31:0]D;
  wire [9:0]Q;
  wire [0:0]SR;
  wire [0:0]WEA;
  wire [31:0]din;
  wire [9:0]\gc1.count_d2_reg[9] ;
  wire rd_clk;
  wire tmp_ram_rd_en;
  wire wr_clk;

  final_accelerator_Softmax_Layer_32bit_0_0_blk_mem_gen_v8_3_5_synth inst_blk_mem_gen
       (.D(D),
        .Q(Q),
        .SR(SR),
        .WEA(WEA),
        .din(din),
        .\gc1.count_d2_reg[9] (\gc1.count_d2_reg[9] ),
        .rd_clk(rd_clk),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .wr_clk(wr_clk));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_3_5" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_blk_mem_gen_v8_3_5_19
   (D,
    wr_clk,
    rd_clk,
    WEA,
    tmp_ram_rd_en,
    SR,
    Q,
    \gc1.count_d2_reg[9] ,
    din);
  output [31:0]D;
  input wr_clk;
  input rd_clk;
  input [0:0]WEA;
  input tmp_ram_rd_en;
  input [0:0]SR;
  input [9:0]Q;
  input [9:0]\gc1.count_d2_reg[9] ;
  input [31:0]din;

  wire [31:0]D;
  wire [9:0]Q;
  wire [0:0]SR;
  wire [0:0]WEA;
  wire [31:0]din;
  wire [9:0]\gc1.count_d2_reg[9] ;
  wire rd_clk;
  wire tmp_ram_rd_en;
  wire wr_clk;

  final_accelerator_Softmax_Layer_32bit_0_0_blk_mem_gen_v8_3_5_synth_20 inst_blk_mem_gen
       (.D(D),
        .Q(Q),
        .SR(SR),
        .WEA(WEA),
        .din(din),
        .\gc1.count_d2_reg[9] (\gc1.count_d2_reg[9] ),
        .rd_clk(rd_clk),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .wr_clk(wr_clk));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_3_5" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_blk_mem_gen_v8_3_5_51
   (D,
    wr_clk,
    rd_clk,
    WEA,
    tmp_ram_rd_en,
    SR,
    Q,
    \gc1.count_d2_reg[9] ,
    din);
  output [31:0]D;
  input wr_clk;
  input rd_clk;
  input [0:0]WEA;
  input tmp_ram_rd_en;
  input [0:0]SR;
  input [9:0]Q;
  input [9:0]\gc1.count_d2_reg[9] ;
  input [31:0]din;

  wire [31:0]D;
  wire [9:0]Q;
  wire [0:0]SR;
  wire [0:0]WEA;
  wire [31:0]din;
  wire [9:0]\gc1.count_d2_reg[9] ;
  wire rd_clk;
  wire tmp_ram_rd_en;
  wire wr_clk;

  final_accelerator_Softmax_Layer_32bit_0_0_blk_mem_gen_v8_3_5_synth_52 inst_blk_mem_gen
       (.D(D),
        .Q(Q),
        .SR(SR),
        .WEA(WEA),
        .din(din),
        .\gc1.count_d2_reg[9] (\gc1.count_d2_reg[9] ),
        .rd_clk(rd_clk),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .wr_clk(wr_clk));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_3_5_synth" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_blk_mem_gen_v8_3_5_synth
   (D,
    wr_clk,
    rd_clk,
    WEA,
    tmp_ram_rd_en,
    SR,
    Q,
    \gc1.count_d2_reg[9] ,
    din);
  output [31:0]D;
  input wr_clk;
  input rd_clk;
  input [0:0]WEA;
  input tmp_ram_rd_en;
  input [0:0]SR;
  input [9:0]Q;
  input [9:0]\gc1.count_d2_reg[9] ;
  input [31:0]din;

  wire [31:0]D;
  wire [9:0]Q;
  wire [0:0]SR;
  wire [0:0]WEA;
  wire [31:0]din;
  wire [9:0]\gc1.count_d2_reg[9] ;
  wire rd_clk;
  wire tmp_ram_rd_en;
  wire wr_clk;

  final_accelerator_Softmax_Layer_32bit_0_0_blk_mem_gen_top \gnbram.gnativebmg.native_blk_mem_gen 
       (.D(D),
        .Q(Q),
        .SR(SR),
        .WEA(WEA),
        .din(din),
        .\gc1.count_d2_reg[9] (\gc1.count_d2_reg[9] ),
        .rd_clk(rd_clk),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .wr_clk(wr_clk));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_3_5_synth" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_blk_mem_gen_v8_3_5_synth_20
   (D,
    wr_clk,
    rd_clk,
    WEA,
    tmp_ram_rd_en,
    SR,
    Q,
    \gc1.count_d2_reg[9] ,
    din);
  output [31:0]D;
  input wr_clk;
  input rd_clk;
  input [0:0]WEA;
  input tmp_ram_rd_en;
  input [0:0]SR;
  input [9:0]Q;
  input [9:0]\gc1.count_d2_reg[9] ;
  input [31:0]din;

  wire [31:0]D;
  wire [9:0]Q;
  wire [0:0]SR;
  wire [0:0]WEA;
  wire [31:0]din;
  wire [9:0]\gc1.count_d2_reg[9] ;
  wire rd_clk;
  wire tmp_ram_rd_en;
  wire wr_clk;

  final_accelerator_Softmax_Layer_32bit_0_0_blk_mem_gen_top_21 \gnbram.gnativebmg.native_blk_mem_gen 
       (.D(D),
        .Q(Q),
        .SR(SR),
        .WEA(WEA),
        .din(din),
        .\gc1.count_d2_reg[9] (\gc1.count_d2_reg[9] ),
        .rd_clk(rd_clk),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .wr_clk(wr_clk));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_3_5_synth" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_blk_mem_gen_v8_3_5_synth_52
   (D,
    wr_clk,
    rd_clk,
    WEA,
    tmp_ram_rd_en,
    SR,
    Q,
    \gc1.count_d2_reg[9] ,
    din);
  output [31:0]D;
  input wr_clk;
  input rd_clk;
  input [0:0]WEA;
  input tmp_ram_rd_en;
  input [0:0]SR;
  input [9:0]Q;
  input [9:0]\gc1.count_d2_reg[9] ;
  input [31:0]din;

  wire [31:0]D;
  wire [9:0]Q;
  wire [0:0]SR;
  wire [0:0]WEA;
  wire [31:0]din;
  wire [9:0]\gc1.count_d2_reg[9] ;
  wire rd_clk;
  wire tmp_ram_rd_en;
  wire wr_clk;

  final_accelerator_Softmax_Layer_32bit_0_0_blk_mem_gen_top_53 \gnbram.gnativebmg.native_blk_mem_gen 
       (.D(D),
        .Q(Q),
        .SR(SR),
        .WEA(WEA),
        .din(din),
        .\gc1.count_d2_reg[9] (\gc1.count_d2_reg[9] ),
        .rd_clk(rd_clk),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .wr_clk(wr_clk));
endmodule

(* ORIG_REF_NAME = "clk_x_pntrs" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_clk_x_pntrs
   (WR_PNTR_RD,
    RD_PNTR_WR,
    Q,
    \gc1.count_d2_reg[9] ,
    wr_clk,
    AR,
    rd_clk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [9:0]WR_PNTR_RD;
  output [9:0]RD_PNTR_WR;
  input [9:0]Q;
  input [9:0]\gc1.count_d2_reg[9] ;
  input wr_clk;
  input [0:0]AR;
  input rd_clk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  wire [0:0]AR;
  wire [9:0]Q;
  wire [9:0]RD_PNTR_WR;
  wire [9:0]WR_PNTR_RD;
  wire [8:0]bin2gray;
  wire [9:0]\gc1.count_d2_reg[9] ;
  wire \gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_1 ;
  wire \gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_2 ;
  wire \gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_3 ;
  wire \gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_4 ;
  wire \gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_5 ;
  wire \gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_6 ;
  wire \gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_7 ;
  wire \gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_8 ;
  wire \gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_9 ;
  wire \gnxpm_cdc.rd_pntr_gc[0]_i_1_n_0 ;
  wire \gnxpm_cdc.rd_pntr_gc[1]_i_1_n_0 ;
  wire \gnxpm_cdc.rd_pntr_gc[2]_i_1_n_0 ;
  wire \gnxpm_cdc.rd_pntr_gc[3]_i_1_n_0 ;
  wire \gnxpm_cdc.rd_pntr_gc[4]_i_1_n_0 ;
  wire \gnxpm_cdc.rd_pntr_gc[5]_i_1_n_0 ;
  wire \gnxpm_cdc.rd_pntr_gc[6]_i_1_n_0 ;
  wire \gnxpm_cdc.rd_pntr_gc[7]_i_1_n_0 ;
  wire \gnxpm_cdc.rd_pntr_gc[8]_i_1_n_0 ;
  wire [7:0]gray2bin;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;
  wire p_0_out;
  wire [9:0]p_3_out;
  wire [9:0]p_4_out;
  wire [9:9]p_5_out;
  wire [9:9]p_6_out;
  wire rd_clk;
  wire [9:0]rd_pntr_gc;
  wire wr_clk;
  wire [9:0]wr_pntr_gc;

  final_accelerator_Softmax_Layer_32bit_0_0_synchronizer_ff__parameterized0 \gnxpm_cdc.gsync_stage[1].rd_stg_inst 
       (.D(p_3_out),
        .Q(wr_pntr_gc),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .rd_clk(rd_clk));
  final_accelerator_Softmax_Layer_32bit_0_0_synchronizer_ff__parameterized1 \gnxpm_cdc.gsync_stage[1].wr_stg_inst 
       (.AR(AR),
        .D(p_4_out),
        .Q(rd_pntr_gc),
        .wr_clk(wr_clk));
  final_accelerator_Softmax_Layer_32bit_0_0_synchronizer_ff__parameterized2 \gnxpm_cdc.gsync_stage[2].rd_stg_inst 
       (.D(p_3_out),
        .\gnxpm_cdc.wr_pntr_bin_reg[8] ({p_0_out,gray2bin}),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .out(p_5_out),
        .rd_clk(rd_clk));
  final_accelerator_Softmax_Layer_32bit_0_0_synchronizer_ff__parameterized3 \gnxpm_cdc.gsync_stage[2].wr_stg_inst 
       (.AR(AR),
        .D(p_4_out),
        .\gnxpm_cdc.rd_pntr_bin_reg[8] ({\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_1 ,\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_2 ,\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_3 ,\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_4 ,\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_5 ,\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_6 ,\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_7 ,\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_8 ,\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_9 }),
        .out(p_6_out),
        .wr_clk(wr_clk));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_bin_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_9 ),
        .Q(RD_PNTR_WR[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_bin_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_8 ),
        .Q(RD_PNTR_WR[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_bin_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_7 ),
        .Q(RD_PNTR_WR[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_bin_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_6 ),
        .Q(RD_PNTR_WR[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_bin_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_5 ),
        .Q(RD_PNTR_WR[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_bin_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_4 ),
        .Q(RD_PNTR_WR[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_bin_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_3 ),
        .Q(RD_PNTR_WR[6]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_bin_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_2 ),
        .Q(RD_PNTR_WR[7]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_bin_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_1 ),
        .Q(RD_PNTR_WR[8]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_bin_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(p_6_out),
        .Q(RD_PNTR_WR[9]));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.rd_pntr_gc[0]_i_1 
       (.I0(\gc1.count_d2_reg[9] [0]),
        .I1(\gc1.count_d2_reg[9] [1]),
        .O(\gnxpm_cdc.rd_pntr_gc[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.rd_pntr_gc[1]_i_1 
       (.I0(\gc1.count_d2_reg[9] [1]),
        .I1(\gc1.count_d2_reg[9] [2]),
        .O(\gnxpm_cdc.rd_pntr_gc[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.rd_pntr_gc[2]_i_1 
       (.I0(\gc1.count_d2_reg[9] [2]),
        .I1(\gc1.count_d2_reg[9] [3]),
        .O(\gnxpm_cdc.rd_pntr_gc[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.rd_pntr_gc[3]_i_1 
       (.I0(\gc1.count_d2_reg[9] [3]),
        .I1(\gc1.count_d2_reg[9] [4]),
        .O(\gnxpm_cdc.rd_pntr_gc[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.rd_pntr_gc[4]_i_1 
       (.I0(\gc1.count_d2_reg[9] [4]),
        .I1(\gc1.count_d2_reg[9] [5]),
        .O(\gnxpm_cdc.rd_pntr_gc[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.rd_pntr_gc[5]_i_1 
       (.I0(\gc1.count_d2_reg[9] [5]),
        .I1(\gc1.count_d2_reg[9] [6]),
        .O(\gnxpm_cdc.rd_pntr_gc[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.rd_pntr_gc[6]_i_1 
       (.I0(\gc1.count_d2_reg[9] [6]),
        .I1(\gc1.count_d2_reg[9] [7]),
        .O(\gnxpm_cdc.rd_pntr_gc[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.rd_pntr_gc[7]_i_1 
       (.I0(\gc1.count_d2_reg[9] [7]),
        .I1(\gc1.count_d2_reg[9] [8]),
        .O(\gnxpm_cdc.rd_pntr_gc[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.rd_pntr_gc[8]_i_1 
       (.I0(\gc1.count_d2_reg[9] [8]),
        .I1(\gc1.count_d2_reg[9] [9]),
        .O(\gnxpm_cdc.rd_pntr_gc[8]_i_1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_gc_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gnxpm_cdc.rd_pntr_gc[0]_i_1_n_0 ),
        .Q(rd_pntr_gc[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_gc_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gnxpm_cdc.rd_pntr_gc[1]_i_1_n_0 ),
        .Q(rd_pntr_gc[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_gc_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gnxpm_cdc.rd_pntr_gc[2]_i_1_n_0 ),
        .Q(rd_pntr_gc[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_gc_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gnxpm_cdc.rd_pntr_gc[3]_i_1_n_0 ),
        .Q(rd_pntr_gc[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_gc_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gnxpm_cdc.rd_pntr_gc[4]_i_1_n_0 ),
        .Q(rd_pntr_gc[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_gc_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gnxpm_cdc.rd_pntr_gc[5]_i_1_n_0 ),
        .Q(rd_pntr_gc[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_gc_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gnxpm_cdc.rd_pntr_gc[6]_i_1_n_0 ),
        .Q(rd_pntr_gc[6]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_gc_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gnxpm_cdc.rd_pntr_gc[7]_i_1_n_0 ),
        .Q(rd_pntr_gc[7]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_gc_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gnxpm_cdc.rd_pntr_gc[8]_i_1_n_0 ),
        .Q(rd_pntr_gc[8]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_gc_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gc1.count_d2_reg[9] [9]),
        .Q(rd_pntr_gc[9]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_bin_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(gray2bin[0]),
        .Q(WR_PNTR_RD[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_bin_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(gray2bin[1]),
        .Q(WR_PNTR_RD[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_bin_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(gray2bin[2]),
        .Q(WR_PNTR_RD[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_bin_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(gray2bin[3]),
        .Q(WR_PNTR_RD[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_bin_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(gray2bin[4]),
        .Q(WR_PNTR_RD[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_bin_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(gray2bin[5]),
        .Q(WR_PNTR_RD[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_bin_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(gray2bin[6]),
        .Q(WR_PNTR_RD[6]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_bin_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(gray2bin[7]),
        .Q(WR_PNTR_RD[7]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_bin_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_0_out),
        .Q(WR_PNTR_RD[8]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_bin_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_5_out),
        .Q(WR_PNTR_RD[9]));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.wr_pntr_gc[0]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(bin2gray[0]));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.wr_pntr_gc[1]_i_1 
       (.I0(Q[1]),
        .I1(Q[2]),
        .O(bin2gray[1]));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.wr_pntr_gc[2]_i_1 
       (.I0(Q[2]),
        .I1(Q[3]),
        .O(bin2gray[2]));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.wr_pntr_gc[3]_i_1 
       (.I0(Q[3]),
        .I1(Q[4]),
        .O(bin2gray[3]));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.wr_pntr_gc[4]_i_1 
       (.I0(Q[4]),
        .I1(Q[5]),
        .O(bin2gray[4]));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.wr_pntr_gc[5]_i_1 
       (.I0(Q[5]),
        .I1(Q[6]),
        .O(bin2gray[5]));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.wr_pntr_gc[6]_i_1 
       (.I0(Q[6]),
        .I1(Q[7]),
        .O(bin2gray[6]));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.wr_pntr_gc[7]_i_1 
       (.I0(Q[7]),
        .I1(Q[8]),
        .O(bin2gray[7]));
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.wr_pntr_gc[8]_i_1 
       (.I0(Q[8]),
        .I1(Q[9]),
        .O(bin2gray[8]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_gc_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(bin2gray[0]),
        .Q(wr_pntr_gc[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_gc_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(bin2gray[1]),
        .Q(wr_pntr_gc[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_gc_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(bin2gray[2]),
        .Q(wr_pntr_gc[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_gc_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(bin2gray[3]),
        .Q(wr_pntr_gc[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_gc_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(bin2gray[4]),
        .Q(wr_pntr_gc[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_gc_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(bin2gray[5]),
        .Q(wr_pntr_gc[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_gc_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(bin2gray[6]),
        .Q(wr_pntr_gc[6]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_gc_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(bin2gray[7]),
        .Q(wr_pntr_gc[7]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_gc_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(bin2gray[8]),
        .Q(wr_pntr_gc[8]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_gc_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(Q[9]),
        .Q(wr_pntr_gc[9]));
endmodule

(* ORIG_REF_NAME = "clk_x_pntrs" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_clk_x_pntrs_10
   (ram_empty_fb_i_reg,
    \gaf.ram_almost_full_i_reg ,
    Q,
    \gc1.count_d2_reg[9] ,
    wr_clk,
    AR,
    rd_clk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [9:0]ram_empty_fb_i_reg;
  output [9:0]\gaf.ram_almost_full_i_reg ;
  input [9:0]Q;
  input [9:0]\gc1.count_d2_reg[9] ;
  input wr_clk;
  input [0:0]AR;
  input rd_clk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  wire [0:0]AR;
  wire [9:0]Q;
  wire [8:0]bin2gray;
  wire [9:0]\gaf.ram_almost_full_i_reg ;
  wire [9:0]\gc1.count_d2_reg[9] ;
  wire \gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_1 ;
  wire \gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_2 ;
  wire \gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_3 ;
  wire \gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_4 ;
  wire \gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_5 ;
  wire \gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_6 ;
  wire \gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_7 ;
  wire \gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_8 ;
  wire \gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_9 ;
  wire \gnxpm_cdc.rd_pntr_gc[0]_i_1_n_0 ;
  wire \gnxpm_cdc.rd_pntr_gc[1]_i_1_n_0 ;
  wire \gnxpm_cdc.rd_pntr_gc[2]_i_1_n_0 ;
  wire \gnxpm_cdc.rd_pntr_gc[3]_i_1_n_0 ;
  wire \gnxpm_cdc.rd_pntr_gc[4]_i_1_n_0 ;
  wire \gnxpm_cdc.rd_pntr_gc[5]_i_1_n_0 ;
  wire \gnxpm_cdc.rd_pntr_gc[6]_i_1_n_0 ;
  wire \gnxpm_cdc.rd_pntr_gc[7]_i_1_n_0 ;
  wire \gnxpm_cdc.rd_pntr_gc[8]_i_1_n_0 ;
  wire [7:0]gray2bin;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;
  wire p_0_out;
  wire [9:0]p_3_out;
  wire [9:0]p_4_out;
  wire [9:9]p_5_out;
  wire [9:9]p_6_out;
  wire [9:0]ram_empty_fb_i_reg;
  wire rd_clk;
  wire [9:0]rd_pntr_gc;
  wire wr_clk;
  wire [9:0]wr_pntr_gc;

  final_accelerator_Softmax_Layer_32bit_0_0_synchronizer_ff__parameterized0_35 \gnxpm_cdc.gsync_stage[1].rd_stg_inst 
       (.D(p_3_out),
        .Q(wr_pntr_gc),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .rd_clk(rd_clk));
  final_accelerator_Softmax_Layer_32bit_0_0_synchronizer_ff__parameterized1_36 \gnxpm_cdc.gsync_stage[1].wr_stg_inst 
       (.AR(AR),
        .D(p_4_out),
        .Q(rd_pntr_gc),
        .wr_clk(wr_clk));
  final_accelerator_Softmax_Layer_32bit_0_0_synchronizer_ff__parameterized2_37 \gnxpm_cdc.gsync_stage[2].rd_stg_inst 
       (.D(p_3_out),
        .\gnxpm_cdc.wr_pntr_bin_reg[8] ({p_0_out,gray2bin}),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .out(p_5_out),
        .rd_clk(rd_clk));
  final_accelerator_Softmax_Layer_32bit_0_0_synchronizer_ff__parameterized3_38 \gnxpm_cdc.gsync_stage[2].wr_stg_inst 
       (.AR(AR),
        .D(p_4_out),
        .\gnxpm_cdc.rd_pntr_bin_reg[8] ({\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_1 ,\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_2 ,\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_3 ,\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_4 ,\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_5 ,\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_6 ,\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_7 ,\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_8 ,\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_9 }),
        .out(p_6_out),
        .wr_clk(wr_clk));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_bin_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_9 ),
        .Q(\gaf.ram_almost_full_i_reg [0]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_bin_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_8 ),
        .Q(\gaf.ram_almost_full_i_reg [1]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_bin_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_7 ),
        .Q(\gaf.ram_almost_full_i_reg [2]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_bin_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_6 ),
        .Q(\gaf.ram_almost_full_i_reg [3]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_bin_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_5 ),
        .Q(\gaf.ram_almost_full_i_reg [4]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_bin_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_4 ),
        .Q(\gaf.ram_almost_full_i_reg [5]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_bin_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_3 ),
        .Q(\gaf.ram_almost_full_i_reg [6]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_bin_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_2 ),
        .Q(\gaf.ram_almost_full_i_reg [7]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_bin_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_1 ),
        .Q(\gaf.ram_almost_full_i_reg [8]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_bin_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(p_6_out),
        .Q(\gaf.ram_almost_full_i_reg [9]));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.rd_pntr_gc[0]_i_1 
       (.I0(\gc1.count_d2_reg[9] [0]),
        .I1(\gc1.count_d2_reg[9] [1]),
        .O(\gnxpm_cdc.rd_pntr_gc[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.rd_pntr_gc[1]_i_1 
       (.I0(\gc1.count_d2_reg[9] [1]),
        .I1(\gc1.count_d2_reg[9] [2]),
        .O(\gnxpm_cdc.rd_pntr_gc[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.rd_pntr_gc[2]_i_1 
       (.I0(\gc1.count_d2_reg[9] [2]),
        .I1(\gc1.count_d2_reg[9] [3]),
        .O(\gnxpm_cdc.rd_pntr_gc[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.rd_pntr_gc[3]_i_1 
       (.I0(\gc1.count_d2_reg[9] [3]),
        .I1(\gc1.count_d2_reg[9] [4]),
        .O(\gnxpm_cdc.rd_pntr_gc[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.rd_pntr_gc[4]_i_1 
       (.I0(\gc1.count_d2_reg[9] [4]),
        .I1(\gc1.count_d2_reg[9] [5]),
        .O(\gnxpm_cdc.rd_pntr_gc[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.rd_pntr_gc[5]_i_1 
       (.I0(\gc1.count_d2_reg[9] [5]),
        .I1(\gc1.count_d2_reg[9] [6]),
        .O(\gnxpm_cdc.rd_pntr_gc[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.rd_pntr_gc[6]_i_1 
       (.I0(\gc1.count_d2_reg[9] [6]),
        .I1(\gc1.count_d2_reg[9] [7]),
        .O(\gnxpm_cdc.rd_pntr_gc[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.rd_pntr_gc[7]_i_1 
       (.I0(\gc1.count_d2_reg[9] [7]),
        .I1(\gc1.count_d2_reg[9] [8]),
        .O(\gnxpm_cdc.rd_pntr_gc[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.rd_pntr_gc[8]_i_1 
       (.I0(\gc1.count_d2_reg[9] [8]),
        .I1(\gc1.count_d2_reg[9] [9]),
        .O(\gnxpm_cdc.rd_pntr_gc[8]_i_1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_gc_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gnxpm_cdc.rd_pntr_gc[0]_i_1_n_0 ),
        .Q(rd_pntr_gc[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_gc_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gnxpm_cdc.rd_pntr_gc[1]_i_1_n_0 ),
        .Q(rd_pntr_gc[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_gc_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gnxpm_cdc.rd_pntr_gc[2]_i_1_n_0 ),
        .Q(rd_pntr_gc[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_gc_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gnxpm_cdc.rd_pntr_gc[3]_i_1_n_0 ),
        .Q(rd_pntr_gc[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_gc_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gnxpm_cdc.rd_pntr_gc[4]_i_1_n_0 ),
        .Q(rd_pntr_gc[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_gc_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gnxpm_cdc.rd_pntr_gc[5]_i_1_n_0 ),
        .Q(rd_pntr_gc[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_gc_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gnxpm_cdc.rd_pntr_gc[6]_i_1_n_0 ),
        .Q(rd_pntr_gc[6]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_gc_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gnxpm_cdc.rd_pntr_gc[7]_i_1_n_0 ),
        .Q(rd_pntr_gc[7]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_gc_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gnxpm_cdc.rd_pntr_gc[8]_i_1_n_0 ),
        .Q(rd_pntr_gc[8]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_gc_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gc1.count_d2_reg[9] [9]),
        .Q(rd_pntr_gc[9]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_bin_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(gray2bin[0]),
        .Q(ram_empty_fb_i_reg[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_bin_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(gray2bin[1]),
        .Q(ram_empty_fb_i_reg[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_bin_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(gray2bin[2]),
        .Q(ram_empty_fb_i_reg[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_bin_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(gray2bin[3]),
        .Q(ram_empty_fb_i_reg[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_bin_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(gray2bin[4]),
        .Q(ram_empty_fb_i_reg[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_bin_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(gray2bin[5]),
        .Q(ram_empty_fb_i_reg[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_bin_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(gray2bin[6]),
        .Q(ram_empty_fb_i_reg[6]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_bin_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(gray2bin[7]),
        .Q(ram_empty_fb_i_reg[7]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_bin_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_0_out),
        .Q(ram_empty_fb_i_reg[8]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_bin_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_5_out),
        .Q(ram_empty_fb_i_reg[9]));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.wr_pntr_gc[0]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(bin2gray[0]));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.wr_pntr_gc[1]_i_1 
       (.I0(Q[1]),
        .I1(Q[2]),
        .O(bin2gray[1]));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.wr_pntr_gc[2]_i_1 
       (.I0(Q[2]),
        .I1(Q[3]),
        .O(bin2gray[2]));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.wr_pntr_gc[3]_i_1 
       (.I0(Q[3]),
        .I1(Q[4]),
        .O(bin2gray[3]));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.wr_pntr_gc[4]_i_1 
       (.I0(Q[4]),
        .I1(Q[5]),
        .O(bin2gray[4]));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.wr_pntr_gc[5]_i_1 
       (.I0(Q[5]),
        .I1(Q[6]),
        .O(bin2gray[5]));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.wr_pntr_gc[6]_i_1 
       (.I0(Q[6]),
        .I1(Q[7]),
        .O(bin2gray[6]));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.wr_pntr_gc[7]_i_1 
       (.I0(Q[7]),
        .I1(Q[8]),
        .O(bin2gray[7]));
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.wr_pntr_gc[8]_i_1 
       (.I0(Q[8]),
        .I1(Q[9]),
        .O(bin2gray[8]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_gc_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(bin2gray[0]),
        .Q(wr_pntr_gc[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_gc_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(bin2gray[1]),
        .Q(wr_pntr_gc[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_gc_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(bin2gray[2]),
        .Q(wr_pntr_gc[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_gc_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(bin2gray[3]),
        .Q(wr_pntr_gc[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_gc_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(bin2gray[4]),
        .Q(wr_pntr_gc[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_gc_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(bin2gray[5]),
        .Q(wr_pntr_gc[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_gc_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(bin2gray[6]),
        .Q(wr_pntr_gc[6]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_gc_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(bin2gray[7]),
        .Q(wr_pntr_gc[7]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_gc_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(bin2gray[8]),
        .Q(wr_pntr_gc[8]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_gc_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(Q[9]),
        .Q(wr_pntr_gc[9]));
endmodule

(* ORIG_REF_NAME = "clk_x_pntrs" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_clk_x_pntrs_42
   (ram_empty_fb_i_reg,
    \gaf.ram_almost_full_i_reg ,
    Q,
    \gc1.count_d2_reg[9] ,
    wr_clk,
    AR,
    rd_clk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [9:0]ram_empty_fb_i_reg;
  output [9:0]\gaf.ram_almost_full_i_reg ;
  input [9:0]Q;
  input [9:0]\gc1.count_d2_reg[9] ;
  input wr_clk;
  input [0:0]AR;
  input rd_clk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  wire [0:0]AR;
  wire [9:0]Q;
  wire [8:0]bin2gray;
  wire [9:0]\gaf.ram_almost_full_i_reg ;
  wire [9:0]\gc1.count_d2_reg[9] ;
  wire \gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_1 ;
  wire \gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_2 ;
  wire \gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_3 ;
  wire \gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_4 ;
  wire \gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_5 ;
  wire \gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_6 ;
  wire \gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_7 ;
  wire \gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_8 ;
  wire \gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_9 ;
  wire \gnxpm_cdc.rd_pntr_gc[0]_i_1_n_0 ;
  wire \gnxpm_cdc.rd_pntr_gc[1]_i_1_n_0 ;
  wire \gnxpm_cdc.rd_pntr_gc[2]_i_1_n_0 ;
  wire \gnxpm_cdc.rd_pntr_gc[3]_i_1_n_0 ;
  wire \gnxpm_cdc.rd_pntr_gc[4]_i_1_n_0 ;
  wire \gnxpm_cdc.rd_pntr_gc[5]_i_1_n_0 ;
  wire \gnxpm_cdc.rd_pntr_gc[6]_i_1_n_0 ;
  wire \gnxpm_cdc.rd_pntr_gc[7]_i_1_n_0 ;
  wire \gnxpm_cdc.rd_pntr_gc[8]_i_1_n_0 ;
  wire [7:0]gray2bin;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;
  wire p_0_out;
  wire [9:0]p_3_out;
  wire [9:0]p_4_out;
  wire [9:9]p_5_out;
  wire [9:9]p_6_out;
  wire [9:0]ram_empty_fb_i_reg;
  wire rd_clk;
  wire [9:0]rd_pntr_gc;
  wire wr_clk;
  wire [9:0]wr_pntr_gc;

  final_accelerator_Softmax_Layer_32bit_0_0_synchronizer_ff__parameterized0_67 \gnxpm_cdc.gsync_stage[1].rd_stg_inst 
       (.D(p_3_out),
        .Q(wr_pntr_gc),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .rd_clk(rd_clk));
  final_accelerator_Softmax_Layer_32bit_0_0_synchronizer_ff__parameterized1_68 \gnxpm_cdc.gsync_stage[1].wr_stg_inst 
       (.AR(AR),
        .D(p_4_out),
        .Q(rd_pntr_gc),
        .wr_clk(wr_clk));
  final_accelerator_Softmax_Layer_32bit_0_0_synchronizer_ff__parameterized2_69 \gnxpm_cdc.gsync_stage[2].rd_stg_inst 
       (.D(p_3_out),
        .\gnxpm_cdc.wr_pntr_bin_reg[8] ({p_0_out,gray2bin}),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .out(p_5_out),
        .rd_clk(rd_clk));
  final_accelerator_Softmax_Layer_32bit_0_0_synchronizer_ff__parameterized3_70 \gnxpm_cdc.gsync_stage[2].wr_stg_inst 
       (.AR(AR),
        .D(p_4_out),
        .\gnxpm_cdc.rd_pntr_bin_reg[8] ({\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_1 ,\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_2 ,\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_3 ,\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_4 ,\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_5 ,\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_6 ,\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_7 ,\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_8 ,\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_9 }),
        .out(p_6_out),
        .wr_clk(wr_clk));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_bin_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_9 ),
        .Q(\gaf.ram_almost_full_i_reg [0]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_bin_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_8 ),
        .Q(\gaf.ram_almost_full_i_reg [1]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_bin_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_7 ),
        .Q(\gaf.ram_almost_full_i_reg [2]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_bin_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_6 ),
        .Q(\gaf.ram_almost_full_i_reg [3]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_bin_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_5 ),
        .Q(\gaf.ram_almost_full_i_reg [4]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_bin_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_4 ),
        .Q(\gaf.ram_almost_full_i_reg [5]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_bin_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_3 ),
        .Q(\gaf.ram_almost_full_i_reg [6]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_bin_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_2 ),
        .Q(\gaf.ram_almost_full_i_reg [7]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_bin_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\gnxpm_cdc.gsync_stage[2].wr_stg_inst_n_1 ),
        .Q(\gaf.ram_almost_full_i_reg [8]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_bin_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(p_6_out),
        .Q(\gaf.ram_almost_full_i_reg [9]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.rd_pntr_gc[0]_i_1 
       (.I0(\gc1.count_d2_reg[9] [0]),
        .I1(\gc1.count_d2_reg[9] [1]),
        .O(\gnxpm_cdc.rd_pntr_gc[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.rd_pntr_gc[1]_i_1 
       (.I0(\gc1.count_d2_reg[9] [1]),
        .I1(\gc1.count_d2_reg[9] [2]),
        .O(\gnxpm_cdc.rd_pntr_gc[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.rd_pntr_gc[2]_i_1 
       (.I0(\gc1.count_d2_reg[9] [2]),
        .I1(\gc1.count_d2_reg[9] [3]),
        .O(\gnxpm_cdc.rd_pntr_gc[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.rd_pntr_gc[3]_i_1 
       (.I0(\gc1.count_d2_reg[9] [3]),
        .I1(\gc1.count_d2_reg[9] [4]),
        .O(\gnxpm_cdc.rd_pntr_gc[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.rd_pntr_gc[4]_i_1 
       (.I0(\gc1.count_d2_reg[9] [4]),
        .I1(\gc1.count_d2_reg[9] [5]),
        .O(\gnxpm_cdc.rd_pntr_gc[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.rd_pntr_gc[5]_i_1 
       (.I0(\gc1.count_d2_reg[9] [5]),
        .I1(\gc1.count_d2_reg[9] [6]),
        .O(\gnxpm_cdc.rd_pntr_gc[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.rd_pntr_gc[6]_i_1 
       (.I0(\gc1.count_d2_reg[9] [6]),
        .I1(\gc1.count_d2_reg[9] [7]),
        .O(\gnxpm_cdc.rd_pntr_gc[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.rd_pntr_gc[7]_i_1 
       (.I0(\gc1.count_d2_reg[9] [7]),
        .I1(\gc1.count_d2_reg[9] [8]),
        .O(\gnxpm_cdc.rd_pntr_gc[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.rd_pntr_gc[8]_i_1 
       (.I0(\gc1.count_d2_reg[9] [8]),
        .I1(\gc1.count_d2_reg[9] [9]),
        .O(\gnxpm_cdc.rd_pntr_gc[8]_i_1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_gc_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gnxpm_cdc.rd_pntr_gc[0]_i_1_n_0 ),
        .Q(rd_pntr_gc[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_gc_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gnxpm_cdc.rd_pntr_gc[1]_i_1_n_0 ),
        .Q(rd_pntr_gc[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_gc_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gnxpm_cdc.rd_pntr_gc[2]_i_1_n_0 ),
        .Q(rd_pntr_gc[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_gc_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gnxpm_cdc.rd_pntr_gc[3]_i_1_n_0 ),
        .Q(rd_pntr_gc[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_gc_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gnxpm_cdc.rd_pntr_gc[4]_i_1_n_0 ),
        .Q(rd_pntr_gc[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_gc_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gnxpm_cdc.rd_pntr_gc[5]_i_1_n_0 ),
        .Q(rd_pntr_gc[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_gc_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gnxpm_cdc.rd_pntr_gc[6]_i_1_n_0 ),
        .Q(rd_pntr_gc[6]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_gc_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gnxpm_cdc.rd_pntr_gc[7]_i_1_n_0 ),
        .Q(rd_pntr_gc[7]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_gc_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gnxpm_cdc.rd_pntr_gc[8]_i_1_n_0 ),
        .Q(rd_pntr_gc[8]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_gc_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gc1.count_d2_reg[9] [9]),
        .Q(rd_pntr_gc[9]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_bin_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(gray2bin[0]),
        .Q(ram_empty_fb_i_reg[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_bin_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(gray2bin[1]),
        .Q(ram_empty_fb_i_reg[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_bin_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(gray2bin[2]),
        .Q(ram_empty_fb_i_reg[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_bin_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(gray2bin[3]),
        .Q(ram_empty_fb_i_reg[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_bin_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(gray2bin[4]),
        .Q(ram_empty_fb_i_reg[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_bin_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(gray2bin[5]),
        .Q(ram_empty_fb_i_reg[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_bin_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(gray2bin[6]),
        .Q(ram_empty_fb_i_reg[6]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_bin_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(gray2bin[7]),
        .Q(ram_empty_fb_i_reg[7]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_bin_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_0_out),
        .Q(ram_empty_fb_i_reg[8]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_bin_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_5_out),
        .Q(ram_empty_fb_i_reg[9]));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.wr_pntr_gc[0]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(bin2gray[0]));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.wr_pntr_gc[1]_i_1 
       (.I0(Q[1]),
        .I1(Q[2]),
        .O(bin2gray[1]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.wr_pntr_gc[2]_i_1 
       (.I0(Q[2]),
        .I1(Q[3]),
        .O(bin2gray[2]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.wr_pntr_gc[3]_i_1 
       (.I0(Q[3]),
        .I1(Q[4]),
        .O(bin2gray[3]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.wr_pntr_gc[4]_i_1 
       (.I0(Q[4]),
        .I1(Q[5]),
        .O(bin2gray[4]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.wr_pntr_gc[5]_i_1 
       (.I0(Q[5]),
        .I1(Q[6]),
        .O(bin2gray[5]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.wr_pntr_gc[6]_i_1 
       (.I0(Q[6]),
        .I1(Q[7]),
        .O(bin2gray[6]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.wr_pntr_gc[7]_i_1 
       (.I0(Q[7]),
        .I1(Q[8]),
        .O(bin2gray[7]));
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.wr_pntr_gc[8]_i_1 
       (.I0(Q[8]),
        .I1(Q[9]),
        .O(bin2gray[8]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_gc_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(bin2gray[0]),
        .Q(wr_pntr_gc[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_gc_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(bin2gray[1]),
        .Q(wr_pntr_gc[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_gc_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(bin2gray[2]),
        .Q(wr_pntr_gc[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_gc_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(bin2gray[3]),
        .Q(wr_pntr_gc[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_gc_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(bin2gray[4]),
        .Q(wr_pntr_gc[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_gc_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(bin2gray[5]),
        .Q(wr_pntr_gc[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_gc_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(bin2gray[6]),
        .Q(wr_pntr_gc[6]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_gc_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(bin2gray[7]),
        .Q(wr_pntr_gc[7]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_gc_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(bin2gray[8]),
        .Q(wr_pntr_gc[8]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_gc_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(Q[9]),
        .Q(wr_pntr_gc[9]));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_compare
   (comp1,
    v1_reg);
  output comp1;
  input [4:0]v1_reg;

  wire carrynet_0;
  wire carrynet_1;
  wire carrynet_2;
  wire carrynet_3;
  wire comp1;
  wire [4:0]v1_reg;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({carrynet_3,carrynet_2,carrynet_1,carrynet_0}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S(v1_reg[3:0]));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(carrynet_3),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3:1],comp1}),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3:1],1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3:1],v1_reg[4]}));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_compare_27
   (comp1,
    v1_reg);
  output comp1;
  input [4:0]v1_reg;

  wire carrynet_0;
  wire carrynet_1;
  wire carrynet_2;
  wire carrynet_3;
  wire comp1;
  wire [4:0]v1_reg;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({carrynet_3,carrynet_2,carrynet_1,carrynet_0}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S(v1_reg[3:0]));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(carrynet_3),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3:1],comp1}),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3:1],1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3:1],v1_reg[4]}));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_compare_28
   (comp2,
    ram_full_i_reg,
    v1_reg_0,
    out,
    wr_en,
    comp1,
    wr_rst_busy);
  output comp2;
  output ram_full_i_reg;
  input [4:0]v1_reg_0;
  input out;
  input wr_en;
  input comp1;
  input wr_rst_busy;

  wire carrynet_0;
  wire carrynet_1;
  wire carrynet_2;
  wire carrynet_3;
  wire comp1;
  wire comp2;
  wire out;
  wire ram_full_i_reg;
  wire [4:0]v1_reg_0;
  wire wr_en;
  wire wr_rst_busy;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({carrynet_3,carrynet_2,carrynet_1,carrynet_0}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S(v1_reg_0[3:0]));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(carrynet_3),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3:1],comp2}),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3:1],1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3:1],v1_reg_0[4]}));
  LUT5 #(
    .INIT(32'h0000FF20)) 
    ram_full_i_i_1
       (.I0(comp2),
        .I1(out),
        .I2(wr_en),
        .I3(comp1),
        .I4(wr_rst_busy),
        .O(ram_full_i_reg));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_compare_29
   (\gaf.ram_almost_full_i_reg ,
    v1_reg_1,
    wr_en,
    comp2,
    wr_rst_busy,
    out,
    almost_full);
  output \gaf.ram_almost_full_i_reg ;
  input [4:0]v1_reg_1;
  input wr_en;
  input comp2;
  input wr_rst_busy;
  input out;
  input almost_full;

  wire almost_full;
  wire carrynet_0;
  wire carrynet_1;
  wire carrynet_2;
  wire carrynet_3;
  wire comp2;
  wire comp3;
  wire \gaf.ram_almost_full_i_reg ;
  wire out;
  wire [4:0]v1_reg_1;
  wire wr_en;
  wire wr_rst_busy;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

  LUT6 #(
    .INIT(64'h00FF00F8000000F8)) 
    \gaf.ram_almost_full_i_i_1 
       (.I0(comp3),
        .I1(wr_en),
        .I2(comp2),
        .I3(wr_rst_busy),
        .I4(out),
        .I5(almost_full),
        .O(\gaf.ram_almost_full_i_reg ));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({carrynet_3,carrynet_2,carrynet_1,carrynet_0}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S(v1_reg_1[3:0]));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(carrynet_3),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3:1],comp3}),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3:1],1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3:1],v1_reg_1[4]}));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_compare_3
   (comp2,
    ram_full_i_reg,
    v1_reg_0,
    out,
    wr_en,
    comp1,
    wr_rst_busy);
  output comp2;
  output ram_full_i_reg;
  input [4:0]v1_reg_0;
  input out;
  input wr_en;
  input comp1;
  input wr_rst_busy;

  wire carrynet_0;
  wire carrynet_1;
  wire carrynet_2;
  wire carrynet_3;
  wire comp1;
  wire comp2;
  wire out;
  wire ram_full_i_reg;
  wire [4:0]v1_reg_0;
  wire wr_en;
  wire wr_rst_busy;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({carrynet_3,carrynet_2,carrynet_1,carrynet_0}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S(v1_reg_0[3:0]));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(carrynet_3),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3:1],comp2}),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3:1],1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3:1],v1_reg_0[4]}));
  LUT5 #(
    .INIT(32'h0000FF20)) 
    ram_full_i_i_1
       (.I0(comp2),
        .I1(out),
        .I2(wr_en),
        .I3(comp1),
        .I4(wr_rst_busy),
        .O(ram_full_i_reg));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_compare_33
   (ram_empty_i0,
    rd_en,
    \gpregsm1.curr_fwft_state_reg[1] ,
    out,
    comp1,
    \gnxpm_cdc.wr_pntr_bin_reg[9] ,
    Q);
  output ram_empty_i0;
  input rd_en;
  input [1:0]\gpregsm1.curr_fwft_state_reg[1] ;
  input out;
  input comp1;
  input [9:0]\gnxpm_cdc.wr_pntr_bin_reg[9] ;
  input [9:0]Q;

  wire [9:0]Q;
  wire carrynet_0;
  wire carrynet_1;
  wire carrynet_2;
  wire carrynet_3;
  wire comp0;
  wire comp1;
  wire [9:0]\gnxpm_cdc.wr_pntr_bin_reg[9] ;
  wire [1:0]\gpregsm1.curr_fwft_state_reg[1] ;
  wire out;
  wire ram_empty_i0;
  wire rd_en;
  wire [4:0]v1_reg;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({carrynet_3,carrynet_2,carrynet_1,carrynet_0}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S(v1_reg[3:0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1 
       (.I0(\gnxpm_cdc.wr_pntr_bin_reg[9] [0]),
        .I1(Q[0]),
        .I2(\gnxpm_cdc.wr_pntr_bin_reg[9] [1]),
        .I3(Q[1]),
        .O(v1_reg[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1 
       (.I0(\gnxpm_cdc.wr_pntr_bin_reg[9] [2]),
        .I1(Q[2]),
        .I2(\gnxpm_cdc.wr_pntr_bin_reg[9] [3]),
        .I3(Q[3]),
        .O(v1_reg[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1 
       (.I0(\gnxpm_cdc.wr_pntr_bin_reg[9] [4]),
        .I1(Q[4]),
        .I2(\gnxpm_cdc.wr_pntr_bin_reg[9] [5]),
        .I3(Q[5]),
        .O(v1_reg[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1 
       (.I0(\gnxpm_cdc.wr_pntr_bin_reg[9] [6]),
        .I1(Q[6]),
        .I2(\gnxpm_cdc.wr_pntr_bin_reg[9] [7]),
        .I3(Q[7]),
        .O(v1_reg[3]));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(carrynet_3),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3:1],comp0}),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3:1],1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3:1],v1_reg[4]}));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[4].gms.ms_i_1 
       (.I0(\gnxpm_cdc.wr_pntr_bin_reg[9] [8]),
        .I1(Q[8]),
        .I2(\gnxpm_cdc.wr_pntr_bin_reg[9] [9]),
        .I3(Q[9]),
        .O(v1_reg[4]));
  LUT6 #(
    .INIT(64'hAAAAEFFFAAAAAAAA)) 
    ram_empty_i_i_1
       (.I0(comp0),
        .I1(rd_en),
        .I2(\gpregsm1.curr_fwft_state_reg[1] [0]),
        .I3(\gpregsm1.curr_fwft_state_reg[1] [1]),
        .I4(out),
        .I5(comp1),
        .O(ram_empty_i0));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_compare_34
   (comp1,
    \gnxpm_cdc.wr_pntr_bin_reg[9] ,
    \gc1.count_d1_reg[9] );
  output comp1;
  input [9:0]\gnxpm_cdc.wr_pntr_bin_reg[9] ;
  input [9:0]\gc1.count_d1_reg[9] ;

  wire carrynet_0;
  wire carrynet_1;
  wire carrynet_2;
  wire carrynet_3;
  wire comp1;
  wire [9:0]\gc1.count_d1_reg[9] ;
  wire [9:0]\gnxpm_cdc.wr_pntr_bin_reg[9] ;
  wire [4:0]v1_reg;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({carrynet_3,carrynet_2,carrynet_1,carrynet_0}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S(v1_reg[3:0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1 
       (.I0(\gnxpm_cdc.wr_pntr_bin_reg[9] [0]),
        .I1(\gc1.count_d1_reg[9] [0]),
        .I2(\gnxpm_cdc.wr_pntr_bin_reg[9] [1]),
        .I3(\gc1.count_d1_reg[9] [1]),
        .O(v1_reg[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1 
       (.I0(\gnxpm_cdc.wr_pntr_bin_reg[9] [2]),
        .I1(\gc1.count_d1_reg[9] [2]),
        .I2(\gnxpm_cdc.wr_pntr_bin_reg[9] [3]),
        .I3(\gc1.count_d1_reg[9] [3]),
        .O(v1_reg[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1 
       (.I0(\gnxpm_cdc.wr_pntr_bin_reg[9] [4]),
        .I1(\gc1.count_d1_reg[9] [4]),
        .I2(\gnxpm_cdc.wr_pntr_bin_reg[9] [5]),
        .I3(\gc1.count_d1_reg[9] [5]),
        .O(v1_reg[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1 
       (.I0(\gnxpm_cdc.wr_pntr_bin_reg[9] [6]),
        .I1(\gc1.count_d1_reg[9] [6]),
        .I2(\gnxpm_cdc.wr_pntr_bin_reg[9] [7]),
        .I3(\gc1.count_d1_reg[9] [7]),
        .O(v1_reg[3]));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(carrynet_3),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3:1],comp1}),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3:1],1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3:1],v1_reg[4]}));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[4].gms.ms_i_1 
       (.I0(\gnxpm_cdc.wr_pntr_bin_reg[9] [8]),
        .I1(\gc1.count_d1_reg[9] [8]),
        .I2(\gnxpm_cdc.wr_pntr_bin_reg[9] [9]),
        .I3(\gc1.count_d1_reg[9] [9]),
        .O(v1_reg[4]));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_compare_4
   (\gaf.ram_almost_full_i_reg ,
    v1_reg_1,
    wr_en,
    comp2,
    wr_rst_busy,
    out,
    almost_full);
  output \gaf.ram_almost_full_i_reg ;
  input [4:0]v1_reg_1;
  input wr_en;
  input comp2;
  input wr_rst_busy;
  input out;
  input almost_full;

  wire almost_full;
  wire carrynet_0;
  wire carrynet_1;
  wire carrynet_2;
  wire carrynet_3;
  wire comp2;
  wire comp3;
  wire \gaf.ram_almost_full_i_reg ;
  wire out;
  wire [4:0]v1_reg_1;
  wire wr_en;
  wire wr_rst_busy;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

  LUT6 #(
    .INIT(64'h00FF00F8000000F8)) 
    \gaf.ram_almost_full_i_i_1 
       (.I0(comp3),
        .I1(wr_en),
        .I2(comp2),
        .I3(wr_rst_busy),
        .I4(out),
        .I5(almost_full),
        .O(\gaf.ram_almost_full_i_reg ));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({carrynet_3,carrynet_2,carrynet_1,carrynet_0}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S(v1_reg_1[3:0]));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(carrynet_3),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3:1],comp3}),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3:1],1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3:1],v1_reg_1[4]}));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_compare_5
   (ram_empty_i0,
    rd_en,
    \gpregsm1.curr_fwft_state_reg[1] ,
    out,
    comp1,
    WR_PNTR_RD,
    Q);
  output ram_empty_i0;
  input rd_en;
  input [1:0]\gpregsm1.curr_fwft_state_reg[1] ;
  input out;
  input comp1;
  input [9:0]WR_PNTR_RD;
  input [9:0]Q;

  wire [9:0]Q;
  wire [9:0]WR_PNTR_RD;
  wire carrynet_0;
  wire carrynet_1;
  wire carrynet_2;
  wire carrynet_3;
  wire comp0;
  wire comp1;
  wire [1:0]\gpregsm1.curr_fwft_state_reg[1] ;
  wire out;
  wire ram_empty_i0;
  wire rd_en;
  wire [4:0]v1_reg;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({carrynet_3,carrynet_2,carrynet_1,carrynet_0}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S(v1_reg[3:0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1 
       (.I0(WR_PNTR_RD[0]),
        .I1(Q[0]),
        .I2(WR_PNTR_RD[1]),
        .I3(Q[1]),
        .O(v1_reg[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1 
       (.I0(WR_PNTR_RD[2]),
        .I1(Q[2]),
        .I2(WR_PNTR_RD[3]),
        .I3(Q[3]),
        .O(v1_reg[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1 
       (.I0(WR_PNTR_RD[4]),
        .I1(Q[4]),
        .I2(WR_PNTR_RD[5]),
        .I3(Q[5]),
        .O(v1_reg[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1 
       (.I0(WR_PNTR_RD[6]),
        .I1(Q[6]),
        .I2(WR_PNTR_RD[7]),
        .I3(Q[7]),
        .O(v1_reg[3]));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(carrynet_3),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3:1],comp0}),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3:1],1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3:1],v1_reg[4]}));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[4].gms.ms_i_1 
       (.I0(WR_PNTR_RD[8]),
        .I1(Q[8]),
        .I2(WR_PNTR_RD[9]),
        .I3(Q[9]),
        .O(v1_reg[4]));
  LUT6 #(
    .INIT(64'hAAAAEFFFAAAAAAAA)) 
    ram_empty_i_i_1
       (.I0(comp0),
        .I1(rd_en),
        .I2(\gpregsm1.curr_fwft_state_reg[1] [0]),
        .I3(\gpregsm1.curr_fwft_state_reg[1] [1]),
        .I4(out),
        .I5(comp1),
        .O(ram_empty_i0));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_compare_59
   (comp1,
    v1_reg);
  output comp1;
  input [4:0]v1_reg;

  wire carrynet_0;
  wire carrynet_1;
  wire carrynet_2;
  wire carrynet_3;
  wire comp1;
  wire [4:0]v1_reg;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({carrynet_3,carrynet_2,carrynet_1,carrynet_0}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S(v1_reg[3:0]));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(carrynet_3),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3:1],comp1}),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3:1],1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3:1],v1_reg[4]}));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_compare_6
   (comp1,
    WR_PNTR_RD,
    \gc1.count_d1_reg[9] );
  output comp1;
  input [9:0]WR_PNTR_RD;
  input [9:0]\gc1.count_d1_reg[9] ;

  wire [9:0]WR_PNTR_RD;
  wire carrynet_0;
  wire carrynet_1;
  wire carrynet_2;
  wire carrynet_3;
  wire comp1;
  wire [9:0]\gc1.count_d1_reg[9] ;
  wire [4:0]v1_reg;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({carrynet_3,carrynet_2,carrynet_1,carrynet_0}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S(v1_reg[3:0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1 
       (.I0(WR_PNTR_RD[0]),
        .I1(\gc1.count_d1_reg[9] [0]),
        .I2(WR_PNTR_RD[1]),
        .I3(\gc1.count_d1_reg[9] [1]),
        .O(v1_reg[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1 
       (.I0(WR_PNTR_RD[2]),
        .I1(\gc1.count_d1_reg[9] [2]),
        .I2(WR_PNTR_RD[3]),
        .I3(\gc1.count_d1_reg[9] [3]),
        .O(v1_reg[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1 
       (.I0(WR_PNTR_RD[4]),
        .I1(\gc1.count_d1_reg[9] [4]),
        .I2(WR_PNTR_RD[5]),
        .I3(\gc1.count_d1_reg[9] [5]),
        .O(v1_reg[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1 
       (.I0(WR_PNTR_RD[6]),
        .I1(\gc1.count_d1_reg[9] [6]),
        .I2(WR_PNTR_RD[7]),
        .I3(\gc1.count_d1_reg[9] [7]),
        .O(v1_reg[3]));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(carrynet_3),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3:1],comp1}),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3:1],1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3:1],v1_reg[4]}));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[4].gms.ms_i_1 
       (.I0(WR_PNTR_RD[8]),
        .I1(\gc1.count_d1_reg[9] [8]),
        .I2(WR_PNTR_RD[9]),
        .I3(\gc1.count_d1_reg[9] [9]),
        .O(v1_reg[4]));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_compare_60
   (comp2,
    ram_full_i_reg,
    v1_reg_0,
    out,
    wr_en,
    comp1,
    wr_rst_busy);
  output comp2;
  output ram_full_i_reg;
  input [4:0]v1_reg_0;
  input out;
  input wr_en;
  input comp1;
  input wr_rst_busy;

  wire carrynet_0;
  wire carrynet_1;
  wire carrynet_2;
  wire carrynet_3;
  wire comp1;
  wire comp2;
  wire out;
  wire ram_full_i_reg;
  wire [4:0]v1_reg_0;
  wire wr_en;
  wire wr_rst_busy;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({carrynet_3,carrynet_2,carrynet_1,carrynet_0}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S(v1_reg_0[3:0]));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(carrynet_3),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3:1],comp2}),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3:1],1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3:1],v1_reg_0[4]}));
  LUT5 #(
    .INIT(32'h0000FF20)) 
    ram_full_i_i_1
       (.I0(comp2),
        .I1(out),
        .I2(wr_en),
        .I3(comp1),
        .I4(wr_rst_busy),
        .O(ram_full_i_reg));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_compare_61
   (\gaf.ram_almost_full_i_reg ,
    v1_reg_1,
    wr_en,
    comp2,
    wr_rst_busy,
    out,
    almost_full);
  output \gaf.ram_almost_full_i_reg ;
  input [4:0]v1_reg_1;
  input wr_en;
  input comp2;
  input wr_rst_busy;
  input out;
  input almost_full;

  wire almost_full;
  wire carrynet_0;
  wire carrynet_1;
  wire carrynet_2;
  wire carrynet_3;
  wire comp2;
  wire comp3;
  wire \gaf.ram_almost_full_i_reg ;
  wire out;
  wire [4:0]v1_reg_1;
  wire wr_en;
  wire wr_rst_busy;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

  LUT6 #(
    .INIT(64'h00FF00F8000000F8)) 
    \gaf.ram_almost_full_i_i_1 
       (.I0(comp3),
        .I1(wr_en),
        .I2(comp2),
        .I3(wr_rst_busy),
        .I4(out),
        .I5(almost_full),
        .O(\gaf.ram_almost_full_i_reg ));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({carrynet_3,carrynet_2,carrynet_1,carrynet_0}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S(v1_reg_1[3:0]));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(carrynet_3),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3:1],comp3}),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3:1],1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3:1],v1_reg_1[4]}));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_compare_65
   (ram_empty_i0,
    rd_en,
    \gpregsm1.curr_fwft_state_reg[1] ,
    out,
    comp1,
    \gnxpm_cdc.wr_pntr_bin_reg[9] ,
    Q);
  output ram_empty_i0;
  input rd_en;
  input [1:0]\gpregsm1.curr_fwft_state_reg[1] ;
  input out;
  input comp1;
  input [9:0]\gnxpm_cdc.wr_pntr_bin_reg[9] ;
  input [9:0]Q;

  wire [9:0]Q;
  wire carrynet_0;
  wire carrynet_1;
  wire carrynet_2;
  wire carrynet_3;
  wire comp0;
  wire comp1;
  wire [9:0]\gnxpm_cdc.wr_pntr_bin_reg[9] ;
  wire [1:0]\gpregsm1.curr_fwft_state_reg[1] ;
  wire out;
  wire ram_empty_i0;
  wire rd_en;
  wire [4:0]v1_reg;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({carrynet_3,carrynet_2,carrynet_1,carrynet_0}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S(v1_reg[3:0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1 
       (.I0(\gnxpm_cdc.wr_pntr_bin_reg[9] [0]),
        .I1(Q[0]),
        .I2(\gnxpm_cdc.wr_pntr_bin_reg[9] [1]),
        .I3(Q[1]),
        .O(v1_reg[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1 
       (.I0(\gnxpm_cdc.wr_pntr_bin_reg[9] [2]),
        .I1(Q[2]),
        .I2(\gnxpm_cdc.wr_pntr_bin_reg[9] [3]),
        .I3(Q[3]),
        .O(v1_reg[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1 
       (.I0(\gnxpm_cdc.wr_pntr_bin_reg[9] [4]),
        .I1(Q[4]),
        .I2(\gnxpm_cdc.wr_pntr_bin_reg[9] [5]),
        .I3(Q[5]),
        .O(v1_reg[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1 
       (.I0(\gnxpm_cdc.wr_pntr_bin_reg[9] [6]),
        .I1(Q[6]),
        .I2(\gnxpm_cdc.wr_pntr_bin_reg[9] [7]),
        .I3(Q[7]),
        .O(v1_reg[3]));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(carrynet_3),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3:1],comp0}),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3:1],1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3:1],v1_reg[4]}));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[4].gms.ms_i_1 
       (.I0(\gnxpm_cdc.wr_pntr_bin_reg[9] [8]),
        .I1(Q[8]),
        .I2(\gnxpm_cdc.wr_pntr_bin_reg[9] [9]),
        .I3(Q[9]),
        .O(v1_reg[4]));
  LUT6 #(
    .INIT(64'hAAAAEFFFAAAAAAAA)) 
    ram_empty_i_i_1
       (.I0(comp0),
        .I1(rd_en),
        .I2(\gpregsm1.curr_fwft_state_reg[1] [0]),
        .I3(\gpregsm1.curr_fwft_state_reg[1] [1]),
        .I4(out),
        .I5(comp1),
        .O(ram_empty_i0));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_compare_66
   (comp1,
    \gnxpm_cdc.wr_pntr_bin_reg[9] ,
    \gc1.count_d1_reg[9] );
  output comp1;
  input [9:0]\gnxpm_cdc.wr_pntr_bin_reg[9] ;
  input [9:0]\gc1.count_d1_reg[9] ;

  wire carrynet_0;
  wire carrynet_1;
  wire carrynet_2;
  wire carrynet_3;
  wire comp1;
  wire [9:0]\gc1.count_d1_reg[9] ;
  wire [9:0]\gnxpm_cdc.wr_pntr_bin_reg[9] ;
  wire [4:0]v1_reg;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({carrynet_3,carrynet_2,carrynet_1,carrynet_0}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S(v1_reg[3:0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1 
       (.I0(\gnxpm_cdc.wr_pntr_bin_reg[9] [0]),
        .I1(\gc1.count_d1_reg[9] [0]),
        .I2(\gnxpm_cdc.wr_pntr_bin_reg[9] [1]),
        .I3(\gc1.count_d1_reg[9] [1]),
        .O(v1_reg[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1 
       (.I0(\gnxpm_cdc.wr_pntr_bin_reg[9] [2]),
        .I1(\gc1.count_d1_reg[9] [2]),
        .I2(\gnxpm_cdc.wr_pntr_bin_reg[9] [3]),
        .I3(\gc1.count_d1_reg[9] [3]),
        .O(v1_reg[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1 
       (.I0(\gnxpm_cdc.wr_pntr_bin_reg[9] [4]),
        .I1(\gc1.count_d1_reg[9] [4]),
        .I2(\gnxpm_cdc.wr_pntr_bin_reg[9] [5]),
        .I3(\gc1.count_d1_reg[9] [5]),
        .O(v1_reg[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1 
       (.I0(\gnxpm_cdc.wr_pntr_bin_reg[9] [6]),
        .I1(\gc1.count_d1_reg[9] [6]),
        .I2(\gnxpm_cdc.wr_pntr_bin_reg[9] [7]),
        .I3(\gc1.count_d1_reg[9] [7]),
        .O(v1_reg[3]));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(carrynet_3),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3:1],comp1}),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3:1],1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3:1],v1_reg[4]}));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[4].gms.ms_i_1 
       (.I0(\gnxpm_cdc.wr_pntr_bin_reg[9] [8]),
        .I1(\gc1.count_d1_reg[9] [8]),
        .I2(\gnxpm_cdc.wr_pntr_bin_reg[9] [9]),
        .I3(\gc1.count_d1_reg[9] [9]),
        .O(v1_reg[4]));
endmodule

(* ORIG_REF_NAME = "fifo_generator_ramfifo" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_fifo_generator_ramfifo
   (wr_rst_busy,
    almost_empty,
    empty,
    valid,
    full,
    dout,
    almost_full,
    wr_en,
    wr_clk,
    rd_clk,
    din,
    rst,
    rd_en);
  output wr_rst_busy;
  output almost_empty;
  output empty;
  output valid;
  output full;
  output [31:0]dout;
  output almost_full;
  input wr_en;
  input wr_clk;
  input rd_clk;
  input [31:0]din;
  input rst;
  input rd_en;

  wire almost_empty;
  wire almost_full;
  wire [31:0]din;
  wire [31:0]dout;
  wire empty;
  wire full;
  wire \gntv_or_sync_fifo.gl0.wr_n_2 ;
  wire [9:0]p_0_out;
  wire [9:0]p_12_out;
  wire [9:0]p_22_out;
  wire [9:0]p_23_out;
  wire p_5_out;
  wire rd_clk;
  wire rd_en;
  wire [2:0]rd_rst_i;
  wire rst;
  wire rst_full_ff_i;
  wire tmp_ram_rd_en;
  wire valid;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;
  wire [1:0]wr_rst_i;

  final_accelerator_Softmax_Layer_32bit_0_0_clk_x_pntrs \gntv_or_sync_fifo.gcx.clkx 
       (.AR(wr_rst_i[0]),
        .Q(p_12_out),
        .RD_PNTR_WR(p_23_out),
        .WR_PNTR_RD(p_22_out),
        .\gc1.count_d2_reg[9] (p_0_out),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (rd_rst_i[1]),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk));
  final_accelerator_Softmax_Layer_32bit_0_0_rd_logic \gntv_or_sync_fifo.gl0.rd 
       (.E(p_5_out),
        .Q(p_0_out),
        .WR_PNTR_RD(p_22_out),
        .almost_empty(almost_empty),
        .empty(empty),
        .out({rd_rst_i[2],rd_rst_i[0]}),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .valid(valid));
  final_accelerator_Softmax_Layer_32bit_0_0_wr_logic \gntv_or_sync_fifo.gl0.wr 
       (.AR(wr_rst_i[1]),
        .Q(p_12_out),
        .RD_PNTR_WR(p_23_out),
        .WEA(\gntv_or_sync_fifo.gl0.wr_n_2 ),
        .almost_full(almost_full),
        .full(full),
        .out(rst_full_ff_i),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
  final_accelerator_Softmax_Layer_32bit_0_0_memory \gntv_or_sync_fifo.mem 
       (.E(p_5_out),
        .Q(p_12_out),
        .SR(rd_rst_i[0]),
        .WEA(\gntv_or_sync_fifo.gl0.wr_n_2 ),
        .din(din),
        .dout(dout),
        .\gc1.count_d2_reg[9] (p_0_out),
        .rd_clk(rd_clk),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .wr_clk(wr_clk));
  final_accelerator_Softmax_Layer_32bit_0_0_reset_blk_ramfifo rstblk
       (.\gc1.count_reg[0] (rd_rst_i),
        .\grstd1.grst_full.grst_f.rst_d3_reg_0 (rst_full_ff_i),
        .out(wr_rst_i),
        .rd_clk(rd_clk),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_ramfifo" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_fifo_generator_ramfifo_41
   (wr_rst_busy,
    almost_empty,
    empty,
    valid,
    full,
    dout,
    almost_full,
    wr_en,
    wr_clk,
    rd_clk,
    din,
    rst,
    rd_en);
  output wr_rst_busy;
  output almost_empty;
  output empty;
  output valid;
  output full;
  output [31:0]dout;
  output almost_full;
  input wr_en;
  input wr_clk;
  input rd_clk;
  input [31:0]din;
  input rst;
  input rd_en;

  wire almost_empty;
  wire almost_full;
  wire [31:0]din;
  wire [31:0]dout;
  wire empty;
  wire full;
  wire \gntv_or_sync_fifo.gl0.wr_n_2 ;
  wire [9:0]p_0_out;
  wire [9:0]p_12_out;
  wire [9:0]p_22_out;
  wire [9:0]p_23_out;
  wire p_5_out;
  wire rd_clk;
  wire rd_en;
  wire [2:0]rd_rst_i;
  wire rst;
  wire rst_full_ff_i;
  wire tmp_ram_rd_en;
  wire valid;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;
  wire [1:0]wr_rst_i;

  final_accelerator_Softmax_Layer_32bit_0_0_clk_x_pntrs_42 \gntv_or_sync_fifo.gcx.clkx 
       (.AR(wr_rst_i[0]),
        .Q(p_12_out),
        .\gaf.ram_almost_full_i_reg (p_23_out),
        .\gc1.count_d2_reg[9] (p_0_out),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (rd_rst_i[1]),
        .ram_empty_fb_i_reg(p_22_out),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk));
  final_accelerator_Softmax_Layer_32bit_0_0_rd_logic_43 \gntv_or_sync_fifo.gl0.rd 
       (.E(p_5_out),
        .Q(p_0_out),
        .almost_empty(almost_empty),
        .empty(empty),
        .\gnxpm_cdc.wr_pntr_bin_reg[9] (p_22_out),
        .out({rd_rst_i[2],rd_rst_i[0]}),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .valid(valid));
  final_accelerator_Softmax_Layer_32bit_0_0_wr_logic_44 \gntv_or_sync_fifo.gl0.wr 
       (.AR(wr_rst_i[1]),
        .Q(p_12_out),
        .WEA(\gntv_or_sync_fifo.gl0.wr_n_2 ),
        .almost_full(almost_full),
        .full(full),
        .\gnxpm_cdc.rd_pntr_bin_reg[9] (p_23_out),
        .out(rst_full_ff_i),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
  final_accelerator_Softmax_Layer_32bit_0_0_memory_45 \gntv_or_sync_fifo.mem 
       (.E(p_5_out),
        .Q(p_12_out),
        .SR(rd_rst_i[0]),
        .WEA(\gntv_or_sync_fifo.gl0.wr_n_2 ),
        .din(din),
        .dout(dout),
        .\gc1.count_d2_reg[9] (p_0_out),
        .rd_clk(rd_clk),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .wr_clk(wr_clk));
  final_accelerator_Softmax_Layer_32bit_0_0_reset_blk_ramfifo_46 rstblk
       (.\gc1.count_reg[0] (rd_rst_i),
        .\grstd1.grst_full.grst_f.rst_d3_reg_0 (rst_full_ff_i),
        .out(wr_rst_i),
        .rd_clk(rd_clk),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_ramfifo" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_fifo_generator_ramfifo_9
   (wr_rst_busy,
    almost_empty,
    empty,
    valid,
    full,
    dout,
    almost_full,
    wr_en,
    wr_clk,
    rd_clk,
    din,
    rst,
    rd_en);
  output wr_rst_busy;
  output almost_empty;
  output empty;
  output valid;
  output full;
  output [31:0]dout;
  output almost_full;
  input wr_en;
  input wr_clk;
  input rd_clk;
  input [31:0]din;
  input rst;
  input rd_en;

  wire almost_empty;
  wire almost_full;
  wire [31:0]din;
  wire [31:0]dout;
  wire empty;
  wire full;
  wire \gntv_or_sync_fifo.gl0.wr_n_2 ;
  wire [9:0]p_0_out;
  wire [9:0]p_12_out;
  wire [9:0]p_22_out;
  wire [9:0]p_23_out;
  wire p_5_out;
  wire rd_clk;
  wire rd_en;
  wire [2:0]rd_rst_i;
  wire rst;
  wire rst_full_ff_i;
  wire tmp_ram_rd_en;
  wire valid;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;
  wire [1:0]wr_rst_i;

  final_accelerator_Softmax_Layer_32bit_0_0_clk_x_pntrs_10 \gntv_or_sync_fifo.gcx.clkx 
       (.AR(wr_rst_i[0]),
        .Q(p_12_out),
        .\gaf.ram_almost_full_i_reg (p_23_out),
        .\gc1.count_d2_reg[9] (p_0_out),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (rd_rst_i[1]),
        .ram_empty_fb_i_reg(p_22_out),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk));
  final_accelerator_Softmax_Layer_32bit_0_0_rd_logic_11 \gntv_or_sync_fifo.gl0.rd 
       (.E(p_5_out),
        .Q(p_0_out),
        .almost_empty(almost_empty),
        .empty(empty),
        .\gnxpm_cdc.wr_pntr_bin_reg[9] (p_22_out),
        .out({rd_rst_i[2],rd_rst_i[0]}),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .valid(valid));
  final_accelerator_Softmax_Layer_32bit_0_0_wr_logic_12 \gntv_or_sync_fifo.gl0.wr 
       (.AR(wr_rst_i[1]),
        .Q(p_12_out),
        .WEA(\gntv_or_sync_fifo.gl0.wr_n_2 ),
        .almost_full(almost_full),
        .full(full),
        .\gnxpm_cdc.rd_pntr_bin_reg[9] (p_23_out),
        .out(rst_full_ff_i),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
  final_accelerator_Softmax_Layer_32bit_0_0_memory_13 \gntv_or_sync_fifo.mem 
       (.E(p_5_out),
        .Q(p_12_out),
        .SR(rd_rst_i[0]),
        .WEA(\gntv_or_sync_fifo.gl0.wr_n_2 ),
        .din(din),
        .dout(dout),
        .\gc1.count_d2_reg[9] (p_0_out),
        .rd_clk(rd_clk),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .wr_clk(wr_clk));
  final_accelerator_Softmax_Layer_32bit_0_0_reset_blk_ramfifo_14 rstblk
       (.\gc1.count_reg[0] (rd_rst_i),
        .\grstd1.grst_full.grst_f.rst_d3_reg_0 (rst_full_ff_i),
        .out(wr_rst_i),
        .rd_clk(rd_clk),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_top" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_fifo_generator_top
   (wr_rst_busy,
    almost_empty,
    empty,
    valid,
    full,
    dout,
    almost_full,
    wr_en,
    wr_clk,
    rd_clk,
    din,
    rst,
    rd_en);
  output wr_rst_busy;
  output almost_empty;
  output empty;
  output valid;
  output full;
  output [31:0]dout;
  output almost_full;
  input wr_en;
  input wr_clk;
  input rd_clk;
  input [31:0]din;
  input rst;
  input rd_en;

  wire almost_empty;
  wire almost_full;
  wire [31:0]din;
  wire [31:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire valid;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;

  final_accelerator_Softmax_Layer_32bit_0_0_fifo_generator_ramfifo \grf.rf 
       (.almost_empty(almost_empty),
        .almost_full(almost_full),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .valid(valid),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_top" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_fifo_generator_top_40
   (wr_rst_busy,
    almost_empty,
    empty,
    valid,
    full,
    dout,
    almost_full,
    wr_en,
    wr_clk,
    rd_clk,
    din,
    rst,
    rd_en);
  output wr_rst_busy;
  output almost_empty;
  output empty;
  output valid;
  output full;
  output [31:0]dout;
  output almost_full;
  input wr_en;
  input wr_clk;
  input rd_clk;
  input [31:0]din;
  input rst;
  input rd_en;

  wire almost_empty;
  wire almost_full;
  wire [31:0]din;
  wire [31:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire valid;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;

  final_accelerator_Softmax_Layer_32bit_0_0_fifo_generator_ramfifo_41 \grf.rf 
       (.almost_empty(almost_empty),
        .almost_full(almost_full),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .valid(valid),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_top" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_fifo_generator_top_8
   (wr_rst_busy,
    almost_empty,
    empty,
    valid,
    full,
    dout,
    almost_full,
    wr_en,
    wr_clk,
    rd_clk,
    din,
    rst,
    rd_en);
  output wr_rst_busy;
  output almost_empty;
  output empty;
  output valid;
  output full;
  output [31:0]dout;
  output almost_full;
  input wr_en;
  input wr_clk;
  input rd_clk;
  input [31:0]din;
  input rst;
  input rd_en;

  wire almost_empty;
  wire almost_full;
  wire [31:0]din;
  wire [31:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire valid;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;

  final_accelerator_Softmax_Layer_32bit_0_0_fifo_generator_ramfifo_9 \grf.rf 
       (.almost_empty(almost_empty),
        .almost_full(almost_full),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .valid(valid),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* C_ADD_NGC_CONSTRAINT = "0" *) (* C_APPLICATION_TYPE_AXIS = "0" *) (* C_APPLICATION_TYPE_RACH = "0" *) 
(* C_APPLICATION_TYPE_RDCH = "0" *) (* C_APPLICATION_TYPE_WACH = "0" *) (* C_APPLICATION_TYPE_WDCH = "0" *) 
(* C_APPLICATION_TYPE_WRCH = "0" *) (* C_AXIS_TDATA_WIDTH = "8" *) (* C_AXIS_TDEST_WIDTH = "1" *) 
(* C_AXIS_TID_WIDTH = "1" *) (* C_AXIS_TKEEP_WIDTH = "1" *) (* C_AXIS_TSTRB_WIDTH = "1" *) 
(* C_AXIS_TUSER_WIDTH = "4" *) (* C_AXIS_TYPE = "0" *) (* C_AXI_ADDR_WIDTH = "32" *) 
(* C_AXI_ARUSER_WIDTH = "1" *) (* C_AXI_AWUSER_WIDTH = "1" *) (* C_AXI_BUSER_WIDTH = "1" *) 
(* C_AXI_DATA_WIDTH = "64" *) (* C_AXI_ID_WIDTH = "1" *) (* C_AXI_LEN_WIDTH = "8" *) 
(* C_AXI_LOCK_WIDTH = "1" *) (* C_AXI_RUSER_WIDTH = "1" *) (* C_AXI_TYPE = "1" *) 
(* C_AXI_WUSER_WIDTH = "1" *) (* C_COMMON_CLOCK = "0" *) (* C_COUNT_TYPE = "0" *) 
(* C_DATA_COUNT_WIDTH = "10" *) (* C_DEFAULT_VALUE = "BlankString" *) (* C_DIN_WIDTH = "32" *) 
(* C_DIN_WIDTH_AXIS = "1" *) (* C_DIN_WIDTH_RACH = "32" *) (* C_DIN_WIDTH_RDCH = "64" *) 
(* C_DIN_WIDTH_WACH = "1" *) (* C_DIN_WIDTH_WDCH = "64" *) (* C_DIN_WIDTH_WRCH = "2" *) 
(* C_DOUT_RST_VAL = "0" *) (* C_DOUT_WIDTH = "32" *) (* C_ENABLE_RLOCS = "0" *) 
(* C_ENABLE_RST_SYNC = "1" *) (* C_EN_SAFETY_CKT = "0" *) (* C_ERROR_INJECTION_TYPE = "0" *) 
(* C_ERROR_INJECTION_TYPE_AXIS = "0" *) (* C_ERROR_INJECTION_TYPE_RACH = "0" *) (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
(* C_ERROR_INJECTION_TYPE_WACH = "0" *) (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
(* C_FAMILY = "artix7" *) (* C_FULL_FLAGS_RST_VAL = "1" *) (* C_HAS_ALMOST_EMPTY = "1" *) 
(* C_HAS_ALMOST_FULL = "1" *) (* C_HAS_AXIS_TDATA = "1" *) (* C_HAS_AXIS_TDEST = "0" *) 
(* C_HAS_AXIS_TID = "0" *) (* C_HAS_AXIS_TKEEP = "0" *) (* C_HAS_AXIS_TLAST = "0" *) 
(* C_HAS_AXIS_TREADY = "1" *) (* C_HAS_AXIS_TSTRB = "0" *) (* C_HAS_AXIS_TUSER = "1" *) 
(* C_HAS_AXI_ARUSER = "0" *) (* C_HAS_AXI_AWUSER = "0" *) (* C_HAS_AXI_BUSER = "0" *) 
(* C_HAS_AXI_ID = "0" *) (* C_HAS_AXI_RD_CHANNEL = "1" *) (* C_HAS_AXI_RUSER = "0" *) 
(* C_HAS_AXI_WR_CHANNEL = "1" *) (* C_HAS_AXI_WUSER = "0" *) (* C_HAS_BACKUP = "0" *) 
(* C_HAS_DATA_COUNT = "0" *) (* C_HAS_DATA_COUNTS_AXIS = "0" *) (* C_HAS_DATA_COUNTS_RACH = "0" *) 
(* C_HAS_DATA_COUNTS_RDCH = "0" *) (* C_HAS_DATA_COUNTS_WACH = "0" *) (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
(* C_HAS_DATA_COUNTS_WRCH = "0" *) (* C_HAS_INT_CLK = "0" *) (* C_HAS_MASTER_CE = "0" *) 
(* C_HAS_MEMINIT_FILE = "0" *) (* C_HAS_OVERFLOW = "0" *) (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
(* C_HAS_PROG_FLAGS_RACH = "0" *) (* C_HAS_PROG_FLAGS_RDCH = "0" *) (* C_HAS_PROG_FLAGS_WACH = "0" *) 
(* C_HAS_PROG_FLAGS_WDCH = "0" *) (* C_HAS_PROG_FLAGS_WRCH = "0" *) (* C_HAS_RD_DATA_COUNT = "0" *) 
(* C_HAS_RD_RST = "0" *) (* C_HAS_RST = "1" *) (* C_HAS_SLAVE_CE = "0" *) 
(* C_HAS_SRST = "0" *) (* C_HAS_UNDERFLOW = "0" *) (* C_HAS_VALID = "1" *) 
(* C_HAS_WR_ACK = "0" *) (* C_HAS_WR_DATA_COUNT = "0" *) (* C_HAS_WR_RST = "0" *) 
(* C_IMPLEMENTATION_TYPE = "2" *) (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
(* C_IMPLEMENTATION_TYPE_RDCH = "1" *) (* C_IMPLEMENTATION_TYPE_WACH = "1" *) (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
(* C_IMPLEMENTATION_TYPE_WRCH = "1" *) (* C_INIT_WR_PNTR_VAL = "0" *) (* C_INTERFACE_TYPE = "0" *) 
(* C_MEMORY_TYPE = "1" *) (* C_MIF_FILE_NAME = "BlankString" *) (* C_MSGON_VAL = "1" *) 
(* C_OPTIMIZATION_MODE = "0" *) (* C_OVERFLOW_LOW = "0" *) (* C_POWER_SAVING_MODE = "0" *) 
(* C_PRELOAD_LATENCY = "0" *) (* C_PRELOAD_REGS = "1" *) (* C_PRIM_FIFO_TYPE = "1kx36" *) 
(* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) (* C_PRIM_FIFO_TYPE_RDCH = "1kx36" *) 
(* C_PRIM_FIFO_TYPE_WACH = "512x36" *) (* C_PRIM_FIFO_TYPE_WDCH = "1kx36" *) (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) (* C_PROG_EMPTY_TYPE = "0" *) 
(* C_PROG_EMPTY_TYPE_AXIS = "0" *) (* C_PROG_EMPTY_TYPE_RACH = "0" *) (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
(* C_PROG_EMPTY_TYPE_WACH = "0" *) (* C_PROG_EMPTY_TYPE_WDCH = "0" *) (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) (* C_PROG_FULL_THRESH_NEGATE_VAL = "1022" *) (* C_PROG_FULL_TYPE = "0" *) 
(* C_PROG_FULL_TYPE_AXIS = "0" *) (* C_PROG_FULL_TYPE_RACH = "0" *) (* C_PROG_FULL_TYPE_RDCH = "0" *) 
(* C_PROG_FULL_TYPE_WACH = "0" *) (* C_PROG_FULL_TYPE_WDCH = "0" *) (* C_PROG_FULL_TYPE_WRCH = "0" *) 
(* C_RACH_TYPE = "0" *) (* C_RDCH_TYPE = "0" *) (* C_RD_DATA_COUNT_WIDTH = "10" *) 
(* C_RD_DEPTH = "1024" *) (* C_RD_FREQ = "1" *) (* C_RD_PNTR_WIDTH = "10" *) 
(* C_REG_SLICE_MODE_AXIS = "0" *) (* C_REG_SLICE_MODE_RACH = "0" *) (* C_REG_SLICE_MODE_RDCH = "0" *) 
(* C_REG_SLICE_MODE_WACH = "0" *) (* C_REG_SLICE_MODE_WDCH = "0" *) (* C_REG_SLICE_MODE_WRCH = "0" *) 
(* C_SELECT_XPM = "0" *) (* C_SYNCHRONIZER_STAGE = "2" *) (* C_UNDERFLOW_LOW = "0" *) 
(* C_USE_COMMON_OVERFLOW = "0" *) (* C_USE_COMMON_UNDERFLOW = "0" *) (* C_USE_DEFAULT_SETTINGS = "0" *) 
(* C_USE_DOUT_RST = "1" *) (* C_USE_ECC = "0" *) (* C_USE_ECC_AXIS = "0" *) 
(* C_USE_ECC_RACH = "0" *) (* C_USE_ECC_RDCH = "0" *) (* C_USE_ECC_WACH = "0" *) 
(* C_USE_ECC_WDCH = "0" *) (* C_USE_ECC_WRCH = "0" *) (* C_USE_EMBEDDED_REG = "0" *) 
(* C_USE_FIFO16_FLAGS = "0" *) (* C_USE_FWFT_DATA_COUNT = "0" *) (* C_USE_PIPELINE_REG = "0" *) 
(* C_VALID_LOW = "0" *) (* C_WACH_TYPE = "0" *) (* C_WDCH_TYPE = "0" *) 
(* C_WRCH_TYPE = "0" *) (* C_WR_ACK_LOW = "0" *) (* C_WR_DATA_COUNT_WIDTH = "10" *) 
(* C_WR_DEPTH = "1024" *) (* C_WR_DEPTH_AXIS = "1024" *) (* C_WR_DEPTH_RACH = "16" *) 
(* C_WR_DEPTH_RDCH = "1024" *) (* C_WR_DEPTH_WACH = "16" *) (* C_WR_DEPTH_WDCH = "1024" *) 
(* C_WR_DEPTH_WRCH = "16" *) (* C_WR_FREQ = "1" *) (* C_WR_PNTR_WIDTH = "10" *) 
(* C_WR_PNTR_WIDTH_AXIS = "10" *) (* C_WR_PNTR_WIDTH_RACH = "4" *) (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
(* C_WR_PNTR_WIDTH_WACH = "4" *) (* C_WR_PNTR_WIDTH_WDCH = "10" *) (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
(* C_WR_RESPONSE_LATENCY = "1" *) (* ORIG_REF_NAME = "fifo_generator_v13_1_3" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_fifo_generator_v13_1_3
   (backup,
    backup_marker,
    clk,
    rst,
    srst,
    wr_clk,
    wr_rst,
    rd_clk,
    rd_rst,
    din,
    wr_en,
    rd_en,
    prog_empty_thresh,
    prog_empty_thresh_assert,
    prog_empty_thresh_negate,
    prog_full_thresh,
    prog_full_thresh_assert,
    prog_full_thresh_negate,
    int_clk,
    injectdbiterr,
    injectsbiterr,
    sleep,
    dout,
    full,
    almost_full,
    wr_ack,
    overflow,
    empty,
    almost_empty,
    valid,
    underflow,
    data_count,
    rd_data_count,
    wr_data_count,
    prog_full,
    prog_empty,
    sbiterr,
    dbiterr,
    wr_rst_busy,
    rd_rst_busy,
    m_aclk,
    s_aclk,
    s_aresetn,
    m_aclk_en,
    s_aclk_en,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awlock,
    s_axi_awcache,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awregion,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wid,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wuser,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_bready,
    m_axi_awid,
    m_axi_awaddr,
    m_axi_awlen,
    m_axi_awsize,
    m_axi_awburst,
    m_axi_awlock,
    m_axi_awcache,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awregion,
    m_axi_awuser,
    m_axi_awvalid,
    m_axi_awready,
    m_axi_wid,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_wlast,
    m_axi_wuser,
    m_axi_wvalid,
    m_axi_wready,
    m_axi_bid,
    m_axi_bresp,
    m_axi_buser,
    m_axi_bvalid,
    m_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arlock,
    s_axi_arcache,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arregion,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_rready,
    m_axi_arid,
    m_axi_araddr,
    m_axi_arlen,
    m_axi_arsize,
    m_axi_arburst,
    m_axi_arlock,
    m_axi_arcache,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_arregion,
    m_axi_aruser,
    m_axi_arvalid,
    m_axi_arready,
    m_axi_rid,
    m_axi_rdata,
    m_axi_rresp,
    m_axi_rlast,
    m_axi_ruser,
    m_axi_rvalid,
    m_axi_rready,
    s_axis_tvalid,
    s_axis_tready,
    s_axis_tdata,
    s_axis_tstrb,
    s_axis_tkeep,
    s_axis_tlast,
    s_axis_tid,
    s_axis_tdest,
    s_axis_tuser,
    m_axis_tvalid,
    m_axis_tready,
    m_axis_tdata,
    m_axis_tstrb,
    m_axis_tkeep,
    m_axis_tlast,
    m_axis_tid,
    m_axis_tdest,
    m_axis_tuser,
    axi_aw_injectsbiterr,
    axi_aw_injectdbiterr,
    axi_aw_prog_full_thresh,
    axi_aw_prog_empty_thresh,
    axi_aw_data_count,
    axi_aw_wr_data_count,
    axi_aw_rd_data_count,
    axi_aw_sbiterr,
    axi_aw_dbiterr,
    axi_aw_overflow,
    axi_aw_underflow,
    axi_aw_prog_full,
    axi_aw_prog_empty,
    axi_w_injectsbiterr,
    axi_w_injectdbiterr,
    axi_w_prog_full_thresh,
    axi_w_prog_empty_thresh,
    axi_w_data_count,
    axi_w_wr_data_count,
    axi_w_rd_data_count,
    axi_w_sbiterr,
    axi_w_dbiterr,
    axi_w_overflow,
    axi_w_underflow,
    axi_w_prog_full,
    axi_w_prog_empty,
    axi_b_injectsbiterr,
    axi_b_injectdbiterr,
    axi_b_prog_full_thresh,
    axi_b_prog_empty_thresh,
    axi_b_data_count,
    axi_b_wr_data_count,
    axi_b_rd_data_count,
    axi_b_sbiterr,
    axi_b_dbiterr,
    axi_b_overflow,
    axi_b_underflow,
    axi_b_prog_full,
    axi_b_prog_empty,
    axi_ar_injectsbiterr,
    axi_ar_injectdbiterr,
    axi_ar_prog_full_thresh,
    axi_ar_prog_empty_thresh,
    axi_ar_data_count,
    axi_ar_wr_data_count,
    axi_ar_rd_data_count,
    axi_ar_sbiterr,
    axi_ar_dbiterr,
    axi_ar_overflow,
    axi_ar_underflow,
    axi_ar_prog_full,
    axi_ar_prog_empty,
    axi_r_injectsbiterr,
    axi_r_injectdbiterr,
    axi_r_prog_full_thresh,
    axi_r_prog_empty_thresh,
    axi_r_data_count,
    axi_r_wr_data_count,
    axi_r_rd_data_count,
    axi_r_sbiterr,
    axi_r_dbiterr,
    axi_r_overflow,
    axi_r_underflow,
    axi_r_prog_full,
    axi_r_prog_empty,
    axis_injectsbiterr,
    axis_injectdbiterr,
    axis_prog_full_thresh,
    axis_prog_empty_thresh,
    axis_data_count,
    axis_wr_data_count,
    axis_rd_data_count,
    axis_sbiterr,
    axis_dbiterr,
    axis_overflow,
    axis_underflow,
    axis_prog_full,
    axis_prog_empty);
  input backup;
  input backup_marker;
  input clk;
  input rst;
  input srst;
  input wr_clk;
  input wr_rst;
  input rd_clk;
  input rd_rst;
  input [31:0]din;
  input wr_en;
  input rd_en;
  input [9:0]prog_empty_thresh;
  input [9:0]prog_empty_thresh_assert;
  input [9:0]prog_empty_thresh_negate;
  input [9:0]prog_full_thresh;
  input [9:0]prog_full_thresh_assert;
  input [9:0]prog_full_thresh_negate;
  input int_clk;
  input injectdbiterr;
  input injectsbiterr;
  input sleep;
  output [31:0]dout;
  output full;
  output almost_full;
  output wr_ack;
  output overflow;
  output empty;
  output almost_empty;
  output valid;
  output underflow;
  output [9:0]data_count;
  output [9:0]rd_data_count;
  output [9:0]wr_data_count;
  output prog_full;
  output prog_empty;
  output sbiterr;
  output dbiterr;
  output wr_rst_busy;
  output rd_rst_busy;
  input m_aclk;
  input s_aclk;
  input s_aresetn;
  input m_aclk_en;
  input s_aclk_en;
  input [0:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input [0:0]s_axi_awlock;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  input [3:0]s_axi_awregion;
  input [0:0]s_axi_awuser;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wid;
  input [63:0]s_axi_wdata;
  input [7:0]s_axi_wstrb;
  input s_axi_wlast;
  input [0:0]s_axi_wuser;
  input s_axi_wvalid;
  output s_axi_wready;
  output [0:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output [0:0]s_axi_buser;
  output s_axi_bvalid;
  input s_axi_bready;
  output [0:0]m_axi_awid;
  output [31:0]m_axi_awaddr;
  output [7:0]m_axi_awlen;
  output [2:0]m_axi_awsize;
  output [1:0]m_axi_awburst;
  output [0:0]m_axi_awlock;
  output [3:0]m_axi_awcache;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  output [3:0]m_axi_awregion;
  output [0:0]m_axi_awuser;
  output m_axi_awvalid;
  input m_axi_awready;
  output [0:0]m_axi_wid;
  output [63:0]m_axi_wdata;
  output [7:0]m_axi_wstrb;
  output m_axi_wlast;
  output [0:0]m_axi_wuser;
  output m_axi_wvalid;
  input m_axi_wready;
  input [0:0]m_axi_bid;
  input [1:0]m_axi_bresp;
  input [0:0]m_axi_buser;
  input m_axi_bvalid;
  output m_axi_bready;
  input [0:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input [0:0]s_axi_arlock;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  input [3:0]s_axi_arregion;
  input [0:0]s_axi_aruser;
  input s_axi_arvalid;
  output s_axi_arready;
  output [0:0]s_axi_rid;
  output [63:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output [0:0]s_axi_ruser;
  output s_axi_rvalid;
  input s_axi_rready;
  output [0:0]m_axi_arid;
  output [31:0]m_axi_araddr;
  output [7:0]m_axi_arlen;
  output [2:0]m_axi_arsize;
  output [1:0]m_axi_arburst;
  output [0:0]m_axi_arlock;
  output [3:0]m_axi_arcache;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  output [3:0]m_axi_arregion;
  output [0:0]m_axi_aruser;
  output m_axi_arvalid;
  input m_axi_arready;
  input [0:0]m_axi_rid;
  input [63:0]m_axi_rdata;
  input [1:0]m_axi_rresp;
  input m_axi_rlast;
  input [0:0]m_axi_ruser;
  input m_axi_rvalid;
  output m_axi_rready;
  input s_axis_tvalid;
  output s_axis_tready;
  input [7:0]s_axis_tdata;
  input [0:0]s_axis_tstrb;
  input [0:0]s_axis_tkeep;
  input s_axis_tlast;
  input [0:0]s_axis_tid;
  input [0:0]s_axis_tdest;
  input [3:0]s_axis_tuser;
  output m_axis_tvalid;
  input m_axis_tready;
  output [7:0]m_axis_tdata;
  output [0:0]m_axis_tstrb;
  output [0:0]m_axis_tkeep;
  output m_axis_tlast;
  output [0:0]m_axis_tid;
  output [0:0]m_axis_tdest;
  output [3:0]m_axis_tuser;
  input axi_aw_injectsbiterr;
  input axi_aw_injectdbiterr;
  input [3:0]axi_aw_prog_full_thresh;
  input [3:0]axi_aw_prog_empty_thresh;
  output [4:0]axi_aw_data_count;
  output [4:0]axi_aw_wr_data_count;
  output [4:0]axi_aw_rd_data_count;
  output axi_aw_sbiterr;
  output axi_aw_dbiterr;
  output axi_aw_overflow;
  output axi_aw_underflow;
  output axi_aw_prog_full;
  output axi_aw_prog_empty;
  input axi_w_injectsbiterr;
  input axi_w_injectdbiterr;
  input [9:0]axi_w_prog_full_thresh;
  input [9:0]axi_w_prog_empty_thresh;
  output [10:0]axi_w_data_count;
  output [10:0]axi_w_wr_data_count;
  output [10:0]axi_w_rd_data_count;
  output axi_w_sbiterr;
  output axi_w_dbiterr;
  output axi_w_overflow;
  output axi_w_underflow;
  output axi_w_prog_full;
  output axi_w_prog_empty;
  input axi_b_injectsbiterr;
  input axi_b_injectdbiterr;
  input [3:0]axi_b_prog_full_thresh;
  input [3:0]axi_b_prog_empty_thresh;
  output [4:0]axi_b_data_count;
  output [4:0]axi_b_wr_data_count;
  output [4:0]axi_b_rd_data_count;
  output axi_b_sbiterr;
  output axi_b_dbiterr;
  output axi_b_overflow;
  output axi_b_underflow;
  output axi_b_prog_full;
  output axi_b_prog_empty;
  input axi_ar_injectsbiterr;
  input axi_ar_injectdbiterr;
  input [3:0]axi_ar_prog_full_thresh;
  input [3:0]axi_ar_prog_empty_thresh;
  output [4:0]axi_ar_data_count;
  output [4:0]axi_ar_wr_data_count;
  output [4:0]axi_ar_rd_data_count;
  output axi_ar_sbiterr;
  output axi_ar_dbiterr;
  output axi_ar_overflow;
  output axi_ar_underflow;
  output axi_ar_prog_full;
  output axi_ar_prog_empty;
  input axi_r_injectsbiterr;
  input axi_r_injectdbiterr;
  input [9:0]axi_r_prog_full_thresh;
  input [9:0]axi_r_prog_empty_thresh;
  output [10:0]axi_r_data_count;
  output [10:0]axi_r_wr_data_count;
  output [10:0]axi_r_rd_data_count;
  output axi_r_sbiterr;
  output axi_r_dbiterr;
  output axi_r_overflow;
  output axi_r_underflow;
  output axi_r_prog_full;
  output axi_r_prog_empty;
  input axis_injectsbiterr;
  input axis_injectdbiterr;
  input [9:0]axis_prog_full_thresh;
  input [9:0]axis_prog_empty_thresh;
  output [10:0]axis_data_count;
  output [10:0]axis_wr_data_count;
  output [10:0]axis_rd_data_count;
  output axis_sbiterr;
  output axis_dbiterr;
  output axis_overflow;
  output axis_underflow;
  output axis_prog_full;
  output axis_prog_empty;

  wire \<const0> ;
  wire \<const1> ;
  wire almost_empty;
  wire almost_full;
  wire [31:0]din;
  wire [31:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire valid;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;

  assign axi_ar_data_count[4] = \<const0> ;
  assign axi_ar_data_count[3] = \<const0> ;
  assign axi_ar_data_count[2] = \<const0> ;
  assign axi_ar_data_count[1] = \<const0> ;
  assign axi_ar_data_count[0] = \<const0> ;
  assign axi_ar_dbiterr = \<const0> ;
  assign axi_ar_overflow = \<const0> ;
  assign axi_ar_prog_empty = \<const1> ;
  assign axi_ar_prog_full = \<const0> ;
  assign axi_ar_rd_data_count[4] = \<const0> ;
  assign axi_ar_rd_data_count[3] = \<const0> ;
  assign axi_ar_rd_data_count[2] = \<const0> ;
  assign axi_ar_rd_data_count[1] = \<const0> ;
  assign axi_ar_rd_data_count[0] = \<const0> ;
  assign axi_ar_sbiterr = \<const0> ;
  assign axi_ar_underflow = \<const0> ;
  assign axi_ar_wr_data_count[4] = \<const0> ;
  assign axi_ar_wr_data_count[3] = \<const0> ;
  assign axi_ar_wr_data_count[2] = \<const0> ;
  assign axi_ar_wr_data_count[1] = \<const0> ;
  assign axi_ar_wr_data_count[0] = \<const0> ;
  assign axi_aw_data_count[4] = \<const0> ;
  assign axi_aw_data_count[3] = \<const0> ;
  assign axi_aw_data_count[2] = \<const0> ;
  assign axi_aw_data_count[1] = \<const0> ;
  assign axi_aw_data_count[0] = \<const0> ;
  assign axi_aw_dbiterr = \<const0> ;
  assign axi_aw_overflow = \<const0> ;
  assign axi_aw_prog_empty = \<const1> ;
  assign axi_aw_prog_full = \<const0> ;
  assign axi_aw_rd_data_count[4] = \<const0> ;
  assign axi_aw_rd_data_count[3] = \<const0> ;
  assign axi_aw_rd_data_count[2] = \<const0> ;
  assign axi_aw_rd_data_count[1] = \<const0> ;
  assign axi_aw_rd_data_count[0] = \<const0> ;
  assign axi_aw_sbiterr = \<const0> ;
  assign axi_aw_underflow = \<const0> ;
  assign axi_aw_wr_data_count[4] = \<const0> ;
  assign axi_aw_wr_data_count[3] = \<const0> ;
  assign axi_aw_wr_data_count[2] = \<const0> ;
  assign axi_aw_wr_data_count[1] = \<const0> ;
  assign axi_aw_wr_data_count[0] = \<const0> ;
  assign axi_b_data_count[4] = \<const0> ;
  assign axi_b_data_count[3] = \<const0> ;
  assign axi_b_data_count[2] = \<const0> ;
  assign axi_b_data_count[1] = \<const0> ;
  assign axi_b_data_count[0] = \<const0> ;
  assign axi_b_dbiterr = \<const0> ;
  assign axi_b_overflow = \<const0> ;
  assign axi_b_prog_empty = \<const1> ;
  assign axi_b_prog_full = \<const0> ;
  assign axi_b_rd_data_count[4] = \<const0> ;
  assign axi_b_rd_data_count[3] = \<const0> ;
  assign axi_b_rd_data_count[2] = \<const0> ;
  assign axi_b_rd_data_count[1] = \<const0> ;
  assign axi_b_rd_data_count[0] = \<const0> ;
  assign axi_b_sbiterr = \<const0> ;
  assign axi_b_underflow = \<const0> ;
  assign axi_b_wr_data_count[4] = \<const0> ;
  assign axi_b_wr_data_count[3] = \<const0> ;
  assign axi_b_wr_data_count[2] = \<const0> ;
  assign axi_b_wr_data_count[1] = \<const0> ;
  assign axi_b_wr_data_count[0] = \<const0> ;
  assign axi_r_data_count[10] = \<const0> ;
  assign axi_r_data_count[9] = \<const0> ;
  assign axi_r_data_count[8] = \<const0> ;
  assign axi_r_data_count[7] = \<const0> ;
  assign axi_r_data_count[6] = \<const0> ;
  assign axi_r_data_count[5] = \<const0> ;
  assign axi_r_data_count[4] = \<const0> ;
  assign axi_r_data_count[3] = \<const0> ;
  assign axi_r_data_count[2] = \<const0> ;
  assign axi_r_data_count[1] = \<const0> ;
  assign axi_r_data_count[0] = \<const0> ;
  assign axi_r_dbiterr = \<const0> ;
  assign axi_r_overflow = \<const0> ;
  assign axi_r_prog_empty = \<const1> ;
  assign axi_r_prog_full = \<const0> ;
  assign axi_r_rd_data_count[10] = \<const0> ;
  assign axi_r_rd_data_count[9] = \<const0> ;
  assign axi_r_rd_data_count[8] = \<const0> ;
  assign axi_r_rd_data_count[7] = \<const0> ;
  assign axi_r_rd_data_count[6] = \<const0> ;
  assign axi_r_rd_data_count[5] = \<const0> ;
  assign axi_r_rd_data_count[4] = \<const0> ;
  assign axi_r_rd_data_count[3] = \<const0> ;
  assign axi_r_rd_data_count[2] = \<const0> ;
  assign axi_r_rd_data_count[1] = \<const0> ;
  assign axi_r_rd_data_count[0] = \<const0> ;
  assign axi_r_sbiterr = \<const0> ;
  assign axi_r_underflow = \<const0> ;
  assign axi_r_wr_data_count[10] = \<const0> ;
  assign axi_r_wr_data_count[9] = \<const0> ;
  assign axi_r_wr_data_count[8] = \<const0> ;
  assign axi_r_wr_data_count[7] = \<const0> ;
  assign axi_r_wr_data_count[6] = \<const0> ;
  assign axi_r_wr_data_count[5] = \<const0> ;
  assign axi_r_wr_data_count[4] = \<const0> ;
  assign axi_r_wr_data_count[3] = \<const0> ;
  assign axi_r_wr_data_count[2] = \<const0> ;
  assign axi_r_wr_data_count[1] = \<const0> ;
  assign axi_r_wr_data_count[0] = \<const0> ;
  assign axi_w_data_count[10] = \<const0> ;
  assign axi_w_data_count[9] = \<const0> ;
  assign axi_w_data_count[8] = \<const0> ;
  assign axi_w_data_count[7] = \<const0> ;
  assign axi_w_data_count[6] = \<const0> ;
  assign axi_w_data_count[5] = \<const0> ;
  assign axi_w_data_count[4] = \<const0> ;
  assign axi_w_data_count[3] = \<const0> ;
  assign axi_w_data_count[2] = \<const0> ;
  assign axi_w_data_count[1] = \<const0> ;
  assign axi_w_data_count[0] = \<const0> ;
  assign axi_w_dbiterr = \<const0> ;
  assign axi_w_overflow = \<const0> ;
  assign axi_w_prog_empty = \<const1> ;
  assign axi_w_prog_full = \<const0> ;
  assign axi_w_rd_data_count[10] = \<const0> ;
  assign axi_w_rd_data_count[9] = \<const0> ;
  assign axi_w_rd_data_count[8] = \<const0> ;
  assign axi_w_rd_data_count[7] = \<const0> ;
  assign axi_w_rd_data_count[6] = \<const0> ;
  assign axi_w_rd_data_count[5] = \<const0> ;
  assign axi_w_rd_data_count[4] = \<const0> ;
  assign axi_w_rd_data_count[3] = \<const0> ;
  assign axi_w_rd_data_count[2] = \<const0> ;
  assign axi_w_rd_data_count[1] = \<const0> ;
  assign axi_w_rd_data_count[0] = \<const0> ;
  assign axi_w_sbiterr = \<const0> ;
  assign axi_w_underflow = \<const0> ;
  assign axi_w_wr_data_count[10] = \<const0> ;
  assign axi_w_wr_data_count[9] = \<const0> ;
  assign axi_w_wr_data_count[8] = \<const0> ;
  assign axi_w_wr_data_count[7] = \<const0> ;
  assign axi_w_wr_data_count[6] = \<const0> ;
  assign axi_w_wr_data_count[5] = \<const0> ;
  assign axi_w_wr_data_count[4] = \<const0> ;
  assign axi_w_wr_data_count[3] = \<const0> ;
  assign axi_w_wr_data_count[2] = \<const0> ;
  assign axi_w_wr_data_count[1] = \<const0> ;
  assign axi_w_wr_data_count[0] = \<const0> ;
  assign axis_data_count[10] = \<const0> ;
  assign axis_data_count[9] = \<const0> ;
  assign axis_data_count[8] = \<const0> ;
  assign axis_data_count[7] = \<const0> ;
  assign axis_data_count[6] = \<const0> ;
  assign axis_data_count[5] = \<const0> ;
  assign axis_data_count[4] = \<const0> ;
  assign axis_data_count[3] = \<const0> ;
  assign axis_data_count[2] = \<const0> ;
  assign axis_data_count[1] = \<const0> ;
  assign axis_data_count[0] = \<const0> ;
  assign axis_dbiterr = \<const0> ;
  assign axis_overflow = \<const0> ;
  assign axis_prog_empty = \<const1> ;
  assign axis_prog_full = \<const0> ;
  assign axis_rd_data_count[10] = \<const0> ;
  assign axis_rd_data_count[9] = \<const0> ;
  assign axis_rd_data_count[8] = \<const0> ;
  assign axis_rd_data_count[7] = \<const0> ;
  assign axis_rd_data_count[6] = \<const0> ;
  assign axis_rd_data_count[5] = \<const0> ;
  assign axis_rd_data_count[4] = \<const0> ;
  assign axis_rd_data_count[3] = \<const0> ;
  assign axis_rd_data_count[2] = \<const0> ;
  assign axis_rd_data_count[1] = \<const0> ;
  assign axis_rd_data_count[0] = \<const0> ;
  assign axis_sbiterr = \<const0> ;
  assign axis_underflow = \<const0> ;
  assign axis_wr_data_count[10] = \<const0> ;
  assign axis_wr_data_count[9] = \<const0> ;
  assign axis_wr_data_count[8] = \<const0> ;
  assign axis_wr_data_count[7] = \<const0> ;
  assign axis_wr_data_count[6] = \<const0> ;
  assign axis_wr_data_count[5] = \<const0> ;
  assign axis_wr_data_count[4] = \<const0> ;
  assign axis_wr_data_count[3] = \<const0> ;
  assign axis_wr_data_count[2] = \<const0> ;
  assign axis_wr_data_count[1] = \<const0> ;
  assign axis_wr_data_count[0] = \<const0> ;
  assign data_count[9] = \<const0> ;
  assign data_count[8] = \<const0> ;
  assign data_count[7] = \<const0> ;
  assign data_count[6] = \<const0> ;
  assign data_count[5] = \<const0> ;
  assign data_count[4] = \<const0> ;
  assign data_count[3] = \<const0> ;
  assign data_count[2] = \<const0> ;
  assign data_count[1] = \<const0> ;
  assign data_count[0] = \<const0> ;
  assign dbiterr = \<const0> ;
  assign m_axi_araddr[31] = \<const0> ;
  assign m_axi_araddr[30] = \<const0> ;
  assign m_axi_araddr[29] = \<const0> ;
  assign m_axi_araddr[28] = \<const0> ;
  assign m_axi_araddr[27] = \<const0> ;
  assign m_axi_araddr[26] = \<const0> ;
  assign m_axi_araddr[25] = \<const0> ;
  assign m_axi_araddr[24] = \<const0> ;
  assign m_axi_araddr[23] = \<const0> ;
  assign m_axi_araddr[22] = \<const0> ;
  assign m_axi_araddr[21] = \<const0> ;
  assign m_axi_araddr[20] = \<const0> ;
  assign m_axi_araddr[19] = \<const0> ;
  assign m_axi_araddr[18] = \<const0> ;
  assign m_axi_araddr[17] = \<const0> ;
  assign m_axi_araddr[16] = \<const0> ;
  assign m_axi_araddr[15] = \<const0> ;
  assign m_axi_araddr[14] = \<const0> ;
  assign m_axi_araddr[13] = \<const0> ;
  assign m_axi_araddr[12] = \<const0> ;
  assign m_axi_araddr[11] = \<const0> ;
  assign m_axi_araddr[10] = \<const0> ;
  assign m_axi_araddr[9] = \<const0> ;
  assign m_axi_araddr[8] = \<const0> ;
  assign m_axi_araddr[7] = \<const0> ;
  assign m_axi_araddr[6] = \<const0> ;
  assign m_axi_araddr[5] = \<const0> ;
  assign m_axi_araddr[4] = \<const0> ;
  assign m_axi_araddr[3] = \<const0> ;
  assign m_axi_araddr[2] = \<const0> ;
  assign m_axi_araddr[1] = \<const0> ;
  assign m_axi_araddr[0] = \<const0> ;
  assign m_axi_arburst[1] = \<const0> ;
  assign m_axi_arburst[0] = \<const0> ;
  assign m_axi_arcache[3] = \<const0> ;
  assign m_axi_arcache[2] = \<const0> ;
  assign m_axi_arcache[1] = \<const0> ;
  assign m_axi_arcache[0] = \<const0> ;
  assign m_axi_arid[0] = \<const0> ;
  assign m_axi_arlen[7] = \<const0> ;
  assign m_axi_arlen[6] = \<const0> ;
  assign m_axi_arlen[5] = \<const0> ;
  assign m_axi_arlen[4] = \<const0> ;
  assign m_axi_arlen[3] = \<const0> ;
  assign m_axi_arlen[2] = \<const0> ;
  assign m_axi_arlen[1] = \<const0> ;
  assign m_axi_arlen[0] = \<const0> ;
  assign m_axi_arlock[0] = \<const0> ;
  assign m_axi_arprot[2] = \<const0> ;
  assign m_axi_arprot[1] = \<const0> ;
  assign m_axi_arprot[0] = \<const0> ;
  assign m_axi_arqos[3] = \<const0> ;
  assign m_axi_arqos[2] = \<const0> ;
  assign m_axi_arqos[1] = \<const0> ;
  assign m_axi_arqos[0] = \<const0> ;
  assign m_axi_arregion[3] = \<const0> ;
  assign m_axi_arregion[2] = \<const0> ;
  assign m_axi_arregion[1] = \<const0> ;
  assign m_axi_arregion[0] = \<const0> ;
  assign m_axi_arsize[2] = \<const0> ;
  assign m_axi_arsize[1] = \<const0> ;
  assign m_axi_arsize[0] = \<const0> ;
  assign m_axi_aruser[0] = \<const0> ;
  assign m_axi_arvalid = \<const0> ;
  assign m_axi_awaddr[31] = \<const0> ;
  assign m_axi_awaddr[30] = \<const0> ;
  assign m_axi_awaddr[29] = \<const0> ;
  assign m_axi_awaddr[28] = \<const0> ;
  assign m_axi_awaddr[27] = \<const0> ;
  assign m_axi_awaddr[26] = \<const0> ;
  assign m_axi_awaddr[25] = \<const0> ;
  assign m_axi_awaddr[24] = \<const0> ;
  assign m_axi_awaddr[23] = \<const0> ;
  assign m_axi_awaddr[22] = \<const0> ;
  assign m_axi_awaddr[21] = \<const0> ;
  assign m_axi_awaddr[20] = \<const0> ;
  assign m_axi_awaddr[19] = \<const0> ;
  assign m_axi_awaddr[18] = \<const0> ;
  assign m_axi_awaddr[17] = \<const0> ;
  assign m_axi_awaddr[16] = \<const0> ;
  assign m_axi_awaddr[15] = \<const0> ;
  assign m_axi_awaddr[14] = \<const0> ;
  assign m_axi_awaddr[13] = \<const0> ;
  assign m_axi_awaddr[12] = \<const0> ;
  assign m_axi_awaddr[11] = \<const0> ;
  assign m_axi_awaddr[10] = \<const0> ;
  assign m_axi_awaddr[9] = \<const0> ;
  assign m_axi_awaddr[8] = \<const0> ;
  assign m_axi_awaddr[7] = \<const0> ;
  assign m_axi_awaddr[6] = \<const0> ;
  assign m_axi_awaddr[5] = \<const0> ;
  assign m_axi_awaddr[4] = \<const0> ;
  assign m_axi_awaddr[3] = \<const0> ;
  assign m_axi_awaddr[2] = \<const0> ;
  assign m_axi_awaddr[1] = \<const0> ;
  assign m_axi_awaddr[0] = \<const0> ;
  assign m_axi_awburst[1] = \<const0> ;
  assign m_axi_awburst[0] = \<const0> ;
  assign m_axi_awcache[3] = \<const0> ;
  assign m_axi_awcache[2] = \<const0> ;
  assign m_axi_awcache[1] = \<const0> ;
  assign m_axi_awcache[0] = \<const0> ;
  assign m_axi_awid[0] = \<const0> ;
  assign m_axi_awlen[7] = \<const0> ;
  assign m_axi_awlen[6] = \<const0> ;
  assign m_axi_awlen[5] = \<const0> ;
  assign m_axi_awlen[4] = \<const0> ;
  assign m_axi_awlen[3] = \<const0> ;
  assign m_axi_awlen[2] = \<const0> ;
  assign m_axi_awlen[1] = \<const0> ;
  assign m_axi_awlen[0] = \<const0> ;
  assign m_axi_awlock[0] = \<const0> ;
  assign m_axi_awprot[2] = \<const0> ;
  assign m_axi_awprot[1] = \<const0> ;
  assign m_axi_awprot[0] = \<const0> ;
  assign m_axi_awqos[3] = \<const0> ;
  assign m_axi_awqos[2] = \<const0> ;
  assign m_axi_awqos[1] = \<const0> ;
  assign m_axi_awqos[0] = \<const0> ;
  assign m_axi_awregion[3] = \<const0> ;
  assign m_axi_awregion[2] = \<const0> ;
  assign m_axi_awregion[1] = \<const0> ;
  assign m_axi_awregion[0] = \<const0> ;
  assign m_axi_awsize[2] = \<const0> ;
  assign m_axi_awsize[1] = \<const0> ;
  assign m_axi_awsize[0] = \<const0> ;
  assign m_axi_awuser[0] = \<const0> ;
  assign m_axi_awvalid = \<const0> ;
  assign m_axi_bready = \<const0> ;
  assign m_axi_rready = \<const0> ;
  assign m_axi_wdata[63] = \<const0> ;
  assign m_axi_wdata[62] = \<const0> ;
  assign m_axi_wdata[61] = \<const0> ;
  assign m_axi_wdata[60] = \<const0> ;
  assign m_axi_wdata[59] = \<const0> ;
  assign m_axi_wdata[58] = \<const0> ;
  assign m_axi_wdata[57] = \<const0> ;
  assign m_axi_wdata[56] = \<const0> ;
  assign m_axi_wdata[55] = \<const0> ;
  assign m_axi_wdata[54] = \<const0> ;
  assign m_axi_wdata[53] = \<const0> ;
  assign m_axi_wdata[52] = \<const0> ;
  assign m_axi_wdata[51] = \<const0> ;
  assign m_axi_wdata[50] = \<const0> ;
  assign m_axi_wdata[49] = \<const0> ;
  assign m_axi_wdata[48] = \<const0> ;
  assign m_axi_wdata[47] = \<const0> ;
  assign m_axi_wdata[46] = \<const0> ;
  assign m_axi_wdata[45] = \<const0> ;
  assign m_axi_wdata[44] = \<const0> ;
  assign m_axi_wdata[43] = \<const0> ;
  assign m_axi_wdata[42] = \<const0> ;
  assign m_axi_wdata[41] = \<const0> ;
  assign m_axi_wdata[40] = \<const0> ;
  assign m_axi_wdata[39] = \<const0> ;
  assign m_axi_wdata[38] = \<const0> ;
  assign m_axi_wdata[37] = \<const0> ;
  assign m_axi_wdata[36] = \<const0> ;
  assign m_axi_wdata[35] = \<const0> ;
  assign m_axi_wdata[34] = \<const0> ;
  assign m_axi_wdata[33] = \<const0> ;
  assign m_axi_wdata[32] = \<const0> ;
  assign m_axi_wdata[31] = \<const0> ;
  assign m_axi_wdata[30] = \<const0> ;
  assign m_axi_wdata[29] = \<const0> ;
  assign m_axi_wdata[28] = \<const0> ;
  assign m_axi_wdata[27] = \<const0> ;
  assign m_axi_wdata[26] = \<const0> ;
  assign m_axi_wdata[25] = \<const0> ;
  assign m_axi_wdata[24] = \<const0> ;
  assign m_axi_wdata[23] = \<const0> ;
  assign m_axi_wdata[22] = \<const0> ;
  assign m_axi_wdata[21] = \<const0> ;
  assign m_axi_wdata[20] = \<const0> ;
  assign m_axi_wdata[19] = \<const0> ;
  assign m_axi_wdata[18] = \<const0> ;
  assign m_axi_wdata[17] = \<const0> ;
  assign m_axi_wdata[16] = \<const0> ;
  assign m_axi_wdata[15] = \<const0> ;
  assign m_axi_wdata[14] = \<const0> ;
  assign m_axi_wdata[13] = \<const0> ;
  assign m_axi_wdata[12] = \<const0> ;
  assign m_axi_wdata[11] = \<const0> ;
  assign m_axi_wdata[10] = \<const0> ;
  assign m_axi_wdata[9] = \<const0> ;
  assign m_axi_wdata[8] = \<const0> ;
  assign m_axi_wdata[7] = \<const0> ;
  assign m_axi_wdata[6] = \<const0> ;
  assign m_axi_wdata[5] = \<const0> ;
  assign m_axi_wdata[4] = \<const0> ;
  assign m_axi_wdata[3] = \<const0> ;
  assign m_axi_wdata[2] = \<const0> ;
  assign m_axi_wdata[1] = \<const0> ;
  assign m_axi_wdata[0] = \<const0> ;
  assign m_axi_wid[0] = \<const0> ;
  assign m_axi_wlast = \<const0> ;
  assign m_axi_wstrb[7] = \<const0> ;
  assign m_axi_wstrb[6] = \<const0> ;
  assign m_axi_wstrb[5] = \<const0> ;
  assign m_axi_wstrb[4] = \<const0> ;
  assign m_axi_wstrb[3] = \<const0> ;
  assign m_axi_wstrb[2] = \<const0> ;
  assign m_axi_wstrb[1] = \<const0> ;
  assign m_axi_wstrb[0] = \<const0> ;
  assign m_axi_wuser[0] = \<const0> ;
  assign m_axi_wvalid = \<const0> ;
  assign m_axis_tdata[7] = \<const0> ;
  assign m_axis_tdata[6] = \<const0> ;
  assign m_axis_tdata[5] = \<const0> ;
  assign m_axis_tdata[4] = \<const0> ;
  assign m_axis_tdata[3] = \<const0> ;
  assign m_axis_tdata[2] = \<const0> ;
  assign m_axis_tdata[1] = \<const0> ;
  assign m_axis_tdata[0] = \<const0> ;
  assign m_axis_tdest[0] = \<const0> ;
  assign m_axis_tid[0] = \<const0> ;
  assign m_axis_tkeep[0] = \<const0> ;
  assign m_axis_tlast = \<const0> ;
  assign m_axis_tstrb[0] = \<const0> ;
  assign m_axis_tuser[3] = \<const0> ;
  assign m_axis_tuser[2] = \<const0> ;
  assign m_axis_tuser[1] = \<const0> ;
  assign m_axis_tuser[0] = \<const0> ;
  assign m_axis_tvalid = \<const0> ;
  assign overflow = \<const0> ;
  assign prog_empty = \<const0> ;
  assign prog_full = \<const0> ;
  assign rd_data_count[9] = \<const0> ;
  assign rd_data_count[8] = \<const0> ;
  assign rd_data_count[7] = \<const0> ;
  assign rd_data_count[6] = \<const0> ;
  assign rd_data_count[5] = \<const0> ;
  assign rd_data_count[4] = \<const0> ;
  assign rd_data_count[3] = \<const0> ;
  assign rd_data_count[2] = \<const0> ;
  assign rd_data_count[1] = \<const0> ;
  assign rd_data_count[0] = \<const0> ;
  assign rd_rst_busy = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_buser[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_rdata[63] = \<const0> ;
  assign s_axi_rdata[62] = \<const0> ;
  assign s_axi_rdata[61] = \<const0> ;
  assign s_axi_rdata[60] = \<const0> ;
  assign s_axi_rdata[59] = \<const0> ;
  assign s_axi_rdata[58] = \<const0> ;
  assign s_axi_rdata[57] = \<const0> ;
  assign s_axi_rdata[56] = \<const0> ;
  assign s_axi_rdata[55] = \<const0> ;
  assign s_axi_rdata[54] = \<const0> ;
  assign s_axi_rdata[53] = \<const0> ;
  assign s_axi_rdata[52] = \<const0> ;
  assign s_axi_rdata[51] = \<const0> ;
  assign s_axi_rdata[50] = \<const0> ;
  assign s_axi_rdata[49] = \<const0> ;
  assign s_axi_rdata[48] = \<const0> ;
  assign s_axi_rdata[47] = \<const0> ;
  assign s_axi_rdata[46] = \<const0> ;
  assign s_axi_rdata[45] = \<const0> ;
  assign s_axi_rdata[44] = \<const0> ;
  assign s_axi_rdata[43] = \<const0> ;
  assign s_axi_rdata[42] = \<const0> ;
  assign s_axi_rdata[41] = \<const0> ;
  assign s_axi_rdata[40] = \<const0> ;
  assign s_axi_rdata[39] = \<const0> ;
  assign s_axi_rdata[38] = \<const0> ;
  assign s_axi_rdata[37] = \<const0> ;
  assign s_axi_rdata[36] = \<const0> ;
  assign s_axi_rdata[35] = \<const0> ;
  assign s_axi_rdata[34] = \<const0> ;
  assign s_axi_rdata[33] = \<const0> ;
  assign s_axi_rdata[32] = \<const0> ;
  assign s_axi_rdata[31] = \<const0> ;
  assign s_axi_rdata[30] = \<const0> ;
  assign s_axi_rdata[29] = \<const0> ;
  assign s_axi_rdata[28] = \<const0> ;
  assign s_axi_rdata[27] = \<const0> ;
  assign s_axi_rdata[26] = \<const0> ;
  assign s_axi_rdata[25] = \<const0> ;
  assign s_axi_rdata[24] = \<const0> ;
  assign s_axi_rdata[23] = \<const0> ;
  assign s_axi_rdata[22] = \<const0> ;
  assign s_axi_rdata[21] = \<const0> ;
  assign s_axi_rdata[20] = \<const0> ;
  assign s_axi_rdata[19] = \<const0> ;
  assign s_axi_rdata[18] = \<const0> ;
  assign s_axi_rdata[17] = \<const0> ;
  assign s_axi_rdata[16] = \<const0> ;
  assign s_axi_rdata[15] = \<const0> ;
  assign s_axi_rdata[14] = \<const0> ;
  assign s_axi_rdata[13] = \<const0> ;
  assign s_axi_rdata[12] = \<const0> ;
  assign s_axi_rdata[11] = \<const0> ;
  assign s_axi_rdata[10] = \<const0> ;
  assign s_axi_rdata[9] = \<const0> ;
  assign s_axi_rdata[8] = \<const0> ;
  assign s_axi_rdata[7] = \<const0> ;
  assign s_axi_rdata[6] = \<const0> ;
  assign s_axi_rdata[5] = \<const0> ;
  assign s_axi_rdata[4] = \<const0> ;
  assign s_axi_rdata[3] = \<const0> ;
  assign s_axi_rdata[2] = \<const0> ;
  assign s_axi_rdata[1] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_ruser[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign s_axis_tready = \<const0> ;
  assign sbiterr = \<const0> ;
  assign underflow = \<const0> ;
  assign wr_ack = \<const0> ;
  assign wr_data_count[9] = \<const0> ;
  assign wr_data_count[8] = \<const0> ;
  assign wr_data_count[7] = \<const0> ;
  assign wr_data_count[6] = \<const0> ;
  assign wr_data_count[5] = \<const0> ;
  assign wr_data_count[4] = \<const0> ;
  assign wr_data_count[3] = \<const0> ;
  assign wr_data_count[2] = \<const0> ;
  assign wr_data_count[1] = \<const0> ;
  assign wr_data_count[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  VCC VCC
       (.P(\<const1> ));
  final_accelerator_Softmax_Layer_32bit_0_0_fifo_generator_v13_1_3_synth inst_fifo_gen
       (.almost_empty(almost_empty),
        .almost_full(almost_full),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .valid(valid),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* C_ADD_NGC_CONSTRAINT = "0" *) (* C_APPLICATION_TYPE_AXIS = "0" *) (* C_APPLICATION_TYPE_RACH = "0" *) 
(* C_APPLICATION_TYPE_RDCH = "0" *) (* C_APPLICATION_TYPE_WACH = "0" *) (* C_APPLICATION_TYPE_WDCH = "0" *) 
(* C_APPLICATION_TYPE_WRCH = "0" *) (* C_AXIS_TDATA_WIDTH = "8" *) (* C_AXIS_TDEST_WIDTH = "1" *) 
(* C_AXIS_TID_WIDTH = "1" *) (* C_AXIS_TKEEP_WIDTH = "1" *) (* C_AXIS_TSTRB_WIDTH = "1" *) 
(* C_AXIS_TUSER_WIDTH = "4" *) (* C_AXIS_TYPE = "0" *) (* C_AXI_ADDR_WIDTH = "32" *) 
(* C_AXI_ARUSER_WIDTH = "1" *) (* C_AXI_AWUSER_WIDTH = "1" *) (* C_AXI_BUSER_WIDTH = "1" *) 
(* C_AXI_DATA_WIDTH = "64" *) (* C_AXI_ID_WIDTH = "1" *) (* C_AXI_LEN_WIDTH = "8" *) 
(* C_AXI_LOCK_WIDTH = "1" *) (* C_AXI_RUSER_WIDTH = "1" *) (* C_AXI_TYPE = "1" *) 
(* C_AXI_WUSER_WIDTH = "1" *) (* C_COMMON_CLOCK = "0" *) (* C_COUNT_TYPE = "0" *) 
(* C_DATA_COUNT_WIDTH = "10" *) (* C_DEFAULT_VALUE = "BlankString" *) (* C_DIN_WIDTH = "32" *) 
(* C_DIN_WIDTH_AXIS = "1" *) (* C_DIN_WIDTH_RACH = "32" *) (* C_DIN_WIDTH_RDCH = "64" *) 
(* C_DIN_WIDTH_WACH = "1" *) (* C_DIN_WIDTH_WDCH = "64" *) (* C_DIN_WIDTH_WRCH = "2" *) 
(* C_DOUT_RST_VAL = "0" *) (* C_DOUT_WIDTH = "32" *) (* C_ENABLE_RLOCS = "0" *) 
(* C_ENABLE_RST_SYNC = "1" *) (* C_EN_SAFETY_CKT = "0" *) (* C_ERROR_INJECTION_TYPE = "0" *) 
(* C_ERROR_INJECTION_TYPE_AXIS = "0" *) (* C_ERROR_INJECTION_TYPE_RACH = "0" *) (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
(* C_ERROR_INJECTION_TYPE_WACH = "0" *) (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
(* C_FAMILY = "artix7" *) (* C_FULL_FLAGS_RST_VAL = "1" *) (* C_HAS_ALMOST_EMPTY = "1" *) 
(* C_HAS_ALMOST_FULL = "1" *) (* C_HAS_AXIS_TDATA = "1" *) (* C_HAS_AXIS_TDEST = "0" *) 
(* C_HAS_AXIS_TID = "0" *) (* C_HAS_AXIS_TKEEP = "0" *) (* C_HAS_AXIS_TLAST = "0" *) 
(* C_HAS_AXIS_TREADY = "1" *) (* C_HAS_AXIS_TSTRB = "0" *) (* C_HAS_AXIS_TUSER = "1" *) 
(* C_HAS_AXI_ARUSER = "0" *) (* C_HAS_AXI_AWUSER = "0" *) (* C_HAS_AXI_BUSER = "0" *) 
(* C_HAS_AXI_ID = "0" *) (* C_HAS_AXI_RD_CHANNEL = "1" *) (* C_HAS_AXI_RUSER = "0" *) 
(* C_HAS_AXI_WR_CHANNEL = "1" *) (* C_HAS_AXI_WUSER = "0" *) (* C_HAS_BACKUP = "0" *) 
(* C_HAS_DATA_COUNT = "0" *) (* C_HAS_DATA_COUNTS_AXIS = "0" *) (* C_HAS_DATA_COUNTS_RACH = "0" *) 
(* C_HAS_DATA_COUNTS_RDCH = "0" *) (* C_HAS_DATA_COUNTS_WACH = "0" *) (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
(* C_HAS_DATA_COUNTS_WRCH = "0" *) (* C_HAS_INT_CLK = "0" *) (* C_HAS_MASTER_CE = "0" *) 
(* C_HAS_MEMINIT_FILE = "0" *) (* C_HAS_OVERFLOW = "0" *) (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
(* C_HAS_PROG_FLAGS_RACH = "0" *) (* C_HAS_PROG_FLAGS_RDCH = "0" *) (* C_HAS_PROG_FLAGS_WACH = "0" *) 
(* C_HAS_PROG_FLAGS_WDCH = "0" *) (* C_HAS_PROG_FLAGS_WRCH = "0" *) (* C_HAS_RD_DATA_COUNT = "0" *) 
(* C_HAS_RD_RST = "0" *) (* C_HAS_RST = "1" *) (* C_HAS_SLAVE_CE = "0" *) 
(* C_HAS_SRST = "0" *) (* C_HAS_UNDERFLOW = "0" *) (* C_HAS_VALID = "1" *) 
(* C_HAS_WR_ACK = "0" *) (* C_HAS_WR_DATA_COUNT = "0" *) (* C_HAS_WR_RST = "0" *) 
(* C_IMPLEMENTATION_TYPE = "2" *) (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
(* C_IMPLEMENTATION_TYPE_RDCH = "1" *) (* C_IMPLEMENTATION_TYPE_WACH = "1" *) (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
(* C_IMPLEMENTATION_TYPE_WRCH = "1" *) (* C_INIT_WR_PNTR_VAL = "0" *) (* C_INTERFACE_TYPE = "0" *) 
(* C_MEMORY_TYPE = "1" *) (* C_MIF_FILE_NAME = "BlankString" *) (* C_MSGON_VAL = "1" *) 
(* C_OPTIMIZATION_MODE = "0" *) (* C_OVERFLOW_LOW = "0" *) (* C_POWER_SAVING_MODE = "0" *) 
(* C_PRELOAD_LATENCY = "0" *) (* C_PRELOAD_REGS = "1" *) (* C_PRIM_FIFO_TYPE = "1kx36" *) 
(* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) (* C_PRIM_FIFO_TYPE_RDCH = "1kx36" *) 
(* C_PRIM_FIFO_TYPE_WACH = "512x36" *) (* C_PRIM_FIFO_TYPE_WDCH = "1kx36" *) (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) (* C_PROG_EMPTY_TYPE = "0" *) 
(* C_PROG_EMPTY_TYPE_AXIS = "0" *) (* C_PROG_EMPTY_TYPE_RACH = "0" *) (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
(* C_PROG_EMPTY_TYPE_WACH = "0" *) (* C_PROG_EMPTY_TYPE_WDCH = "0" *) (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) (* C_PROG_FULL_THRESH_NEGATE_VAL = "1022" *) (* C_PROG_FULL_TYPE = "0" *) 
(* C_PROG_FULL_TYPE_AXIS = "0" *) (* C_PROG_FULL_TYPE_RACH = "0" *) (* C_PROG_FULL_TYPE_RDCH = "0" *) 
(* C_PROG_FULL_TYPE_WACH = "0" *) (* C_PROG_FULL_TYPE_WDCH = "0" *) (* C_PROG_FULL_TYPE_WRCH = "0" *) 
(* C_RACH_TYPE = "0" *) (* C_RDCH_TYPE = "0" *) (* C_RD_DATA_COUNT_WIDTH = "10" *) 
(* C_RD_DEPTH = "1024" *) (* C_RD_FREQ = "1" *) (* C_RD_PNTR_WIDTH = "10" *) 
(* C_REG_SLICE_MODE_AXIS = "0" *) (* C_REG_SLICE_MODE_RACH = "0" *) (* C_REG_SLICE_MODE_RDCH = "0" *) 
(* C_REG_SLICE_MODE_WACH = "0" *) (* C_REG_SLICE_MODE_WDCH = "0" *) (* C_REG_SLICE_MODE_WRCH = "0" *) 
(* C_SELECT_XPM = "0" *) (* C_SYNCHRONIZER_STAGE = "2" *) (* C_UNDERFLOW_LOW = "0" *) 
(* C_USE_COMMON_OVERFLOW = "0" *) (* C_USE_COMMON_UNDERFLOW = "0" *) (* C_USE_DEFAULT_SETTINGS = "0" *) 
(* C_USE_DOUT_RST = "1" *) (* C_USE_ECC = "0" *) (* C_USE_ECC_AXIS = "0" *) 
(* C_USE_ECC_RACH = "0" *) (* C_USE_ECC_RDCH = "0" *) (* C_USE_ECC_WACH = "0" *) 
(* C_USE_ECC_WDCH = "0" *) (* C_USE_ECC_WRCH = "0" *) (* C_USE_EMBEDDED_REG = "0" *) 
(* C_USE_FIFO16_FLAGS = "0" *) (* C_USE_FWFT_DATA_COUNT = "0" *) (* C_USE_PIPELINE_REG = "0" *) 
(* C_VALID_LOW = "0" *) (* C_WACH_TYPE = "0" *) (* C_WDCH_TYPE = "0" *) 
(* C_WRCH_TYPE = "0" *) (* C_WR_ACK_LOW = "0" *) (* C_WR_DATA_COUNT_WIDTH = "10" *) 
(* C_WR_DEPTH = "1024" *) (* C_WR_DEPTH_AXIS = "1024" *) (* C_WR_DEPTH_RACH = "16" *) 
(* C_WR_DEPTH_RDCH = "1024" *) (* C_WR_DEPTH_WACH = "16" *) (* C_WR_DEPTH_WDCH = "1024" *) 
(* C_WR_DEPTH_WRCH = "16" *) (* C_WR_FREQ = "1" *) (* C_WR_PNTR_WIDTH = "10" *) 
(* C_WR_PNTR_WIDTH_AXIS = "10" *) (* C_WR_PNTR_WIDTH_RACH = "4" *) (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
(* C_WR_PNTR_WIDTH_WACH = "4" *) (* C_WR_PNTR_WIDTH_WDCH = "10" *) (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
(* C_WR_RESPONSE_LATENCY = "1" *) (* ORIG_REF_NAME = "fifo_generator_v13_1_3" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_fifo_generator_v13_1_3__3
   (backup,
    backup_marker,
    clk,
    rst,
    srst,
    wr_clk,
    wr_rst,
    rd_clk,
    rd_rst,
    din,
    wr_en,
    rd_en,
    prog_empty_thresh,
    prog_empty_thresh_assert,
    prog_empty_thresh_negate,
    prog_full_thresh,
    prog_full_thresh_assert,
    prog_full_thresh_negate,
    int_clk,
    injectdbiterr,
    injectsbiterr,
    sleep,
    dout,
    full,
    almost_full,
    wr_ack,
    overflow,
    empty,
    almost_empty,
    valid,
    underflow,
    data_count,
    rd_data_count,
    wr_data_count,
    prog_full,
    prog_empty,
    sbiterr,
    dbiterr,
    wr_rst_busy,
    rd_rst_busy,
    m_aclk,
    s_aclk,
    s_aresetn,
    m_aclk_en,
    s_aclk_en,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awlock,
    s_axi_awcache,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awregion,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wid,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wuser,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_bready,
    m_axi_awid,
    m_axi_awaddr,
    m_axi_awlen,
    m_axi_awsize,
    m_axi_awburst,
    m_axi_awlock,
    m_axi_awcache,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awregion,
    m_axi_awuser,
    m_axi_awvalid,
    m_axi_awready,
    m_axi_wid,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_wlast,
    m_axi_wuser,
    m_axi_wvalid,
    m_axi_wready,
    m_axi_bid,
    m_axi_bresp,
    m_axi_buser,
    m_axi_bvalid,
    m_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arlock,
    s_axi_arcache,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arregion,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_rready,
    m_axi_arid,
    m_axi_araddr,
    m_axi_arlen,
    m_axi_arsize,
    m_axi_arburst,
    m_axi_arlock,
    m_axi_arcache,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_arregion,
    m_axi_aruser,
    m_axi_arvalid,
    m_axi_arready,
    m_axi_rid,
    m_axi_rdata,
    m_axi_rresp,
    m_axi_rlast,
    m_axi_ruser,
    m_axi_rvalid,
    m_axi_rready,
    s_axis_tvalid,
    s_axis_tready,
    s_axis_tdata,
    s_axis_tstrb,
    s_axis_tkeep,
    s_axis_tlast,
    s_axis_tid,
    s_axis_tdest,
    s_axis_tuser,
    m_axis_tvalid,
    m_axis_tready,
    m_axis_tdata,
    m_axis_tstrb,
    m_axis_tkeep,
    m_axis_tlast,
    m_axis_tid,
    m_axis_tdest,
    m_axis_tuser,
    axi_aw_injectsbiterr,
    axi_aw_injectdbiterr,
    axi_aw_prog_full_thresh,
    axi_aw_prog_empty_thresh,
    axi_aw_data_count,
    axi_aw_wr_data_count,
    axi_aw_rd_data_count,
    axi_aw_sbiterr,
    axi_aw_dbiterr,
    axi_aw_overflow,
    axi_aw_underflow,
    axi_aw_prog_full,
    axi_aw_prog_empty,
    axi_w_injectsbiterr,
    axi_w_injectdbiterr,
    axi_w_prog_full_thresh,
    axi_w_prog_empty_thresh,
    axi_w_data_count,
    axi_w_wr_data_count,
    axi_w_rd_data_count,
    axi_w_sbiterr,
    axi_w_dbiterr,
    axi_w_overflow,
    axi_w_underflow,
    axi_w_prog_full,
    axi_w_prog_empty,
    axi_b_injectsbiterr,
    axi_b_injectdbiterr,
    axi_b_prog_full_thresh,
    axi_b_prog_empty_thresh,
    axi_b_data_count,
    axi_b_wr_data_count,
    axi_b_rd_data_count,
    axi_b_sbiterr,
    axi_b_dbiterr,
    axi_b_overflow,
    axi_b_underflow,
    axi_b_prog_full,
    axi_b_prog_empty,
    axi_ar_injectsbiterr,
    axi_ar_injectdbiterr,
    axi_ar_prog_full_thresh,
    axi_ar_prog_empty_thresh,
    axi_ar_data_count,
    axi_ar_wr_data_count,
    axi_ar_rd_data_count,
    axi_ar_sbiterr,
    axi_ar_dbiterr,
    axi_ar_overflow,
    axi_ar_underflow,
    axi_ar_prog_full,
    axi_ar_prog_empty,
    axi_r_injectsbiterr,
    axi_r_injectdbiterr,
    axi_r_prog_full_thresh,
    axi_r_prog_empty_thresh,
    axi_r_data_count,
    axi_r_wr_data_count,
    axi_r_rd_data_count,
    axi_r_sbiterr,
    axi_r_dbiterr,
    axi_r_overflow,
    axi_r_underflow,
    axi_r_prog_full,
    axi_r_prog_empty,
    axis_injectsbiterr,
    axis_injectdbiterr,
    axis_prog_full_thresh,
    axis_prog_empty_thresh,
    axis_data_count,
    axis_wr_data_count,
    axis_rd_data_count,
    axis_sbiterr,
    axis_dbiterr,
    axis_overflow,
    axis_underflow,
    axis_prog_full,
    axis_prog_empty);
  input backup;
  input backup_marker;
  input clk;
  input rst;
  input srst;
  input wr_clk;
  input wr_rst;
  input rd_clk;
  input rd_rst;
  input [31:0]din;
  input wr_en;
  input rd_en;
  input [9:0]prog_empty_thresh;
  input [9:0]prog_empty_thresh_assert;
  input [9:0]prog_empty_thresh_negate;
  input [9:0]prog_full_thresh;
  input [9:0]prog_full_thresh_assert;
  input [9:0]prog_full_thresh_negate;
  input int_clk;
  input injectdbiterr;
  input injectsbiterr;
  input sleep;
  output [31:0]dout;
  output full;
  output almost_full;
  output wr_ack;
  output overflow;
  output empty;
  output almost_empty;
  output valid;
  output underflow;
  output [9:0]data_count;
  output [9:0]rd_data_count;
  output [9:0]wr_data_count;
  output prog_full;
  output prog_empty;
  output sbiterr;
  output dbiterr;
  output wr_rst_busy;
  output rd_rst_busy;
  input m_aclk;
  input s_aclk;
  input s_aresetn;
  input m_aclk_en;
  input s_aclk_en;
  input [0:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input [0:0]s_axi_awlock;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  input [3:0]s_axi_awregion;
  input [0:0]s_axi_awuser;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wid;
  input [63:0]s_axi_wdata;
  input [7:0]s_axi_wstrb;
  input s_axi_wlast;
  input [0:0]s_axi_wuser;
  input s_axi_wvalid;
  output s_axi_wready;
  output [0:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output [0:0]s_axi_buser;
  output s_axi_bvalid;
  input s_axi_bready;
  output [0:0]m_axi_awid;
  output [31:0]m_axi_awaddr;
  output [7:0]m_axi_awlen;
  output [2:0]m_axi_awsize;
  output [1:0]m_axi_awburst;
  output [0:0]m_axi_awlock;
  output [3:0]m_axi_awcache;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  output [3:0]m_axi_awregion;
  output [0:0]m_axi_awuser;
  output m_axi_awvalid;
  input m_axi_awready;
  output [0:0]m_axi_wid;
  output [63:0]m_axi_wdata;
  output [7:0]m_axi_wstrb;
  output m_axi_wlast;
  output [0:0]m_axi_wuser;
  output m_axi_wvalid;
  input m_axi_wready;
  input [0:0]m_axi_bid;
  input [1:0]m_axi_bresp;
  input [0:0]m_axi_buser;
  input m_axi_bvalid;
  output m_axi_bready;
  input [0:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input [0:0]s_axi_arlock;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  input [3:0]s_axi_arregion;
  input [0:0]s_axi_aruser;
  input s_axi_arvalid;
  output s_axi_arready;
  output [0:0]s_axi_rid;
  output [63:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output [0:0]s_axi_ruser;
  output s_axi_rvalid;
  input s_axi_rready;
  output [0:0]m_axi_arid;
  output [31:0]m_axi_araddr;
  output [7:0]m_axi_arlen;
  output [2:0]m_axi_arsize;
  output [1:0]m_axi_arburst;
  output [0:0]m_axi_arlock;
  output [3:0]m_axi_arcache;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  output [3:0]m_axi_arregion;
  output [0:0]m_axi_aruser;
  output m_axi_arvalid;
  input m_axi_arready;
  input [0:0]m_axi_rid;
  input [63:0]m_axi_rdata;
  input [1:0]m_axi_rresp;
  input m_axi_rlast;
  input [0:0]m_axi_ruser;
  input m_axi_rvalid;
  output m_axi_rready;
  input s_axis_tvalid;
  output s_axis_tready;
  input [7:0]s_axis_tdata;
  input [0:0]s_axis_tstrb;
  input [0:0]s_axis_tkeep;
  input s_axis_tlast;
  input [0:0]s_axis_tid;
  input [0:0]s_axis_tdest;
  input [3:0]s_axis_tuser;
  output m_axis_tvalid;
  input m_axis_tready;
  output [7:0]m_axis_tdata;
  output [0:0]m_axis_tstrb;
  output [0:0]m_axis_tkeep;
  output m_axis_tlast;
  output [0:0]m_axis_tid;
  output [0:0]m_axis_tdest;
  output [3:0]m_axis_tuser;
  input axi_aw_injectsbiterr;
  input axi_aw_injectdbiterr;
  input [3:0]axi_aw_prog_full_thresh;
  input [3:0]axi_aw_prog_empty_thresh;
  output [4:0]axi_aw_data_count;
  output [4:0]axi_aw_wr_data_count;
  output [4:0]axi_aw_rd_data_count;
  output axi_aw_sbiterr;
  output axi_aw_dbiterr;
  output axi_aw_overflow;
  output axi_aw_underflow;
  output axi_aw_prog_full;
  output axi_aw_prog_empty;
  input axi_w_injectsbiterr;
  input axi_w_injectdbiterr;
  input [9:0]axi_w_prog_full_thresh;
  input [9:0]axi_w_prog_empty_thresh;
  output [10:0]axi_w_data_count;
  output [10:0]axi_w_wr_data_count;
  output [10:0]axi_w_rd_data_count;
  output axi_w_sbiterr;
  output axi_w_dbiterr;
  output axi_w_overflow;
  output axi_w_underflow;
  output axi_w_prog_full;
  output axi_w_prog_empty;
  input axi_b_injectsbiterr;
  input axi_b_injectdbiterr;
  input [3:0]axi_b_prog_full_thresh;
  input [3:0]axi_b_prog_empty_thresh;
  output [4:0]axi_b_data_count;
  output [4:0]axi_b_wr_data_count;
  output [4:0]axi_b_rd_data_count;
  output axi_b_sbiterr;
  output axi_b_dbiterr;
  output axi_b_overflow;
  output axi_b_underflow;
  output axi_b_prog_full;
  output axi_b_prog_empty;
  input axi_ar_injectsbiterr;
  input axi_ar_injectdbiterr;
  input [3:0]axi_ar_prog_full_thresh;
  input [3:0]axi_ar_prog_empty_thresh;
  output [4:0]axi_ar_data_count;
  output [4:0]axi_ar_wr_data_count;
  output [4:0]axi_ar_rd_data_count;
  output axi_ar_sbiterr;
  output axi_ar_dbiterr;
  output axi_ar_overflow;
  output axi_ar_underflow;
  output axi_ar_prog_full;
  output axi_ar_prog_empty;
  input axi_r_injectsbiterr;
  input axi_r_injectdbiterr;
  input [9:0]axi_r_prog_full_thresh;
  input [9:0]axi_r_prog_empty_thresh;
  output [10:0]axi_r_data_count;
  output [10:0]axi_r_wr_data_count;
  output [10:0]axi_r_rd_data_count;
  output axi_r_sbiterr;
  output axi_r_dbiterr;
  output axi_r_overflow;
  output axi_r_underflow;
  output axi_r_prog_full;
  output axi_r_prog_empty;
  input axis_injectsbiterr;
  input axis_injectdbiterr;
  input [9:0]axis_prog_full_thresh;
  input [9:0]axis_prog_empty_thresh;
  output [10:0]axis_data_count;
  output [10:0]axis_wr_data_count;
  output [10:0]axis_rd_data_count;
  output axis_sbiterr;
  output axis_dbiterr;
  output axis_overflow;
  output axis_underflow;
  output axis_prog_full;
  output axis_prog_empty;

  wire \<const0> ;
  wire \<const1> ;
  wire almost_empty;
  wire almost_full;
  wire [31:0]din;
  wire [31:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire valid;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;

  assign axi_ar_data_count[4] = \<const0> ;
  assign axi_ar_data_count[3] = \<const0> ;
  assign axi_ar_data_count[2] = \<const0> ;
  assign axi_ar_data_count[1] = \<const0> ;
  assign axi_ar_data_count[0] = \<const0> ;
  assign axi_ar_dbiterr = \<const0> ;
  assign axi_ar_overflow = \<const0> ;
  assign axi_ar_prog_empty = \<const1> ;
  assign axi_ar_prog_full = \<const0> ;
  assign axi_ar_rd_data_count[4] = \<const0> ;
  assign axi_ar_rd_data_count[3] = \<const0> ;
  assign axi_ar_rd_data_count[2] = \<const0> ;
  assign axi_ar_rd_data_count[1] = \<const0> ;
  assign axi_ar_rd_data_count[0] = \<const0> ;
  assign axi_ar_sbiterr = \<const0> ;
  assign axi_ar_underflow = \<const0> ;
  assign axi_ar_wr_data_count[4] = \<const0> ;
  assign axi_ar_wr_data_count[3] = \<const0> ;
  assign axi_ar_wr_data_count[2] = \<const0> ;
  assign axi_ar_wr_data_count[1] = \<const0> ;
  assign axi_ar_wr_data_count[0] = \<const0> ;
  assign axi_aw_data_count[4] = \<const0> ;
  assign axi_aw_data_count[3] = \<const0> ;
  assign axi_aw_data_count[2] = \<const0> ;
  assign axi_aw_data_count[1] = \<const0> ;
  assign axi_aw_data_count[0] = \<const0> ;
  assign axi_aw_dbiterr = \<const0> ;
  assign axi_aw_overflow = \<const0> ;
  assign axi_aw_prog_empty = \<const1> ;
  assign axi_aw_prog_full = \<const0> ;
  assign axi_aw_rd_data_count[4] = \<const0> ;
  assign axi_aw_rd_data_count[3] = \<const0> ;
  assign axi_aw_rd_data_count[2] = \<const0> ;
  assign axi_aw_rd_data_count[1] = \<const0> ;
  assign axi_aw_rd_data_count[0] = \<const0> ;
  assign axi_aw_sbiterr = \<const0> ;
  assign axi_aw_underflow = \<const0> ;
  assign axi_aw_wr_data_count[4] = \<const0> ;
  assign axi_aw_wr_data_count[3] = \<const0> ;
  assign axi_aw_wr_data_count[2] = \<const0> ;
  assign axi_aw_wr_data_count[1] = \<const0> ;
  assign axi_aw_wr_data_count[0] = \<const0> ;
  assign axi_b_data_count[4] = \<const0> ;
  assign axi_b_data_count[3] = \<const0> ;
  assign axi_b_data_count[2] = \<const0> ;
  assign axi_b_data_count[1] = \<const0> ;
  assign axi_b_data_count[0] = \<const0> ;
  assign axi_b_dbiterr = \<const0> ;
  assign axi_b_overflow = \<const0> ;
  assign axi_b_prog_empty = \<const1> ;
  assign axi_b_prog_full = \<const0> ;
  assign axi_b_rd_data_count[4] = \<const0> ;
  assign axi_b_rd_data_count[3] = \<const0> ;
  assign axi_b_rd_data_count[2] = \<const0> ;
  assign axi_b_rd_data_count[1] = \<const0> ;
  assign axi_b_rd_data_count[0] = \<const0> ;
  assign axi_b_sbiterr = \<const0> ;
  assign axi_b_underflow = \<const0> ;
  assign axi_b_wr_data_count[4] = \<const0> ;
  assign axi_b_wr_data_count[3] = \<const0> ;
  assign axi_b_wr_data_count[2] = \<const0> ;
  assign axi_b_wr_data_count[1] = \<const0> ;
  assign axi_b_wr_data_count[0] = \<const0> ;
  assign axi_r_data_count[10] = \<const0> ;
  assign axi_r_data_count[9] = \<const0> ;
  assign axi_r_data_count[8] = \<const0> ;
  assign axi_r_data_count[7] = \<const0> ;
  assign axi_r_data_count[6] = \<const0> ;
  assign axi_r_data_count[5] = \<const0> ;
  assign axi_r_data_count[4] = \<const0> ;
  assign axi_r_data_count[3] = \<const0> ;
  assign axi_r_data_count[2] = \<const0> ;
  assign axi_r_data_count[1] = \<const0> ;
  assign axi_r_data_count[0] = \<const0> ;
  assign axi_r_dbiterr = \<const0> ;
  assign axi_r_overflow = \<const0> ;
  assign axi_r_prog_empty = \<const1> ;
  assign axi_r_prog_full = \<const0> ;
  assign axi_r_rd_data_count[10] = \<const0> ;
  assign axi_r_rd_data_count[9] = \<const0> ;
  assign axi_r_rd_data_count[8] = \<const0> ;
  assign axi_r_rd_data_count[7] = \<const0> ;
  assign axi_r_rd_data_count[6] = \<const0> ;
  assign axi_r_rd_data_count[5] = \<const0> ;
  assign axi_r_rd_data_count[4] = \<const0> ;
  assign axi_r_rd_data_count[3] = \<const0> ;
  assign axi_r_rd_data_count[2] = \<const0> ;
  assign axi_r_rd_data_count[1] = \<const0> ;
  assign axi_r_rd_data_count[0] = \<const0> ;
  assign axi_r_sbiterr = \<const0> ;
  assign axi_r_underflow = \<const0> ;
  assign axi_r_wr_data_count[10] = \<const0> ;
  assign axi_r_wr_data_count[9] = \<const0> ;
  assign axi_r_wr_data_count[8] = \<const0> ;
  assign axi_r_wr_data_count[7] = \<const0> ;
  assign axi_r_wr_data_count[6] = \<const0> ;
  assign axi_r_wr_data_count[5] = \<const0> ;
  assign axi_r_wr_data_count[4] = \<const0> ;
  assign axi_r_wr_data_count[3] = \<const0> ;
  assign axi_r_wr_data_count[2] = \<const0> ;
  assign axi_r_wr_data_count[1] = \<const0> ;
  assign axi_r_wr_data_count[0] = \<const0> ;
  assign axi_w_data_count[10] = \<const0> ;
  assign axi_w_data_count[9] = \<const0> ;
  assign axi_w_data_count[8] = \<const0> ;
  assign axi_w_data_count[7] = \<const0> ;
  assign axi_w_data_count[6] = \<const0> ;
  assign axi_w_data_count[5] = \<const0> ;
  assign axi_w_data_count[4] = \<const0> ;
  assign axi_w_data_count[3] = \<const0> ;
  assign axi_w_data_count[2] = \<const0> ;
  assign axi_w_data_count[1] = \<const0> ;
  assign axi_w_data_count[0] = \<const0> ;
  assign axi_w_dbiterr = \<const0> ;
  assign axi_w_overflow = \<const0> ;
  assign axi_w_prog_empty = \<const1> ;
  assign axi_w_prog_full = \<const0> ;
  assign axi_w_rd_data_count[10] = \<const0> ;
  assign axi_w_rd_data_count[9] = \<const0> ;
  assign axi_w_rd_data_count[8] = \<const0> ;
  assign axi_w_rd_data_count[7] = \<const0> ;
  assign axi_w_rd_data_count[6] = \<const0> ;
  assign axi_w_rd_data_count[5] = \<const0> ;
  assign axi_w_rd_data_count[4] = \<const0> ;
  assign axi_w_rd_data_count[3] = \<const0> ;
  assign axi_w_rd_data_count[2] = \<const0> ;
  assign axi_w_rd_data_count[1] = \<const0> ;
  assign axi_w_rd_data_count[0] = \<const0> ;
  assign axi_w_sbiterr = \<const0> ;
  assign axi_w_underflow = \<const0> ;
  assign axi_w_wr_data_count[10] = \<const0> ;
  assign axi_w_wr_data_count[9] = \<const0> ;
  assign axi_w_wr_data_count[8] = \<const0> ;
  assign axi_w_wr_data_count[7] = \<const0> ;
  assign axi_w_wr_data_count[6] = \<const0> ;
  assign axi_w_wr_data_count[5] = \<const0> ;
  assign axi_w_wr_data_count[4] = \<const0> ;
  assign axi_w_wr_data_count[3] = \<const0> ;
  assign axi_w_wr_data_count[2] = \<const0> ;
  assign axi_w_wr_data_count[1] = \<const0> ;
  assign axi_w_wr_data_count[0] = \<const0> ;
  assign axis_data_count[10] = \<const0> ;
  assign axis_data_count[9] = \<const0> ;
  assign axis_data_count[8] = \<const0> ;
  assign axis_data_count[7] = \<const0> ;
  assign axis_data_count[6] = \<const0> ;
  assign axis_data_count[5] = \<const0> ;
  assign axis_data_count[4] = \<const0> ;
  assign axis_data_count[3] = \<const0> ;
  assign axis_data_count[2] = \<const0> ;
  assign axis_data_count[1] = \<const0> ;
  assign axis_data_count[0] = \<const0> ;
  assign axis_dbiterr = \<const0> ;
  assign axis_overflow = \<const0> ;
  assign axis_prog_empty = \<const1> ;
  assign axis_prog_full = \<const0> ;
  assign axis_rd_data_count[10] = \<const0> ;
  assign axis_rd_data_count[9] = \<const0> ;
  assign axis_rd_data_count[8] = \<const0> ;
  assign axis_rd_data_count[7] = \<const0> ;
  assign axis_rd_data_count[6] = \<const0> ;
  assign axis_rd_data_count[5] = \<const0> ;
  assign axis_rd_data_count[4] = \<const0> ;
  assign axis_rd_data_count[3] = \<const0> ;
  assign axis_rd_data_count[2] = \<const0> ;
  assign axis_rd_data_count[1] = \<const0> ;
  assign axis_rd_data_count[0] = \<const0> ;
  assign axis_sbiterr = \<const0> ;
  assign axis_underflow = \<const0> ;
  assign axis_wr_data_count[10] = \<const0> ;
  assign axis_wr_data_count[9] = \<const0> ;
  assign axis_wr_data_count[8] = \<const0> ;
  assign axis_wr_data_count[7] = \<const0> ;
  assign axis_wr_data_count[6] = \<const0> ;
  assign axis_wr_data_count[5] = \<const0> ;
  assign axis_wr_data_count[4] = \<const0> ;
  assign axis_wr_data_count[3] = \<const0> ;
  assign axis_wr_data_count[2] = \<const0> ;
  assign axis_wr_data_count[1] = \<const0> ;
  assign axis_wr_data_count[0] = \<const0> ;
  assign data_count[9] = \<const0> ;
  assign data_count[8] = \<const0> ;
  assign data_count[7] = \<const0> ;
  assign data_count[6] = \<const0> ;
  assign data_count[5] = \<const0> ;
  assign data_count[4] = \<const0> ;
  assign data_count[3] = \<const0> ;
  assign data_count[2] = \<const0> ;
  assign data_count[1] = \<const0> ;
  assign data_count[0] = \<const0> ;
  assign dbiterr = \<const0> ;
  assign m_axi_araddr[31] = \<const0> ;
  assign m_axi_araddr[30] = \<const0> ;
  assign m_axi_araddr[29] = \<const0> ;
  assign m_axi_araddr[28] = \<const0> ;
  assign m_axi_araddr[27] = \<const0> ;
  assign m_axi_araddr[26] = \<const0> ;
  assign m_axi_araddr[25] = \<const0> ;
  assign m_axi_araddr[24] = \<const0> ;
  assign m_axi_araddr[23] = \<const0> ;
  assign m_axi_araddr[22] = \<const0> ;
  assign m_axi_araddr[21] = \<const0> ;
  assign m_axi_araddr[20] = \<const0> ;
  assign m_axi_araddr[19] = \<const0> ;
  assign m_axi_araddr[18] = \<const0> ;
  assign m_axi_araddr[17] = \<const0> ;
  assign m_axi_araddr[16] = \<const0> ;
  assign m_axi_araddr[15] = \<const0> ;
  assign m_axi_araddr[14] = \<const0> ;
  assign m_axi_araddr[13] = \<const0> ;
  assign m_axi_araddr[12] = \<const0> ;
  assign m_axi_araddr[11] = \<const0> ;
  assign m_axi_araddr[10] = \<const0> ;
  assign m_axi_araddr[9] = \<const0> ;
  assign m_axi_araddr[8] = \<const0> ;
  assign m_axi_araddr[7] = \<const0> ;
  assign m_axi_araddr[6] = \<const0> ;
  assign m_axi_araddr[5] = \<const0> ;
  assign m_axi_araddr[4] = \<const0> ;
  assign m_axi_araddr[3] = \<const0> ;
  assign m_axi_araddr[2] = \<const0> ;
  assign m_axi_araddr[1] = \<const0> ;
  assign m_axi_araddr[0] = \<const0> ;
  assign m_axi_arburst[1] = \<const0> ;
  assign m_axi_arburst[0] = \<const0> ;
  assign m_axi_arcache[3] = \<const0> ;
  assign m_axi_arcache[2] = \<const0> ;
  assign m_axi_arcache[1] = \<const0> ;
  assign m_axi_arcache[0] = \<const0> ;
  assign m_axi_arid[0] = \<const0> ;
  assign m_axi_arlen[7] = \<const0> ;
  assign m_axi_arlen[6] = \<const0> ;
  assign m_axi_arlen[5] = \<const0> ;
  assign m_axi_arlen[4] = \<const0> ;
  assign m_axi_arlen[3] = \<const0> ;
  assign m_axi_arlen[2] = \<const0> ;
  assign m_axi_arlen[1] = \<const0> ;
  assign m_axi_arlen[0] = \<const0> ;
  assign m_axi_arlock[0] = \<const0> ;
  assign m_axi_arprot[2] = \<const0> ;
  assign m_axi_arprot[1] = \<const0> ;
  assign m_axi_arprot[0] = \<const0> ;
  assign m_axi_arqos[3] = \<const0> ;
  assign m_axi_arqos[2] = \<const0> ;
  assign m_axi_arqos[1] = \<const0> ;
  assign m_axi_arqos[0] = \<const0> ;
  assign m_axi_arregion[3] = \<const0> ;
  assign m_axi_arregion[2] = \<const0> ;
  assign m_axi_arregion[1] = \<const0> ;
  assign m_axi_arregion[0] = \<const0> ;
  assign m_axi_arsize[2] = \<const0> ;
  assign m_axi_arsize[1] = \<const0> ;
  assign m_axi_arsize[0] = \<const0> ;
  assign m_axi_aruser[0] = \<const0> ;
  assign m_axi_arvalid = \<const0> ;
  assign m_axi_awaddr[31] = \<const0> ;
  assign m_axi_awaddr[30] = \<const0> ;
  assign m_axi_awaddr[29] = \<const0> ;
  assign m_axi_awaddr[28] = \<const0> ;
  assign m_axi_awaddr[27] = \<const0> ;
  assign m_axi_awaddr[26] = \<const0> ;
  assign m_axi_awaddr[25] = \<const0> ;
  assign m_axi_awaddr[24] = \<const0> ;
  assign m_axi_awaddr[23] = \<const0> ;
  assign m_axi_awaddr[22] = \<const0> ;
  assign m_axi_awaddr[21] = \<const0> ;
  assign m_axi_awaddr[20] = \<const0> ;
  assign m_axi_awaddr[19] = \<const0> ;
  assign m_axi_awaddr[18] = \<const0> ;
  assign m_axi_awaddr[17] = \<const0> ;
  assign m_axi_awaddr[16] = \<const0> ;
  assign m_axi_awaddr[15] = \<const0> ;
  assign m_axi_awaddr[14] = \<const0> ;
  assign m_axi_awaddr[13] = \<const0> ;
  assign m_axi_awaddr[12] = \<const0> ;
  assign m_axi_awaddr[11] = \<const0> ;
  assign m_axi_awaddr[10] = \<const0> ;
  assign m_axi_awaddr[9] = \<const0> ;
  assign m_axi_awaddr[8] = \<const0> ;
  assign m_axi_awaddr[7] = \<const0> ;
  assign m_axi_awaddr[6] = \<const0> ;
  assign m_axi_awaddr[5] = \<const0> ;
  assign m_axi_awaddr[4] = \<const0> ;
  assign m_axi_awaddr[3] = \<const0> ;
  assign m_axi_awaddr[2] = \<const0> ;
  assign m_axi_awaddr[1] = \<const0> ;
  assign m_axi_awaddr[0] = \<const0> ;
  assign m_axi_awburst[1] = \<const0> ;
  assign m_axi_awburst[0] = \<const0> ;
  assign m_axi_awcache[3] = \<const0> ;
  assign m_axi_awcache[2] = \<const0> ;
  assign m_axi_awcache[1] = \<const0> ;
  assign m_axi_awcache[0] = \<const0> ;
  assign m_axi_awid[0] = \<const0> ;
  assign m_axi_awlen[7] = \<const0> ;
  assign m_axi_awlen[6] = \<const0> ;
  assign m_axi_awlen[5] = \<const0> ;
  assign m_axi_awlen[4] = \<const0> ;
  assign m_axi_awlen[3] = \<const0> ;
  assign m_axi_awlen[2] = \<const0> ;
  assign m_axi_awlen[1] = \<const0> ;
  assign m_axi_awlen[0] = \<const0> ;
  assign m_axi_awlock[0] = \<const0> ;
  assign m_axi_awprot[2] = \<const0> ;
  assign m_axi_awprot[1] = \<const0> ;
  assign m_axi_awprot[0] = \<const0> ;
  assign m_axi_awqos[3] = \<const0> ;
  assign m_axi_awqos[2] = \<const0> ;
  assign m_axi_awqos[1] = \<const0> ;
  assign m_axi_awqos[0] = \<const0> ;
  assign m_axi_awregion[3] = \<const0> ;
  assign m_axi_awregion[2] = \<const0> ;
  assign m_axi_awregion[1] = \<const0> ;
  assign m_axi_awregion[0] = \<const0> ;
  assign m_axi_awsize[2] = \<const0> ;
  assign m_axi_awsize[1] = \<const0> ;
  assign m_axi_awsize[0] = \<const0> ;
  assign m_axi_awuser[0] = \<const0> ;
  assign m_axi_awvalid = \<const0> ;
  assign m_axi_bready = \<const0> ;
  assign m_axi_rready = \<const0> ;
  assign m_axi_wdata[63] = \<const0> ;
  assign m_axi_wdata[62] = \<const0> ;
  assign m_axi_wdata[61] = \<const0> ;
  assign m_axi_wdata[60] = \<const0> ;
  assign m_axi_wdata[59] = \<const0> ;
  assign m_axi_wdata[58] = \<const0> ;
  assign m_axi_wdata[57] = \<const0> ;
  assign m_axi_wdata[56] = \<const0> ;
  assign m_axi_wdata[55] = \<const0> ;
  assign m_axi_wdata[54] = \<const0> ;
  assign m_axi_wdata[53] = \<const0> ;
  assign m_axi_wdata[52] = \<const0> ;
  assign m_axi_wdata[51] = \<const0> ;
  assign m_axi_wdata[50] = \<const0> ;
  assign m_axi_wdata[49] = \<const0> ;
  assign m_axi_wdata[48] = \<const0> ;
  assign m_axi_wdata[47] = \<const0> ;
  assign m_axi_wdata[46] = \<const0> ;
  assign m_axi_wdata[45] = \<const0> ;
  assign m_axi_wdata[44] = \<const0> ;
  assign m_axi_wdata[43] = \<const0> ;
  assign m_axi_wdata[42] = \<const0> ;
  assign m_axi_wdata[41] = \<const0> ;
  assign m_axi_wdata[40] = \<const0> ;
  assign m_axi_wdata[39] = \<const0> ;
  assign m_axi_wdata[38] = \<const0> ;
  assign m_axi_wdata[37] = \<const0> ;
  assign m_axi_wdata[36] = \<const0> ;
  assign m_axi_wdata[35] = \<const0> ;
  assign m_axi_wdata[34] = \<const0> ;
  assign m_axi_wdata[33] = \<const0> ;
  assign m_axi_wdata[32] = \<const0> ;
  assign m_axi_wdata[31] = \<const0> ;
  assign m_axi_wdata[30] = \<const0> ;
  assign m_axi_wdata[29] = \<const0> ;
  assign m_axi_wdata[28] = \<const0> ;
  assign m_axi_wdata[27] = \<const0> ;
  assign m_axi_wdata[26] = \<const0> ;
  assign m_axi_wdata[25] = \<const0> ;
  assign m_axi_wdata[24] = \<const0> ;
  assign m_axi_wdata[23] = \<const0> ;
  assign m_axi_wdata[22] = \<const0> ;
  assign m_axi_wdata[21] = \<const0> ;
  assign m_axi_wdata[20] = \<const0> ;
  assign m_axi_wdata[19] = \<const0> ;
  assign m_axi_wdata[18] = \<const0> ;
  assign m_axi_wdata[17] = \<const0> ;
  assign m_axi_wdata[16] = \<const0> ;
  assign m_axi_wdata[15] = \<const0> ;
  assign m_axi_wdata[14] = \<const0> ;
  assign m_axi_wdata[13] = \<const0> ;
  assign m_axi_wdata[12] = \<const0> ;
  assign m_axi_wdata[11] = \<const0> ;
  assign m_axi_wdata[10] = \<const0> ;
  assign m_axi_wdata[9] = \<const0> ;
  assign m_axi_wdata[8] = \<const0> ;
  assign m_axi_wdata[7] = \<const0> ;
  assign m_axi_wdata[6] = \<const0> ;
  assign m_axi_wdata[5] = \<const0> ;
  assign m_axi_wdata[4] = \<const0> ;
  assign m_axi_wdata[3] = \<const0> ;
  assign m_axi_wdata[2] = \<const0> ;
  assign m_axi_wdata[1] = \<const0> ;
  assign m_axi_wdata[0] = \<const0> ;
  assign m_axi_wid[0] = \<const0> ;
  assign m_axi_wlast = \<const0> ;
  assign m_axi_wstrb[7] = \<const0> ;
  assign m_axi_wstrb[6] = \<const0> ;
  assign m_axi_wstrb[5] = \<const0> ;
  assign m_axi_wstrb[4] = \<const0> ;
  assign m_axi_wstrb[3] = \<const0> ;
  assign m_axi_wstrb[2] = \<const0> ;
  assign m_axi_wstrb[1] = \<const0> ;
  assign m_axi_wstrb[0] = \<const0> ;
  assign m_axi_wuser[0] = \<const0> ;
  assign m_axi_wvalid = \<const0> ;
  assign m_axis_tdata[7] = \<const0> ;
  assign m_axis_tdata[6] = \<const0> ;
  assign m_axis_tdata[5] = \<const0> ;
  assign m_axis_tdata[4] = \<const0> ;
  assign m_axis_tdata[3] = \<const0> ;
  assign m_axis_tdata[2] = \<const0> ;
  assign m_axis_tdata[1] = \<const0> ;
  assign m_axis_tdata[0] = \<const0> ;
  assign m_axis_tdest[0] = \<const0> ;
  assign m_axis_tid[0] = \<const0> ;
  assign m_axis_tkeep[0] = \<const0> ;
  assign m_axis_tlast = \<const0> ;
  assign m_axis_tstrb[0] = \<const0> ;
  assign m_axis_tuser[3] = \<const0> ;
  assign m_axis_tuser[2] = \<const0> ;
  assign m_axis_tuser[1] = \<const0> ;
  assign m_axis_tuser[0] = \<const0> ;
  assign m_axis_tvalid = \<const0> ;
  assign overflow = \<const0> ;
  assign prog_empty = \<const0> ;
  assign prog_full = \<const0> ;
  assign rd_data_count[9] = \<const0> ;
  assign rd_data_count[8] = \<const0> ;
  assign rd_data_count[7] = \<const0> ;
  assign rd_data_count[6] = \<const0> ;
  assign rd_data_count[5] = \<const0> ;
  assign rd_data_count[4] = \<const0> ;
  assign rd_data_count[3] = \<const0> ;
  assign rd_data_count[2] = \<const0> ;
  assign rd_data_count[1] = \<const0> ;
  assign rd_data_count[0] = \<const0> ;
  assign rd_rst_busy = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_buser[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_rdata[63] = \<const0> ;
  assign s_axi_rdata[62] = \<const0> ;
  assign s_axi_rdata[61] = \<const0> ;
  assign s_axi_rdata[60] = \<const0> ;
  assign s_axi_rdata[59] = \<const0> ;
  assign s_axi_rdata[58] = \<const0> ;
  assign s_axi_rdata[57] = \<const0> ;
  assign s_axi_rdata[56] = \<const0> ;
  assign s_axi_rdata[55] = \<const0> ;
  assign s_axi_rdata[54] = \<const0> ;
  assign s_axi_rdata[53] = \<const0> ;
  assign s_axi_rdata[52] = \<const0> ;
  assign s_axi_rdata[51] = \<const0> ;
  assign s_axi_rdata[50] = \<const0> ;
  assign s_axi_rdata[49] = \<const0> ;
  assign s_axi_rdata[48] = \<const0> ;
  assign s_axi_rdata[47] = \<const0> ;
  assign s_axi_rdata[46] = \<const0> ;
  assign s_axi_rdata[45] = \<const0> ;
  assign s_axi_rdata[44] = \<const0> ;
  assign s_axi_rdata[43] = \<const0> ;
  assign s_axi_rdata[42] = \<const0> ;
  assign s_axi_rdata[41] = \<const0> ;
  assign s_axi_rdata[40] = \<const0> ;
  assign s_axi_rdata[39] = \<const0> ;
  assign s_axi_rdata[38] = \<const0> ;
  assign s_axi_rdata[37] = \<const0> ;
  assign s_axi_rdata[36] = \<const0> ;
  assign s_axi_rdata[35] = \<const0> ;
  assign s_axi_rdata[34] = \<const0> ;
  assign s_axi_rdata[33] = \<const0> ;
  assign s_axi_rdata[32] = \<const0> ;
  assign s_axi_rdata[31] = \<const0> ;
  assign s_axi_rdata[30] = \<const0> ;
  assign s_axi_rdata[29] = \<const0> ;
  assign s_axi_rdata[28] = \<const0> ;
  assign s_axi_rdata[27] = \<const0> ;
  assign s_axi_rdata[26] = \<const0> ;
  assign s_axi_rdata[25] = \<const0> ;
  assign s_axi_rdata[24] = \<const0> ;
  assign s_axi_rdata[23] = \<const0> ;
  assign s_axi_rdata[22] = \<const0> ;
  assign s_axi_rdata[21] = \<const0> ;
  assign s_axi_rdata[20] = \<const0> ;
  assign s_axi_rdata[19] = \<const0> ;
  assign s_axi_rdata[18] = \<const0> ;
  assign s_axi_rdata[17] = \<const0> ;
  assign s_axi_rdata[16] = \<const0> ;
  assign s_axi_rdata[15] = \<const0> ;
  assign s_axi_rdata[14] = \<const0> ;
  assign s_axi_rdata[13] = \<const0> ;
  assign s_axi_rdata[12] = \<const0> ;
  assign s_axi_rdata[11] = \<const0> ;
  assign s_axi_rdata[10] = \<const0> ;
  assign s_axi_rdata[9] = \<const0> ;
  assign s_axi_rdata[8] = \<const0> ;
  assign s_axi_rdata[7] = \<const0> ;
  assign s_axi_rdata[6] = \<const0> ;
  assign s_axi_rdata[5] = \<const0> ;
  assign s_axi_rdata[4] = \<const0> ;
  assign s_axi_rdata[3] = \<const0> ;
  assign s_axi_rdata[2] = \<const0> ;
  assign s_axi_rdata[1] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_ruser[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign s_axis_tready = \<const0> ;
  assign sbiterr = \<const0> ;
  assign underflow = \<const0> ;
  assign wr_ack = \<const0> ;
  assign wr_data_count[9] = \<const0> ;
  assign wr_data_count[8] = \<const0> ;
  assign wr_data_count[7] = \<const0> ;
  assign wr_data_count[6] = \<const0> ;
  assign wr_data_count[5] = \<const0> ;
  assign wr_data_count[4] = \<const0> ;
  assign wr_data_count[3] = \<const0> ;
  assign wr_data_count[2] = \<const0> ;
  assign wr_data_count[1] = \<const0> ;
  assign wr_data_count[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  VCC VCC
       (.P(\<const1> ));
  final_accelerator_Softmax_Layer_32bit_0_0_fifo_generator_v13_1_3_synth_39 inst_fifo_gen
       (.almost_empty(almost_empty),
        .almost_full(almost_full),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .valid(valid),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* C_ADD_NGC_CONSTRAINT = "0" *) (* C_APPLICATION_TYPE_AXIS = "0" *) (* C_APPLICATION_TYPE_RACH = "0" *) 
(* C_APPLICATION_TYPE_RDCH = "0" *) (* C_APPLICATION_TYPE_WACH = "0" *) (* C_APPLICATION_TYPE_WDCH = "0" *) 
(* C_APPLICATION_TYPE_WRCH = "0" *) (* C_AXIS_TDATA_WIDTH = "8" *) (* C_AXIS_TDEST_WIDTH = "1" *) 
(* C_AXIS_TID_WIDTH = "1" *) (* C_AXIS_TKEEP_WIDTH = "1" *) (* C_AXIS_TSTRB_WIDTH = "1" *) 
(* C_AXIS_TUSER_WIDTH = "4" *) (* C_AXIS_TYPE = "0" *) (* C_AXI_ADDR_WIDTH = "32" *) 
(* C_AXI_ARUSER_WIDTH = "1" *) (* C_AXI_AWUSER_WIDTH = "1" *) (* C_AXI_BUSER_WIDTH = "1" *) 
(* C_AXI_DATA_WIDTH = "64" *) (* C_AXI_ID_WIDTH = "1" *) (* C_AXI_LEN_WIDTH = "8" *) 
(* C_AXI_LOCK_WIDTH = "1" *) (* C_AXI_RUSER_WIDTH = "1" *) (* C_AXI_TYPE = "1" *) 
(* C_AXI_WUSER_WIDTH = "1" *) (* C_COMMON_CLOCK = "0" *) (* C_COUNT_TYPE = "0" *) 
(* C_DATA_COUNT_WIDTH = "10" *) (* C_DEFAULT_VALUE = "BlankString" *) (* C_DIN_WIDTH = "32" *) 
(* C_DIN_WIDTH_AXIS = "1" *) (* C_DIN_WIDTH_RACH = "32" *) (* C_DIN_WIDTH_RDCH = "64" *) 
(* C_DIN_WIDTH_WACH = "1" *) (* C_DIN_WIDTH_WDCH = "64" *) (* C_DIN_WIDTH_WRCH = "2" *) 
(* C_DOUT_RST_VAL = "0" *) (* C_DOUT_WIDTH = "32" *) (* C_ENABLE_RLOCS = "0" *) 
(* C_ENABLE_RST_SYNC = "1" *) (* C_EN_SAFETY_CKT = "0" *) (* C_ERROR_INJECTION_TYPE = "0" *) 
(* C_ERROR_INJECTION_TYPE_AXIS = "0" *) (* C_ERROR_INJECTION_TYPE_RACH = "0" *) (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
(* C_ERROR_INJECTION_TYPE_WACH = "0" *) (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
(* C_FAMILY = "artix7" *) (* C_FULL_FLAGS_RST_VAL = "1" *) (* C_HAS_ALMOST_EMPTY = "1" *) 
(* C_HAS_ALMOST_FULL = "1" *) (* C_HAS_AXIS_TDATA = "1" *) (* C_HAS_AXIS_TDEST = "0" *) 
(* C_HAS_AXIS_TID = "0" *) (* C_HAS_AXIS_TKEEP = "0" *) (* C_HAS_AXIS_TLAST = "0" *) 
(* C_HAS_AXIS_TREADY = "1" *) (* C_HAS_AXIS_TSTRB = "0" *) (* C_HAS_AXIS_TUSER = "1" *) 
(* C_HAS_AXI_ARUSER = "0" *) (* C_HAS_AXI_AWUSER = "0" *) (* C_HAS_AXI_BUSER = "0" *) 
(* C_HAS_AXI_ID = "0" *) (* C_HAS_AXI_RD_CHANNEL = "1" *) (* C_HAS_AXI_RUSER = "0" *) 
(* C_HAS_AXI_WR_CHANNEL = "1" *) (* C_HAS_AXI_WUSER = "0" *) (* C_HAS_BACKUP = "0" *) 
(* C_HAS_DATA_COUNT = "0" *) (* C_HAS_DATA_COUNTS_AXIS = "0" *) (* C_HAS_DATA_COUNTS_RACH = "0" *) 
(* C_HAS_DATA_COUNTS_RDCH = "0" *) (* C_HAS_DATA_COUNTS_WACH = "0" *) (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
(* C_HAS_DATA_COUNTS_WRCH = "0" *) (* C_HAS_INT_CLK = "0" *) (* C_HAS_MASTER_CE = "0" *) 
(* C_HAS_MEMINIT_FILE = "0" *) (* C_HAS_OVERFLOW = "0" *) (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
(* C_HAS_PROG_FLAGS_RACH = "0" *) (* C_HAS_PROG_FLAGS_RDCH = "0" *) (* C_HAS_PROG_FLAGS_WACH = "0" *) 
(* C_HAS_PROG_FLAGS_WDCH = "0" *) (* C_HAS_PROG_FLAGS_WRCH = "0" *) (* C_HAS_RD_DATA_COUNT = "0" *) 
(* C_HAS_RD_RST = "0" *) (* C_HAS_RST = "1" *) (* C_HAS_SLAVE_CE = "0" *) 
(* C_HAS_SRST = "0" *) (* C_HAS_UNDERFLOW = "0" *) (* C_HAS_VALID = "1" *) 
(* C_HAS_WR_ACK = "0" *) (* C_HAS_WR_DATA_COUNT = "0" *) (* C_HAS_WR_RST = "0" *) 
(* C_IMPLEMENTATION_TYPE = "2" *) (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
(* C_IMPLEMENTATION_TYPE_RDCH = "1" *) (* C_IMPLEMENTATION_TYPE_WACH = "1" *) (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
(* C_IMPLEMENTATION_TYPE_WRCH = "1" *) (* C_INIT_WR_PNTR_VAL = "0" *) (* C_INTERFACE_TYPE = "0" *) 
(* C_MEMORY_TYPE = "1" *) (* C_MIF_FILE_NAME = "BlankString" *) (* C_MSGON_VAL = "1" *) 
(* C_OPTIMIZATION_MODE = "0" *) (* C_OVERFLOW_LOW = "0" *) (* C_POWER_SAVING_MODE = "0" *) 
(* C_PRELOAD_LATENCY = "0" *) (* C_PRELOAD_REGS = "1" *) (* C_PRIM_FIFO_TYPE = "1kx36" *) 
(* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) (* C_PRIM_FIFO_TYPE_RDCH = "1kx36" *) 
(* C_PRIM_FIFO_TYPE_WACH = "512x36" *) (* C_PRIM_FIFO_TYPE_WDCH = "1kx36" *) (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) (* C_PROG_EMPTY_TYPE = "0" *) 
(* C_PROG_EMPTY_TYPE_AXIS = "0" *) (* C_PROG_EMPTY_TYPE_RACH = "0" *) (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
(* C_PROG_EMPTY_TYPE_WACH = "0" *) (* C_PROG_EMPTY_TYPE_WDCH = "0" *) (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) (* C_PROG_FULL_THRESH_NEGATE_VAL = "1022" *) (* C_PROG_FULL_TYPE = "0" *) 
(* C_PROG_FULL_TYPE_AXIS = "0" *) (* C_PROG_FULL_TYPE_RACH = "0" *) (* C_PROG_FULL_TYPE_RDCH = "0" *) 
(* C_PROG_FULL_TYPE_WACH = "0" *) (* C_PROG_FULL_TYPE_WDCH = "0" *) (* C_PROG_FULL_TYPE_WRCH = "0" *) 
(* C_RACH_TYPE = "0" *) (* C_RDCH_TYPE = "0" *) (* C_RD_DATA_COUNT_WIDTH = "10" *) 
(* C_RD_DEPTH = "1024" *) (* C_RD_FREQ = "1" *) (* C_RD_PNTR_WIDTH = "10" *) 
(* C_REG_SLICE_MODE_AXIS = "0" *) (* C_REG_SLICE_MODE_RACH = "0" *) (* C_REG_SLICE_MODE_RDCH = "0" *) 
(* C_REG_SLICE_MODE_WACH = "0" *) (* C_REG_SLICE_MODE_WDCH = "0" *) (* C_REG_SLICE_MODE_WRCH = "0" *) 
(* C_SELECT_XPM = "0" *) (* C_SYNCHRONIZER_STAGE = "2" *) (* C_UNDERFLOW_LOW = "0" *) 
(* C_USE_COMMON_OVERFLOW = "0" *) (* C_USE_COMMON_UNDERFLOW = "0" *) (* C_USE_DEFAULT_SETTINGS = "0" *) 
(* C_USE_DOUT_RST = "1" *) (* C_USE_ECC = "0" *) (* C_USE_ECC_AXIS = "0" *) 
(* C_USE_ECC_RACH = "0" *) (* C_USE_ECC_RDCH = "0" *) (* C_USE_ECC_WACH = "0" *) 
(* C_USE_ECC_WDCH = "0" *) (* C_USE_ECC_WRCH = "0" *) (* C_USE_EMBEDDED_REG = "0" *) 
(* C_USE_FIFO16_FLAGS = "0" *) (* C_USE_FWFT_DATA_COUNT = "0" *) (* C_USE_PIPELINE_REG = "0" *) 
(* C_VALID_LOW = "0" *) (* C_WACH_TYPE = "0" *) (* C_WDCH_TYPE = "0" *) 
(* C_WRCH_TYPE = "0" *) (* C_WR_ACK_LOW = "0" *) (* C_WR_DATA_COUNT_WIDTH = "10" *) 
(* C_WR_DEPTH = "1024" *) (* C_WR_DEPTH_AXIS = "1024" *) (* C_WR_DEPTH_RACH = "16" *) 
(* C_WR_DEPTH_RDCH = "1024" *) (* C_WR_DEPTH_WACH = "16" *) (* C_WR_DEPTH_WDCH = "1024" *) 
(* C_WR_DEPTH_WRCH = "16" *) (* C_WR_FREQ = "1" *) (* C_WR_PNTR_WIDTH = "10" *) 
(* C_WR_PNTR_WIDTH_AXIS = "10" *) (* C_WR_PNTR_WIDTH_RACH = "4" *) (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
(* C_WR_PNTR_WIDTH_WACH = "4" *) (* C_WR_PNTR_WIDTH_WDCH = "10" *) (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
(* C_WR_RESPONSE_LATENCY = "1" *) (* ORIG_REF_NAME = "fifo_generator_v13_1_3" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_fifo_generator_v13_1_3__4
   (backup,
    backup_marker,
    clk,
    rst,
    srst,
    wr_clk,
    wr_rst,
    rd_clk,
    rd_rst,
    din,
    wr_en,
    rd_en,
    prog_empty_thresh,
    prog_empty_thresh_assert,
    prog_empty_thresh_negate,
    prog_full_thresh,
    prog_full_thresh_assert,
    prog_full_thresh_negate,
    int_clk,
    injectdbiterr,
    injectsbiterr,
    sleep,
    dout,
    full,
    almost_full,
    wr_ack,
    overflow,
    empty,
    almost_empty,
    valid,
    underflow,
    data_count,
    rd_data_count,
    wr_data_count,
    prog_full,
    prog_empty,
    sbiterr,
    dbiterr,
    wr_rst_busy,
    rd_rst_busy,
    m_aclk,
    s_aclk,
    s_aresetn,
    m_aclk_en,
    s_aclk_en,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awlock,
    s_axi_awcache,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awregion,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wid,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wuser,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_bready,
    m_axi_awid,
    m_axi_awaddr,
    m_axi_awlen,
    m_axi_awsize,
    m_axi_awburst,
    m_axi_awlock,
    m_axi_awcache,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awregion,
    m_axi_awuser,
    m_axi_awvalid,
    m_axi_awready,
    m_axi_wid,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_wlast,
    m_axi_wuser,
    m_axi_wvalid,
    m_axi_wready,
    m_axi_bid,
    m_axi_bresp,
    m_axi_buser,
    m_axi_bvalid,
    m_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arlock,
    s_axi_arcache,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arregion,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_rready,
    m_axi_arid,
    m_axi_araddr,
    m_axi_arlen,
    m_axi_arsize,
    m_axi_arburst,
    m_axi_arlock,
    m_axi_arcache,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_arregion,
    m_axi_aruser,
    m_axi_arvalid,
    m_axi_arready,
    m_axi_rid,
    m_axi_rdata,
    m_axi_rresp,
    m_axi_rlast,
    m_axi_ruser,
    m_axi_rvalid,
    m_axi_rready,
    s_axis_tvalid,
    s_axis_tready,
    s_axis_tdata,
    s_axis_tstrb,
    s_axis_tkeep,
    s_axis_tlast,
    s_axis_tid,
    s_axis_tdest,
    s_axis_tuser,
    m_axis_tvalid,
    m_axis_tready,
    m_axis_tdata,
    m_axis_tstrb,
    m_axis_tkeep,
    m_axis_tlast,
    m_axis_tid,
    m_axis_tdest,
    m_axis_tuser,
    axi_aw_injectsbiterr,
    axi_aw_injectdbiterr,
    axi_aw_prog_full_thresh,
    axi_aw_prog_empty_thresh,
    axi_aw_data_count,
    axi_aw_wr_data_count,
    axi_aw_rd_data_count,
    axi_aw_sbiterr,
    axi_aw_dbiterr,
    axi_aw_overflow,
    axi_aw_underflow,
    axi_aw_prog_full,
    axi_aw_prog_empty,
    axi_w_injectsbiterr,
    axi_w_injectdbiterr,
    axi_w_prog_full_thresh,
    axi_w_prog_empty_thresh,
    axi_w_data_count,
    axi_w_wr_data_count,
    axi_w_rd_data_count,
    axi_w_sbiterr,
    axi_w_dbiterr,
    axi_w_overflow,
    axi_w_underflow,
    axi_w_prog_full,
    axi_w_prog_empty,
    axi_b_injectsbiterr,
    axi_b_injectdbiterr,
    axi_b_prog_full_thresh,
    axi_b_prog_empty_thresh,
    axi_b_data_count,
    axi_b_wr_data_count,
    axi_b_rd_data_count,
    axi_b_sbiterr,
    axi_b_dbiterr,
    axi_b_overflow,
    axi_b_underflow,
    axi_b_prog_full,
    axi_b_prog_empty,
    axi_ar_injectsbiterr,
    axi_ar_injectdbiterr,
    axi_ar_prog_full_thresh,
    axi_ar_prog_empty_thresh,
    axi_ar_data_count,
    axi_ar_wr_data_count,
    axi_ar_rd_data_count,
    axi_ar_sbiterr,
    axi_ar_dbiterr,
    axi_ar_overflow,
    axi_ar_underflow,
    axi_ar_prog_full,
    axi_ar_prog_empty,
    axi_r_injectsbiterr,
    axi_r_injectdbiterr,
    axi_r_prog_full_thresh,
    axi_r_prog_empty_thresh,
    axi_r_data_count,
    axi_r_wr_data_count,
    axi_r_rd_data_count,
    axi_r_sbiterr,
    axi_r_dbiterr,
    axi_r_overflow,
    axi_r_underflow,
    axi_r_prog_full,
    axi_r_prog_empty,
    axis_injectsbiterr,
    axis_injectdbiterr,
    axis_prog_full_thresh,
    axis_prog_empty_thresh,
    axis_data_count,
    axis_wr_data_count,
    axis_rd_data_count,
    axis_sbiterr,
    axis_dbiterr,
    axis_overflow,
    axis_underflow,
    axis_prog_full,
    axis_prog_empty);
  input backup;
  input backup_marker;
  input clk;
  input rst;
  input srst;
  input wr_clk;
  input wr_rst;
  input rd_clk;
  input rd_rst;
  input [31:0]din;
  input wr_en;
  input rd_en;
  input [9:0]prog_empty_thresh;
  input [9:0]prog_empty_thresh_assert;
  input [9:0]prog_empty_thresh_negate;
  input [9:0]prog_full_thresh;
  input [9:0]prog_full_thresh_assert;
  input [9:0]prog_full_thresh_negate;
  input int_clk;
  input injectdbiterr;
  input injectsbiterr;
  input sleep;
  output [31:0]dout;
  output full;
  output almost_full;
  output wr_ack;
  output overflow;
  output empty;
  output almost_empty;
  output valid;
  output underflow;
  output [9:0]data_count;
  output [9:0]rd_data_count;
  output [9:0]wr_data_count;
  output prog_full;
  output prog_empty;
  output sbiterr;
  output dbiterr;
  output wr_rst_busy;
  output rd_rst_busy;
  input m_aclk;
  input s_aclk;
  input s_aresetn;
  input m_aclk_en;
  input s_aclk_en;
  input [0:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input [0:0]s_axi_awlock;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  input [3:0]s_axi_awregion;
  input [0:0]s_axi_awuser;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wid;
  input [63:0]s_axi_wdata;
  input [7:0]s_axi_wstrb;
  input s_axi_wlast;
  input [0:0]s_axi_wuser;
  input s_axi_wvalid;
  output s_axi_wready;
  output [0:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output [0:0]s_axi_buser;
  output s_axi_bvalid;
  input s_axi_bready;
  output [0:0]m_axi_awid;
  output [31:0]m_axi_awaddr;
  output [7:0]m_axi_awlen;
  output [2:0]m_axi_awsize;
  output [1:0]m_axi_awburst;
  output [0:0]m_axi_awlock;
  output [3:0]m_axi_awcache;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  output [3:0]m_axi_awregion;
  output [0:0]m_axi_awuser;
  output m_axi_awvalid;
  input m_axi_awready;
  output [0:0]m_axi_wid;
  output [63:0]m_axi_wdata;
  output [7:0]m_axi_wstrb;
  output m_axi_wlast;
  output [0:0]m_axi_wuser;
  output m_axi_wvalid;
  input m_axi_wready;
  input [0:0]m_axi_bid;
  input [1:0]m_axi_bresp;
  input [0:0]m_axi_buser;
  input m_axi_bvalid;
  output m_axi_bready;
  input [0:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input [0:0]s_axi_arlock;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  input [3:0]s_axi_arregion;
  input [0:0]s_axi_aruser;
  input s_axi_arvalid;
  output s_axi_arready;
  output [0:0]s_axi_rid;
  output [63:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output [0:0]s_axi_ruser;
  output s_axi_rvalid;
  input s_axi_rready;
  output [0:0]m_axi_arid;
  output [31:0]m_axi_araddr;
  output [7:0]m_axi_arlen;
  output [2:0]m_axi_arsize;
  output [1:0]m_axi_arburst;
  output [0:0]m_axi_arlock;
  output [3:0]m_axi_arcache;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  output [3:0]m_axi_arregion;
  output [0:0]m_axi_aruser;
  output m_axi_arvalid;
  input m_axi_arready;
  input [0:0]m_axi_rid;
  input [63:0]m_axi_rdata;
  input [1:0]m_axi_rresp;
  input m_axi_rlast;
  input [0:0]m_axi_ruser;
  input m_axi_rvalid;
  output m_axi_rready;
  input s_axis_tvalid;
  output s_axis_tready;
  input [7:0]s_axis_tdata;
  input [0:0]s_axis_tstrb;
  input [0:0]s_axis_tkeep;
  input s_axis_tlast;
  input [0:0]s_axis_tid;
  input [0:0]s_axis_tdest;
  input [3:0]s_axis_tuser;
  output m_axis_tvalid;
  input m_axis_tready;
  output [7:0]m_axis_tdata;
  output [0:0]m_axis_tstrb;
  output [0:0]m_axis_tkeep;
  output m_axis_tlast;
  output [0:0]m_axis_tid;
  output [0:0]m_axis_tdest;
  output [3:0]m_axis_tuser;
  input axi_aw_injectsbiterr;
  input axi_aw_injectdbiterr;
  input [3:0]axi_aw_prog_full_thresh;
  input [3:0]axi_aw_prog_empty_thresh;
  output [4:0]axi_aw_data_count;
  output [4:0]axi_aw_wr_data_count;
  output [4:0]axi_aw_rd_data_count;
  output axi_aw_sbiterr;
  output axi_aw_dbiterr;
  output axi_aw_overflow;
  output axi_aw_underflow;
  output axi_aw_prog_full;
  output axi_aw_prog_empty;
  input axi_w_injectsbiterr;
  input axi_w_injectdbiterr;
  input [9:0]axi_w_prog_full_thresh;
  input [9:0]axi_w_prog_empty_thresh;
  output [10:0]axi_w_data_count;
  output [10:0]axi_w_wr_data_count;
  output [10:0]axi_w_rd_data_count;
  output axi_w_sbiterr;
  output axi_w_dbiterr;
  output axi_w_overflow;
  output axi_w_underflow;
  output axi_w_prog_full;
  output axi_w_prog_empty;
  input axi_b_injectsbiterr;
  input axi_b_injectdbiterr;
  input [3:0]axi_b_prog_full_thresh;
  input [3:0]axi_b_prog_empty_thresh;
  output [4:0]axi_b_data_count;
  output [4:0]axi_b_wr_data_count;
  output [4:0]axi_b_rd_data_count;
  output axi_b_sbiterr;
  output axi_b_dbiterr;
  output axi_b_overflow;
  output axi_b_underflow;
  output axi_b_prog_full;
  output axi_b_prog_empty;
  input axi_ar_injectsbiterr;
  input axi_ar_injectdbiterr;
  input [3:0]axi_ar_prog_full_thresh;
  input [3:0]axi_ar_prog_empty_thresh;
  output [4:0]axi_ar_data_count;
  output [4:0]axi_ar_wr_data_count;
  output [4:0]axi_ar_rd_data_count;
  output axi_ar_sbiterr;
  output axi_ar_dbiterr;
  output axi_ar_overflow;
  output axi_ar_underflow;
  output axi_ar_prog_full;
  output axi_ar_prog_empty;
  input axi_r_injectsbiterr;
  input axi_r_injectdbiterr;
  input [9:0]axi_r_prog_full_thresh;
  input [9:0]axi_r_prog_empty_thresh;
  output [10:0]axi_r_data_count;
  output [10:0]axi_r_wr_data_count;
  output [10:0]axi_r_rd_data_count;
  output axi_r_sbiterr;
  output axi_r_dbiterr;
  output axi_r_overflow;
  output axi_r_underflow;
  output axi_r_prog_full;
  output axi_r_prog_empty;
  input axis_injectsbiterr;
  input axis_injectdbiterr;
  input [9:0]axis_prog_full_thresh;
  input [9:0]axis_prog_empty_thresh;
  output [10:0]axis_data_count;
  output [10:0]axis_wr_data_count;
  output [10:0]axis_rd_data_count;
  output axis_sbiterr;
  output axis_dbiterr;
  output axis_overflow;
  output axis_underflow;
  output axis_prog_full;
  output axis_prog_empty;

  wire \<const0> ;
  wire \<const1> ;
  wire almost_empty;
  wire almost_full;
  wire [31:0]din;
  wire [31:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire valid;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;

  assign axi_ar_data_count[4] = \<const0> ;
  assign axi_ar_data_count[3] = \<const0> ;
  assign axi_ar_data_count[2] = \<const0> ;
  assign axi_ar_data_count[1] = \<const0> ;
  assign axi_ar_data_count[0] = \<const0> ;
  assign axi_ar_dbiterr = \<const0> ;
  assign axi_ar_overflow = \<const0> ;
  assign axi_ar_prog_empty = \<const1> ;
  assign axi_ar_prog_full = \<const0> ;
  assign axi_ar_rd_data_count[4] = \<const0> ;
  assign axi_ar_rd_data_count[3] = \<const0> ;
  assign axi_ar_rd_data_count[2] = \<const0> ;
  assign axi_ar_rd_data_count[1] = \<const0> ;
  assign axi_ar_rd_data_count[0] = \<const0> ;
  assign axi_ar_sbiterr = \<const0> ;
  assign axi_ar_underflow = \<const0> ;
  assign axi_ar_wr_data_count[4] = \<const0> ;
  assign axi_ar_wr_data_count[3] = \<const0> ;
  assign axi_ar_wr_data_count[2] = \<const0> ;
  assign axi_ar_wr_data_count[1] = \<const0> ;
  assign axi_ar_wr_data_count[0] = \<const0> ;
  assign axi_aw_data_count[4] = \<const0> ;
  assign axi_aw_data_count[3] = \<const0> ;
  assign axi_aw_data_count[2] = \<const0> ;
  assign axi_aw_data_count[1] = \<const0> ;
  assign axi_aw_data_count[0] = \<const0> ;
  assign axi_aw_dbiterr = \<const0> ;
  assign axi_aw_overflow = \<const0> ;
  assign axi_aw_prog_empty = \<const1> ;
  assign axi_aw_prog_full = \<const0> ;
  assign axi_aw_rd_data_count[4] = \<const0> ;
  assign axi_aw_rd_data_count[3] = \<const0> ;
  assign axi_aw_rd_data_count[2] = \<const0> ;
  assign axi_aw_rd_data_count[1] = \<const0> ;
  assign axi_aw_rd_data_count[0] = \<const0> ;
  assign axi_aw_sbiterr = \<const0> ;
  assign axi_aw_underflow = \<const0> ;
  assign axi_aw_wr_data_count[4] = \<const0> ;
  assign axi_aw_wr_data_count[3] = \<const0> ;
  assign axi_aw_wr_data_count[2] = \<const0> ;
  assign axi_aw_wr_data_count[1] = \<const0> ;
  assign axi_aw_wr_data_count[0] = \<const0> ;
  assign axi_b_data_count[4] = \<const0> ;
  assign axi_b_data_count[3] = \<const0> ;
  assign axi_b_data_count[2] = \<const0> ;
  assign axi_b_data_count[1] = \<const0> ;
  assign axi_b_data_count[0] = \<const0> ;
  assign axi_b_dbiterr = \<const0> ;
  assign axi_b_overflow = \<const0> ;
  assign axi_b_prog_empty = \<const1> ;
  assign axi_b_prog_full = \<const0> ;
  assign axi_b_rd_data_count[4] = \<const0> ;
  assign axi_b_rd_data_count[3] = \<const0> ;
  assign axi_b_rd_data_count[2] = \<const0> ;
  assign axi_b_rd_data_count[1] = \<const0> ;
  assign axi_b_rd_data_count[0] = \<const0> ;
  assign axi_b_sbiterr = \<const0> ;
  assign axi_b_underflow = \<const0> ;
  assign axi_b_wr_data_count[4] = \<const0> ;
  assign axi_b_wr_data_count[3] = \<const0> ;
  assign axi_b_wr_data_count[2] = \<const0> ;
  assign axi_b_wr_data_count[1] = \<const0> ;
  assign axi_b_wr_data_count[0] = \<const0> ;
  assign axi_r_data_count[10] = \<const0> ;
  assign axi_r_data_count[9] = \<const0> ;
  assign axi_r_data_count[8] = \<const0> ;
  assign axi_r_data_count[7] = \<const0> ;
  assign axi_r_data_count[6] = \<const0> ;
  assign axi_r_data_count[5] = \<const0> ;
  assign axi_r_data_count[4] = \<const0> ;
  assign axi_r_data_count[3] = \<const0> ;
  assign axi_r_data_count[2] = \<const0> ;
  assign axi_r_data_count[1] = \<const0> ;
  assign axi_r_data_count[0] = \<const0> ;
  assign axi_r_dbiterr = \<const0> ;
  assign axi_r_overflow = \<const0> ;
  assign axi_r_prog_empty = \<const1> ;
  assign axi_r_prog_full = \<const0> ;
  assign axi_r_rd_data_count[10] = \<const0> ;
  assign axi_r_rd_data_count[9] = \<const0> ;
  assign axi_r_rd_data_count[8] = \<const0> ;
  assign axi_r_rd_data_count[7] = \<const0> ;
  assign axi_r_rd_data_count[6] = \<const0> ;
  assign axi_r_rd_data_count[5] = \<const0> ;
  assign axi_r_rd_data_count[4] = \<const0> ;
  assign axi_r_rd_data_count[3] = \<const0> ;
  assign axi_r_rd_data_count[2] = \<const0> ;
  assign axi_r_rd_data_count[1] = \<const0> ;
  assign axi_r_rd_data_count[0] = \<const0> ;
  assign axi_r_sbiterr = \<const0> ;
  assign axi_r_underflow = \<const0> ;
  assign axi_r_wr_data_count[10] = \<const0> ;
  assign axi_r_wr_data_count[9] = \<const0> ;
  assign axi_r_wr_data_count[8] = \<const0> ;
  assign axi_r_wr_data_count[7] = \<const0> ;
  assign axi_r_wr_data_count[6] = \<const0> ;
  assign axi_r_wr_data_count[5] = \<const0> ;
  assign axi_r_wr_data_count[4] = \<const0> ;
  assign axi_r_wr_data_count[3] = \<const0> ;
  assign axi_r_wr_data_count[2] = \<const0> ;
  assign axi_r_wr_data_count[1] = \<const0> ;
  assign axi_r_wr_data_count[0] = \<const0> ;
  assign axi_w_data_count[10] = \<const0> ;
  assign axi_w_data_count[9] = \<const0> ;
  assign axi_w_data_count[8] = \<const0> ;
  assign axi_w_data_count[7] = \<const0> ;
  assign axi_w_data_count[6] = \<const0> ;
  assign axi_w_data_count[5] = \<const0> ;
  assign axi_w_data_count[4] = \<const0> ;
  assign axi_w_data_count[3] = \<const0> ;
  assign axi_w_data_count[2] = \<const0> ;
  assign axi_w_data_count[1] = \<const0> ;
  assign axi_w_data_count[0] = \<const0> ;
  assign axi_w_dbiterr = \<const0> ;
  assign axi_w_overflow = \<const0> ;
  assign axi_w_prog_empty = \<const1> ;
  assign axi_w_prog_full = \<const0> ;
  assign axi_w_rd_data_count[10] = \<const0> ;
  assign axi_w_rd_data_count[9] = \<const0> ;
  assign axi_w_rd_data_count[8] = \<const0> ;
  assign axi_w_rd_data_count[7] = \<const0> ;
  assign axi_w_rd_data_count[6] = \<const0> ;
  assign axi_w_rd_data_count[5] = \<const0> ;
  assign axi_w_rd_data_count[4] = \<const0> ;
  assign axi_w_rd_data_count[3] = \<const0> ;
  assign axi_w_rd_data_count[2] = \<const0> ;
  assign axi_w_rd_data_count[1] = \<const0> ;
  assign axi_w_rd_data_count[0] = \<const0> ;
  assign axi_w_sbiterr = \<const0> ;
  assign axi_w_underflow = \<const0> ;
  assign axi_w_wr_data_count[10] = \<const0> ;
  assign axi_w_wr_data_count[9] = \<const0> ;
  assign axi_w_wr_data_count[8] = \<const0> ;
  assign axi_w_wr_data_count[7] = \<const0> ;
  assign axi_w_wr_data_count[6] = \<const0> ;
  assign axi_w_wr_data_count[5] = \<const0> ;
  assign axi_w_wr_data_count[4] = \<const0> ;
  assign axi_w_wr_data_count[3] = \<const0> ;
  assign axi_w_wr_data_count[2] = \<const0> ;
  assign axi_w_wr_data_count[1] = \<const0> ;
  assign axi_w_wr_data_count[0] = \<const0> ;
  assign axis_data_count[10] = \<const0> ;
  assign axis_data_count[9] = \<const0> ;
  assign axis_data_count[8] = \<const0> ;
  assign axis_data_count[7] = \<const0> ;
  assign axis_data_count[6] = \<const0> ;
  assign axis_data_count[5] = \<const0> ;
  assign axis_data_count[4] = \<const0> ;
  assign axis_data_count[3] = \<const0> ;
  assign axis_data_count[2] = \<const0> ;
  assign axis_data_count[1] = \<const0> ;
  assign axis_data_count[0] = \<const0> ;
  assign axis_dbiterr = \<const0> ;
  assign axis_overflow = \<const0> ;
  assign axis_prog_empty = \<const1> ;
  assign axis_prog_full = \<const0> ;
  assign axis_rd_data_count[10] = \<const0> ;
  assign axis_rd_data_count[9] = \<const0> ;
  assign axis_rd_data_count[8] = \<const0> ;
  assign axis_rd_data_count[7] = \<const0> ;
  assign axis_rd_data_count[6] = \<const0> ;
  assign axis_rd_data_count[5] = \<const0> ;
  assign axis_rd_data_count[4] = \<const0> ;
  assign axis_rd_data_count[3] = \<const0> ;
  assign axis_rd_data_count[2] = \<const0> ;
  assign axis_rd_data_count[1] = \<const0> ;
  assign axis_rd_data_count[0] = \<const0> ;
  assign axis_sbiterr = \<const0> ;
  assign axis_underflow = \<const0> ;
  assign axis_wr_data_count[10] = \<const0> ;
  assign axis_wr_data_count[9] = \<const0> ;
  assign axis_wr_data_count[8] = \<const0> ;
  assign axis_wr_data_count[7] = \<const0> ;
  assign axis_wr_data_count[6] = \<const0> ;
  assign axis_wr_data_count[5] = \<const0> ;
  assign axis_wr_data_count[4] = \<const0> ;
  assign axis_wr_data_count[3] = \<const0> ;
  assign axis_wr_data_count[2] = \<const0> ;
  assign axis_wr_data_count[1] = \<const0> ;
  assign axis_wr_data_count[0] = \<const0> ;
  assign data_count[9] = \<const0> ;
  assign data_count[8] = \<const0> ;
  assign data_count[7] = \<const0> ;
  assign data_count[6] = \<const0> ;
  assign data_count[5] = \<const0> ;
  assign data_count[4] = \<const0> ;
  assign data_count[3] = \<const0> ;
  assign data_count[2] = \<const0> ;
  assign data_count[1] = \<const0> ;
  assign data_count[0] = \<const0> ;
  assign dbiterr = \<const0> ;
  assign m_axi_araddr[31] = \<const0> ;
  assign m_axi_araddr[30] = \<const0> ;
  assign m_axi_araddr[29] = \<const0> ;
  assign m_axi_araddr[28] = \<const0> ;
  assign m_axi_araddr[27] = \<const0> ;
  assign m_axi_araddr[26] = \<const0> ;
  assign m_axi_araddr[25] = \<const0> ;
  assign m_axi_araddr[24] = \<const0> ;
  assign m_axi_araddr[23] = \<const0> ;
  assign m_axi_araddr[22] = \<const0> ;
  assign m_axi_araddr[21] = \<const0> ;
  assign m_axi_araddr[20] = \<const0> ;
  assign m_axi_araddr[19] = \<const0> ;
  assign m_axi_araddr[18] = \<const0> ;
  assign m_axi_araddr[17] = \<const0> ;
  assign m_axi_araddr[16] = \<const0> ;
  assign m_axi_araddr[15] = \<const0> ;
  assign m_axi_araddr[14] = \<const0> ;
  assign m_axi_araddr[13] = \<const0> ;
  assign m_axi_araddr[12] = \<const0> ;
  assign m_axi_araddr[11] = \<const0> ;
  assign m_axi_araddr[10] = \<const0> ;
  assign m_axi_araddr[9] = \<const0> ;
  assign m_axi_araddr[8] = \<const0> ;
  assign m_axi_araddr[7] = \<const0> ;
  assign m_axi_araddr[6] = \<const0> ;
  assign m_axi_araddr[5] = \<const0> ;
  assign m_axi_araddr[4] = \<const0> ;
  assign m_axi_araddr[3] = \<const0> ;
  assign m_axi_araddr[2] = \<const0> ;
  assign m_axi_araddr[1] = \<const0> ;
  assign m_axi_araddr[0] = \<const0> ;
  assign m_axi_arburst[1] = \<const0> ;
  assign m_axi_arburst[0] = \<const0> ;
  assign m_axi_arcache[3] = \<const0> ;
  assign m_axi_arcache[2] = \<const0> ;
  assign m_axi_arcache[1] = \<const0> ;
  assign m_axi_arcache[0] = \<const0> ;
  assign m_axi_arid[0] = \<const0> ;
  assign m_axi_arlen[7] = \<const0> ;
  assign m_axi_arlen[6] = \<const0> ;
  assign m_axi_arlen[5] = \<const0> ;
  assign m_axi_arlen[4] = \<const0> ;
  assign m_axi_arlen[3] = \<const0> ;
  assign m_axi_arlen[2] = \<const0> ;
  assign m_axi_arlen[1] = \<const0> ;
  assign m_axi_arlen[0] = \<const0> ;
  assign m_axi_arlock[0] = \<const0> ;
  assign m_axi_arprot[2] = \<const0> ;
  assign m_axi_arprot[1] = \<const0> ;
  assign m_axi_arprot[0] = \<const0> ;
  assign m_axi_arqos[3] = \<const0> ;
  assign m_axi_arqos[2] = \<const0> ;
  assign m_axi_arqos[1] = \<const0> ;
  assign m_axi_arqos[0] = \<const0> ;
  assign m_axi_arregion[3] = \<const0> ;
  assign m_axi_arregion[2] = \<const0> ;
  assign m_axi_arregion[1] = \<const0> ;
  assign m_axi_arregion[0] = \<const0> ;
  assign m_axi_arsize[2] = \<const0> ;
  assign m_axi_arsize[1] = \<const0> ;
  assign m_axi_arsize[0] = \<const0> ;
  assign m_axi_aruser[0] = \<const0> ;
  assign m_axi_arvalid = \<const0> ;
  assign m_axi_awaddr[31] = \<const0> ;
  assign m_axi_awaddr[30] = \<const0> ;
  assign m_axi_awaddr[29] = \<const0> ;
  assign m_axi_awaddr[28] = \<const0> ;
  assign m_axi_awaddr[27] = \<const0> ;
  assign m_axi_awaddr[26] = \<const0> ;
  assign m_axi_awaddr[25] = \<const0> ;
  assign m_axi_awaddr[24] = \<const0> ;
  assign m_axi_awaddr[23] = \<const0> ;
  assign m_axi_awaddr[22] = \<const0> ;
  assign m_axi_awaddr[21] = \<const0> ;
  assign m_axi_awaddr[20] = \<const0> ;
  assign m_axi_awaddr[19] = \<const0> ;
  assign m_axi_awaddr[18] = \<const0> ;
  assign m_axi_awaddr[17] = \<const0> ;
  assign m_axi_awaddr[16] = \<const0> ;
  assign m_axi_awaddr[15] = \<const0> ;
  assign m_axi_awaddr[14] = \<const0> ;
  assign m_axi_awaddr[13] = \<const0> ;
  assign m_axi_awaddr[12] = \<const0> ;
  assign m_axi_awaddr[11] = \<const0> ;
  assign m_axi_awaddr[10] = \<const0> ;
  assign m_axi_awaddr[9] = \<const0> ;
  assign m_axi_awaddr[8] = \<const0> ;
  assign m_axi_awaddr[7] = \<const0> ;
  assign m_axi_awaddr[6] = \<const0> ;
  assign m_axi_awaddr[5] = \<const0> ;
  assign m_axi_awaddr[4] = \<const0> ;
  assign m_axi_awaddr[3] = \<const0> ;
  assign m_axi_awaddr[2] = \<const0> ;
  assign m_axi_awaddr[1] = \<const0> ;
  assign m_axi_awaddr[0] = \<const0> ;
  assign m_axi_awburst[1] = \<const0> ;
  assign m_axi_awburst[0] = \<const0> ;
  assign m_axi_awcache[3] = \<const0> ;
  assign m_axi_awcache[2] = \<const0> ;
  assign m_axi_awcache[1] = \<const0> ;
  assign m_axi_awcache[0] = \<const0> ;
  assign m_axi_awid[0] = \<const0> ;
  assign m_axi_awlen[7] = \<const0> ;
  assign m_axi_awlen[6] = \<const0> ;
  assign m_axi_awlen[5] = \<const0> ;
  assign m_axi_awlen[4] = \<const0> ;
  assign m_axi_awlen[3] = \<const0> ;
  assign m_axi_awlen[2] = \<const0> ;
  assign m_axi_awlen[1] = \<const0> ;
  assign m_axi_awlen[0] = \<const0> ;
  assign m_axi_awlock[0] = \<const0> ;
  assign m_axi_awprot[2] = \<const0> ;
  assign m_axi_awprot[1] = \<const0> ;
  assign m_axi_awprot[0] = \<const0> ;
  assign m_axi_awqos[3] = \<const0> ;
  assign m_axi_awqos[2] = \<const0> ;
  assign m_axi_awqos[1] = \<const0> ;
  assign m_axi_awqos[0] = \<const0> ;
  assign m_axi_awregion[3] = \<const0> ;
  assign m_axi_awregion[2] = \<const0> ;
  assign m_axi_awregion[1] = \<const0> ;
  assign m_axi_awregion[0] = \<const0> ;
  assign m_axi_awsize[2] = \<const0> ;
  assign m_axi_awsize[1] = \<const0> ;
  assign m_axi_awsize[0] = \<const0> ;
  assign m_axi_awuser[0] = \<const0> ;
  assign m_axi_awvalid = \<const0> ;
  assign m_axi_bready = \<const0> ;
  assign m_axi_rready = \<const0> ;
  assign m_axi_wdata[63] = \<const0> ;
  assign m_axi_wdata[62] = \<const0> ;
  assign m_axi_wdata[61] = \<const0> ;
  assign m_axi_wdata[60] = \<const0> ;
  assign m_axi_wdata[59] = \<const0> ;
  assign m_axi_wdata[58] = \<const0> ;
  assign m_axi_wdata[57] = \<const0> ;
  assign m_axi_wdata[56] = \<const0> ;
  assign m_axi_wdata[55] = \<const0> ;
  assign m_axi_wdata[54] = \<const0> ;
  assign m_axi_wdata[53] = \<const0> ;
  assign m_axi_wdata[52] = \<const0> ;
  assign m_axi_wdata[51] = \<const0> ;
  assign m_axi_wdata[50] = \<const0> ;
  assign m_axi_wdata[49] = \<const0> ;
  assign m_axi_wdata[48] = \<const0> ;
  assign m_axi_wdata[47] = \<const0> ;
  assign m_axi_wdata[46] = \<const0> ;
  assign m_axi_wdata[45] = \<const0> ;
  assign m_axi_wdata[44] = \<const0> ;
  assign m_axi_wdata[43] = \<const0> ;
  assign m_axi_wdata[42] = \<const0> ;
  assign m_axi_wdata[41] = \<const0> ;
  assign m_axi_wdata[40] = \<const0> ;
  assign m_axi_wdata[39] = \<const0> ;
  assign m_axi_wdata[38] = \<const0> ;
  assign m_axi_wdata[37] = \<const0> ;
  assign m_axi_wdata[36] = \<const0> ;
  assign m_axi_wdata[35] = \<const0> ;
  assign m_axi_wdata[34] = \<const0> ;
  assign m_axi_wdata[33] = \<const0> ;
  assign m_axi_wdata[32] = \<const0> ;
  assign m_axi_wdata[31] = \<const0> ;
  assign m_axi_wdata[30] = \<const0> ;
  assign m_axi_wdata[29] = \<const0> ;
  assign m_axi_wdata[28] = \<const0> ;
  assign m_axi_wdata[27] = \<const0> ;
  assign m_axi_wdata[26] = \<const0> ;
  assign m_axi_wdata[25] = \<const0> ;
  assign m_axi_wdata[24] = \<const0> ;
  assign m_axi_wdata[23] = \<const0> ;
  assign m_axi_wdata[22] = \<const0> ;
  assign m_axi_wdata[21] = \<const0> ;
  assign m_axi_wdata[20] = \<const0> ;
  assign m_axi_wdata[19] = \<const0> ;
  assign m_axi_wdata[18] = \<const0> ;
  assign m_axi_wdata[17] = \<const0> ;
  assign m_axi_wdata[16] = \<const0> ;
  assign m_axi_wdata[15] = \<const0> ;
  assign m_axi_wdata[14] = \<const0> ;
  assign m_axi_wdata[13] = \<const0> ;
  assign m_axi_wdata[12] = \<const0> ;
  assign m_axi_wdata[11] = \<const0> ;
  assign m_axi_wdata[10] = \<const0> ;
  assign m_axi_wdata[9] = \<const0> ;
  assign m_axi_wdata[8] = \<const0> ;
  assign m_axi_wdata[7] = \<const0> ;
  assign m_axi_wdata[6] = \<const0> ;
  assign m_axi_wdata[5] = \<const0> ;
  assign m_axi_wdata[4] = \<const0> ;
  assign m_axi_wdata[3] = \<const0> ;
  assign m_axi_wdata[2] = \<const0> ;
  assign m_axi_wdata[1] = \<const0> ;
  assign m_axi_wdata[0] = \<const0> ;
  assign m_axi_wid[0] = \<const0> ;
  assign m_axi_wlast = \<const0> ;
  assign m_axi_wstrb[7] = \<const0> ;
  assign m_axi_wstrb[6] = \<const0> ;
  assign m_axi_wstrb[5] = \<const0> ;
  assign m_axi_wstrb[4] = \<const0> ;
  assign m_axi_wstrb[3] = \<const0> ;
  assign m_axi_wstrb[2] = \<const0> ;
  assign m_axi_wstrb[1] = \<const0> ;
  assign m_axi_wstrb[0] = \<const0> ;
  assign m_axi_wuser[0] = \<const0> ;
  assign m_axi_wvalid = \<const0> ;
  assign m_axis_tdata[7] = \<const0> ;
  assign m_axis_tdata[6] = \<const0> ;
  assign m_axis_tdata[5] = \<const0> ;
  assign m_axis_tdata[4] = \<const0> ;
  assign m_axis_tdata[3] = \<const0> ;
  assign m_axis_tdata[2] = \<const0> ;
  assign m_axis_tdata[1] = \<const0> ;
  assign m_axis_tdata[0] = \<const0> ;
  assign m_axis_tdest[0] = \<const0> ;
  assign m_axis_tid[0] = \<const0> ;
  assign m_axis_tkeep[0] = \<const0> ;
  assign m_axis_tlast = \<const0> ;
  assign m_axis_tstrb[0] = \<const0> ;
  assign m_axis_tuser[3] = \<const0> ;
  assign m_axis_tuser[2] = \<const0> ;
  assign m_axis_tuser[1] = \<const0> ;
  assign m_axis_tuser[0] = \<const0> ;
  assign m_axis_tvalid = \<const0> ;
  assign overflow = \<const0> ;
  assign prog_empty = \<const0> ;
  assign prog_full = \<const0> ;
  assign rd_data_count[9] = \<const0> ;
  assign rd_data_count[8] = \<const0> ;
  assign rd_data_count[7] = \<const0> ;
  assign rd_data_count[6] = \<const0> ;
  assign rd_data_count[5] = \<const0> ;
  assign rd_data_count[4] = \<const0> ;
  assign rd_data_count[3] = \<const0> ;
  assign rd_data_count[2] = \<const0> ;
  assign rd_data_count[1] = \<const0> ;
  assign rd_data_count[0] = \<const0> ;
  assign rd_rst_busy = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_buser[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_rdata[63] = \<const0> ;
  assign s_axi_rdata[62] = \<const0> ;
  assign s_axi_rdata[61] = \<const0> ;
  assign s_axi_rdata[60] = \<const0> ;
  assign s_axi_rdata[59] = \<const0> ;
  assign s_axi_rdata[58] = \<const0> ;
  assign s_axi_rdata[57] = \<const0> ;
  assign s_axi_rdata[56] = \<const0> ;
  assign s_axi_rdata[55] = \<const0> ;
  assign s_axi_rdata[54] = \<const0> ;
  assign s_axi_rdata[53] = \<const0> ;
  assign s_axi_rdata[52] = \<const0> ;
  assign s_axi_rdata[51] = \<const0> ;
  assign s_axi_rdata[50] = \<const0> ;
  assign s_axi_rdata[49] = \<const0> ;
  assign s_axi_rdata[48] = \<const0> ;
  assign s_axi_rdata[47] = \<const0> ;
  assign s_axi_rdata[46] = \<const0> ;
  assign s_axi_rdata[45] = \<const0> ;
  assign s_axi_rdata[44] = \<const0> ;
  assign s_axi_rdata[43] = \<const0> ;
  assign s_axi_rdata[42] = \<const0> ;
  assign s_axi_rdata[41] = \<const0> ;
  assign s_axi_rdata[40] = \<const0> ;
  assign s_axi_rdata[39] = \<const0> ;
  assign s_axi_rdata[38] = \<const0> ;
  assign s_axi_rdata[37] = \<const0> ;
  assign s_axi_rdata[36] = \<const0> ;
  assign s_axi_rdata[35] = \<const0> ;
  assign s_axi_rdata[34] = \<const0> ;
  assign s_axi_rdata[33] = \<const0> ;
  assign s_axi_rdata[32] = \<const0> ;
  assign s_axi_rdata[31] = \<const0> ;
  assign s_axi_rdata[30] = \<const0> ;
  assign s_axi_rdata[29] = \<const0> ;
  assign s_axi_rdata[28] = \<const0> ;
  assign s_axi_rdata[27] = \<const0> ;
  assign s_axi_rdata[26] = \<const0> ;
  assign s_axi_rdata[25] = \<const0> ;
  assign s_axi_rdata[24] = \<const0> ;
  assign s_axi_rdata[23] = \<const0> ;
  assign s_axi_rdata[22] = \<const0> ;
  assign s_axi_rdata[21] = \<const0> ;
  assign s_axi_rdata[20] = \<const0> ;
  assign s_axi_rdata[19] = \<const0> ;
  assign s_axi_rdata[18] = \<const0> ;
  assign s_axi_rdata[17] = \<const0> ;
  assign s_axi_rdata[16] = \<const0> ;
  assign s_axi_rdata[15] = \<const0> ;
  assign s_axi_rdata[14] = \<const0> ;
  assign s_axi_rdata[13] = \<const0> ;
  assign s_axi_rdata[12] = \<const0> ;
  assign s_axi_rdata[11] = \<const0> ;
  assign s_axi_rdata[10] = \<const0> ;
  assign s_axi_rdata[9] = \<const0> ;
  assign s_axi_rdata[8] = \<const0> ;
  assign s_axi_rdata[7] = \<const0> ;
  assign s_axi_rdata[6] = \<const0> ;
  assign s_axi_rdata[5] = \<const0> ;
  assign s_axi_rdata[4] = \<const0> ;
  assign s_axi_rdata[3] = \<const0> ;
  assign s_axi_rdata[2] = \<const0> ;
  assign s_axi_rdata[1] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_ruser[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign s_axis_tready = \<const0> ;
  assign sbiterr = \<const0> ;
  assign underflow = \<const0> ;
  assign wr_ack = \<const0> ;
  assign wr_data_count[9] = \<const0> ;
  assign wr_data_count[8] = \<const0> ;
  assign wr_data_count[7] = \<const0> ;
  assign wr_data_count[6] = \<const0> ;
  assign wr_data_count[5] = \<const0> ;
  assign wr_data_count[4] = \<const0> ;
  assign wr_data_count[3] = \<const0> ;
  assign wr_data_count[2] = \<const0> ;
  assign wr_data_count[1] = \<const0> ;
  assign wr_data_count[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  VCC VCC
       (.P(\<const1> ));
  final_accelerator_Softmax_Layer_32bit_0_0_fifo_generator_v13_1_3_synth_7 inst_fifo_gen
       (.almost_empty(almost_empty),
        .almost_full(almost_full),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .valid(valid),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v13_1_3_synth" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_fifo_generator_v13_1_3_synth
   (wr_rst_busy,
    almost_empty,
    empty,
    valid,
    full,
    dout,
    almost_full,
    wr_en,
    wr_clk,
    rd_clk,
    din,
    rst,
    rd_en);
  output wr_rst_busy;
  output almost_empty;
  output empty;
  output valid;
  output full;
  output [31:0]dout;
  output almost_full;
  input wr_en;
  input wr_clk;
  input rd_clk;
  input [31:0]din;
  input rst;
  input rd_en;

  wire almost_empty;
  wire almost_full;
  wire [31:0]din;
  wire [31:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire valid;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;

  final_accelerator_Softmax_Layer_32bit_0_0_fifo_generator_top \gconvfifo.rf 
       (.almost_empty(almost_empty),
        .almost_full(almost_full),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .valid(valid),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v13_1_3_synth" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_fifo_generator_v13_1_3_synth_39
   (wr_rst_busy,
    almost_empty,
    empty,
    valid,
    full,
    dout,
    almost_full,
    wr_en,
    wr_clk,
    rd_clk,
    din,
    rst,
    rd_en);
  output wr_rst_busy;
  output almost_empty;
  output empty;
  output valid;
  output full;
  output [31:0]dout;
  output almost_full;
  input wr_en;
  input wr_clk;
  input rd_clk;
  input [31:0]din;
  input rst;
  input rd_en;

  wire almost_empty;
  wire almost_full;
  wire [31:0]din;
  wire [31:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire valid;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;

  final_accelerator_Softmax_Layer_32bit_0_0_fifo_generator_top_40 \gconvfifo.rf 
       (.almost_empty(almost_empty),
        .almost_full(almost_full),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .valid(valid),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v13_1_3_synth" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_fifo_generator_v13_1_3_synth_7
   (wr_rst_busy,
    almost_empty,
    empty,
    valid,
    full,
    dout,
    almost_full,
    wr_en,
    wr_clk,
    rd_clk,
    din,
    rst,
    rd_en);
  output wr_rst_busy;
  output almost_empty;
  output empty;
  output valid;
  output full;
  output [31:0]dout;
  output almost_full;
  input wr_en;
  input wr_clk;
  input rd_clk;
  input [31:0]din;
  input rst;
  input rd_en;

  wire almost_empty;
  wire almost_full;
  wire [31:0]din;
  wire [31:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire valid;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;

  final_accelerator_Softmax_Layer_32bit_0_0_fifo_generator_top_8 \gconvfifo.rf 
       (.almost_empty(almost_empty),
        .almost_full(almost_full),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .valid(valid),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "memory" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_memory
   (dout,
    wr_clk,
    rd_clk,
    WEA,
    tmp_ram_rd_en,
    SR,
    Q,
    \gc1.count_d2_reg[9] ,
    din,
    E);
  output [31:0]dout;
  input wr_clk;
  input rd_clk;
  input [0:0]WEA;
  input tmp_ram_rd_en;
  input [0:0]SR;
  input [9:0]Q;
  input [9:0]\gc1.count_d2_reg[9] ;
  input [31:0]din;
  input [0:0]E;

  wire [0:0]E;
  wire [9:0]Q;
  wire [0:0]SR;
  wire [0:0]WEA;
  wire [31:0]din;
  wire [31:0]dout;
  wire [31:0]doutb;
  wire [9:0]\gc1.count_d2_reg[9] ;
  wire rd_clk;
  wire tmp_ram_rd_en;
  wire wr_clk;

  final_accelerator_Softmax_Layer_32bit_0_0_blk_mem_gen_v8_3_5 \gbm.gbmg.gbmga.ngecc.bmg 
       (.D(doutb),
        .Q(Q),
        .SR(SR),
        .WEA(WEA),
        .din(din),
        .\gc1.count_d2_reg[9] (\gc1.count_d2_reg[9] ),
        .rd_clk(rd_clk),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .wr_clk(wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[0]),
        .Q(dout[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[10] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[10]),
        .Q(dout[10]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[11] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[11]),
        .Q(dout[11]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[12] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[12]),
        .Q(dout[12]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[13] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[13]),
        .Q(dout[13]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[14] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[14]),
        .Q(dout[14]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[15] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[15]),
        .Q(dout[15]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[16] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[16]),
        .Q(dout[16]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[17] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[17]),
        .Q(dout[17]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[18] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[18]),
        .Q(dout[18]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[19] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[19]),
        .Q(dout[19]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[1]),
        .Q(dout[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[20] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[20]),
        .Q(dout[20]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[21] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[21]),
        .Q(dout[21]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[22] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[22]),
        .Q(dout[22]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[23] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[23]),
        .Q(dout[23]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[24] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[24]),
        .Q(dout[24]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[25] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[25]),
        .Q(dout[25]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[26] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[26]),
        .Q(dout[26]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[27] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[27]),
        .Q(dout[27]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[28] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[28]),
        .Q(dout[28]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[29] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[29]),
        .Q(dout[29]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[2]),
        .Q(dout[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[30] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[30]),
        .Q(dout[30]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[31] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[31]),
        .Q(dout[31]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[3]),
        .Q(dout[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[4]),
        .Q(dout[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[5]),
        .Q(dout[5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[6]),
        .Q(dout[6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[7]),
        .Q(dout[7]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[8] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[8]),
        .Q(dout[8]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[9] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[9]),
        .Q(dout[9]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "memory" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_memory_13
   (dout,
    wr_clk,
    rd_clk,
    WEA,
    tmp_ram_rd_en,
    SR,
    Q,
    \gc1.count_d2_reg[9] ,
    din,
    E);
  output [31:0]dout;
  input wr_clk;
  input rd_clk;
  input [0:0]WEA;
  input tmp_ram_rd_en;
  input [0:0]SR;
  input [9:0]Q;
  input [9:0]\gc1.count_d2_reg[9] ;
  input [31:0]din;
  input [0:0]E;

  wire [0:0]E;
  wire [9:0]Q;
  wire [0:0]SR;
  wire [0:0]WEA;
  wire [31:0]din;
  wire [31:0]dout;
  wire [31:0]doutb;
  wire [9:0]\gc1.count_d2_reg[9] ;
  wire rd_clk;
  wire tmp_ram_rd_en;
  wire wr_clk;

  final_accelerator_Softmax_Layer_32bit_0_0_blk_mem_gen_v8_3_5_19 \gbm.gbmg.gbmga.ngecc.bmg 
       (.D(doutb),
        .Q(Q),
        .SR(SR),
        .WEA(WEA),
        .din(din),
        .\gc1.count_d2_reg[9] (\gc1.count_d2_reg[9] ),
        .rd_clk(rd_clk),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .wr_clk(wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[0]),
        .Q(dout[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[10] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[10]),
        .Q(dout[10]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[11] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[11]),
        .Q(dout[11]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[12] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[12]),
        .Q(dout[12]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[13] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[13]),
        .Q(dout[13]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[14] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[14]),
        .Q(dout[14]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[15] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[15]),
        .Q(dout[15]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[16] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[16]),
        .Q(dout[16]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[17] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[17]),
        .Q(dout[17]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[18] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[18]),
        .Q(dout[18]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[19] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[19]),
        .Q(dout[19]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[1]),
        .Q(dout[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[20] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[20]),
        .Q(dout[20]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[21] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[21]),
        .Q(dout[21]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[22] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[22]),
        .Q(dout[22]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[23] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[23]),
        .Q(dout[23]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[24] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[24]),
        .Q(dout[24]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[25] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[25]),
        .Q(dout[25]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[26] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[26]),
        .Q(dout[26]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[27] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[27]),
        .Q(dout[27]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[28] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[28]),
        .Q(dout[28]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[29] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[29]),
        .Q(dout[29]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[2]),
        .Q(dout[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[30] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[30]),
        .Q(dout[30]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[31] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[31]),
        .Q(dout[31]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[3]),
        .Q(dout[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[4]),
        .Q(dout[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[5]),
        .Q(dout[5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[6]),
        .Q(dout[6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[7]),
        .Q(dout[7]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[8] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[8]),
        .Q(dout[8]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[9] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[9]),
        .Q(dout[9]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "memory" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_memory_45
   (dout,
    wr_clk,
    rd_clk,
    WEA,
    tmp_ram_rd_en,
    SR,
    Q,
    \gc1.count_d2_reg[9] ,
    din,
    E);
  output [31:0]dout;
  input wr_clk;
  input rd_clk;
  input [0:0]WEA;
  input tmp_ram_rd_en;
  input [0:0]SR;
  input [9:0]Q;
  input [9:0]\gc1.count_d2_reg[9] ;
  input [31:0]din;
  input [0:0]E;

  wire [0:0]E;
  wire [9:0]Q;
  wire [0:0]SR;
  wire [0:0]WEA;
  wire [31:0]din;
  wire [31:0]dout;
  wire [31:0]doutb;
  wire [9:0]\gc1.count_d2_reg[9] ;
  wire rd_clk;
  wire tmp_ram_rd_en;
  wire wr_clk;

  final_accelerator_Softmax_Layer_32bit_0_0_blk_mem_gen_v8_3_5_51 \gbm.gbmg.gbmga.ngecc.bmg 
       (.D(doutb),
        .Q(Q),
        .SR(SR),
        .WEA(WEA),
        .din(din),
        .\gc1.count_d2_reg[9] (\gc1.count_d2_reg[9] ),
        .rd_clk(rd_clk),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .wr_clk(wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[0]),
        .Q(dout[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[10] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[10]),
        .Q(dout[10]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[11] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[11]),
        .Q(dout[11]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[12] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[12]),
        .Q(dout[12]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[13] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[13]),
        .Q(dout[13]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[14] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[14]),
        .Q(dout[14]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[15] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[15]),
        .Q(dout[15]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[16] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[16]),
        .Q(dout[16]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[17] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[17]),
        .Q(dout[17]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[18] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[18]),
        .Q(dout[18]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[19] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[19]),
        .Q(dout[19]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[1]),
        .Q(dout[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[20] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[20]),
        .Q(dout[20]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[21] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[21]),
        .Q(dout[21]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[22] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[22]),
        .Q(dout[22]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[23] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[23]),
        .Q(dout[23]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[24] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[24]),
        .Q(dout[24]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[25] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[25]),
        .Q(dout[25]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[26] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[26]),
        .Q(dout[26]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[27] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[27]),
        .Q(dout[27]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[28] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[28]),
        .Q(dout[28]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[29] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[29]),
        .Q(dout[29]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[2]),
        .Q(dout[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[30] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[30]),
        .Q(dout[30]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[31] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[31]),
        .Q(dout[31]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[3]),
        .Q(dout[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[4]),
        .Q(dout[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[5]),
        .Q(dout[5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[6]),
        .Q(dout[6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[7]),
        .Q(dout[7]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[8] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[8]),
        .Q(dout[8]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[9] 
       (.C(rd_clk),
        .CE(E),
        .D(doutb[9]),
        .Q(dout[9]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "rd_bin_cntr" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_rd_bin_cntr
   (Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ,
    E,
    rd_clk,
    out);
  output [9:0]Q;
  output [9:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ;
  input [0:0]E;
  input rd_clk;
  input [0:0]out;

  wire [9:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ;
  wire [0:0]E;
  wire [9:0]Q;
  wire \gc1.count[9]_i_2_n_0 ;
  wire [0:0]out;
  wire [9:0]plusOp;
  wire rd_clk;
  wire [9:0]rd_pntr_plus2;

  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \gc1.count[0]_i_1 
       (.I0(rd_pntr_plus2[0]),
        .O(plusOp[0]));
  LUT2 #(
    .INIT(4'h6)) 
    \gc1.count[1]_i_1 
       (.I0(rd_pntr_plus2[0]),
        .I1(rd_pntr_plus2[1]),
        .O(plusOp[1]));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gc1.count[2]_i_1 
       (.I0(rd_pntr_plus2[0]),
        .I1(rd_pntr_plus2[1]),
        .I2(rd_pntr_plus2[2]),
        .O(plusOp[2]));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gc1.count[3]_i_1 
       (.I0(rd_pntr_plus2[1]),
        .I1(rd_pntr_plus2[0]),
        .I2(rd_pntr_plus2[2]),
        .I3(rd_pntr_plus2[3]),
        .O(plusOp[3]));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gc1.count[4]_i_1 
       (.I0(rd_pntr_plus2[2]),
        .I1(rd_pntr_plus2[0]),
        .I2(rd_pntr_plus2[1]),
        .I3(rd_pntr_plus2[3]),
        .I4(rd_pntr_plus2[4]),
        .O(plusOp[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \gc1.count[5]_i_1 
       (.I0(rd_pntr_plus2[3]),
        .I1(rd_pntr_plus2[1]),
        .I2(rd_pntr_plus2[0]),
        .I3(rd_pntr_plus2[2]),
        .I4(rd_pntr_plus2[4]),
        .I5(rd_pntr_plus2[5]),
        .O(plusOp[5]));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gc1.count[6]_i_1 
       (.I0(\gc1.count[9]_i_2_n_0 ),
        .I1(rd_pntr_plus2[6]),
        .O(plusOp[6]));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gc1.count[7]_i_1 
       (.I0(\gc1.count[9]_i_2_n_0 ),
        .I1(rd_pntr_plus2[6]),
        .I2(rd_pntr_plus2[7]),
        .O(plusOp[7]));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gc1.count[8]_i_1 
       (.I0(rd_pntr_plus2[6]),
        .I1(\gc1.count[9]_i_2_n_0 ),
        .I2(rd_pntr_plus2[7]),
        .I3(rd_pntr_plus2[8]),
        .O(plusOp[8]));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gc1.count[9]_i_1 
       (.I0(rd_pntr_plus2[7]),
        .I1(\gc1.count[9]_i_2_n_0 ),
        .I2(rd_pntr_plus2[6]),
        .I3(rd_pntr_plus2[8]),
        .I4(rd_pntr_plus2[9]),
        .O(plusOp[9]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gc1.count[9]_i_2 
       (.I0(rd_pntr_plus2[5]),
        .I1(rd_pntr_plus2[3]),
        .I2(rd_pntr_plus2[1]),
        .I3(rd_pntr_plus2[0]),
        .I4(rd_pntr_plus2[2]),
        .I5(rd_pntr_plus2[4]),
        .O(\gc1.count[9]_i_2_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \gc1.count_d1_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(rd_pntr_plus2[0]),
        .PRE(out),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(rd_pntr_plus2[1]),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(rd_pntr_plus2[2]),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(rd_pntr_plus2[3]),
        .Q(Q[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(rd_pntr_plus2[4]),
        .Q(Q[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(rd_pntr_plus2[5]),
        .Q(Q[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(rd_pntr_plus2[6]),
        .Q(Q[6]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(rd_pntr_plus2[7]),
        .Q(Q[7]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[8] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(rd_pntr_plus2[8]),
        .Q(Q[8]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[9] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(rd_pntr_plus2[9]),
        .Q(Q[9]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(Q[0]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [0]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(Q[1]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [1]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(Q[2]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [2]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(Q[3]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [3]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(Q[4]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [4]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(Q[5]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [5]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(Q[6]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [6]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(Q[7]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [7]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[8] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(Q[8]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [8]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[9] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(Q[9]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [9]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(plusOp[0]),
        .Q(rd_pntr_plus2[0]));
  FDPE #(
    .INIT(1'b1)) 
    \gc1.count_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(plusOp[1]),
        .PRE(out),
        .Q(rd_pntr_plus2[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(plusOp[2]),
        .Q(rd_pntr_plus2[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(plusOp[3]),
        .Q(rd_pntr_plus2[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(plusOp[4]),
        .Q(rd_pntr_plus2[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(plusOp[5]),
        .Q(rd_pntr_plus2[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(plusOp[6]),
        .Q(rd_pntr_plus2[6]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(plusOp[7]),
        .Q(rd_pntr_plus2[7]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_reg[8] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(plusOp[8]),
        .Q(rd_pntr_plus2[8]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_reg[9] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(plusOp[9]),
        .Q(rd_pntr_plus2[9]));
endmodule

(* ORIG_REF_NAME = "rd_bin_cntr" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_rd_bin_cntr_32
   (Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ,
    E,
    rd_clk,
    out);
  output [9:0]Q;
  output [9:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ;
  input [0:0]E;
  input rd_clk;
  input [0:0]out;

  wire [9:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ;
  wire [0:0]E;
  wire [9:0]Q;
  wire \gc1.count[9]_i_2_n_0 ;
  wire [0:0]out;
  wire [9:0]plusOp;
  wire rd_clk;
  wire [9:0]rd_pntr_plus2;

  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \gc1.count[0]_i_1 
       (.I0(rd_pntr_plus2[0]),
        .O(plusOp[0]));
  LUT2 #(
    .INIT(4'h6)) 
    \gc1.count[1]_i_1 
       (.I0(rd_pntr_plus2[0]),
        .I1(rd_pntr_plus2[1]),
        .O(plusOp[1]));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gc1.count[2]_i_1 
       (.I0(rd_pntr_plus2[0]),
        .I1(rd_pntr_plus2[1]),
        .I2(rd_pntr_plus2[2]),
        .O(plusOp[2]));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gc1.count[3]_i_1 
       (.I0(rd_pntr_plus2[1]),
        .I1(rd_pntr_plus2[0]),
        .I2(rd_pntr_plus2[2]),
        .I3(rd_pntr_plus2[3]),
        .O(plusOp[3]));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gc1.count[4]_i_1 
       (.I0(rd_pntr_plus2[2]),
        .I1(rd_pntr_plus2[0]),
        .I2(rd_pntr_plus2[1]),
        .I3(rd_pntr_plus2[3]),
        .I4(rd_pntr_plus2[4]),
        .O(plusOp[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \gc1.count[5]_i_1 
       (.I0(rd_pntr_plus2[3]),
        .I1(rd_pntr_plus2[1]),
        .I2(rd_pntr_plus2[0]),
        .I3(rd_pntr_plus2[2]),
        .I4(rd_pntr_plus2[4]),
        .I5(rd_pntr_plus2[5]),
        .O(plusOp[5]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gc1.count[6]_i_1 
       (.I0(\gc1.count[9]_i_2_n_0 ),
        .I1(rd_pntr_plus2[6]),
        .O(plusOp[6]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gc1.count[7]_i_1 
       (.I0(\gc1.count[9]_i_2_n_0 ),
        .I1(rd_pntr_plus2[6]),
        .I2(rd_pntr_plus2[7]),
        .O(plusOp[7]));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gc1.count[8]_i_1 
       (.I0(rd_pntr_plus2[6]),
        .I1(\gc1.count[9]_i_2_n_0 ),
        .I2(rd_pntr_plus2[7]),
        .I3(rd_pntr_plus2[8]),
        .O(plusOp[8]));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gc1.count[9]_i_1 
       (.I0(rd_pntr_plus2[7]),
        .I1(\gc1.count[9]_i_2_n_0 ),
        .I2(rd_pntr_plus2[6]),
        .I3(rd_pntr_plus2[8]),
        .I4(rd_pntr_plus2[9]),
        .O(plusOp[9]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gc1.count[9]_i_2 
       (.I0(rd_pntr_plus2[5]),
        .I1(rd_pntr_plus2[3]),
        .I2(rd_pntr_plus2[1]),
        .I3(rd_pntr_plus2[0]),
        .I4(rd_pntr_plus2[2]),
        .I5(rd_pntr_plus2[4]),
        .O(\gc1.count[9]_i_2_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \gc1.count_d1_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(rd_pntr_plus2[0]),
        .PRE(out),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(rd_pntr_plus2[1]),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(rd_pntr_plus2[2]),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(rd_pntr_plus2[3]),
        .Q(Q[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(rd_pntr_plus2[4]),
        .Q(Q[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(rd_pntr_plus2[5]),
        .Q(Q[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(rd_pntr_plus2[6]),
        .Q(Q[6]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(rd_pntr_plus2[7]),
        .Q(Q[7]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[8] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(rd_pntr_plus2[8]),
        .Q(Q[8]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[9] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(rd_pntr_plus2[9]),
        .Q(Q[9]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(Q[0]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [0]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(Q[1]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [1]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(Q[2]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [2]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(Q[3]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [3]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(Q[4]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [4]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(Q[5]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [5]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(Q[6]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [6]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(Q[7]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [7]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[8] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(Q[8]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [8]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[9] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(Q[9]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [9]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(plusOp[0]),
        .Q(rd_pntr_plus2[0]));
  FDPE #(
    .INIT(1'b1)) 
    \gc1.count_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(plusOp[1]),
        .PRE(out),
        .Q(rd_pntr_plus2[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(plusOp[2]),
        .Q(rd_pntr_plus2[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(plusOp[3]),
        .Q(rd_pntr_plus2[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(plusOp[4]),
        .Q(rd_pntr_plus2[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(plusOp[5]),
        .Q(rd_pntr_plus2[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(plusOp[6]),
        .Q(rd_pntr_plus2[6]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(plusOp[7]),
        .Q(rd_pntr_plus2[7]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_reg[8] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(plusOp[8]),
        .Q(rd_pntr_plus2[8]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_reg[9] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(plusOp[9]),
        .Q(rd_pntr_plus2[9]));
endmodule

(* ORIG_REF_NAME = "rd_bin_cntr" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_rd_bin_cntr_64
   (Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ,
    E,
    rd_clk,
    out);
  output [9:0]Q;
  output [9:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ;
  input [0:0]E;
  input rd_clk;
  input [0:0]out;

  wire [9:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ;
  wire [0:0]E;
  wire [9:0]Q;
  wire \gc1.count[9]_i_2_n_0 ;
  wire [0:0]out;
  wire [9:0]plusOp;
  wire rd_clk;
  wire [9:0]rd_pntr_plus2;

  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \gc1.count[0]_i_1 
       (.I0(rd_pntr_plus2[0]),
        .O(plusOp[0]));
  LUT2 #(
    .INIT(4'h6)) 
    \gc1.count[1]_i_1 
       (.I0(rd_pntr_plus2[0]),
        .I1(rd_pntr_plus2[1]),
        .O(plusOp[1]));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gc1.count[2]_i_1 
       (.I0(rd_pntr_plus2[0]),
        .I1(rd_pntr_plus2[1]),
        .I2(rd_pntr_plus2[2]),
        .O(plusOp[2]));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gc1.count[3]_i_1 
       (.I0(rd_pntr_plus2[1]),
        .I1(rd_pntr_plus2[0]),
        .I2(rd_pntr_plus2[2]),
        .I3(rd_pntr_plus2[3]),
        .O(plusOp[3]));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gc1.count[4]_i_1 
       (.I0(rd_pntr_plus2[2]),
        .I1(rd_pntr_plus2[0]),
        .I2(rd_pntr_plus2[1]),
        .I3(rd_pntr_plus2[3]),
        .I4(rd_pntr_plus2[4]),
        .O(plusOp[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \gc1.count[5]_i_1 
       (.I0(rd_pntr_plus2[3]),
        .I1(rd_pntr_plus2[1]),
        .I2(rd_pntr_plus2[0]),
        .I3(rd_pntr_plus2[2]),
        .I4(rd_pntr_plus2[4]),
        .I5(rd_pntr_plus2[5]),
        .O(plusOp[5]));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gc1.count[6]_i_1 
       (.I0(\gc1.count[9]_i_2_n_0 ),
        .I1(rd_pntr_plus2[6]),
        .O(plusOp[6]));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gc1.count[7]_i_1 
       (.I0(\gc1.count[9]_i_2_n_0 ),
        .I1(rd_pntr_plus2[6]),
        .I2(rd_pntr_plus2[7]),
        .O(plusOp[7]));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gc1.count[8]_i_1 
       (.I0(rd_pntr_plus2[6]),
        .I1(\gc1.count[9]_i_2_n_0 ),
        .I2(rd_pntr_plus2[7]),
        .I3(rd_pntr_plus2[8]),
        .O(plusOp[8]));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gc1.count[9]_i_1 
       (.I0(rd_pntr_plus2[7]),
        .I1(\gc1.count[9]_i_2_n_0 ),
        .I2(rd_pntr_plus2[6]),
        .I3(rd_pntr_plus2[8]),
        .I4(rd_pntr_plus2[9]),
        .O(plusOp[9]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gc1.count[9]_i_2 
       (.I0(rd_pntr_plus2[5]),
        .I1(rd_pntr_plus2[3]),
        .I2(rd_pntr_plus2[1]),
        .I3(rd_pntr_plus2[0]),
        .I4(rd_pntr_plus2[2]),
        .I5(rd_pntr_plus2[4]),
        .O(\gc1.count[9]_i_2_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \gc1.count_d1_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(rd_pntr_plus2[0]),
        .PRE(out),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(rd_pntr_plus2[1]),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(rd_pntr_plus2[2]),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(rd_pntr_plus2[3]),
        .Q(Q[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(rd_pntr_plus2[4]),
        .Q(Q[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(rd_pntr_plus2[5]),
        .Q(Q[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(rd_pntr_plus2[6]),
        .Q(Q[6]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(rd_pntr_plus2[7]),
        .Q(Q[7]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[8] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(rd_pntr_plus2[8]),
        .Q(Q[8]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[9] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(rd_pntr_plus2[9]),
        .Q(Q[9]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(Q[0]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [0]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(Q[1]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [1]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(Q[2]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [2]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(Q[3]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [3]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(Q[4]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [4]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(Q[5]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [5]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(Q[6]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [6]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(Q[7]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [7]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[8] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(Q[8]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [8]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[9] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(Q[9]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [9]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(plusOp[0]),
        .Q(rd_pntr_plus2[0]));
  FDPE #(
    .INIT(1'b1)) 
    \gc1.count_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(plusOp[1]),
        .PRE(out),
        .Q(rd_pntr_plus2[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(plusOp[2]),
        .Q(rd_pntr_plus2[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(plusOp[3]),
        .Q(rd_pntr_plus2[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(plusOp[4]),
        .Q(rd_pntr_plus2[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(plusOp[5]),
        .Q(rd_pntr_plus2[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(plusOp[6]),
        .Q(rd_pntr_plus2[6]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(plusOp[7]),
        .Q(rd_pntr_plus2[7]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_reg[8] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(plusOp[8]),
        .Q(rd_pntr_plus2[8]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_reg[9] 
       (.C(rd_clk),
        .CE(E),
        .CLR(out),
        .D(plusOp[9]),
        .Q(rd_pntr_plus2[9]));
endmodule

(* ORIG_REF_NAME = "rd_fwft" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_rd_fwft
   (out,
    almost_empty,
    empty,
    valid,
    tmp_ram_rd_en,
    E,
    \goreg_bm.dout_i_reg[31] ,
    rd_clk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ,
    rd_en,
    ram_empty_fb_i_reg);
  output [1:0]out;
  output almost_empty;
  output empty;
  output valid;
  output tmp_ram_rd_en;
  output [0:0]E;
  output [0:0]\goreg_bm.dout_i_reg[31] ;
  input rd_clk;
  input [1:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ;
  input rd_en;
  input ram_empty_fb_i_reg;

  wire [0:0]E;
  (* DONT_TOUCH *) wire aempty_fwft_fb_i;
  (* DONT_TOUCH *) wire aempty_fwft_i;
  wire aempty_fwft_i0;
  (* DONT_TOUCH *) wire [1:0]curr_fwft_state;
  (* DONT_TOUCH *) wire empty_fwft_fb_i;
  (* DONT_TOUCH *) wire empty_fwft_fb_o_i;
  wire empty_fwft_fb_o_i0;
  (* DONT_TOUCH *) wire empty_fwft_i;
  wire empty_fwft_i0;
  wire [0:0]\goreg_bm.dout_i_reg[31] ;
  wire [1:0]next_fwft_state;
  wire [1:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ;
  wire ram_empty_fb_i_reg;
  wire rd_clk;
  wire rd_en;
  wire tmp_ram_rd_en;
  (* DONT_TOUCH *) wire user_valid;

  assign almost_empty = aempty_fwft_i;
  assign empty = empty_fwft_i;
  assign out[1:0] = curr_fwft_state;
  assign valid = user_valid;
  LUT5 #(
    .INIT(32'hBABBBBBB)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_i_2 
       (.I0(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] [0]),
        .I1(ram_empty_fb_i_reg),
        .I2(rd_en),
        .I3(curr_fwft_state[0]),
        .I4(curr_fwft_state[1]),
        .O(tmp_ram_rd_en));
  LUT5 #(
    .INIT(32'hEEFD8000)) 
    aempty_fwft_fb_i_i_1
       (.I0(curr_fwft_state[0]),
        .I1(ram_empty_fb_i_reg),
        .I2(rd_en),
        .I3(curr_fwft_state[1]),
        .I4(aempty_fwft_fb_i),
        .O(aempty_fwft_i0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    aempty_fwft_fb_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(aempty_fwft_i0),
        .PRE(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] [1]),
        .Q(aempty_fwft_fb_i));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    aempty_fwft_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(aempty_fwft_i0),
        .PRE(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] [1]),
        .Q(aempty_fwft_i));
  LUT4 #(
    .INIT(16'hF320)) 
    empty_fwft_fb_i_i_1
       (.I0(rd_en),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .I3(empty_fwft_fb_i),
        .O(empty_fwft_i0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    empty_fwft_fb_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .PRE(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] [1]),
        .Q(empty_fwft_fb_i));
  LUT4 #(
    .INIT(16'hF320)) 
    empty_fwft_fb_o_i_i_1
       (.I0(rd_en),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .I3(empty_fwft_fb_o_i),
        .O(empty_fwft_fb_o_i0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    empty_fwft_fb_o_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_fb_o_i0),
        .PRE(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] [1]),
        .Q(empty_fwft_fb_o_i));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    empty_fwft_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .PRE(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] [1]),
        .Q(empty_fwft_i));
  LUT4 #(
    .INIT(16'h00BF)) 
    \gc1.count_d1[9]_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_fb_i_reg),
        .O(E));
  LUT3 #(
    .INIT(8'hA2)) 
    \goreg_bm.dout_i[31]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(curr_fwft_state[0]),
        .I2(rd_en),
        .O(\goreg_bm.dout_i_reg[31] ));
  LUT3 #(
    .INIT(8'hBA)) 
    \gpregsm1.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .O(next_fwft_state[0]));
  LUT4 #(
    .INIT(16'h20FF)) 
    \gpregsm1.curr_fwft_state[1]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(ram_empty_fb_i_reg),
        .O(next_fwft_state[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] [1]),
        .D(next_fwft_state[0]),
        .Q(curr_fwft_state[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] [1]),
        .D(next_fwft_state[1]),
        .Q(curr_fwft_state[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gpregsm1.user_valid_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] [1]),
        .D(next_fwft_state[0]),
        .Q(user_valid));
endmodule

(* ORIG_REF_NAME = "rd_fwft" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_rd_fwft_30
   (out,
    almost_empty,
    empty,
    valid,
    tmp_ram_rd_en,
    E,
    \goreg_bm.dout_i_reg[31] ,
    rd_clk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ,
    rd_en,
    ram_empty_fb_i_reg);
  output [1:0]out;
  output almost_empty;
  output empty;
  output valid;
  output tmp_ram_rd_en;
  output [0:0]E;
  output [0:0]\goreg_bm.dout_i_reg[31] ;
  input rd_clk;
  input [1:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ;
  input rd_en;
  input ram_empty_fb_i_reg;

  wire [0:0]E;
  (* DONT_TOUCH *) wire aempty_fwft_fb_i;
  (* DONT_TOUCH *) wire aempty_fwft_i;
  wire aempty_fwft_i0;
  (* DONT_TOUCH *) wire [1:0]curr_fwft_state;
  (* DONT_TOUCH *) wire empty_fwft_fb_i;
  (* DONT_TOUCH *) wire empty_fwft_fb_o_i;
  wire empty_fwft_fb_o_i0;
  (* DONT_TOUCH *) wire empty_fwft_i;
  wire empty_fwft_i0;
  wire [0:0]\goreg_bm.dout_i_reg[31] ;
  wire [1:0]next_fwft_state;
  wire [1:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ;
  wire ram_empty_fb_i_reg;
  wire rd_clk;
  wire rd_en;
  wire tmp_ram_rd_en;
  (* DONT_TOUCH *) wire user_valid;

  assign almost_empty = aempty_fwft_i;
  assign empty = empty_fwft_i;
  assign out[1:0] = curr_fwft_state;
  assign valid = user_valid;
  LUT5 #(
    .INIT(32'hBABBBBBB)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_i_2 
       (.I0(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] [0]),
        .I1(ram_empty_fb_i_reg),
        .I2(rd_en),
        .I3(curr_fwft_state[0]),
        .I4(curr_fwft_state[1]),
        .O(tmp_ram_rd_en));
  LUT5 #(
    .INIT(32'hEEFD8000)) 
    aempty_fwft_fb_i_i_1
       (.I0(curr_fwft_state[0]),
        .I1(ram_empty_fb_i_reg),
        .I2(rd_en),
        .I3(curr_fwft_state[1]),
        .I4(aempty_fwft_fb_i),
        .O(aempty_fwft_i0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    aempty_fwft_fb_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(aempty_fwft_i0),
        .PRE(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] [1]),
        .Q(aempty_fwft_fb_i));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    aempty_fwft_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(aempty_fwft_i0),
        .PRE(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] [1]),
        .Q(aempty_fwft_i));
  LUT4 #(
    .INIT(16'hF320)) 
    empty_fwft_fb_i_i_1
       (.I0(rd_en),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .I3(empty_fwft_fb_i),
        .O(empty_fwft_i0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    empty_fwft_fb_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .PRE(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] [1]),
        .Q(empty_fwft_fb_i));
  LUT4 #(
    .INIT(16'hF320)) 
    empty_fwft_fb_o_i_i_1
       (.I0(rd_en),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .I3(empty_fwft_fb_o_i),
        .O(empty_fwft_fb_o_i0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    empty_fwft_fb_o_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_fb_o_i0),
        .PRE(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] [1]),
        .Q(empty_fwft_fb_o_i));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    empty_fwft_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .PRE(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] [1]),
        .Q(empty_fwft_i));
  LUT4 #(
    .INIT(16'h00BF)) 
    \gc1.count_d1[9]_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_fb_i_reg),
        .O(E));
  LUT3 #(
    .INIT(8'hA2)) 
    \goreg_bm.dout_i[31]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(curr_fwft_state[0]),
        .I2(rd_en),
        .O(\goreg_bm.dout_i_reg[31] ));
  LUT3 #(
    .INIT(8'hBA)) 
    \gpregsm1.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .O(next_fwft_state[0]));
  LUT4 #(
    .INIT(16'h20FF)) 
    \gpregsm1.curr_fwft_state[1]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(ram_empty_fb_i_reg),
        .O(next_fwft_state[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] [1]),
        .D(next_fwft_state[0]),
        .Q(curr_fwft_state[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] [1]),
        .D(next_fwft_state[1]),
        .Q(curr_fwft_state[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gpregsm1.user_valid_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] [1]),
        .D(next_fwft_state[0]),
        .Q(user_valid));
endmodule

(* ORIG_REF_NAME = "rd_fwft" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_rd_fwft_62
   (out,
    almost_empty,
    empty,
    valid,
    tmp_ram_rd_en,
    E,
    \goreg_bm.dout_i_reg[31] ,
    rd_clk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ,
    rd_en,
    ram_empty_fb_i_reg);
  output [1:0]out;
  output almost_empty;
  output empty;
  output valid;
  output tmp_ram_rd_en;
  output [0:0]E;
  output [0:0]\goreg_bm.dout_i_reg[31] ;
  input rd_clk;
  input [1:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ;
  input rd_en;
  input ram_empty_fb_i_reg;

  wire [0:0]E;
  (* DONT_TOUCH *) wire aempty_fwft_fb_i;
  (* DONT_TOUCH *) wire aempty_fwft_i;
  wire aempty_fwft_i0;
  (* DONT_TOUCH *) wire [1:0]curr_fwft_state;
  (* DONT_TOUCH *) wire empty_fwft_fb_i;
  (* DONT_TOUCH *) wire empty_fwft_fb_o_i;
  wire empty_fwft_fb_o_i0;
  (* DONT_TOUCH *) wire empty_fwft_i;
  wire empty_fwft_i0;
  wire [0:0]\goreg_bm.dout_i_reg[31] ;
  wire [1:0]next_fwft_state;
  wire [1:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ;
  wire ram_empty_fb_i_reg;
  wire rd_clk;
  wire rd_en;
  wire tmp_ram_rd_en;
  (* DONT_TOUCH *) wire user_valid;

  assign almost_empty = aempty_fwft_i;
  assign empty = empty_fwft_i;
  assign out[1:0] = curr_fwft_state;
  assign valid = user_valid;
  LUT5 #(
    .INIT(32'hBABBBBBB)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_i_2 
       (.I0(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] [0]),
        .I1(ram_empty_fb_i_reg),
        .I2(rd_en),
        .I3(curr_fwft_state[0]),
        .I4(curr_fwft_state[1]),
        .O(tmp_ram_rd_en));
  LUT5 #(
    .INIT(32'hEEFD8000)) 
    aempty_fwft_fb_i_i_1
       (.I0(curr_fwft_state[0]),
        .I1(ram_empty_fb_i_reg),
        .I2(rd_en),
        .I3(curr_fwft_state[1]),
        .I4(aempty_fwft_fb_i),
        .O(aempty_fwft_i0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    aempty_fwft_fb_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(aempty_fwft_i0),
        .PRE(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] [1]),
        .Q(aempty_fwft_fb_i));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    aempty_fwft_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(aempty_fwft_i0),
        .PRE(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] [1]),
        .Q(aempty_fwft_i));
  LUT4 #(
    .INIT(16'hF320)) 
    empty_fwft_fb_i_i_1
       (.I0(rd_en),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .I3(empty_fwft_fb_i),
        .O(empty_fwft_i0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    empty_fwft_fb_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .PRE(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] [1]),
        .Q(empty_fwft_fb_i));
  LUT4 #(
    .INIT(16'hF320)) 
    empty_fwft_fb_o_i_i_1
       (.I0(rd_en),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .I3(empty_fwft_fb_o_i),
        .O(empty_fwft_fb_o_i0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    empty_fwft_fb_o_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_fb_o_i0),
        .PRE(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] [1]),
        .Q(empty_fwft_fb_o_i));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    empty_fwft_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .PRE(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] [1]),
        .Q(empty_fwft_i));
  LUT4 #(
    .INIT(16'h00BF)) 
    \gc1.count_d1[9]_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_fb_i_reg),
        .O(E));
  LUT3 #(
    .INIT(8'hA2)) 
    \goreg_bm.dout_i[31]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(curr_fwft_state[0]),
        .I2(rd_en),
        .O(\goreg_bm.dout_i_reg[31] ));
  LUT3 #(
    .INIT(8'hBA)) 
    \gpregsm1.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .O(next_fwft_state[0]));
  LUT4 #(
    .INIT(16'h20FF)) 
    \gpregsm1.curr_fwft_state[1]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(ram_empty_fb_i_reg),
        .O(next_fwft_state[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] [1]),
        .D(next_fwft_state[0]),
        .Q(curr_fwft_state[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] [1]),
        .D(next_fwft_state[1]),
        .Q(curr_fwft_state[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gpregsm1.user_valid_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] [1]),
        .D(next_fwft_state[0]),
        .Q(user_valid));
endmodule

(* ORIG_REF_NAME = "rd_logic" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_rd_logic
   (almost_empty,
    empty,
    valid,
    Q,
    tmp_ram_rd_en,
    E,
    rd_clk,
    out,
    rd_en,
    WR_PNTR_RD);
  output almost_empty;
  output empty;
  output valid;
  output [9:0]Q;
  output tmp_ram_rd_en;
  output [0:0]E;
  input rd_clk;
  input [1:0]out;
  input rd_en;
  input [9:0]WR_PNTR_RD;

  wire [0:0]E;
  wire [9:0]Q;
  wire [9:0]WR_PNTR_RD;
  wire almost_empty;
  wire empty;
  wire \gr1.gr1_int.rfwft_n_0 ;
  wire [1:0]out;
  wire [0:0]p_0_in;
  wire p_2_out;
  wire p_7_out;
  wire rd_clk;
  wire rd_en;
  wire [9:0]rd_pntr_plus1;
  wire tmp_ram_rd_en;
  wire valid;

  final_accelerator_Softmax_Layer_32bit_0_0_rd_fwft \gr1.gr1_int.rfwft 
       (.E(p_7_out),
        .almost_empty(almost_empty),
        .empty(empty),
        .\goreg_bm.dout_i_reg[31] (E),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] (out),
        .out({\gr1.gr1_int.rfwft_n_0 ,p_0_in}),
        .ram_empty_fb_i_reg(p_2_out),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .valid(valid));
  final_accelerator_Softmax_Layer_32bit_0_0_rd_status_flags_as \gras.rsts 
       (.Q(Q),
        .WR_PNTR_RD(WR_PNTR_RD),
        .\gc1.count_d1_reg[9] (rd_pntr_plus1),
        .\gpregsm1.curr_fwft_state_reg[1] ({\gr1.gr1_int.rfwft_n_0 ,p_0_in}),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] (out[1]),
        .out(p_2_out),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  final_accelerator_Softmax_Layer_32bit_0_0_rd_bin_cntr rpntr
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram (Q),
        .E(p_7_out),
        .Q(rd_pntr_plus1),
        .out(out[1]),
        .rd_clk(rd_clk));
endmodule

(* ORIG_REF_NAME = "rd_logic" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_rd_logic_11
   (almost_empty,
    empty,
    valid,
    Q,
    tmp_ram_rd_en,
    E,
    rd_clk,
    out,
    rd_en,
    \gnxpm_cdc.wr_pntr_bin_reg[9] );
  output almost_empty;
  output empty;
  output valid;
  output [9:0]Q;
  output tmp_ram_rd_en;
  output [0:0]E;
  input rd_clk;
  input [1:0]out;
  input rd_en;
  input [9:0]\gnxpm_cdc.wr_pntr_bin_reg[9] ;

  wire [0:0]E;
  wire [9:0]Q;
  wire almost_empty;
  wire empty;
  wire [9:0]\gnxpm_cdc.wr_pntr_bin_reg[9] ;
  wire \gr1.gr1_int.rfwft_n_0 ;
  wire [1:0]out;
  wire [0:0]p_0_in;
  wire p_2_out;
  wire p_7_out;
  wire rd_clk;
  wire rd_en;
  wire [9:0]rd_pntr_plus1;
  wire tmp_ram_rd_en;
  wire valid;

  final_accelerator_Softmax_Layer_32bit_0_0_rd_fwft_30 \gr1.gr1_int.rfwft 
       (.E(p_7_out),
        .almost_empty(almost_empty),
        .empty(empty),
        .\goreg_bm.dout_i_reg[31] (E),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] (out),
        .out({\gr1.gr1_int.rfwft_n_0 ,p_0_in}),
        .ram_empty_fb_i_reg(p_2_out),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .valid(valid));
  final_accelerator_Softmax_Layer_32bit_0_0_rd_status_flags_as_31 \gras.rsts 
       (.Q(Q),
        .\gc1.count_d1_reg[9] (rd_pntr_plus1),
        .\gnxpm_cdc.wr_pntr_bin_reg[9] (\gnxpm_cdc.wr_pntr_bin_reg[9] ),
        .\gpregsm1.curr_fwft_state_reg[1] ({\gr1.gr1_int.rfwft_n_0 ,p_0_in}),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] (out[1]),
        .out(p_2_out),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  final_accelerator_Softmax_Layer_32bit_0_0_rd_bin_cntr_32 rpntr
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram (Q),
        .E(p_7_out),
        .Q(rd_pntr_plus1),
        .out(out[1]),
        .rd_clk(rd_clk));
endmodule

(* ORIG_REF_NAME = "rd_logic" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_rd_logic_43
   (almost_empty,
    empty,
    valid,
    Q,
    tmp_ram_rd_en,
    E,
    rd_clk,
    out,
    rd_en,
    \gnxpm_cdc.wr_pntr_bin_reg[9] );
  output almost_empty;
  output empty;
  output valid;
  output [9:0]Q;
  output tmp_ram_rd_en;
  output [0:0]E;
  input rd_clk;
  input [1:0]out;
  input rd_en;
  input [9:0]\gnxpm_cdc.wr_pntr_bin_reg[9] ;

  wire [0:0]E;
  wire [9:0]Q;
  wire almost_empty;
  wire empty;
  wire [9:0]\gnxpm_cdc.wr_pntr_bin_reg[9] ;
  wire \gr1.gr1_int.rfwft_n_0 ;
  wire [1:0]out;
  wire [0:0]p_0_in;
  wire p_2_out;
  wire p_7_out;
  wire rd_clk;
  wire rd_en;
  wire [9:0]rd_pntr_plus1;
  wire tmp_ram_rd_en;
  wire valid;

  final_accelerator_Softmax_Layer_32bit_0_0_rd_fwft_62 \gr1.gr1_int.rfwft 
       (.E(p_7_out),
        .almost_empty(almost_empty),
        .empty(empty),
        .\goreg_bm.dout_i_reg[31] (E),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] (out),
        .out({\gr1.gr1_int.rfwft_n_0 ,p_0_in}),
        .ram_empty_fb_i_reg(p_2_out),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .valid(valid));
  final_accelerator_Softmax_Layer_32bit_0_0_rd_status_flags_as_63 \gras.rsts 
       (.Q(Q),
        .\gc1.count_d1_reg[9] (rd_pntr_plus1),
        .\gnxpm_cdc.wr_pntr_bin_reg[9] (\gnxpm_cdc.wr_pntr_bin_reg[9] ),
        .\gpregsm1.curr_fwft_state_reg[1] ({\gr1.gr1_int.rfwft_n_0 ,p_0_in}),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] (out[1]),
        .out(p_2_out),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  final_accelerator_Softmax_Layer_32bit_0_0_rd_bin_cntr_64 rpntr
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram (Q),
        .E(p_7_out),
        .Q(rd_pntr_plus1),
        .out(out[1]),
        .rd_clk(rd_clk));
endmodule

(* ORIG_REF_NAME = "rd_status_flags_as" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_rd_status_flags_as
   (out,
    rd_clk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ,
    rd_en,
    \gpregsm1.curr_fwft_state_reg[1] ,
    WR_PNTR_RD,
    Q,
    \gc1.count_d1_reg[9] );
  output out;
  input rd_clk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ;
  input rd_en;
  input [1:0]\gpregsm1.curr_fwft_state_reg[1] ;
  input [9:0]WR_PNTR_RD;
  input [9:0]Q;
  input [9:0]\gc1.count_d1_reg[9] ;

  wire [9:0]Q;
  wire [9:0]WR_PNTR_RD;
  wire comp1;
  wire [9:0]\gc1.count_d1_reg[9] ;
  wire [1:0]\gpregsm1.curr_fwft_state_reg[1] ;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ;
  (* DONT_TOUCH *) wire ram_empty_fb_i;
  (* DONT_TOUCH *) wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;

  assign out = ram_empty_fb_i;
  final_accelerator_Softmax_Layer_32bit_0_0_compare_5 c0
       (.Q(Q),
        .WR_PNTR_RD(WR_PNTR_RD),
        .comp1(comp1),
        .\gpregsm1.curr_fwft_state_reg[1] (\gpregsm1.curr_fwft_state_reg[1] ),
        .out(ram_empty_fb_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_en(rd_en));
  final_accelerator_Softmax_Layer_32bit_0_0_compare_6 c1
       (.WR_PNTR_RD(WR_PNTR_RD),
        .comp1(comp1),
        .\gc1.count_d1_reg[9] (\gc1.count_d1_reg[9] ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_empty_fb_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .PRE(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .Q(ram_empty_fb_i));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_empty_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .PRE(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .Q(ram_empty_i));
endmodule

(* ORIG_REF_NAME = "rd_status_flags_as" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_rd_status_flags_as_31
   (out,
    rd_clk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ,
    rd_en,
    \gpregsm1.curr_fwft_state_reg[1] ,
    \gnxpm_cdc.wr_pntr_bin_reg[9] ,
    Q,
    \gc1.count_d1_reg[9] );
  output out;
  input rd_clk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ;
  input rd_en;
  input [1:0]\gpregsm1.curr_fwft_state_reg[1] ;
  input [9:0]\gnxpm_cdc.wr_pntr_bin_reg[9] ;
  input [9:0]Q;
  input [9:0]\gc1.count_d1_reg[9] ;

  wire [9:0]Q;
  wire comp1;
  wire [9:0]\gc1.count_d1_reg[9] ;
  wire [9:0]\gnxpm_cdc.wr_pntr_bin_reg[9] ;
  wire [1:0]\gpregsm1.curr_fwft_state_reg[1] ;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ;
  (* DONT_TOUCH *) wire ram_empty_fb_i;
  (* DONT_TOUCH *) wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;

  assign out = ram_empty_fb_i;
  final_accelerator_Softmax_Layer_32bit_0_0_compare_33 c0
       (.Q(Q),
        .comp1(comp1),
        .\gnxpm_cdc.wr_pntr_bin_reg[9] (\gnxpm_cdc.wr_pntr_bin_reg[9] ),
        .\gpregsm1.curr_fwft_state_reg[1] (\gpregsm1.curr_fwft_state_reg[1] ),
        .out(ram_empty_fb_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_en(rd_en));
  final_accelerator_Softmax_Layer_32bit_0_0_compare_34 c1
       (.comp1(comp1),
        .\gc1.count_d1_reg[9] (\gc1.count_d1_reg[9] ),
        .\gnxpm_cdc.wr_pntr_bin_reg[9] (\gnxpm_cdc.wr_pntr_bin_reg[9] ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_empty_fb_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .PRE(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .Q(ram_empty_fb_i));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_empty_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .PRE(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .Q(ram_empty_i));
endmodule

(* ORIG_REF_NAME = "rd_status_flags_as" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_rd_status_flags_as_63
   (out,
    rd_clk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ,
    rd_en,
    \gpregsm1.curr_fwft_state_reg[1] ,
    \gnxpm_cdc.wr_pntr_bin_reg[9] ,
    Q,
    \gc1.count_d1_reg[9] );
  output out;
  input rd_clk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ;
  input rd_en;
  input [1:0]\gpregsm1.curr_fwft_state_reg[1] ;
  input [9:0]\gnxpm_cdc.wr_pntr_bin_reg[9] ;
  input [9:0]Q;
  input [9:0]\gc1.count_d1_reg[9] ;

  wire [9:0]Q;
  wire comp1;
  wire [9:0]\gc1.count_d1_reg[9] ;
  wire [9:0]\gnxpm_cdc.wr_pntr_bin_reg[9] ;
  wire [1:0]\gpregsm1.curr_fwft_state_reg[1] ;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ;
  (* DONT_TOUCH *) wire ram_empty_fb_i;
  (* DONT_TOUCH *) wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;

  assign out = ram_empty_fb_i;
  final_accelerator_Softmax_Layer_32bit_0_0_compare_65 c0
       (.Q(Q),
        .comp1(comp1),
        .\gnxpm_cdc.wr_pntr_bin_reg[9] (\gnxpm_cdc.wr_pntr_bin_reg[9] ),
        .\gpregsm1.curr_fwft_state_reg[1] (\gpregsm1.curr_fwft_state_reg[1] ),
        .out(ram_empty_fb_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_en(rd_en));
  final_accelerator_Softmax_Layer_32bit_0_0_compare_66 c1
       (.comp1(comp1),
        .\gc1.count_d1_reg[9] (\gc1.count_d1_reg[9] ),
        .\gnxpm_cdc.wr_pntr_bin_reg[9] (\gnxpm_cdc.wr_pntr_bin_reg[9] ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_empty_fb_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .PRE(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .Q(ram_empty_fb_i));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_empty_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .PRE(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] ),
        .Q(ram_empty_i));
endmodule

(* ORIG_REF_NAME = "reset_blk_ramfifo" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_reset_blk_ramfifo
   (out,
    \gc1.count_reg[0] ,
    \grstd1.grst_full.grst_f.rst_d3_reg_0 ,
    wr_rst_busy,
    rd_clk,
    wr_clk,
    rst);
  output [1:0]out;
  output [2:0]\gc1.count_reg[0] ;
  output \grstd1.grst_full.grst_f.rst_d3_reg_0 ;
  output wr_rst_busy;
  input rd_clk;
  input wr_clk;
  input rst;

  wire \ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[1].rrst_inst_n_1 ;
  wire \ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[1].wrst_inst_n_1 ;
  wire \ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].rrst_inst_n_0 ;
  wire \ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].wrst_inst_n_0 ;
  wire p_7_out;
  wire p_8_out;
  wire rd_clk;
  wire rd_rst_asreg;
  (* DONT_TOUCH *) wire [2:0]rd_rst_reg;
  wire rst;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d3;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg2;
  wire wr_clk;
  wire wr_rst_asreg;
  (* DONT_TOUCH *) wire [2:0]wr_rst_reg;

  assign \gc1.count_reg[0] [2:0] = rd_rst_reg;
  assign \grstd1.grst_full.grst_f.rst_d3_reg_0  = rst_d2;
  assign out[1:0] = wr_rst_reg[1:0];
  assign wr_rst_busy = rst_d3;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d1_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(rst_wr_reg2),
        .Q(rst_d1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d2_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1),
        .PRE(rst_wr_reg2),
        .Q(rst_d2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d3_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d2),
        .PRE(rst_wr_reg2),
        .Q(rst_d3));
  final_accelerator_Softmax_Layer_32bit_0_0_synchronizer_ff \ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[1].rrst_inst 
       (.in0(rd_rst_asreg),
        .\ngwrdrst.grst.g7serrst.rd_rst_asreg_reg (\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[1].rrst_inst_n_1 ),
        .out(p_7_out),
        .rd_clk(rd_clk));
  final_accelerator_Softmax_Layer_32bit_0_0_synchronizer_ff_0 \ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[1].wrst_inst 
       (.in0(wr_rst_asreg),
        .\ngwrdrst.grst.g7serrst.wr_rst_asreg_reg (\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[1].wrst_inst_n_1 ),
        .out(p_8_out),
        .wr_clk(wr_clk));
  final_accelerator_Softmax_Layer_32bit_0_0_synchronizer_ff_1 \ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].rrst_inst 
       (.AS(\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].rrst_inst_n_0 ),
        .in0(rd_rst_asreg),
        .out(p_7_out),
        .rd_clk(rd_clk));
  final_accelerator_Softmax_Layer_32bit_0_0_synchronizer_ff_2 \ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].wrst_inst 
       (.AS(\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].wrst_inst_n_0 ),
        .in0(wr_rst_asreg),
        .out(p_8_out),
        .wr_clk(wr_clk));
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.rd_rst_asreg_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[1].rrst_inst_n_1 ),
        .PRE(rst_rd_reg2),
        .Q(rd_rst_asreg));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].rrst_inst_n_0 ),
        .Q(rd_rst_reg[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].rrst_inst_n_0 ),
        .Q(rd_rst_reg[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].rrst_inst_n_0 ),
        .Q(rd_rst_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_rd_reg1_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(rst),
        .Q(rst_rd_reg1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_rd_reg2_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(rst_rd_reg1),
        .PRE(rst),
        .Q(rst_rd_reg2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_wr_reg1_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(rst),
        .Q(rst_wr_reg1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_wr_reg2_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_wr_reg1),
        .PRE(rst),
        .Q(rst_wr_reg2));
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.wr_rst_asreg_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[1].wrst_inst_n_1 ),
        .PRE(rst_wr_reg2),
        .Q(wr_rst_asreg));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].wrst_inst_n_0 ),
        .Q(wr_rst_reg[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].wrst_inst_n_0 ),
        .Q(wr_rst_reg[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].wrst_inst_n_0 ),
        .Q(wr_rst_reg[2]));
endmodule

(* ORIG_REF_NAME = "reset_blk_ramfifo" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_reset_blk_ramfifo_14
   (out,
    \gc1.count_reg[0] ,
    \grstd1.grst_full.grst_f.rst_d3_reg_0 ,
    wr_rst_busy,
    rd_clk,
    wr_clk,
    rst);
  output [1:0]out;
  output [2:0]\gc1.count_reg[0] ;
  output \grstd1.grst_full.grst_f.rst_d3_reg_0 ;
  output wr_rst_busy;
  input rd_clk;
  input wr_clk;
  input rst;

  wire \ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[1].rrst_inst_n_1 ;
  wire \ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[1].wrst_inst_n_1 ;
  wire \ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].rrst_inst_n_0 ;
  wire \ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].wrst_inst_n_0 ;
  wire p_7_out;
  wire p_8_out;
  wire rd_clk;
  wire rd_rst_asreg;
  (* DONT_TOUCH *) wire [2:0]rd_rst_reg;
  wire rst;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d3;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg2;
  wire wr_clk;
  wire wr_rst_asreg;
  (* DONT_TOUCH *) wire [2:0]wr_rst_reg;

  assign \gc1.count_reg[0] [2:0] = rd_rst_reg;
  assign \grstd1.grst_full.grst_f.rst_d3_reg_0  = rst_d2;
  assign out[1:0] = wr_rst_reg[1:0];
  assign wr_rst_busy = rst_d3;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d1_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(rst_wr_reg2),
        .Q(rst_d1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d2_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1),
        .PRE(rst_wr_reg2),
        .Q(rst_d2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d3_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d2),
        .PRE(rst_wr_reg2),
        .Q(rst_d3));
  final_accelerator_Softmax_Layer_32bit_0_0_synchronizer_ff_15 \ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[1].rrst_inst 
       (.in0(rd_rst_asreg),
        .\ngwrdrst.grst.g7serrst.rd_rst_asreg_reg (\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[1].rrst_inst_n_1 ),
        .out(p_7_out),
        .rd_clk(rd_clk));
  final_accelerator_Softmax_Layer_32bit_0_0_synchronizer_ff_16 \ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[1].wrst_inst 
       (.in0(wr_rst_asreg),
        .\ngwrdrst.grst.g7serrst.wr_rst_asreg_reg (\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[1].wrst_inst_n_1 ),
        .out(p_8_out),
        .wr_clk(wr_clk));
  final_accelerator_Softmax_Layer_32bit_0_0_synchronizer_ff_17 \ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].rrst_inst 
       (.AS(\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].rrst_inst_n_0 ),
        .in0(rd_rst_asreg),
        .out(p_7_out),
        .rd_clk(rd_clk));
  final_accelerator_Softmax_Layer_32bit_0_0_synchronizer_ff_18 \ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].wrst_inst 
       (.AS(\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].wrst_inst_n_0 ),
        .in0(wr_rst_asreg),
        .out(p_8_out),
        .wr_clk(wr_clk));
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.rd_rst_asreg_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[1].rrst_inst_n_1 ),
        .PRE(rst_rd_reg2),
        .Q(rd_rst_asreg));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].rrst_inst_n_0 ),
        .Q(rd_rst_reg[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].rrst_inst_n_0 ),
        .Q(rd_rst_reg[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].rrst_inst_n_0 ),
        .Q(rd_rst_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_rd_reg1_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(rst),
        .Q(rst_rd_reg1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_rd_reg2_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(rst_rd_reg1),
        .PRE(rst),
        .Q(rst_rd_reg2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_wr_reg1_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(rst),
        .Q(rst_wr_reg1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_wr_reg2_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_wr_reg1),
        .PRE(rst),
        .Q(rst_wr_reg2));
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.wr_rst_asreg_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[1].wrst_inst_n_1 ),
        .PRE(rst_wr_reg2),
        .Q(wr_rst_asreg));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].wrst_inst_n_0 ),
        .Q(wr_rst_reg[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].wrst_inst_n_0 ),
        .Q(wr_rst_reg[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].wrst_inst_n_0 ),
        .Q(wr_rst_reg[2]));
endmodule

(* ORIG_REF_NAME = "reset_blk_ramfifo" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_reset_blk_ramfifo_46
   (out,
    \gc1.count_reg[0] ,
    \grstd1.grst_full.grst_f.rst_d3_reg_0 ,
    wr_rst_busy,
    rd_clk,
    wr_clk,
    rst);
  output [1:0]out;
  output [2:0]\gc1.count_reg[0] ;
  output \grstd1.grst_full.grst_f.rst_d3_reg_0 ;
  output wr_rst_busy;
  input rd_clk;
  input wr_clk;
  input rst;

  wire \ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[1].rrst_inst_n_1 ;
  wire \ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[1].wrst_inst_n_1 ;
  wire \ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].rrst_inst_n_0 ;
  wire \ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].wrst_inst_n_0 ;
  wire p_7_out;
  wire p_8_out;
  wire rd_clk;
  wire rd_rst_asreg;
  (* DONT_TOUCH *) wire [2:0]rd_rst_reg;
  wire rst;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d3;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg2;
  wire wr_clk;
  wire wr_rst_asreg;
  (* DONT_TOUCH *) wire [2:0]wr_rst_reg;

  assign \gc1.count_reg[0] [2:0] = rd_rst_reg;
  assign \grstd1.grst_full.grst_f.rst_d3_reg_0  = rst_d2;
  assign out[1:0] = wr_rst_reg[1:0];
  assign wr_rst_busy = rst_d3;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d1_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(rst_wr_reg2),
        .Q(rst_d1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d2_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1),
        .PRE(rst_wr_reg2),
        .Q(rst_d2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d3_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d2),
        .PRE(rst_wr_reg2),
        .Q(rst_d3));
  final_accelerator_Softmax_Layer_32bit_0_0_synchronizer_ff_47 \ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[1].rrst_inst 
       (.in0(rd_rst_asreg),
        .\ngwrdrst.grst.g7serrst.rd_rst_asreg_reg (\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[1].rrst_inst_n_1 ),
        .out(p_7_out),
        .rd_clk(rd_clk));
  final_accelerator_Softmax_Layer_32bit_0_0_synchronizer_ff_48 \ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[1].wrst_inst 
       (.in0(wr_rst_asreg),
        .\ngwrdrst.grst.g7serrst.wr_rst_asreg_reg (\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[1].wrst_inst_n_1 ),
        .out(p_8_out),
        .wr_clk(wr_clk));
  final_accelerator_Softmax_Layer_32bit_0_0_synchronizer_ff_49 \ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].rrst_inst 
       (.AS(\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].rrst_inst_n_0 ),
        .in0(rd_rst_asreg),
        .out(p_7_out),
        .rd_clk(rd_clk));
  final_accelerator_Softmax_Layer_32bit_0_0_synchronizer_ff_50 \ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].wrst_inst 
       (.AS(\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].wrst_inst_n_0 ),
        .in0(wr_rst_asreg),
        .out(p_8_out),
        .wr_clk(wr_clk));
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.rd_rst_asreg_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[1].rrst_inst_n_1 ),
        .PRE(rst_rd_reg2),
        .Q(rd_rst_asreg));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].rrst_inst_n_0 ),
        .Q(rd_rst_reg[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].rrst_inst_n_0 ),
        .Q(rd_rst_reg[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].rrst_inst_n_0 ),
        .Q(rd_rst_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_rd_reg1_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(rst),
        .Q(rst_rd_reg1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_rd_reg2_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(rst_rd_reg1),
        .PRE(rst),
        .Q(rst_rd_reg2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_wr_reg1_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(rst),
        .Q(rst_wr_reg1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_wr_reg2_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_wr_reg1),
        .PRE(rst),
        .Q(rst_wr_reg2));
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.wr_rst_asreg_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[1].wrst_inst_n_1 ),
        .PRE(rst_wr_reg2),
        .Q(wr_rst_asreg));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].wrst_inst_n_0 ),
        .Q(wr_rst_reg[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].wrst_inst_n_0 ),
        .Q(wr_rst_reg[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].wrst_inst_n_0 ),
        .Q(wr_rst_reg[2]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_synchronizer_ff
   (out,
    \ngwrdrst.grst.g7serrst.rd_rst_asreg_reg ,
    in0,
    rd_clk);
  output out;
  output \ngwrdrst.grst.g7serrst.rd_rst_asreg_reg ;
  input [0:0]in0;
  input rd_clk;

  (* async_reg = "true" *) (* msgon = "true" *) wire Q_reg;
  wire [0:0]in0;
  wire \ngwrdrst.grst.g7serrst.rd_rst_asreg_reg ;
  wire rd_clk;

  assign out = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(in0),
        .Q(Q_reg),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.rd_rst_asreg_i_1 
       (.I0(in0),
        .I1(Q_reg),
        .O(\ngwrdrst.grst.g7serrst.rd_rst_asreg_reg ));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_synchronizer_ff_0
   (out,
    \ngwrdrst.grst.g7serrst.wr_rst_asreg_reg ,
    in0,
    wr_clk);
  output out;
  output \ngwrdrst.grst.g7serrst.wr_rst_asreg_reg ;
  input [0:0]in0;
  input wr_clk;

  (* async_reg = "true" *) (* msgon = "true" *) wire Q_reg;
  wire [0:0]in0;
  wire \ngwrdrst.grst.g7serrst.wr_rst_asreg_reg ;
  wire wr_clk;

  assign out = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(in0),
        .Q(Q_reg),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.wr_rst_asreg_i_1 
       (.I0(in0),
        .I1(Q_reg),
        .O(\ngwrdrst.grst.g7serrst.wr_rst_asreg_reg ));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_synchronizer_ff_1
   (AS,
    out,
    rd_clk,
    in0);
  output [0:0]AS;
  input out;
  input rd_clk;
  input [0:0]in0;

  wire [0:0]AS;
  (* async_reg = "true" *) (* msgon = "true" *) wire Q_reg;
  wire [0:0]in0;
  wire out;
  wire rd_clk;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(out),
        .Q(Q_reg),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1 
       (.I0(in0),
        .I1(Q_reg),
        .O(AS));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_synchronizer_ff_15
   (out,
    \ngwrdrst.grst.g7serrst.rd_rst_asreg_reg ,
    in0,
    rd_clk);
  output out;
  output \ngwrdrst.grst.g7serrst.rd_rst_asreg_reg ;
  input [0:0]in0;
  input rd_clk;

  (* async_reg = "true" *) (* msgon = "true" *) wire Q_reg;
  wire [0:0]in0;
  wire \ngwrdrst.grst.g7serrst.rd_rst_asreg_reg ;
  wire rd_clk;

  assign out = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(in0),
        .Q(Q_reg),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.rd_rst_asreg_i_1 
       (.I0(in0),
        .I1(Q_reg),
        .O(\ngwrdrst.grst.g7serrst.rd_rst_asreg_reg ));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_synchronizer_ff_16
   (out,
    \ngwrdrst.grst.g7serrst.wr_rst_asreg_reg ,
    in0,
    wr_clk);
  output out;
  output \ngwrdrst.grst.g7serrst.wr_rst_asreg_reg ;
  input [0:0]in0;
  input wr_clk;

  (* async_reg = "true" *) (* msgon = "true" *) wire Q_reg;
  wire [0:0]in0;
  wire \ngwrdrst.grst.g7serrst.wr_rst_asreg_reg ;
  wire wr_clk;

  assign out = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(in0),
        .Q(Q_reg),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.wr_rst_asreg_i_1 
       (.I0(in0),
        .I1(Q_reg),
        .O(\ngwrdrst.grst.g7serrst.wr_rst_asreg_reg ));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_synchronizer_ff_17
   (AS,
    out,
    rd_clk,
    in0);
  output [0:0]AS;
  input out;
  input rd_clk;
  input [0:0]in0;

  wire [0:0]AS;
  (* async_reg = "true" *) (* msgon = "true" *) wire Q_reg;
  wire [0:0]in0;
  wire out;
  wire rd_clk;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(out),
        .Q(Q_reg),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1 
       (.I0(in0),
        .I1(Q_reg),
        .O(AS));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_synchronizer_ff_18
   (AS,
    out,
    wr_clk,
    in0);
  output [0:0]AS;
  input out;
  input wr_clk;
  input [0:0]in0;

  wire [0:0]AS;
  (* async_reg = "true" *) (* msgon = "true" *) wire Q_reg;
  wire [0:0]in0;
  wire out;
  wire wr_clk;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(out),
        .Q(Q_reg),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.wr_rst_reg[2]_i_1 
       (.I0(in0),
        .I1(Q_reg),
        .O(AS));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_synchronizer_ff_2
   (AS,
    out,
    wr_clk,
    in0);
  output [0:0]AS;
  input out;
  input wr_clk;
  input [0:0]in0;

  wire [0:0]AS;
  (* async_reg = "true" *) (* msgon = "true" *) wire Q_reg;
  wire [0:0]in0;
  wire out;
  wire wr_clk;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(out),
        .Q(Q_reg),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.wr_rst_reg[2]_i_1 
       (.I0(in0),
        .I1(Q_reg),
        .O(AS));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_synchronizer_ff_47
   (out,
    \ngwrdrst.grst.g7serrst.rd_rst_asreg_reg ,
    in0,
    rd_clk);
  output out;
  output \ngwrdrst.grst.g7serrst.rd_rst_asreg_reg ;
  input [0:0]in0;
  input rd_clk;

  (* async_reg = "true" *) (* msgon = "true" *) wire Q_reg;
  wire [0:0]in0;
  wire \ngwrdrst.grst.g7serrst.rd_rst_asreg_reg ;
  wire rd_clk;

  assign out = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(in0),
        .Q(Q_reg),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.rd_rst_asreg_i_1 
       (.I0(in0),
        .I1(Q_reg),
        .O(\ngwrdrst.grst.g7serrst.rd_rst_asreg_reg ));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_synchronizer_ff_48
   (out,
    \ngwrdrst.grst.g7serrst.wr_rst_asreg_reg ,
    in0,
    wr_clk);
  output out;
  output \ngwrdrst.grst.g7serrst.wr_rst_asreg_reg ;
  input [0:0]in0;
  input wr_clk;

  (* async_reg = "true" *) (* msgon = "true" *) wire Q_reg;
  wire [0:0]in0;
  wire \ngwrdrst.grst.g7serrst.wr_rst_asreg_reg ;
  wire wr_clk;

  assign out = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(in0),
        .Q(Q_reg),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.wr_rst_asreg_i_1 
       (.I0(in0),
        .I1(Q_reg),
        .O(\ngwrdrst.grst.g7serrst.wr_rst_asreg_reg ));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_synchronizer_ff_49
   (AS,
    out,
    rd_clk,
    in0);
  output [0:0]AS;
  input out;
  input rd_clk;
  input [0:0]in0;

  wire [0:0]AS;
  (* async_reg = "true" *) (* msgon = "true" *) wire Q_reg;
  wire [0:0]in0;
  wire out;
  wire rd_clk;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(out),
        .Q(Q_reg),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1 
       (.I0(in0),
        .I1(Q_reg),
        .O(AS));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_synchronizer_ff_50
   (AS,
    out,
    wr_clk,
    in0);
  output [0:0]AS;
  input out;
  input wr_clk;
  input [0:0]in0;

  wire [0:0]AS;
  (* async_reg = "true" *) (* msgon = "true" *) wire Q_reg;
  wire [0:0]in0;
  wire out;
  wire wr_clk;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(out),
        .Q(Q_reg),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.wr_rst_reg[2]_i_1 
       (.I0(in0),
        .I1(Q_reg),
        .O(AS));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_synchronizer_ff__parameterized0
   (D,
    Q,
    rd_clk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [9:0]D;
  input [9:0]Q;
  input rd_clk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  wire [9:0]Q;
  (* async_reg = "true" *) (* msgon = "true" *) wire [9:0]Q_reg;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;
  wire rd_clk;

  assign D[9:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[7]),
        .Q(Q_reg[7]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[8]),
        .Q(Q_reg[8]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[9]),
        .Q(Q_reg[9]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_synchronizer_ff__parameterized0_35
   (D,
    Q,
    rd_clk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [9:0]D;
  input [9:0]Q;
  input rd_clk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  wire [9:0]Q;
  (* async_reg = "true" *) (* msgon = "true" *) wire [9:0]Q_reg;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;
  wire rd_clk;

  assign D[9:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[7]),
        .Q(Q_reg[7]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[8]),
        .Q(Q_reg[8]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[9]),
        .Q(Q_reg[9]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_synchronizer_ff__parameterized0_67
   (D,
    Q,
    rd_clk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [9:0]D;
  input [9:0]Q;
  input rd_clk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  wire [9:0]Q;
  (* async_reg = "true" *) (* msgon = "true" *) wire [9:0]Q_reg;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;
  wire rd_clk;

  assign D[9:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[7]),
        .Q(Q_reg[7]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[8]),
        .Q(Q_reg[8]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[9]),
        .Q(Q_reg[9]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_synchronizer_ff__parameterized1
   (D,
    Q,
    wr_clk,
    AR);
  output [9:0]D;
  input [9:0]Q;
  input wr_clk;
  input [0:0]AR;

  wire [0:0]AR;
  wire [9:0]Q;
  (* async_reg = "true" *) (* msgon = "true" *) wire [9:0]Q_reg;
  wire wr_clk;

  assign D[9:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(Q[0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(Q[1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(Q[2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(Q[3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(Q[4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(Q[5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(Q[6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(Q[7]),
        .Q(Q_reg[7]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(Q[8]),
        .Q(Q_reg[8]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(Q[9]),
        .Q(Q_reg[9]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_synchronizer_ff__parameterized1_36
   (D,
    Q,
    wr_clk,
    AR);
  output [9:0]D;
  input [9:0]Q;
  input wr_clk;
  input [0:0]AR;

  wire [0:0]AR;
  wire [9:0]Q;
  (* async_reg = "true" *) (* msgon = "true" *) wire [9:0]Q_reg;
  wire wr_clk;

  assign D[9:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(Q[0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(Q[1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(Q[2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(Q[3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(Q[4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(Q[5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(Q[6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(Q[7]),
        .Q(Q_reg[7]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(Q[8]),
        .Q(Q_reg[8]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(Q[9]),
        .Q(Q_reg[9]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_synchronizer_ff__parameterized1_68
   (D,
    Q,
    wr_clk,
    AR);
  output [9:0]D;
  input [9:0]Q;
  input wr_clk;
  input [0:0]AR;

  wire [0:0]AR;
  wire [9:0]Q;
  (* async_reg = "true" *) (* msgon = "true" *) wire [9:0]Q_reg;
  wire wr_clk;

  assign D[9:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(Q[0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(Q[1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(Q[2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(Q[3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(Q[4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(Q[5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(Q[6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(Q[7]),
        .Q(Q_reg[7]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(Q[8]),
        .Q(Q_reg[8]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(Q[9]),
        .Q(Q_reg[9]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_synchronizer_ff__parameterized2
   (out,
    \gnxpm_cdc.wr_pntr_bin_reg[8] ,
    D,
    rd_clk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [0:0]out;
  output [8:0]\gnxpm_cdc.wr_pntr_bin_reg[8] ;
  input [9:0]D;
  input rd_clk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  wire [9:0]D;
  (* async_reg = "true" *) (* msgon = "true" *) wire [9:0]Q_reg;
  wire \gnxpm_cdc.wr_pntr_bin[0]_i_2_n_0 ;
  wire \gnxpm_cdc.wr_pntr_bin[2]_i_2_n_0 ;
  wire \gnxpm_cdc.wr_pntr_bin[3]_i_2_n_0 ;
  wire [8:0]\gnxpm_cdc.wr_pntr_bin_reg[8] ;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;
  wire rd_clk;

  assign out[0] = Q_reg[9];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[7]),
        .Q(Q_reg[7]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[8]),
        .Q(Q_reg[8]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[9]),
        .Q(Q_reg[9]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \gnxpm_cdc.wr_pntr_bin[0]_i_1 
       (.I0(Q_reg[1]),
        .I1(Q_reg[0]),
        .I2(Q_reg[2]),
        .I3(\gnxpm_cdc.wr_pntr_bin[0]_i_2_n_0 ),
        .I4(\gnxpm_cdc.wr_pntr_bin[2]_i_2_n_0 ),
        .O(\gnxpm_cdc.wr_pntr_bin_reg[8] [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \gnxpm_cdc.wr_pntr_bin[0]_i_2 
       (.I0(Q_reg[4]),
        .I1(Q_reg[3]),
        .I2(Q_reg[9]),
        .O(\gnxpm_cdc.wr_pntr_bin[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \gnxpm_cdc.wr_pntr_bin[1]_i_1 
       (.I0(Q_reg[2]),
        .I1(Q_reg[9]),
        .I2(Q_reg[3]),
        .I3(Q_reg[4]),
        .I4(\gnxpm_cdc.wr_pntr_bin[2]_i_2_n_0 ),
        .I5(Q_reg[1]),
        .O(\gnxpm_cdc.wr_pntr_bin_reg[8] [1]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \gnxpm_cdc.wr_pntr_bin[2]_i_1 
       (.I0(\gnxpm_cdc.wr_pntr_bin[2]_i_2_n_0 ),
        .I1(Q_reg[4]),
        .I2(Q_reg[3]),
        .I3(Q_reg[9]),
        .I4(Q_reg[2]),
        .O(\gnxpm_cdc.wr_pntr_bin_reg[8] [2]));
  LUT4 #(
    .INIT(16'h6996)) 
    \gnxpm_cdc.wr_pntr_bin[2]_i_2 
       (.I0(Q_reg[8]),
        .I1(Q_reg[7]),
        .I2(Q_reg[6]),
        .I3(Q_reg[5]),
        .O(\gnxpm_cdc.wr_pntr_bin[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \gnxpm_cdc.wr_pntr_bin[3]_i_1 
       (.I0(Q_reg[9]),
        .I1(Q_reg[3]),
        .I2(Q_reg[4]),
        .I3(\gnxpm_cdc.wr_pntr_bin[3]_i_2_n_0 ),
        .I4(Q_reg[7]),
        .I5(Q_reg[8]),
        .O(\gnxpm_cdc.wr_pntr_bin_reg[8] [3]));
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.wr_pntr_bin[3]_i_2 
       (.I0(Q_reg[5]),
        .I1(Q_reg[6]),
        .O(\gnxpm_cdc.wr_pntr_bin[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \gnxpm_cdc.wr_pntr_bin[4]_i_1 
       (.I0(Q_reg[6]),
        .I1(Q_reg[4]),
        .I2(Q_reg[5]),
        .I3(Q_reg[9]),
        .I4(Q_reg[7]),
        .I5(Q_reg[8]),
        .O(\gnxpm_cdc.wr_pntr_bin_reg[8] [4]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \gnxpm_cdc.wr_pntr_bin[5]_i_1 
       (.I0(Q_reg[7]),
        .I1(Q_reg[5]),
        .I2(Q_reg[6]),
        .I3(Q_reg[9]),
        .I4(Q_reg[8]),
        .O(\gnxpm_cdc.wr_pntr_bin_reg[8] [5]));
  LUT4 #(
    .INIT(16'h6996)) 
    \gnxpm_cdc.wr_pntr_bin[6]_i_1 
       (.I0(Q_reg[7]),
        .I1(Q_reg[6]),
        .I2(Q_reg[9]),
        .I3(Q_reg[8]),
        .O(\gnxpm_cdc.wr_pntr_bin_reg[8] [6]));
  LUT3 #(
    .INIT(8'h96)) 
    \gnxpm_cdc.wr_pntr_bin[7]_i_1 
       (.I0(Q_reg[8]),
        .I1(Q_reg[7]),
        .I2(Q_reg[9]),
        .O(\gnxpm_cdc.wr_pntr_bin_reg[8] [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.wr_pntr_bin[8]_i_1 
       (.I0(Q_reg[8]),
        .I1(Q_reg[9]),
        .O(\gnxpm_cdc.wr_pntr_bin_reg[8] [8]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_synchronizer_ff__parameterized2_37
   (out,
    \gnxpm_cdc.wr_pntr_bin_reg[8] ,
    D,
    rd_clk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [0:0]out;
  output [8:0]\gnxpm_cdc.wr_pntr_bin_reg[8] ;
  input [9:0]D;
  input rd_clk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  wire [9:0]D;
  (* async_reg = "true" *) (* msgon = "true" *) wire [9:0]Q_reg;
  wire \gnxpm_cdc.wr_pntr_bin[0]_i_2_n_0 ;
  wire \gnxpm_cdc.wr_pntr_bin[2]_i_2_n_0 ;
  wire \gnxpm_cdc.wr_pntr_bin[3]_i_2_n_0 ;
  wire [8:0]\gnxpm_cdc.wr_pntr_bin_reg[8] ;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;
  wire rd_clk;

  assign out[0] = Q_reg[9];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[7]),
        .Q(Q_reg[7]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[8]),
        .Q(Q_reg[8]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[9]),
        .Q(Q_reg[9]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \gnxpm_cdc.wr_pntr_bin[0]_i_1 
       (.I0(Q_reg[1]),
        .I1(Q_reg[0]),
        .I2(Q_reg[2]),
        .I3(\gnxpm_cdc.wr_pntr_bin[0]_i_2_n_0 ),
        .I4(\gnxpm_cdc.wr_pntr_bin[2]_i_2_n_0 ),
        .O(\gnxpm_cdc.wr_pntr_bin_reg[8] [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \gnxpm_cdc.wr_pntr_bin[0]_i_2 
       (.I0(Q_reg[4]),
        .I1(Q_reg[3]),
        .I2(Q_reg[9]),
        .O(\gnxpm_cdc.wr_pntr_bin[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \gnxpm_cdc.wr_pntr_bin[1]_i_1 
       (.I0(Q_reg[2]),
        .I1(Q_reg[9]),
        .I2(Q_reg[3]),
        .I3(Q_reg[4]),
        .I4(\gnxpm_cdc.wr_pntr_bin[2]_i_2_n_0 ),
        .I5(Q_reg[1]),
        .O(\gnxpm_cdc.wr_pntr_bin_reg[8] [1]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \gnxpm_cdc.wr_pntr_bin[2]_i_1 
       (.I0(\gnxpm_cdc.wr_pntr_bin[2]_i_2_n_0 ),
        .I1(Q_reg[4]),
        .I2(Q_reg[3]),
        .I3(Q_reg[9]),
        .I4(Q_reg[2]),
        .O(\gnxpm_cdc.wr_pntr_bin_reg[8] [2]));
  LUT4 #(
    .INIT(16'h6996)) 
    \gnxpm_cdc.wr_pntr_bin[2]_i_2 
       (.I0(Q_reg[8]),
        .I1(Q_reg[7]),
        .I2(Q_reg[6]),
        .I3(Q_reg[5]),
        .O(\gnxpm_cdc.wr_pntr_bin[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \gnxpm_cdc.wr_pntr_bin[3]_i_1 
       (.I0(Q_reg[9]),
        .I1(Q_reg[3]),
        .I2(Q_reg[4]),
        .I3(\gnxpm_cdc.wr_pntr_bin[3]_i_2_n_0 ),
        .I4(Q_reg[7]),
        .I5(Q_reg[8]),
        .O(\gnxpm_cdc.wr_pntr_bin_reg[8] [3]));
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.wr_pntr_bin[3]_i_2 
       (.I0(Q_reg[5]),
        .I1(Q_reg[6]),
        .O(\gnxpm_cdc.wr_pntr_bin[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \gnxpm_cdc.wr_pntr_bin[4]_i_1 
       (.I0(Q_reg[6]),
        .I1(Q_reg[4]),
        .I2(Q_reg[5]),
        .I3(Q_reg[9]),
        .I4(Q_reg[7]),
        .I5(Q_reg[8]),
        .O(\gnxpm_cdc.wr_pntr_bin_reg[8] [4]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \gnxpm_cdc.wr_pntr_bin[5]_i_1 
       (.I0(Q_reg[7]),
        .I1(Q_reg[5]),
        .I2(Q_reg[6]),
        .I3(Q_reg[9]),
        .I4(Q_reg[8]),
        .O(\gnxpm_cdc.wr_pntr_bin_reg[8] [5]));
  LUT4 #(
    .INIT(16'h6996)) 
    \gnxpm_cdc.wr_pntr_bin[6]_i_1 
       (.I0(Q_reg[7]),
        .I1(Q_reg[6]),
        .I2(Q_reg[9]),
        .I3(Q_reg[8]),
        .O(\gnxpm_cdc.wr_pntr_bin_reg[8] [6]));
  LUT3 #(
    .INIT(8'h96)) 
    \gnxpm_cdc.wr_pntr_bin[7]_i_1 
       (.I0(Q_reg[8]),
        .I1(Q_reg[7]),
        .I2(Q_reg[9]),
        .O(\gnxpm_cdc.wr_pntr_bin_reg[8] [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.wr_pntr_bin[8]_i_1 
       (.I0(Q_reg[8]),
        .I1(Q_reg[9]),
        .O(\gnxpm_cdc.wr_pntr_bin_reg[8] [8]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_synchronizer_ff__parameterized2_69
   (out,
    \gnxpm_cdc.wr_pntr_bin_reg[8] ,
    D,
    rd_clk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [0:0]out;
  output [8:0]\gnxpm_cdc.wr_pntr_bin_reg[8] ;
  input [9:0]D;
  input rd_clk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  wire [9:0]D;
  (* async_reg = "true" *) (* msgon = "true" *) wire [9:0]Q_reg;
  wire \gnxpm_cdc.wr_pntr_bin[0]_i_2_n_0 ;
  wire \gnxpm_cdc.wr_pntr_bin[2]_i_2_n_0 ;
  wire \gnxpm_cdc.wr_pntr_bin[3]_i_2_n_0 ;
  wire [8:0]\gnxpm_cdc.wr_pntr_bin_reg[8] ;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;
  wire rd_clk;

  assign out[0] = Q_reg[9];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[7]),
        .Q(Q_reg[7]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[8]),
        .Q(Q_reg[8]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D[9]),
        .Q(Q_reg[9]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \gnxpm_cdc.wr_pntr_bin[0]_i_1 
       (.I0(Q_reg[1]),
        .I1(Q_reg[0]),
        .I2(Q_reg[2]),
        .I3(\gnxpm_cdc.wr_pntr_bin[0]_i_2_n_0 ),
        .I4(\gnxpm_cdc.wr_pntr_bin[2]_i_2_n_0 ),
        .O(\gnxpm_cdc.wr_pntr_bin_reg[8] [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \gnxpm_cdc.wr_pntr_bin[0]_i_2 
       (.I0(Q_reg[4]),
        .I1(Q_reg[3]),
        .I2(Q_reg[9]),
        .O(\gnxpm_cdc.wr_pntr_bin[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \gnxpm_cdc.wr_pntr_bin[1]_i_1 
       (.I0(Q_reg[2]),
        .I1(Q_reg[9]),
        .I2(Q_reg[3]),
        .I3(Q_reg[4]),
        .I4(\gnxpm_cdc.wr_pntr_bin[2]_i_2_n_0 ),
        .I5(Q_reg[1]),
        .O(\gnxpm_cdc.wr_pntr_bin_reg[8] [1]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \gnxpm_cdc.wr_pntr_bin[2]_i_1 
       (.I0(\gnxpm_cdc.wr_pntr_bin[2]_i_2_n_0 ),
        .I1(Q_reg[4]),
        .I2(Q_reg[3]),
        .I3(Q_reg[9]),
        .I4(Q_reg[2]),
        .O(\gnxpm_cdc.wr_pntr_bin_reg[8] [2]));
  LUT4 #(
    .INIT(16'h6996)) 
    \gnxpm_cdc.wr_pntr_bin[2]_i_2 
       (.I0(Q_reg[8]),
        .I1(Q_reg[7]),
        .I2(Q_reg[6]),
        .I3(Q_reg[5]),
        .O(\gnxpm_cdc.wr_pntr_bin[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \gnxpm_cdc.wr_pntr_bin[3]_i_1 
       (.I0(Q_reg[9]),
        .I1(Q_reg[3]),
        .I2(Q_reg[4]),
        .I3(\gnxpm_cdc.wr_pntr_bin[3]_i_2_n_0 ),
        .I4(Q_reg[7]),
        .I5(Q_reg[8]),
        .O(\gnxpm_cdc.wr_pntr_bin_reg[8] [3]));
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.wr_pntr_bin[3]_i_2 
       (.I0(Q_reg[5]),
        .I1(Q_reg[6]),
        .O(\gnxpm_cdc.wr_pntr_bin[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \gnxpm_cdc.wr_pntr_bin[4]_i_1 
       (.I0(Q_reg[6]),
        .I1(Q_reg[4]),
        .I2(Q_reg[5]),
        .I3(Q_reg[9]),
        .I4(Q_reg[7]),
        .I5(Q_reg[8]),
        .O(\gnxpm_cdc.wr_pntr_bin_reg[8] [4]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \gnxpm_cdc.wr_pntr_bin[5]_i_1 
       (.I0(Q_reg[7]),
        .I1(Q_reg[5]),
        .I2(Q_reg[6]),
        .I3(Q_reg[9]),
        .I4(Q_reg[8]),
        .O(\gnxpm_cdc.wr_pntr_bin_reg[8] [5]));
  LUT4 #(
    .INIT(16'h6996)) 
    \gnxpm_cdc.wr_pntr_bin[6]_i_1 
       (.I0(Q_reg[7]),
        .I1(Q_reg[6]),
        .I2(Q_reg[9]),
        .I3(Q_reg[8]),
        .O(\gnxpm_cdc.wr_pntr_bin_reg[8] [6]));
  LUT3 #(
    .INIT(8'h96)) 
    \gnxpm_cdc.wr_pntr_bin[7]_i_1 
       (.I0(Q_reg[8]),
        .I1(Q_reg[7]),
        .I2(Q_reg[9]),
        .O(\gnxpm_cdc.wr_pntr_bin_reg[8] [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.wr_pntr_bin[8]_i_1 
       (.I0(Q_reg[8]),
        .I1(Q_reg[9]),
        .O(\gnxpm_cdc.wr_pntr_bin_reg[8] [8]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_synchronizer_ff__parameterized3
   (out,
    \gnxpm_cdc.rd_pntr_bin_reg[8] ,
    D,
    wr_clk,
    AR);
  output [0:0]out;
  output [8:0]\gnxpm_cdc.rd_pntr_bin_reg[8] ;
  input [9:0]D;
  input wr_clk;
  input [0:0]AR;

  wire [0:0]AR;
  wire [9:0]D;
  (* async_reg = "true" *) (* msgon = "true" *) wire [9:0]Q_reg;
  wire \gnxpm_cdc.rd_pntr_bin[0]_i_2_n_0 ;
  wire \gnxpm_cdc.rd_pntr_bin[2]_i_2_n_0 ;
  wire \gnxpm_cdc.rd_pntr_bin[3]_i_2_n_0 ;
  wire [8:0]\gnxpm_cdc.rd_pntr_bin_reg[8] ;
  wire wr_clk;

  assign out[0] = Q_reg[9];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[7]),
        .Q(Q_reg[7]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[8]),
        .Q(Q_reg[8]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[9]),
        .Q(Q_reg[9]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \gnxpm_cdc.rd_pntr_bin[0]_i_1 
       (.I0(Q_reg[1]),
        .I1(Q_reg[0]),
        .I2(Q_reg[2]),
        .I3(\gnxpm_cdc.rd_pntr_bin[0]_i_2_n_0 ),
        .I4(\gnxpm_cdc.rd_pntr_bin[2]_i_2_n_0 ),
        .O(\gnxpm_cdc.rd_pntr_bin_reg[8] [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \gnxpm_cdc.rd_pntr_bin[0]_i_2 
       (.I0(Q_reg[4]),
        .I1(Q_reg[3]),
        .I2(Q_reg[9]),
        .O(\gnxpm_cdc.rd_pntr_bin[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \gnxpm_cdc.rd_pntr_bin[1]_i_1 
       (.I0(Q_reg[2]),
        .I1(Q_reg[9]),
        .I2(Q_reg[3]),
        .I3(Q_reg[4]),
        .I4(\gnxpm_cdc.rd_pntr_bin[2]_i_2_n_0 ),
        .I5(Q_reg[1]),
        .O(\gnxpm_cdc.rd_pntr_bin_reg[8] [1]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \gnxpm_cdc.rd_pntr_bin[2]_i_1 
       (.I0(\gnxpm_cdc.rd_pntr_bin[2]_i_2_n_0 ),
        .I1(Q_reg[4]),
        .I2(Q_reg[3]),
        .I3(Q_reg[9]),
        .I4(Q_reg[2]),
        .O(\gnxpm_cdc.rd_pntr_bin_reg[8] [2]));
  LUT4 #(
    .INIT(16'h6996)) 
    \gnxpm_cdc.rd_pntr_bin[2]_i_2 
       (.I0(Q_reg[8]),
        .I1(Q_reg[7]),
        .I2(Q_reg[6]),
        .I3(Q_reg[5]),
        .O(\gnxpm_cdc.rd_pntr_bin[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \gnxpm_cdc.rd_pntr_bin[3]_i_1 
       (.I0(Q_reg[9]),
        .I1(Q_reg[3]),
        .I2(Q_reg[4]),
        .I3(\gnxpm_cdc.rd_pntr_bin[3]_i_2_n_0 ),
        .I4(Q_reg[7]),
        .I5(Q_reg[8]),
        .O(\gnxpm_cdc.rd_pntr_bin_reg[8] [3]));
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.rd_pntr_bin[3]_i_2 
       (.I0(Q_reg[5]),
        .I1(Q_reg[6]),
        .O(\gnxpm_cdc.rd_pntr_bin[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \gnxpm_cdc.rd_pntr_bin[4]_i_1 
       (.I0(Q_reg[6]),
        .I1(Q_reg[4]),
        .I2(Q_reg[5]),
        .I3(Q_reg[9]),
        .I4(Q_reg[7]),
        .I5(Q_reg[8]),
        .O(\gnxpm_cdc.rd_pntr_bin_reg[8] [4]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \gnxpm_cdc.rd_pntr_bin[5]_i_1 
       (.I0(Q_reg[7]),
        .I1(Q_reg[5]),
        .I2(Q_reg[6]),
        .I3(Q_reg[9]),
        .I4(Q_reg[8]),
        .O(\gnxpm_cdc.rd_pntr_bin_reg[8] [5]));
  LUT4 #(
    .INIT(16'h6996)) 
    \gnxpm_cdc.rd_pntr_bin[6]_i_1 
       (.I0(Q_reg[7]),
        .I1(Q_reg[6]),
        .I2(Q_reg[9]),
        .I3(Q_reg[8]),
        .O(\gnxpm_cdc.rd_pntr_bin_reg[8] [6]));
  LUT3 #(
    .INIT(8'h96)) 
    \gnxpm_cdc.rd_pntr_bin[7]_i_1 
       (.I0(Q_reg[8]),
        .I1(Q_reg[7]),
        .I2(Q_reg[9]),
        .O(\gnxpm_cdc.rd_pntr_bin_reg[8] [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.rd_pntr_bin[8]_i_1 
       (.I0(Q_reg[8]),
        .I1(Q_reg[9]),
        .O(\gnxpm_cdc.rd_pntr_bin_reg[8] [8]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_synchronizer_ff__parameterized3_38
   (out,
    \gnxpm_cdc.rd_pntr_bin_reg[8] ,
    D,
    wr_clk,
    AR);
  output [0:0]out;
  output [8:0]\gnxpm_cdc.rd_pntr_bin_reg[8] ;
  input [9:0]D;
  input wr_clk;
  input [0:0]AR;

  wire [0:0]AR;
  wire [9:0]D;
  (* async_reg = "true" *) (* msgon = "true" *) wire [9:0]Q_reg;
  wire \gnxpm_cdc.rd_pntr_bin[0]_i_2_n_0 ;
  wire \gnxpm_cdc.rd_pntr_bin[2]_i_2_n_0 ;
  wire \gnxpm_cdc.rd_pntr_bin[3]_i_2_n_0 ;
  wire [8:0]\gnxpm_cdc.rd_pntr_bin_reg[8] ;
  wire wr_clk;

  assign out[0] = Q_reg[9];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[7]),
        .Q(Q_reg[7]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[8]),
        .Q(Q_reg[8]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[9]),
        .Q(Q_reg[9]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \gnxpm_cdc.rd_pntr_bin[0]_i_1 
       (.I0(Q_reg[1]),
        .I1(Q_reg[0]),
        .I2(Q_reg[2]),
        .I3(\gnxpm_cdc.rd_pntr_bin[0]_i_2_n_0 ),
        .I4(\gnxpm_cdc.rd_pntr_bin[2]_i_2_n_0 ),
        .O(\gnxpm_cdc.rd_pntr_bin_reg[8] [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \gnxpm_cdc.rd_pntr_bin[0]_i_2 
       (.I0(Q_reg[4]),
        .I1(Q_reg[3]),
        .I2(Q_reg[9]),
        .O(\gnxpm_cdc.rd_pntr_bin[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \gnxpm_cdc.rd_pntr_bin[1]_i_1 
       (.I0(Q_reg[2]),
        .I1(Q_reg[9]),
        .I2(Q_reg[3]),
        .I3(Q_reg[4]),
        .I4(\gnxpm_cdc.rd_pntr_bin[2]_i_2_n_0 ),
        .I5(Q_reg[1]),
        .O(\gnxpm_cdc.rd_pntr_bin_reg[8] [1]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \gnxpm_cdc.rd_pntr_bin[2]_i_1 
       (.I0(\gnxpm_cdc.rd_pntr_bin[2]_i_2_n_0 ),
        .I1(Q_reg[4]),
        .I2(Q_reg[3]),
        .I3(Q_reg[9]),
        .I4(Q_reg[2]),
        .O(\gnxpm_cdc.rd_pntr_bin_reg[8] [2]));
  LUT4 #(
    .INIT(16'h6996)) 
    \gnxpm_cdc.rd_pntr_bin[2]_i_2 
       (.I0(Q_reg[8]),
        .I1(Q_reg[7]),
        .I2(Q_reg[6]),
        .I3(Q_reg[5]),
        .O(\gnxpm_cdc.rd_pntr_bin[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \gnxpm_cdc.rd_pntr_bin[3]_i_1 
       (.I0(Q_reg[9]),
        .I1(Q_reg[3]),
        .I2(Q_reg[4]),
        .I3(\gnxpm_cdc.rd_pntr_bin[3]_i_2_n_0 ),
        .I4(Q_reg[7]),
        .I5(Q_reg[8]),
        .O(\gnxpm_cdc.rd_pntr_bin_reg[8] [3]));
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.rd_pntr_bin[3]_i_2 
       (.I0(Q_reg[5]),
        .I1(Q_reg[6]),
        .O(\gnxpm_cdc.rd_pntr_bin[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \gnxpm_cdc.rd_pntr_bin[4]_i_1 
       (.I0(Q_reg[6]),
        .I1(Q_reg[4]),
        .I2(Q_reg[5]),
        .I3(Q_reg[9]),
        .I4(Q_reg[7]),
        .I5(Q_reg[8]),
        .O(\gnxpm_cdc.rd_pntr_bin_reg[8] [4]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \gnxpm_cdc.rd_pntr_bin[5]_i_1 
       (.I0(Q_reg[7]),
        .I1(Q_reg[5]),
        .I2(Q_reg[6]),
        .I3(Q_reg[9]),
        .I4(Q_reg[8]),
        .O(\gnxpm_cdc.rd_pntr_bin_reg[8] [5]));
  LUT4 #(
    .INIT(16'h6996)) 
    \gnxpm_cdc.rd_pntr_bin[6]_i_1 
       (.I0(Q_reg[7]),
        .I1(Q_reg[6]),
        .I2(Q_reg[9]),
        .I3(Q_reg[8]),
        .O(\gnxpm_cdc.rd_pntr_bin_reg[8] [6]));
  LUT3 #(
    .INIT(8'h96)) 
    \gnxpm_cdc.rd_pntr_bin[7]_i_1 
       (.I0(Q_reg[8]),
        .I1(Q_reg[7]),
        .I2(Q_reg[9]),
        .O(\gnxpm_cdc.rd_pntr_bin_reg[8] [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.rd_pntr_bin[8]_i_1 
       (.I0(Q_reg[8]),
        .I1(Q_reg[9]),
        .O(\gnxpm_cdc.rd_pntr_bin_reg[8] [8]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_synchronizer_ff__parameterized3_70
   (out,
    \gnxpm_cdc.rd_pntr_bin_reg[8] ,
    D,
    wr_clk,
    AR);
  output [0:0]out;
  output [8:0]\gnxpm_cdc.rd_pntr_bin_reg[8] ;
  input [9:0]D;
  input wr_clk;
  input [0:0]AR;

  wire [0:0]AR;
  wire [9:0]D;
  (* async_reg = "true" *) (* msgon = "true" *) wire [9:0]Q_reg;
  wire \gnxpm_cdc.rd_pntr_bin[0]_i_2_n_0 ;
  wire \gnxpm_cdc.rd_pntr_bin[2]_i_2_n_0 ;
  wire \gnxpm_cdc.rd_pntr_bin[3]_i_2_n_0 ;
  wire [8:0]\gnxpm_cdc.rd_pntr_bin_reg[8] ;
  wire wr_clk;

  assign out[0] = Q_reg[9];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[4]),
        .Q(Q_reg[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[5]),
        .Q(Q_reg[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[6]),
        .Q(Q_reg[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[7]),
        .Q(Q_reg[7]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[8]),
        .Q(Q_reg[8]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[9]),
        .Q(Q_reg[9]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \gnxpm_cdc.rd_pntr_bin[0]_i_1 
       (.I0(Q_reg[1]),
        .I1(Q_reg[0]),
        .I2(Q_reg[2]),
        .I3(\gnxpm_cdc.rd_pntr_bin[0]_i_2_n_0 ),
        .I4(\gnxpm_cdc.rd_pntr_bin[2]_i_2_n_0 ),
        .O(\gnxpm_cdc.rd_pntr_bin_reg[8] [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \gnxpm_cdc.rd_pntr_bin[0]_i_2 
       (.I0(Q_reg[4]),
        .I1(Q_reg[3]),
        .I2(Q_reg[9]),
        .O(\gnxpm_cdc.rd_pntr_bin[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \gnxpm_cdc.rd_pntr_bin[1]_i_1 
       (.I0(Q_reg[2]),
        .I1(Q_reg[9]),
        .I2(Q_reg[3]),
        .I3(Q_reg[4]),
        .I4(\gnxpm_cdc.rd_pntr_bin[2]_i_2_n_0 ),
        .I5(Q_reg[1]),
        .O(\gnxpm_cdc.rd_pntr_bin_reg[8] [1]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \gnxpm_cdc.rd_pntr_bin[2]_i_1 
       (.I0(\gnxpm_cdc.rd_pntr_bin[2]_i_2_n_0 ),
        .I1(Q_reg[4]),
        .I2(Q_reg[3]),
        .I3(Q_reg[9]),
        .I4(Q_reg[2]),
        .O(\gnxpm_cdc.rd_pntr_bin_reg[8] [2]));
  LUT4 #(
    .INIT(16'h6996)) 
    \gnxpm_cdc.rd_pntr_bin[2]_i_2 
       (.I0(Q_reg[8]),
        .I1(Q_reg[7]),
        .I2(Q_reg[6]),
        .I3(Q_reg[5]),
        .O(\gnxpm_cdc.rd_pntr_bin[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \gnxpm_cdc.rd_pntr_bin[3]_i_1 
       (.I0(Q_reg[9]),
        .I1(Q_reg[3]),
        .I2(Q_reg[4]),
        .I3(\gnxpm_cdc.rd_pntr_bin[3]_i_2_n_0 ),
        .I4(Q_reg[7]),
        .I5(Q_reg[8]),
        .O(\gnxpm_cdc.rd_pntr_bin_reg[8] [3]));
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.rd_pntr_bin[3]_i_2 
       (.I0(Q_reg[5]),
        .I1(Q_reg[6]),
        .O(\gnxpm_cdc.rd_pntr_bin[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \gnxpm_cdc.rd_pntr_bin[4]_i_1 
       (.I0(Q_reg[6]),
        .I1(Q_reg[4]),
        .I2(Q_reg[5]),
        .I3(Q_reg[9]),
        .I4(Q_reg[7]),
        .I5(Q_reg[8]),
        .O(\gnxpm_cdc.rd_pntr_bin_reg[8] [4]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \gnxpm_cdc.rd_pntr_bin[5]_i_1 
       (.I0(Q_reg[7]),
        .I1(Q_reg[5]),
        .I2(Q_reg[6]),
        .I3(Q_reg[9]),
        .I4(Q_reg[8]),
        .O(\gnxpm_cdc.rd_pntr_bin_reg[8] [5]));
  LUT4 #(
    .INIT(16'h6996)) 
    \gnxpm_cdc.rd_pntr_bin[6]_i_1 
       (.I0(Q_reg[7]),
        .I1(Q_reg[6]),
        .I2(Q_reg[9]),
        .I3(Q_reg[8]),
        .O(\gnxpm_cdc.rd_pntr_bin_reg[8] [6]));
  LUT3 #(
    .INIT(8'h96)) 
    \gnxpm_cdc.rd_pntr_bin[7]_i_1 
       (.I0(Q_reg[8]),
        .I1(Q_reg[7]),
        .I2(Q_reg[9]),
        .O(\gnxpm_cdc.rd_pntr_bin_reg[8] [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.rd_pntr_bin[8]_i_1 
       (.I0(Q_reg[8]),
        .I1(Q_reg[9]),
        .O(\gnxpm_cdc.rd_pntr_bin_reg[8] [8]));
endmodule

(* ORIG_REF_NAME = "wr_bin_cntr" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_wr_bin_cntr
   (Q,
    v1_reg,
    v1_reg_0,
    v1_reg_1,
    E,
    wr_clk,
    AR,
    RD_PNTR_WR);
  output [9:0]Q;
  output [4:0]v1_reg;
  output [4:0]v1_reg_0;
  output [4:0]v1_reg_1;
  input [0:0]E;
  input wr_clk;
  input [0:0]AR;
  input [9:0]RD_PNTR_WR;

  wire [0:0]AR;
  wire [0:0]E;
  wire [9:0]Q;
  wire [9:0]RD_PNTR_WR;
  wire \gic0.gc1.count[9]_i_2_n_0 ;
  wire [9:0]p_13_out;
  wire [9:0]plusOp__0;
  wire [4:0]v1_reg;
  wire [4:0]v1_reg_0;
  wire [4:0]v1_reg_1;
  wire wr_clk;
  wire [9:0]wr_pntr_plus2;
  wire [9:0]wr_pntr_plus3;

  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \gic0.gc1.count[0]_i_1 
       (.I0(wr_pntr_plus3[0]),
        .O(plusOp__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gic0.gc1.count[1]_i_1 
       (.I0(wr_pntr_plus3[0]),
        .I1(wr_pntr_plus3[1]),
        .O(plusOp__0[1]));
  LUT3 #(
    .INIT(8'h78)) 
    \gic0.gc1.count[2]_i_1 
       (.I0(wr_pntr_plus3[0]),
        .I1(wr_pntr_plus3[1]),
        .I2(wr_pntr_plus3[2]),
        .O(plusOp__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gic0.gc1.count[3]_i_1 
       (.I0(wr_pntr_plus3[1]),
        .I1(wr_pntr_plus3[0]),
        .I2(wr_pntr_plus3[2]),
        .I3(wr_pntr_plus3[3]),
        .O(plusOp__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gic0.gc1.count[4]_i_1 
       (.I0(wr_pntr_plus3[2]),
        .I1(wr_pntr_plus3[0]),
        .I2(wr_pntr_plus3[1]),
        .I3(wr_pntr_plus3[3]),
        .I4(wr_pntr_plus3[4]),
        .O(plusOp__0[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \gic0.gc1.count[5]_i_1 
       (.I0(wr_pntr_plus3[3]),
        .I1(wr_pntr_plus3[1]),
        .I2(wr_pntr_plus3[0]),
        .I3(wr_pntr_plus3[2]),
        .I4(wr_pntr_plus3[4]),
        .I5(wr_pntr_plus3[5]),
        .O(plusOp__0[5]));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gic0.gc1.count[6]_i_1 
       (.I0(\gic0.gc1.count[9]_i_2_n_0 ),
        .I1(wr_pntr_plus3[6]),
        .O(plusOp__0[6]));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gic0.gc1.count[7]_i_1 
       (.I0(\gic0.gc1.count[9]_i_2_n_0 ),
        .I1(wr_pntr_plus3[6]),
        .I2(wr_pntr_plus3[7]),
        .O(plusOp__0[7]));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gic0.gc1.count[8]_i_1 
       (.I0(wr_pntr_plus3[6]),
        .I1(\gic0.gc1.count[9]_i_2_n_0 ),
        .I2(wr_pntr_plus3[7]),
        .I3(wr_pntr_plus3[8]),
        .O(plusOp__0[8]));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gic0.gc1.count[9]_i_1 
       (.I0(wr_pntr_plus3[7]),
        .I1(\gic0.gc1.count[9]_i_2_n_0 ),
        .I2(wr_pntr_plus3[6]),
        .I3(wr_pntr_plus3[8]),
        .I4(wr_pntr_plus3[9]),
        .O(plusOp__0[9]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gic0.gc1.count[9]_i_2 
       (.I0(wr_pntr_plus3[5]),
        .I1(wr_pntr_plus3[3]),
        .I2(wr_pntr_plus3[1]),
        .I3(wr_pntr_plus3[0]),
        .I4(wr_pntr_plus3[2]),
        .I5(wr_pntr_plus3[4]),
        .O(\gic0.gc1.count[9]_i_2_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus3[0]),
        .Q(wr_pntr_plus2[0]));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc1.count_d1_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(wr_pntr_plus3[1]),
        .PRE(AR),
        .Q(wr_pntr_plus2[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus3[2]),
        .Q(wr_pntr_plus2[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus3[3]),
        .Q(wr_pntr_plus2[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus3[4]),
        .Q(wr_pntr_plus2[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[5] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus3[5]),
        .Q(wr_pntr_plus2[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[6] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus3[6]),
        .Q(wr_pntr_plus2[6]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[7] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus3[7]),
        .Q(wr_pntr_plus2[7]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[8] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus3[8]),
        .Q(wr_pntr_plus2[8]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[9] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus3[9]),
        .Q(wr_pntr_plus2[9]));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc1.count_d2_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(wr_pntr_plus2[0]),
        .PRE(AR),
        .Q(p_13_out[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus2[1]),
        .Q(p_13_out[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus2[2]),
        .Q(p_13_out[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus2[3]),
        .Q(p_13_out[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus2[4]),
        .Q(p_13_out[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[5] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus2[5]),
        .Q(p_13_out[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[6] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus2[6]),
        .Q(p_13_out[6]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[7] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus2[7]),
        .Q(p_13_out[7]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[8] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus2[8]),
        .Q(p_13_out[8]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[9] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus2[9]),
        .Q(p_13_out[9]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(p_13_out[0]),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(p_13_out[1]),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(p_13_out[2]),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(p_13_out[3]),
        .Q(Q[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(p_13_out[4]),
        .Q(Q[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[5] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(p_13_out[5]),
        .Q(Q[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[6] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(p_13_out[6]),
        .Q(Q[6]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[7] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(p_13_out[7]),
        .Q(Q[7]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[8] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(p_13_out[8]),
        .Q(Q[8]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[9] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(p_13_out[9]),
        .Q(Q[9]));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc1.count_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp__0[0]),
        .PRE(AR),
        .Q(wr_pntr_plus3[0]));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc1.count_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp__0[1]),
        .PRE(AR),
        .Q(wr_pntr_plus3[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp__0[2]),
        .Q(wr_pntr_plus3[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp__0[3]),
        .Q(wr_pntr_plus3[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp__0[4]),
        .Q(wr_pntr_plus3[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_reg[5] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp__0[5]),
        .Q(wr_pntr_plus3[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_reg[6] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp__0[6]),
        .Q(wr_pntr_plus3[6]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_reg[7] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp__0[7]),
        .Q(wr_pntr_plus3[7]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_reg[8] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp__0[8]),
        .Q(wr_pntr_plus3[8]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_reg[9] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp__0[9]),
        .Q(wr_pntr_plus3[9]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1 
       (.I0(p_13_out[0]),
        .I1(RD_PNTR_WR[0]),
        .I2(p_13_out[1]),
        .I3(RD_PNTR_WR[1]),
        .O(v1_reg[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1__0 
       (.I0(wr_pntr_plus2[0]),
        .I1(RD_PNTR_WR[0]),
        .I2(wr_pntr_plus2[1]),
        .I3(RD_PNTR_WR[1]),
        .O(v1_reg_0[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1__1 
       (.I0(wr_pntr_plus3[0]),
        .I1(RD_PNTR_WR[0]),
        .I2(wr_pntr_plus3[1]),
        .I3(RD_PNTR_WR[1]),
        .O(v1_reg_1[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1 
       (.I0(p_13_out[2]),
        .I1(RD_PNTR_WR[2]),
        .I2(p_13_out[3]),
        .I3(RD_PNTR_WR[3]),
        .O(v1_reg[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1__0 
       (.I0(wr_pntr_plus2[2]),
        .I1(RD_PNTR_WR[2]),
        .I2(wr_pntr_plus2[3]),
        .I3(RD_PNTR_WR[3]),
        .O(v1_reg_0[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1__1 
       (.I0(wr_pntr_plus3[2]),
        .I1(RD_PNTR_WR[2]),
        .I2(wr_pntr_plus3[3]),
        .I3(RD_PNTR_WR[3]),
        .O(v1_reg_1[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1 
       (.I0(p_13_out[4]),
        .I1(RD_PNTR_WR[4]),
        .I2(p_13_out[5]),
        .I3(RD_PNTR_WR[5]),
        .O(v1_reg[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1__0 
       (.I0(wr_pntr_plus2[4]),
        .I1(RD_PNTR_WR[4]),
        .I2(wr_pntr_plus2[5]),
        .I3(RD_PNTR_WR[5]),
        .O(v1_reg_0[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1__1 
       (.I0(wr_pntr_plus3[4]),
        .I1(RD_PNTR_WR[4]),
        .I2(wr_pntr_plus3[5]),
        .I3(RD_PNTR_WR[5]),
        .O(v1_reg_1[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1 
       (.I0(p_13_out[6]),
        .I1(RD_PNTR_WR[6]),
        .I2(p_13_out[7]),
        .I3(RD_PNTR_WR[7]),
        .O(v1_reg[3]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1__0 
       (.I0(wr_pntr_plus2[6]),
        .I1(RD_PNTR_WR[6]),
        .I2(wr_pntr_plus2[7]),
        .I3(RD_PNTR_WR[7]),
        .O(v1_reg_0[3]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1__1 
       (.I0(wr_pntr_plus3[6]),
        .I1(RD_PNTR_WR[6]),
        .I2(wr_pntr_plus3[7]),
        .I3(RD_PNTR_WR[7]),
        .O(v1_reg_1[3]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[4].gms.ms_i_1 
       (.I0(p_13_out[8]),
        .I1(RD_PNTR_WR[8]),
        .I2(p_13_out[9]),
        .I3(RD_PNTR_WR[9]),
        .O(v1_reg[4]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[4].gms.ms_i_1__0 
       (.I0(wr_pntr_plus2[8]),
        .I1(RD_PNTR_WR[8]),
        .I2(wr_pntr_plus2[9]),
        .I3(RD_PNTR_WR[9]),
        .O(v1_reg_0[4]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[4].gms.ms_i_1__1 
       (.I0(wr_pntr_plus3[8]),
        .I1(RD_PNTR_WR[8]),
        .I2(wr_pntr_plus3[9]),
        .I3(RD_PNTR_WR[9]),
        .O(v1_reg_1[4]));
endmodule

(* ORIG_REF_NAME = "wr_bin_cntr" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_wr_bin_cntr_26
   (Q,
    v1_reg,
    v1_reg_0,
    v1_reg_1,
    E,
    wr_clk,
    AR,
    \gnxpm_cdc.rd_pntr_bin_reg[9] );
  output [9:0]Q;
  output [4:0]v1_reg;
  output [4:0]v1_reg_0;
  output [4:0]v1_reg_1;
  input [0:0]E;
  input wr_clk;
  input [0:0]AR;
  input [9:0]\gnxpm_cdc.rd_pntr_bin_reg[9] ;

  wire [0:0]AR;
  wire [0:0]E;
  wire [9:0]Q;
  wire \gic0.gc1.count[9]_i_2_n_0 ;
  wire [9:0]\gnxpm_cdc.rd_pntr_bin_reg[9] ;
  wire [9:0]p_13_out;
  wire [9:0]plusOp__0;
  wire [4:0]v1_reg;
  wire [4:0]v1_reg_0;
  wire [4:0]v1_reg_1;
  wire wr_clk;
  wire [9:0]wr_pntr_plus2;
  wire [9:0]wr_pntr_plus3;

  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \gic0.gc1.count[0]_i_1 
       (.I0(wr_pntr_plus3[0]),
        .O(plusOp__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gic0.gc1.count[1]_i_1 
       (.I0(wr_pntr_plus3[0]),
        .I1(wr_pntr_plus3[1]),
        .O(plusOp__0[1]));
  LUT3 #(
    .INIT(8'h78)) 
    \gic0.gc1.count[2]_i_1 
       (.I0(wr_pntr_plus3[0]),
        .I1(wr_pntr_plus3[1]),
        .I2(wr_pntr_plus3[2]),
        .O(plusOp__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gic0.gc1.count[3]_i_1 
       (.I0(wr_pntr_plus3[1]),
        .I1(wr_pntr_plus3[0]),
        .I2(wr_pntr_plus3[2]),
        .I3(wr_pntr_plus3[3]),
        .O(plusOp__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gic0.gc1.count[4]_i_1 
       (.I0(wr_pntr_plus3[2]),
        .I1(wr_pntr_plus3[0]),
        .I2(wr_pntr_plus3[1]),
        .I3(wr_pntr_plus3[3]),
        .I4(wr_pntr_plus3[4]),
        .O(plusOp__0[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \gic0.gc1.count[5]_i_1 
       (.I0(wr_pntr_plus3[3]),
        .I1(wr_pntr_plus3[1]),
        .I2(wr_pntr_plus3[0]),
        .I3(wr_pntr_plus3[2]),
        .I4(wr_pntr_plus3[4]),
        .I5(wr_pntr_plus3[5]),
        .O(plusOp__0[5]));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gic0.gc1.count[6]_i_1 
       (.I0(\gic0.gc1.count[9]_i_2_n_0 ),
        .I1(wr_pntr_plus3[6]),
        .O(plusOp__0[6]));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gic0.gc1.count[7]_i_1 
       (.I0(\gic0.gc1.count[9]_i_2_n_0 ),
        .I1(wr_pntr_plus3[6]),
        .I2(wr_pntr_plus3[7]),
        .O(plusOp__0[7]));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gic0.gc1.count[8]_i_1 
       (.I0(wr_pntr_plus3[6]),
        .I1(\gic0.gc1.count[9]_i_2_n_0 ),
        .I2(wr_pntr_plus3[7]),
        .I3(wr_pntr_plus3[8]),
        .O(plusOp__0[8]));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gic0.gc1.count[9]_i_1 
       (.I0(wr_pntr_plus3[7]),
        .I1(\gic0.gc1.count[9]_i_2_n_0 ),
        .I2(wr_pntr_plus3[6]),
        .I3(wr_pntr_plus3[8]),
        .I4(wr_pntr_plus3[9]),
        .O(plusOp__0[9]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gic0.gc1.count[9]_i_2 
       (.I0(wr_pntr_plus3[5]),
        .I1(wr_pntr_plus3[3]),
        .I2(wr_pntr_plus3[1]),
        .I3(wr_pntr_plus3[0]),
        .I4(wr_pntr_plus3[2]),
        .I5(wr_pntr_plus3[4]),
        .O(\gic0.gc1.count[9]_i_2_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus3[0]),
        .Q(wr_pntr_plus2[0]));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc1.count_d1_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(wr_pntr_plus3[1]),
        .PRE(AR),
        .Q(wr_pntr_plus2[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus3[2]),
        .Q(wr_pntr_plus2[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus3[3]),
        .Q(wr_pntr_plus2[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus3[4]),
        .Q(wr_pntr_plus2[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[5] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus3[5]),
        .Q(wr_pntr_plus2[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[6] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus3[6]),
        .Q(wr_pntr_plus2[6]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[7] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus3[7]),
        .Q(wr_pntr_plus2[7]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[8] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus3[8]),
        .Q(wr_pntr_plus2[8]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[9] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus3[9]),
        .Q(wr_pntr_plus2[9]));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc1.count_d2_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(wr_pntr_plus2[0]),
        .PRE(AR),
        .Q(p_13_out[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus2[1]),
        .Q(p_13_out[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus2[2]),
        .Q(p_13_out[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus2[3]),
        .Q(p_13_out[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus2[4]),
        .Q(p_13_out[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[5] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus2[5]),
        .Q(p_13_out[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[6] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus2[6]),
        .Q(p_13_out[6]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[7] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus2[7]),
        .Q(p_13_out[7]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[8] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus2[8]),
        .Q(p_13_out[8]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[9] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus2[9]),
        .Q(p_13_out[9]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(p_13_out[0]),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(p_13_out[1]),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(p_13_out[2]),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(p_13_out[3]),
        .Q(Q[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(p_13_out[4]),
        .Q(Q[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[5] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(p_13_out[5]),
        .Q(Q[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[6] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(p_13_out[6]),
        .Q(Q[6]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[7] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(p_13_out[7]),
        .Q(Q[7]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[8] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(p_13_out[8]),
        .Q(Q[8]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[9] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(p_13_out[9]),
        .Q(Q[9]));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc1.count_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp__0[0]),
        .PRE(AR),
        .Q(wr_pntr_plus3[0]));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc1.count_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp__0[1]),
        .PRE(AR),
        .Q(wr_pntr_plus3[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp__0[2]),
        .Q(wr_pntr_plus3[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp__0[3]),
        .Q(wr_pntr_plus3[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp__0[4]),
        .Q(wr_pntr_plus3[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_reg[5] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp__0[5]),
        .Q(wr_pntr_plus3[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_reg[6] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp__0[6]),
        .Q(wr_pntr_plus3[6]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_reg[7] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp__0[7]),
        .Q(wr_pntr_plus3[7]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_reg[8] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp__0[8]),
        .Q(wr_pntr_plus3[8]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_reg[9] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp__0[9]),
        .Q(wr_pntr_plus3[9]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1 
       (.I0(p_13_out[0]),
        .I1(\gnxpm_cdc.rd_pntr_bin_reg[9] [0]),
        .I2(p_13_out[1]),
        .I3(\gnxpm_cdc.rd_pntr_bin_reg[9] [1]),
        .O(v1_reg[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1__0 
       (.I0(wr_pntr_plus2[0]),
        .I1(\gnxpm_cdc.rd_pntr_bin_reg[9] [0]),
        .I2(wr_pntr_plus2[1]),
        .I3(\gnxpm_cdc.rd_pntr_bin_reg[9] [1]),
        .O(v1_reg_0[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1__1 
       (.I0(wr_pntr_plus3[0]),
        .I1(\gnxpm_cdc.rd_pntr_bin_reg[9] [0]),
        .I2(wr_pntr_plus3[1]),
        .I3(\gnxpm_cdc.rd_pntr_bin_reg[9] [1]),
        .O(v1_reg_1[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1 
       (.I0(p_13_out[2]),
        .I1(\gnxpm_cdc.rd_pntr_bin_reg[9] [2]),
        .I2(p_13_out[3]),
        .I3(\gnxpm_cdc.rd_pntr_bin_reg[9] [3]),
        .O(v1_reg[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1__0 
       (.I0(wr_pntr_plus2[2]),
        .I1(\gnxpm_cdc.rd_pntr_bin_reg[9] [2]),
        .I2(wr_pntr_plus2[3]),
        .I3(\gnxpm_cdc.rd_pntr_bin_reg[9] [3]),
        .O(v1_reg_0[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1__1 
       (.I0(wr_pntr_plus3[2]),
        .I1(\gnxpm_cdc.rd_pntr_bin_reg[9] [2]),
        .I2(wr_pntr_plus3[3]),
        .I3(\gnxpm_cdc.rd_pntr_bin_reg[9] [3]),
        .O(v1_reg_1[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1 
       (.I0(p_13_out[4]),
        .I1(\gnxpm_cdc.rd_pntr_bin_reg[9] [4]),
        .I2(p_13_out[5]),
        .I3(\gnxpm_cdc.rd_pntr_bin_reg[9] [5]),
        .O(v1_reg[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1__0 
       (.I0(wr_pntr_plus2[4]),
        .I1(\gnxpm_cdc.rd_pntr_bin_reg[9] [4]),
        .I2(wr_pntr_plus2[5]),
        .I3(\gnxpm_cdc.rd_pntr_bin_reg[9] [5]),
        .O(v1_reg_0[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1__1 
       (.I0(wr_pntr_plus3[4]),
        .I1(\gnxpm_cdc.rd_pntr_bin_reg[9] [4]),
        .I2(wr_pntr_plus3[5]),
        .I3(\gnxpm_cdc.rd_pntr_bin_reg[9] [5]),
        .O(v1_reg_1[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1 
       (.I0(p_13_out[6]),
        .I1(\gnxpm_cdc.rd_pntr_bin_reg[9] [6]),
        .I2(p_13_out[7]),
        .I3(\gnxpm_cdc.rd_pntr_bin_reg[9] [7]),
        .O(v1_reg[3]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1__0 
       (.I0(wr_pntr_plus2[6]),
        .I1(\gnxpm_cdc.rd_pntr_bin_reg[9] [6]),
        .I2(wr_pntr_plus2[7]),
        .I3(\gnxpm_cdc.rd_pntr_bin_reg[9] [7]),
        .O(v1_reg_0[3]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1__1 
       (.I0(wr_pntr_plus3[6]),
        .I1(\gnxpm_cdc.rd_pntr_bin_reg[9] [6]),
        .I2(wr_pntr_plus3[7]),
        .I3(\gnxpm_cdc.rd_pntr_bin_reg[9] [7]),
        .O(v1_reg_1[3]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[4].gms.ms_i_1 
       (.I0(p_13_out[8]),
        .I1(\gnxpm_cdc.rd_pntr_bin_reg[9] [8]),
        .I2(p_13_out[9]),
        .I3(\gnxpm_cdc.rd_pntr_bin_reg[9] [9]),
        .O(v1_reg[4]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[4].gms.ms_i_1__0 
       (.I0(wr_pntr_plus2[8]),
        .I1(\gnxpm_cdc.rd_pntr_bin_reg[9] [8]),
        .I2(wr_pntr_plus2[9]),
        .I3(\gnxpm_cdc.rd_pntr_bin_reg[9] [9]),
        .O(v1_reg_0[4]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[4].gms.ms_i_1__1 
       (.I0(wr_pntr_plus3[8]),
        .I1(\gnxpm_cdc.rd_pntr_bin_reg[9] [8]),
        .I2(wr_pntr_plus3[9]),
        .I3(\gnxpm_cdc.rd_pntr_bin_reg[9] [9]),
        .O(v1_reg_1[4]));
endmodule

(* ORIG_REF_NAME = "wr_bin_cntr" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_wr_bin_cntr_58
   (Q,
    v1_reg,
    v1_reg_0,
    v1_reg_1,
    E,
    wr_clk,
    AR,
    \gnxpm_cdc.rd_pntr_bin_reg[9] );
  output [9:0]Q;
  output [4:0]v1_reg;
  output [4:0]v1_reg_0;
  output [4:0]v1_reg_1;
  input [0:0]E;
  input wr_clk;
  input [0:0]AR;
  input [9:0]\gnxpm_cdc.rd_pntr_bin_reg[9] ;

  wire [0:0]AR;
  wire [0:0]E;
  wire [9:0]Q;
  wire \gic0.gc1.count[9]_i_2_n_0 ;
  wire [9:0]\gnxpm_cdc.rd_pntr_bin_reg[9] ;
  wire [9:0]p_13_out;
  wire [9:0]plusOp__0;
  wire [4:0]v1_reg;
  wire [4:0]v1_reg_0;
  wire [4:0]v1_reg_1;
  wire wr_clk;
  wire [9:0]wr_pntr_plus2;
  wire [9:0]wr_pntr_plus3;

  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \gic0.gc1.count[0]_i_1 
       (.I0(wr_pntr_plus3[0]),
        .O(plusOp__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gic0.gc1.count[1]_i_1 
       (.I0(wr_pntr_plus3[0]),
        .I1(wr_pntr_plus3[1]),
        .O(plusOp__0[1]));
  LUT3 #(
    .INIT(8'h78)) 
    \gic0.gc1.count[2]_i_1 
       (.I0(wr_pntr_plus3[0]),
        .I1(wr_pntr_plus3[1]),
        .I2(wr_pntr_plus3[2]),
        .O(plusOp__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gic0.gc1.count[3]_i_1 
       (.I0(wr_pntr_plus3[1]),
        .I1(wr_pntr_plus3[0]),
        .I2(wr_pntr_plus3[2]),
        .I3(wr_pntr_plus3[3]),
        .O(plusOp__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gic0.gc1.count[4]_i_1 
       (.I0(wr_pntr_plus3[2]),
        .I1(wr_pntr_plus3[0]),
        .I2(wr_pntr_plus3[1]),
        .I3(wr_pntr_plus3[3]),
        .I4(wr_pntr_plus3[4]),
        .O(plusOp__0[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \gic0.gc1.count[5]_i_1 
       (.I0(wr_pntr_plus3[3]),
        .I1(wr_pntr_plus3[1]),
        .I2(wr_pntr_plus3[0]),
        .I3(wr_pntr_plus3[2]),
        .I4(wr_pntr_plus3[4]),
        .I5(wr_pntr_plus3[5]),
        .O(plusOp__0[5]));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gic0.gc1.count[6]_i_1 
       (.I0(\gic0.gc1.count[9]_i_2_n_0 ),
        .I1(wr_pntr_plus3[6]),
        .O(plusOp__0[6]));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gic0.gc1.count[7]_i_1 
       (.I0(\gic0.gc1.count[9]_i_2_n_0 ),
        .I1(wr_pntr_plus3[6]),
        .I2(wr_pntr_plus3[7]),
        .O(plusOp__0[7]));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gic0.gc1.count[8]_i_1 
       (.I0(wr_pntr_plus3[6]),
        .I1(\gic0.gc1.count[9]_i_2_n_0 ),
        .I2(wr_pntr_plus3[7]),
        .I3(wr_pntr_plus3[8]),
        .O(plusOp__0[8]));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gic0.gc1.count[9]_i_1 
       (.I0(wr_pntr_plus3[7]),
        .I1(\gic0.gc1.count[9]_i_2_n_0 ),
        .I2(wr_pntr_plus3[6]),
        .I3(wr_pntr_plus3[8]),
        .I4(wr_pntr_plus3[9]),
        .O(plusOp__0[9]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gic0.gc1.count[9]_i_2 
       (.I0(wr_pntr_plus3[5]),
        .I1(wr_pntr_plus3[3]),
        .I2(wr_pntr_plus3[1]),
        .I3(wr_pntr_plus3[0]),
        .I4(wr_pntr_plus3[2]),
        .I5(wr_pntr_plus3[4]),
        .O(\gic0.gc1.count[9]_i_2_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus3[0]),
        .Q(wr_pntr_plus2[0]));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc1.count_d1_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(wr_pntr_plus3[1]),
        .PRE(AR),
        .Q(wr_pntr_plus2[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus3[2]),
        .Q(wr_pntr_plus2[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus3[3]),
        .Q(wr_pntr_plus2[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus3[4]),
        .Q(wr_pntr_plus2[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[5] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus3[5]),
        .Q(wr_pntr_plus2[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[6] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus3[6]),
        .Q(wr_pntr_plus2[6]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[7] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus3[7]),
        .Q(wr_pntr_plus2[7]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[8] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus3[8]),
        .Q(wr_pntr_plus2[8]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[9] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus3[9]),
        .Q(wr_pntr_plus2[9]));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc1.count_d2_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(wr_pntr_plus2[0]),
        .PRE(AR),
        .Q(p_13_out[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus2[1]),
        .Q(p_13_out[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus2[2]),
        .Q(p_13_out[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus2[3]),
        .Q(p_13_out[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus2[4]),
        .Q(p_13_out[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[5] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus2[5]),
        .Q(p_13_out[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[6] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus2[6]),
        .Q(p_13_out[6]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[7] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus2[7]),
        .Q(p_13_out[7]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[8] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus2[8]),
        .Q(p_13_out[8]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[9] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus2[9]),
        .Q(p_13_out[9]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(p_13_out[0]),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(p_13_out[1]),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(p_13_out[2]),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(p_13_out[3]),
        .Q(Q[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(p_13_out[4]),
        .Q(Q[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[5] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(p_13_out[5]),
        .Q(Q[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[6] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(p_13_out[6]),
        .Q(Q[6]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[7] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(p_13_out[7]),
        .Q(Q[7]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[8] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(p_13_out[8]),
        .Q(Q[8]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[9] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(p_13_out[9]),
        .Q(Q[9]));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc1.count_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp__0[0]),
        .PRE(AR),
        .Q(wr_pntr_plus3[0]));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc1.count_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp__0[1]),
        .PRE(AR),
        .Q(wr_pntr_plus3[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp__0[2]),
        .Q(wr_pntr_plus3[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp__0[3]),
        .Q(wr_pntr_plus3[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp__0[4]),
        .Q(wr_pntr_plus3[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_reg[5] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp__0[5]),
        .Q(wr_pntr_plus3[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_reg[6] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp__0[6]),
        .Q(wr_pntr_plus3[6]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_reg[7] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp__0[7]),
        .Q(wr_pntr_plus3[7]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_reg[8] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp__0[8]),
        .Q(wr_pntr_plus3[8]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_reg[9] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp__0[9]),
        .Q(wr_pntr_plus3[9]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1 
       (.I0(p_13_out[0]),
        .I1(\gnxpm_cdc.rd_pntr_bin_reg[9] [0]),
        .I2(p_13_out[1]),
        .I3(\gnxpm_cdc.rd_pntr_bin_reg[9] [1]),
        .O(v1_reg[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1__0 
       (.I0(wr_pntr_plus2[0]),
        .I1(\gnxpm_cdc.rd_pntr_bin_reg[9] [0]),
        .I2(wr_pntr_plus2[1]),
        .I3(\gnxpm_cdc.rd_pntr_bin_reg[9] [1]),
        .O(v1_reg_0[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1__1 
       (.I0(wr_pntr_plus3[0]),
        .I1(\gnxpm_cdc.rd_pntr_bin_reg[9] [0]),
        .I2(wr_pntr_plus3[1]),
        .I3(\gnxpm_cdc.rd_pntr_bin_reg[9] [1]),
        .O(v1_reg_1[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1 
       (.I0(p_13_out[2]),
        .I1(\gnxpm_cdc.rd_pntr_bin_reg[9] [2]),
        .I2(p_13_out[3]),
        .I3(\gnxpm_cdc.rd_pntr_bin_reg[9] [3]),
        .O(v1_reg[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1__0 
       (.I0(wr_pntr_plus2[2]),
        .I1(\gnxpm_cdc.rd_pntr_bin_reg[9] [2]),
        .I2(wr_pntr_plus2[3]),
        .I3(\gnxpm_cdc.rd_pntr_bin_reg[9] [3]),
        .O(v1_reg_0[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1__1 
       (.I0(wr_pntr_plus3[2]),
        .I1(\gnxpm_cdc.rd_pntr_bin_reg[9] [2]),
        .I2(wr_pntr_plus3[3]),
        .I3(\gnxpm_cdc.rd_pntr_bin_reg[9] [3]),
        .O(v1_reg_1[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1 
       (.I0(p_13_out[4]),
        .I1(\gnxpm_cdc.rd_pntr_bin_reg[9] [4]),
        .I2(p_13_out[5]),
        .I3(\gnxpm_cdc.rd_pntr_bin_reg[9] [5]),
        .O(v1_reg[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1__0 
       (.I0(wr_pntr_plus2[4]),
        .I1(\gnxpm_cdc.rd_pntr_bin_reg[9] [4]),
        .I2(wr_pntr_plus2[5]),
        .I3(\gnxpm_cdc.rd_pntr_bin_reg[9] [5]),
        .O(v1_reg_0[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1__1 
       (.I0(wr_pntr_plus3[4]),
        .I1(\gnxpm_cdc.rd_pntr_bin_reg[9] [4]),
        .I2(wr_pntr_plus3[5]),
        .I3(\gnxpm_cdc.rd_pntr_bin_reg[9] [5]),
        .O(v1_reg_1[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1 
       (.I0(p_13_out[6]),
        .I1(\gnxpm_cdc.rd_pntr_bin_reg[9] [6]),
        .I2(p_13_out[7]),
        .I3(\gnxpm_cdc.rd_pntr_bin_reg[9] [7]),
        .O(v1_reg[3]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1__0 
       (.I0(wr_pntr_plus2[6]),
        .I1(\gnxpm_cdc.rd_pntr_bin_reg[9] [6]),
        .I2(wr_pntr_plus2[7]),
        .I3(\gnxpm_cdc.rd_pntr_bin_reg[9] [7]),
        .O(v1_reg_0[3]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1__1 
       (.I0(wr_pntr_plus3[6]),
        .I1(\gnxpm_cdc.rd_pntr_bin_reg[9] [6]),
        .I2(wr_pntr_plus3[7]),
        .I3(\gnxpm_cdc.rd_pntr_bin_reg[9] [7]),
        .O(v1_reg_1[3]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[4].gms.ms_i_1 
       (.I0(p_13_out[8]),
        .I1(\gnxpm_cdc.rd_pntr_bin_reg[9] [8]),
        .I2(p_13_out[9]),
        .I3(\gnxpm_cdc.rd_pntr_bin_reg[9] [9]),
        .O(v1_reg[4]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[4].gms.ms_i_1__0 
       (.I0(wr_pntr_plus2[8]),
        .I1(\gnxpm_cdc.rd_pntr_bin_reg[9] [8]),
        .I2(wr_pntr_plus2[9]),
        .I3(\gnxpm_cdc.rd_pntr_bin_reg[9] [9]),
        .O(v1_reg_0[4]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[4].gms.ms_i_1__1 
       (.I0(wr_pntr_plus3[8]),
        .I1(\gnxpm_cdc.rd_pntr_bin_reg[9] [8]),
        .I2(wr_pntr_plus3[9]),
        .I3(\gnxpm_cdc.rd_pntr_bin_reg[9] [9]),
        .O(v1_reg_1[4]));
endmodule

(* ORIG_REF_NAME = "wr_logic" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_wr_logic
   (full,
    almost_full,
    WEA,
    Q,
    wr_clk,
    out,
    wr_en,
    wr_rst_busy,
    AR,
    RD_PNTR_WR);
  output full;
  output almost_full;
  output [0:0]WEA;
  output [9:0]Q;
  input wr_clk;
  input out;
  input wr_en;
  input wr_rst_busy;
  input [0:0]AR;
  input [9:0]RD_PNTR_WR;

  wire [0:0]AR;
  wire [9:0]Q;
  wire [9:0]RD_PNTR_WR;
  wire [0:0]WEA;
  wire almost_full;
  wire [4:0]\c1/v1_reg ;
  wire [4:0]\c2/v1_reg ;
  wire full;
  wire [4:0]\gaf.c3/v1_reg ;
  wire out;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;

  final_accelerator_Softmax_Layer_32bit_0_0_wr_status_flags_as \gwas.wsts 
       (.E(WEA),
        .almost_full(almost_full),
        .full(full),
        .out(out),
        .v1_reg(\c1/v1_reg ),
        .v1_reg_0(\c2/v1_reg ),
        .v1_reg_1(\gaf.c3/v1_reg ),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
  final_accelerator_Softmax_Layer_32bit_0_0_wr_bin_cntr wpntr
       (.AR(AR),
        .E(WEA),
        .Q(Q),
        .RD_PNTR_WR(RD_PNTR_WR),
        .v1_reg(\c1/v1_reg ),
        .v1_reg_0(\c2/v1_reg ),
        .v1_reg_1(\gaf.c3/v1_reg ),
        .wr_clk(wr_clk));
endmodule

(* ORIG_REF_NAME = "wr_logic" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_wr_logic_12
   (full,
    almost_full,
    WEA,
    Q,
    wr_clk,
    out,
    wr_en,
    wr_rst_busy,
    AR,
    \gnxpm_cdc.rd_pntr_bin_reg[9] );
  output full;
  output almost_full;
  output [0:0]WEA;
  output [9:0]Q;
  input wr_clk;
  input out;
  input wr_en;
  input wr_rst_busy;
  input [0:0]AR;
  input [9:0]\gnxpm_cdc.rd_pntr_bin_reg[9] ;

  wire [0:0]AR;
  wire [9:0]Q;
  wire [0:0]WEA;
  wire almost_full;
  wire [4:0]\c1/v1_reg ;
  wire [4:0]\c2/v1_reg ;
  wire full;
  wire [4:0]\gaf.c3/v1_reg ;
  wire [9:0]\gnxpm_cdc.rd_pntr_bin_reg[9] ;
  wire out;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;

  final_accelerator_Softmax_Layer_32bit_0_0_wr_status_flags_as_25 \gwas.wsts 
       (.E(WEA),
        .almost_full(almost_full),
        .full(full),
        .out(out),
        .v1_reg(\c1/v1_reg ),
        .v1_reg_0(\c2/v1_reg ),
        .v1_reg_1(\gaf.c3/v1_reg ),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
  final_accelerator_Softmax_Layer_32bit_0_0_wr_bin_cntr_26 wpntr
       (.AR(AR),
        .E(WEA),
        .Q(Q),
        .\gnxpm_cdc.rd_pntr_bin_reg[9] (\gnxpm_cdc.rd_pntr_bin_reg[9] ),
        .v1_reg(\c1/v1_reg ),
        .v1_reg_0(\c2/v1_reg ),
        .v1_reg_1(\gaf.c3/v1_reg ),
        .wr_clk(wr_clk));
endmodule

(* ORIG_REF_NAME = "wr_logic" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_wr_logic_44
   (full,
    almost_full,
    WEA,
    Q,
    wr_clk,
    out,
    wr_en,
    wr_rst_busy,
    AR,
    \gnxpm_cdc.rd_pntr_bin_reg[9] );
  output full;
  output almost_full;
  output [0:0]WEA;
  output [9:0]Q;
  input wr_clk;
  input out;
  input wr_en;
  input wr_rst_busy;
  input [0:0]AR;
  input [9:0]\gnxpm_cdc.rd_pntr_bin_reg[9] ;

  wire [0:0]AR;
  wire [9:0]Q;
  wire [0:0]WEA;
  wire almost_full;
  wire [4:0]\c1/v1_reg ;
  wire [4:0]\c2/v1_reg ;
  wire full;
  wire [4:0]\gaf.c3/v1_reg ;
  wire [9:0]\gnxpm_cdc.rd_pntr_bin_reg[9] ;
  wire out;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;

  final_accelerator_Softmax_Layer_32bit_0_0_wr_status_flags_as_57 \gwas.wsts 
       (.E(WEA),
        .almost_full(almost_full),
        .full(full),
        .out(out),
        .v1_reg(\c1/v1_reg ),
        .v1_reg_0(\c2/v1_reg ),
        .v1_reg_1(\gaf.c3/v1_reg ),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
  final_accelerator_Softmax_Layer_32bit_0_0_wr_bin_cntr_58 wpntr
       (.AR(AR),
        .E(WEA),
        .Q(Q),
        .\gnxpm_cdc.rd_pntr_bin_reg[9] (\gnxpm_cdc.rd_pntr_bin_reg[9] ),
        .v1_reg(\c1/v1_reg ),
        .v1_reg_0(\c2/v1_reg ),
        .v1_reg_1(\gaf.c3/v1_reg ),
        .wr_clk(wr_clk));
endmodule

(* ORIG_REF_NAME = "wr_status_flags_as" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_wr_status_flags_as
   (full,
    almost_full,
    E,
    v1_reg,
    v1_reg_0,
    v1_reg_1,
    wr_clk,
    out,
    wr_en,
    wr_rst_busy);
  output full;
  output almost_full;
  output [0:0]E;
  input [4:0]v1_reg;
  input [4:0]v1_reg_0;
  input [4:0]v1_reg_1;
  input wr_clk;
  input out;
  input wr_en;
  input wr_rst_busy;

  wire [0:0]E;
  wire almost_full;
  wire c2_n_1;
  wire comp1;
  wire comp2;
  wire \gaf.c3_n_0 ;
  wire out;
  (* DONT_TOUCH *) wire ram_full_fb_i;
  (* DONT_TOUCH *) wire ram_full_i;
  wire [4:0]v1_reg;
  wire [4:0]v1_reg_0;
  wire [4:0]v1_reg_1;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;

  assign full = ram_full_i;
  LUT2 #(
    .INIT(4'h2)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_i_1 
       (.I0(wr_en),
        .I1(ram_full_fb_i),
        .O(E));
  final_accelerator_Softmax_Layer_32bit_0_0_compare c1
       (.comp1(comp1),
        .v1_reg(v1_reg));
  final_accelerator_Softmax_Layer_32bit_0_0_compare_3 c2
       (.comp1(comp1),
        .comp2(comp2),
        .out(ram_full_fb_i),
        .ram_full_i_reg(c2_n_1),
        .v1_reg_0(v1_reg_0),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
  final_accelerator_Softmax_Layer_32bit_0_0_compare_4 \gaf.c3 
       (.almost_full(almost_full),
        .comp2(comp2),
        .\gaf.ram_almost_full_i_reg (\gaf.c3_n_0 ),
        .out(ram_full_fb_i),
        .v1_reg_1(v1_reg_1),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
  FDPE #(
    .INIT(1'b1)) 
    \gaf.ram_almost_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gaf.c3_n_0 ),
        .PRE(out),
        .Q(almost_full));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_full_fb_i_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(c2_n_1),
        .PRE(out),
        .Q(ram_full_fb_i));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_full_i_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(c2_n_1),
        .PRE(out),
        .Q(ram_full_i));
endmodule

(* ORIG_REF_NAME = "wr_status_flags_as" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_wr_status_flags_as_25
   (full,
    almost_full,
    E,
    v1_reg,
    v1_reg_0,
    v1_reg_1,
    wr_clk,
    out,
    wr_en,
    wr_rst_busy);
  output full;
  output almost_full;
  output [0:0]E;
  input [4:0]v1_reg;
  input [4:0]v1_reg_0;
  input [4:0]v1_reg_1;
  input wr_clk;
  input out;
  input wr_en;
  input wr_rst_busy;

  wire [0:0]E;
  wire almost_full;
  wire c2_n_1;
  wire comp1;
  wire comp2;
  wire \gaf.c3_n_0 ;
  wire out;
  (* DONT_TOUCH *) wire ram_full_fb_i;
  (* DONT_TOUCH *) wire ram_full_i;
  wire [4:0]v1_reg;
  wire [4:0]v1_reg_0;
  wire [4:0]v1_reg_1;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;

  assign full = ram_full_i;
  LUT2 #(
    .INIT(4'h2)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_i_1 
       (.I0(wr_en),
        .I1(ram_full_fb_i),
        .O(E));
  final_accelerator_Softmax_Layer_32bit_0_0_compare_27 c1
       (.comp1(comp1),
        .v1_reg(v1_reg));
  final_accelerator_Softmax_Layer_32bit_0_0_compare_28 c2
       (.comp1(comp1),
        .comp2(comp2),
        .out(ram_full_fb_i),
        .ram_full_i_reg(c2_n_1),
        .v1_reg_0(v1_reg_0),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
  final_accelerator_Softmax_Layer_32bit_0_0_compare_29 \gaf.c3 
       (.almost_full(almost_full),
        .comp2(comp2),
        .\gaf.ram_almost_full_i_reg (\gaf.c3_n_0 ),
        .out(ram_full_fb_i),
        .v1_reg_1(v1_reg_1),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
  FDPE #(
    .INIT(1'b1)) 
    \gaf.ram_almost_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gaf.c3_n_0 ),
        .PRE(out),
        .Q(almost_full));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_full_fb_i_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(c2_n_1),
        .PRE(out),
        .Q(ram_full_fb_i));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_full_i_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(c2_n_1),
        .PRE(out),
        .Q(ram_full_i));
endmodule

(* ORIG_REF_NAME = "wr_status_flags_as" *) 
module final_accelerator_Softmax_Layer_32bit_0_0_wr_status_flags_as_57
   (full,
    almost_full,
    E,
    v1_reg,
    v1_reg_0,
    v1_reg_1,
    wr_clk,
    out,
    wr_en,
    wr_rst_busy);
  output full;
  output almost_full;
  output [0:0]E;
  input [4:0]v1_reg;
  input [4:0]v1_reg_0;
  input [4:0]v1_reg_1;
  input wr_clk;
  input out;
  input wr_en;
  input wr_rst_busy;

  wire [0:0]E;
  wire almost_full;
  wire c2_n_1;
  wire comp1;
  wire comp2;
  wire \gaf.c3_n_0 ;
  wire out;
  (* DONT_TOUCH *) wire ram_full_fb_i;
  (* DONT_TOUCH *) wire ram_full_i;
  wire [4:0]v1_reg;
  wire [4:0]v1_reg_0;
  wire [4:0]v1_reg_1;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;

  assign full = ram_full_i;
  LUT2 #(
    .INIT(4'h2)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_i_1 
       (.I0(wr_en),
        .I1(ram_full_fb_i),
        .O(E));
  final_accelerator_Softmax_Layer_32bit_0_0_compare_59 c1
       (.comp1(comp1),
        .v1_reg(v1_reg));
  final_accelerator_Softmax_Layer_32bit_0_0_compare_60 c2
       (.comp1(comp1),
        .comp2(comp2),
        .out(ram_full_fb_i),
        .ram_full_i_reg(c2_n_1),
        .v1_reg_0(v1_reg_0),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
  final_accelerator_Softmax_Layer_32bit_0_0_compare_61 \gaf.c3 
       (.almost_full(almost_full),
        .comp2(comp2),
        .\gaf.ram_almost_full_i_reg (\gaf.c3_n_0 ),
        .out(ram_full_fb_i),
        .v1_reg_1(v1_reg_1),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
  FDPE #(
    .INIT(1'b1)) 
    \gaf.ram_almost_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gaf.c3_n_0 ),
        .PRE(out),
        .Q(almost_full));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_full_fb_i_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(c2_n_1),
        .PRE(out),
        .Q(ram_full_fb_i));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_full_i_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(c2_n_1),
        .PRE(out),
        .Q(ram_full_i));
endmodule
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (weak1, weak0) GSR = GSR_int;
    assign (weak1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

endmodule
`endif
